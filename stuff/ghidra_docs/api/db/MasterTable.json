{
  "name": "MasterTable",
  "comment": "MasterTable manages data pertaining to all other tables within the database - \n this includes index tables.\n The first buffer associated with this table is managed by the DBParms \n object associated with the database.",
  "javadoc": "MasterTable manages data pertaining to all other tables within the database - \n this includes index tables.\n The first buffer associated with this table is managed by the DBParms \n object associated with the database.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "masterRecord",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "db.TableRecord",
      "type_short": "TableRecord",
      "constant_value": null
    },
    {
      "name": "dbh",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "db.DBHandle",
      "type_short": "DBHandle",
      "constant_value": null
    },
    {
      "name": "dbParms",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "db.DBParms",
      "type_short": "DBParms",
      "constant_value": null
    },
    {
      "name": "table",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "db.Table",
      "type_short": "Table",
      "constant_value": null
    },
    {
      "name": "tableRecords",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "db.TableRecord[]",
      "type_short": "db.TableRecord[]",
      "constant_value": null
    },
    {
      "name": "nextTableNum",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct an existing master table.",
      "javadoc": "Construct an existing master table.\n@param dbh database handle\n@throws IOException database IO error",
      "static": false,
      "params": [
        {
          "name": "dbh",
          "type_long": "db.DBHandle",
          "type_short": "DBHandle",
          "comment": "database handle"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "database IO error"
        }
      ]
    },
    {
      "name": "createTableRecord",
      "comment": "Create a new table record and add to master table.\n If this is an index table the name corresponds to the table which is\n indexed.  This method should be invoked for index tables immediately\n following the creation of the indexed table.\n This method may only be invoked while a database transaction \n is in progress.",
      "javadoc": "Create a new table record and add to master table.\n If this is an index table the name corresponds to the table which is\n indexed.  This method should be invoked for index tables immediately\n following the creation of the indexed table.\n This method may only be invoked while a database transaction \n is in progress.\n@param name name of table.\n@param tableSchema table schema\n@param indexedColumn primary table index key column, or -1 for primary table\n@return new table record\n@throws IOException database IO error",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "name of table."
        },
        {
          "name": "tableSchema",
          "type_long": "db.Schema",
          "type_short": "Schema",
          "comment": "table schema"
        },
        {
          "name": "indexedColumn",
          "type_long": "int",
          "type_short": "int",
          "comment": "primary table index key column, or -1 for primary table"
        }
      ],
      "return": {
        "type_long": "db.TableRecord",
        "type_short": "TableRecord",
        "comment": "new table record"
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "database IO error"
        }
      ]
    },
    {
      "name": "deleteTableRecord",
      "comment": "Remove the master table record associated with the specified table name.\n This method may only be invoked while a database transaction \n is in progress.",
      "javadoc": "Remove the master table record associated with the specified table name.\n This method may only be invoked while a database transaction \n is in progress.\n@param tableNum table number (key within master table)\n@throws IOException database IO error",
      "static": false,
      "params": [
        {
          "name": "tableNum",
          "type_long": "long",
          "type_short": "long",
          "comment": "table number (key within master table)"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "database IO error"
        }
      ]
    },
    {
      "name": "getTableRecords",
      "comment": "Get a list of all tables defined within this master table.\n Records are returned in the list ordered by their table number key.",
      "javadoc": "Get a list of all tables defined within this master table.\n Records are returned in the list ordered by their table number key.\n@return array of table records defining each table.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "db.TableRecord[]",
        "type_short": "db.TableRecord[]",
        "comment": "array of table records defining each table."
      },
      "throws": []
    },
    {
      "name": "refreshTableRecords",
      "comment": "Refresh table data from the master table.\n Records are returned in the list ordered by their table number key.",
      "javadoc": "Refresh table data from the master table.\n Records are returned in the list ordered by their table number key.\n@return the update list of master table records.\n@throws IOException database IO error",
      "static": false,
      "params": [],
      "return": {
        "type_long": "db.TableRecord[]",
        "type_short": "db.TableRecord[]",
        "comment": "the update list of master table records."
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "database IO error"
        }
      ]
    },
    {
      "name": "flush",
      "comment": "Flush all unsaved table changes to the underlying buffer mgr.\n This method may only be invoked while a database transaction \n is in progress.",
      "javadoc": "Flush all unsaved table changes to the underlying buffer mgr.\n This method may only be invoked while a database transaction \n is in progress.\n@throws IOException database IO error",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "database IO error"
        }
      ]
    },
    {
      "name": "changeTableName",
      "comment": "Change the name of a table and its associated indexes.",
      "javadoc": "Change the name of a table and its associated indexes.\n@param oldName old table name\n@param newName new tablename",
      "static": false,
      "params": [
        {
          "name": "oldName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "old table name"
        },
        {
          "name": "newName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "new tablename"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
