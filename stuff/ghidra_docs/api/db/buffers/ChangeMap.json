{
  "name": "ChangeMap",
  "comment": "ChangeMap facilitates the decoding of change-data \n to determine if a specific buffer was modified by the \n corresponding buffer file version.",
  "javadoc": "\u003ccode\u003eChangeMap\u003c/code\u003e facilitates the decoding of change-data \n to determine if a specific buffer was modified by the \n corresponding buffer file version.\n@see ChangeMapFile",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "mapData",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "byte[]",
      "type_short": "byte[]",
      "constant_value": null
    },
    {
      "name": "maxIndex",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor.",
      "javadoc": "Constructor.\n@param mapData change map data",
      "static": false,
      "params": [
        {
          "name": "mapData",
          "type_long": "byte[]",
          "type_short": "byte[]",
          "comment": "change map data"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getData",
      "comment": "Get the underlying change map data as a byte array",
      "javadoc": "Get the underlying change map data as a byte array\n@return change map data",
      "static": false,
      "params": [],
      "return": {
        "type_long": "byte[]",
        "type_short": "byte[]",
        "comment": "change map data"
      },
      "throws": []
    },
    {
      "name": "addChangeMapData",
      "comment": "Add the specified map data to this map within the size constraints\n of this map.",
      "javadoc": "Add the specified map data to this map within the size constraints\n of this map.\n@param otherMapData",
      "static": false,
      "params": [
        {
          "name": "otherMapData",
          "type_long": "byte[]",
          "type_short": "byte[]",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setChangedIndexes",
      "comment": "Flag all indexes as changed within this change map.  Index values outside\n the size constraints of this map will be ignored.",
      "javadoc": "Flag all indexes as changed within this change map.  Index values outside\n the size constraints of this map will be ignored.\n@param indexes list of indexes to mark as changed",
      "static": false,
      "params": [
        {
          "name": "indexes",
          "type_long": "int[]",
          "type_short": "int[]",
          "comment": "list of indexes to mark as changed"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setUnchangedIndexes",
      "comment": "Flag all indexes as unchanged within this change map.  Index values outside\n the size constraints of this map will be ignored.",
      "javadoc": "Flag all indexes as unchanged within this change map.  Index values outside\n the size constraints of this map will be ignored.\n@param indexes list of indexes to mark as unchanged",
      "static": false,
      "params": [
        {
          "name": "indexes",
          "type_long": "int[]",
          "type_short": "int[]",
          "comment": "list of indexes to mark as unchanged"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hasChanged",
      "comment": "Returns true if the change map data indicates that the \n specified buffer has been modified.",
      "javadoc": "Returns true if the change map data indicates that the \n specified buffer has been modified.\n@param index buffer index",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "int",
          "type_short": "int",
          "comment": "buffer index"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "containsIndex",
      "comment": "Returns true if the specified index is within the bounds of this map.",
      "javadoc": "Returns true if the specified index is within the bounds of this map.",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    }
  ]
}
