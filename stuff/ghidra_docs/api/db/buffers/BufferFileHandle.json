{
  "name": "BufferFileHandle",
  "comment": "BufferFileHandle facilitates access to a BufferFile",
  "javadoc": "\u003ccode\u003eBufferFileHandle\u003c/code\u003e facilitates access to a BufferFile",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "isReadOnly",
      "comment": "",
      "javadoc": "@see BufferFile#isReadOnly()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "setReadOnly",
      "comment": "",
      "javadoc": "@see BufferFile#setReadOnly()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getParameter",
      "comment": "",
      "javadoc": "@see BufferFile#getParameter(java.lang.String)",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.util.NoSuchElementException",
          "type_short": "NoSuchElementException",
          "comment": ""
        },
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "setParameter",
      "comment": "",
      "javadoc": "@see BufferFile#setParameter(java.lang.String, int)",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "value",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "clearParameters",
      "comment": "",
      "javadoc": "@see BufferFile#clearParameters()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getParameterNames",
      "comment": "",
      "javadoc": "@see BufferFile#getParameterNames()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String[]",
        "type_short": "java.lang.String[]",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getBufferSize",
      "comment": "",
      "javadoc": "@see BufferFile#getBufferSize()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getIndexCount",
      "comment": "",
      "javadoc": "@see BufferFile#getIndexCount()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getFreeIndexes",
      "comment": "",
      "javadoc": "@see BufferFile#getFreeIndexes()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int[]",
        "type_short": "int[]",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "setFreeIndexes",
      "comment": "",
      "javadoc": "@see BufferFile#setFreeIndexes(int[])",
      "static": false,
      "params": [
        {
          "name": "indexes",
          "type_long": "int[]",
          "type_short": "int[]",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "close",
      "comment": "",
      "javadoc": "@see BufferFile#close()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "delete",
      "comment": "",
      "javadoc": "@see BufferFile#delete() }",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "get",
      "comment": "",
      "javadoc": "@see BufferFile#get(DataBuffer, int)",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "db.buffers.DataBuffer",
        "type_short": "DataBuffer",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "put",
      "comment": "",
      "javadoc": "@see BufferFile#put(DataBuffer, int)",
      "static": false,
      "params": [
        {
          "name": "buf",
          "type_long": "db.buffers.DataBuffer",
          "type_short": "DataBuffer",
          "comment": ""
        },
        {
          "name": "index",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "dispose",
      "comment": "",
      "javadoc": "@see BufferFile#dispose()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getInputBlockStream",
      "comment": "Provides local access to an input block stream.  This method should only be used \n if the associated BufferFileAdapter#isRemote() is false.",
      "javadoc": "Provides local access to an input block stream.  This method should only be used \n if the associated {@link BufferFileAdapter#isRemote()} is \u003ci\u003efalse\u003c/i\u003e.\n@see BufferFileAdapter#getInputBlockStream()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "db.buffers.InputBlockStream",
        "type_short": "InputBlockStream",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getOutputBlockStream",
      "comment": "Provides local access to an output block stream.  This method should only be used \n if the associated BufferFileAdapter#isRemote() is false.",
      "javadoc": "Provides local access to an output block stream.  This method should only be used \n if the associated {@link BufferFileAdapter#isRemote()} is \u003ci\u003efalse\u003c/i\u003e.\n@see BufferFileAdapter#getOutputBlockStream(int)",
      "static": false,
      "params": [
        {
          "name": "blockCount",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "db.buffers.OutputBlockStream",
        "type_short": "OutputBlockStream",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getInputBlockStreamHandle",
      "comment": "Get an input block stream handle which will facilitate access to a remote InputBlockStream.\n The handle will facilitate use of a remote streaming interface.  This method should only be used \n if the associated BufferFileAdapter#isRemote() is true.",
      "javadoc": "Get an input block stream handle which will facilitate access to a remote InputBlockStream.\n The handle will facilitate use of a remote streaming interface.  This method should only be used \n if the associated {@link BufferFileAdapter#isRemote()} is \u003ci\u003etrue\u003c/i\u003e.\n@see BufferFileAdapter#getInputBlockStream()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "db.buffers.BlockStreamHandle\u003cdb.buffers.InputBlockStream\u003e",
        "type_short": "BlockStreamHandle",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getOutputBlockStreamHandle",
      "comment": "Get an output block stream handle which will facilitate access to a remote InputBlockStream.\n The handle will facilitate use of a remote streaming interface.  This method should only be used \n if the associated BufferFileAdapter#isRemote() is true.",
      "javadoc": "Get an output block stream handle which will facilitate access to a remote InputBlockStream.\n The handle will facilitate use of a remote streaming interface.  This method should only be used \n if the associated {@link BufferFileAdapter#isRemote()} is \u003ci\u003etrue\u003c/i\u003e.\n@see BufferFileAdapter#getOutputBlockStream(int)",
      "static": false,
      "params": [
        {
          "name": "blockCount",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "db.buffers.BlockStreamHandle\u003cdb.buffers.OutputBlockStream\u003e",
        "type_short": "BlockStreamHandle",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    }
  ]
}
