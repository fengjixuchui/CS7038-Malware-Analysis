{
  "name": "ManagedBufferFileAdapter",
  "comment": "ManagedBufferFileAdapter provides a ManagedBufferFile implementation which\n wraps a ManagedBufferFileHandle.",
  "javadoc": "\u003ccode\u003eManagedBufferFileAdapter\u003c/code\u003e provides a ManagedBufferFile implementation which\n wraps a ManagedBufferFileHandle.",
  "static": false,
  "implements": [
    "db.buffers.ManagedBufferFile"
  ],
  "extends": "db.buffers.BufferFileAdapter",
  "fields": [
    {
      "name": "managedBufferFileHandle",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "db.buffers.ManagedBufferFileHandle",
      "type_short": "ManagedBufferFileHandle",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor.",
      "javadoc": "Constructor.\n@param remoteManagedBufferFile remote buffer file handle",
      "static": false,
      "params": [
        {
          "name": "remoteManagedBufferFile",
          "type_long": "db.buffers.ManagedBufferFileHandle",
          "type_short": "ManagedBufferFileHandle",
          "comment": "remote buffer file handle"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSaveFile",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "db.buffers.ManagedBufferFile",
        "type_short": "ManagedBufferFile",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "saveCompleted",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "commit",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "canSave",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "setVersionComment",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "comment",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getNextChangeDataFile",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "getFirst",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "db.buffers.BufferFile",
        "type_short": "BufferFile",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getSaveChangeDataFile",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "db.buffers.BufferFile",
        "type_short": "BufferFile",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getCheckinID",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getForwardModMapData",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "oldVersion",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "byte[]",
        "type_short": "byte[]",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getInputBlockStream",
      "comment": "Obtain a direct stream to read modified blocks of this buffer file based\n upon the specified changeMap",
      "javadoc": "Obtain a direct stream to read modified blocks of this buffer file based\n upon the specified changeMap\n@param changeMapData provides ChangeMap data which is used to identify which blocks\n            should be streamed\n@return input block stream\n@throws IOException",
      "static": false,
      "params": [
        {
          "name": "changeMapData",
          "type_long": "byte[]",
          "type_short": "byte[]",
          "comment": "provides ChangeMap data which is used to identify which blocks\n            should be streamed"
        }
      ],
      "return": {
        "type_long": "db.buffers.InputBlockStream",
        "type_short": "InputBlockStream",
        "comment": "input block stream"
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    }
  ]
}
