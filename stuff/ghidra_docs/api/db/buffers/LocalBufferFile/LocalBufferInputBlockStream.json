{
  "name": "LocalBufferInputBlockStream",
  "comment": "LocalBufferInputBlockStream provides an input BlockStream for \n transferring the entire file content associated with a read-only buffer\n file use a buffer-based transfer.",
  "javadoc": "\u003ccode\u003eLocalBufferInputBlockStream\u003c/code\u003e provides an input BlockStream for \n transferring the entire file content associated with a read-only buffer\n file use a buffer-based transfer.",
  "static": false,
  "implements": [
    "db.buffers.InputBlockStream"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "nextBufferIndex",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "buf",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "db.buffers.DataBuffer",
      "type_short": "DataBuffer",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct input block stream for this buffer file.",
      "javadoc": "Construct input block stream for this buffer file.\n@throws IOException",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "includesHeaderBlock",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getBlockCount",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getBlockSize",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "close",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "readBlock",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "db.buffers.BufferFileBlock",
        "type_short": "BufferFileBlock",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    }
  ]
}
