{
  "name": "ChangeMapFile",
  "comment": "ChangeMapFile tracks which buffers within a LocalBufferFile \n have been modified between an older and newer version.  The older\n file is also referred to as the target file.",
  "javadoc": "\u003ccode\u003eChangeMapFile\u003c/code\u003e tracks which buffers within a LocalBufferFile \n have been modified between an older and newer version.  The older\n file is also referred to as the target file.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "MAGIC_NUMBER",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "1943643068"
    },
    {
      "name": "CACHE_SIZE",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "65536"
    },
    {
      "name": "MODMAP_PARM_PREFIX",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"~MF.\""
    },
    {
      "name": "MAGIC_NUMBER_PARM",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"~MF.ModMapFile\""
    },
    {
      "name": "BUFFER_ID_PARM",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"~MF.BufferId\""
    },
    {
      "name": "TARGET_FILE_ID_HI_PARM",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"~MF.TargetIdHi\""
    },
    {
      "name": "TARGET_FILE_ID_LOW_PARM",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"~MF.TargetIdLow\""
    },
    {
      "name": "INDEX_CNT_PARM",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"~MF.IndexCnt\""
    },
    {
      "name": "INITIAL_VERSION_PARM",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"~MF.InitialVersion\""
    },
    {
      "name": "file",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.io.File",
      "type_short": "File",
      "constant_value": null
    },
    {
      "name": "bufMgr",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "db.buffers.BufferMgr",
      "type_short": "BufferMgr",
      "constant_value": null
    },
    {
      "name": "buffer",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "db.ChainedBuffer",
      "type_short": "ChainedBuffer",
      "constant_value": null
    },
    {
      "name": "indexCnt",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "readOnly",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a map file for output.  If the file exists it will be updated,\n otherwise a new file will be created.",
      "javadoc": "Construct a map file for output.  If the file exists it will be updated,\n otherwise a new file will be created.\n@param file map file\n@param targetFile associated target buffer file\n@param create if true a new map file will be created\n@throws IOException if file already exists or an IO error occurs",
      "static": false,
      "params": [
        {
          "name": "file",
          "type_long": "java.io.File",
          "type_short": "File",
          "comment": "map file"
        },
        {
          "name": "oldFile",
          "type_long": "db.buffers.LocalManagedBufferFile",
          "type_short": "LocalManagedBufferFile",
          "comment": ""
        },
        {
          "name": "newFile",
          "type_long": "db.buffers.LocalManagedBufferFile",
          "type_short": "LocalManagedBufferFile",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if file already exists or an IO error occurs"
        }
      ]
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct map file for reading.",
      "javadoc": "Construct map file for reading.\n@param file existing map file\n@throws IOException if an IO error occurs",
      "static": false,
      "params": [
        {
          "name": "file",
          "type_long": "java.io.File",
          "type_short": "File",
          "comment": "existing map file"
        },
        {
          "name": "targetFile",
          "type_long": "db.buffers.LocalBufferFile",
          "type_short": "LocalBufferFile",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if an IO error occurs"
        }
      ]
    },
    {
      "name": "isValidFor",
      "comment": "Returns true if this change map corresponds to the specified target file.",
      "javadoc": "Returns true if this change map corresponds to the specified target file.\n@param targetFile",
      "static": false,
      "params": [
        {
          "name": "targetFile",
          "type_long": "db.buffers.LocalBufferFile",
          "type_short": "LocalBufferFile",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "abort",
      "comment": "Abort the creation/update of this file.\n This method should be invoked in place of close on a failure condition.\n An attempt is made to restore the version file to its initial state\n or remove it if it was new.",
      "javadoc": "Abort the creation/update of this file.\n This method should be invoked in place of close on a failure condition.\n An attempt is made to restore the version file to its initial state\n or remove it if it was new.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "close",
      "comment": "Close the file.",
      "javadoc": "Close the file.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "bufferChanged",
      "comment": "Mark buffer as changed",
      "javadoc": "Mark buffer as changed\n@param id\n@throws IOException",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "empty",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getModData",
      "comment": "Returns data suitable for use by the ChangeMap class.",
      "javadoc": "Returns data suitable for use by the ChangeMap class.\n@throws IOException\n@see ChangeMap",
      "static": false,
      "params": [],
      "return": {
        "type_long": "byte[]",
        "type_short": "byte[]",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    }
  ]
}
