{
  "name": "InputBlockStream",
  "comment": "InputBlockStream provides a BufferFile input block stream.\n The nature of the stream and the block sequence is determined by the\n particular instance.",
  "javadoc": "\u003ccode\u003eInputBlockStream\u003c/code\u003e provides a BufferFile input block stream.\n The nature of the stream and the block sequence is determined by the\n particular instance.",
  "static": false,
  "implements": [
    "db.buffers.BlockStream"
  ],
  "fields": [],
  "methods": [
    {
      "name": "readBlock",
      "comment": "Read next block from stream",
      "javadoc": "Read next block from stream\n@return a BufferFile block which corresponds to a specific block index\n or null if no more blocks available\n@throws IOException if an unexpected error occurs while \n reading the file",
      "static": false,
      "params": [],
      "return": {
        "type_long": "db.buffers.BufferFileBlock",
        "type_short": "BufferFileBlock",
        "comment": "a BufferFile block which corresponds to a specific block index\n or null if no more blocks available"
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if an unexpected error occurs while \n reading the file"
        }
      ]
    },
    {
      "name": "getBlockCount",
      "comment": "Get the total number of blocks to be transfered.",
      "javadoc": "Get the total number of blocks to be transfered.\n@return total block count",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "total block count"
      },
      "throws": []
    },
    {
      "name": "includesHeaderBlock",
      "comment": "Determine if header block included in stream.  Some stream implementations\n do not include or don\u0027t have access to the buffer file header block and may \n be excluded.  If header is required, it will need to be reconstructed by\n setting the free index list and all buffer file parameters.",
      "javadoc": "Determine if header block included in stream.  Some stream implementations\n do not include or don\u0027t have access to the buffer file header block and may \n be excluded.  If header is required, it will need to be reconstructed by\n setting the free index list and all buffer file parameters.\n@return true if header block #0 included in stream, else false",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if header block #0 included in stream, else false"
      },
      "throws": []
    }
  ]
}
