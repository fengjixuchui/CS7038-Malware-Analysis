{
  "name": "RecordNode",
  "comment": "Table record leaf nodes within the BTree structure.",
  "javadoc": "{@link Table} record leaf nodes within the BTree structure.",
  "static": false,
  "implements": [
    "db.BTreeNode"
  ],
  "fields": [],
  "methods": [
    {
      "name": "getRecordOffset",
      "comment": "Get the record offset within the node\u0027s data buffer",
      "javadoc": "Get the record offset within the node\u0027s data buffer\n@param index key/record index\n@return positive record offset within buffer, or a negative bufferID for\n indirect record storage in a dedicated buffer\n@throws IOException if IO error occurs",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "int",
          "type_short": "int",
          "comment": "key/record index"
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "positive record offset within buffer, or a negative bufferID for\n indirect record storage in a dedicated buffer"
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if IO error occurs"
        }
      ]
    },
    {
      "name": "getKeyOffset",
      "comment": "Get the key offset within the node\u0027s data buffer",
      "javadoc": "Get the key offset within the node\u0027s data buffer\n@param index key/record index\n@return positive record offset within buffer\n@throws IOException if IO error occurs",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "int",
          "type_short": "int",
          "comment": "key/record index"
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "positive record offset within buffer"
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if IO error occurs"
        }
      ]
    }
  ]
}
