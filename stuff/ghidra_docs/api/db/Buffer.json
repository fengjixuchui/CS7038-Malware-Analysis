{
  "name": "Buffer",
  "comment": "Buffer provides a general purpose storage buffer interface\n providing various data access methods.",
  "javadoc": "\u003ccode\u003eBuffer\u003c/code\u003e provides a general purpose storage buffer interface\n providing various data access methods.",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "getId",
      "comment": "Get the buffer ID for this buffer.",
      "javadoc": "Get the buffer ID for this buffer.\n@return int",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "int"
      },
      "throws": []
    },
    {
      "name": "length",
      "comment": "Get the length of the buffer in bytes.  The length reflects the number of\n bytes which have been allocated to the buffer.",
      "javadoc": "Get the length of the buffer in bytes.  The length reflects the number of\n bytes which have been allocated to the buffer.\n@return length of allocated buffer.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "length of allocated buffer."
      },
      "throws": []
    },
    {
      "name": "get",
      "comment": "Get the byte data located at the specified offset and store into the\n bytes array provided.",
      "javadoc": "Get the byte data located at the specified offset and store into the\n bytes array provided.\n@param offset byte offset from start of buffer.\n@param bytes byte array to store data\n@throws ArrayIndexOutOfBoundsException is thrown if an invalid offset is\n specified.\n@throws IOException is thrown if an error occurs while accessing the\n underlying storage.",
      "static": false,
      "params": [
        {
          "name": "offset",
          "type_long": "int",
          "type_short": "int",
          "comment": "byte offset from start of buffer."
        },
        {
          "name": "bytes",
          "type_long": "byte[]",
          "type_short": "byte[]",
          "comment": "byte array to store data"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "is thrown if an error occurs while accessing the\n underlying storage."
        }
      ]
    },
    {
      "name": "get",
      "comment": "Get the byte data located at the specified offset and store into the data\n array  at the specified data offset.",
      "javadoc": "Get the byte data located at the specified offset and store into the data\n array  at the specified data offset.\n@param offset byte offset from the start of the buffer.\n@param data byte array to store the data.\n@param dataOffset offset into the data buffer\n@param length amount of data to read\n@throws ArrayIndexOutOfBoundsException if an invalid offset, dataOffset,\n or length is specified.\n@throws IOException is thrown if an error occurs while accessing the\n underlying storage.",
      "static": false,
      "params": [
        {
          "name": "offset",
          "type_long": "int",
          "type_short": "int",
          "comment": "byte offset from the start of the buffer."
        },
        {
          "name": "data",
          "type_long": "byte[]",
          "type_short": "byte[]",
          "comment": "byte array to store the data."
        },
        {
          "name": "dataOffset",
          "type_long": "int",
          "type_short": "int",
          "comment": "offset into the data buffer"
        },
        {
          "name": "length",
          "type_long": "int",
          "type_short": "int",
          "comment": "amount of data to read"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "is thrown if an error occurs while accessing the\n underlying storage."
        }
      ]
    },
    {
      "name": "get",
      "comment": "Get the byte data located at the specified offset.",
      "javadoc": "Get the byte data located at the specified offset.\n@param offset byte offset from start of buffer.\n@param length number of bytes to be read and returned\n@return the byte array.\n@throws ArrayIndexOutOfBoundsException is thrown if an invalid offset is\n specified or the end of the buffer was encountered while reading the\n data.\n@throws IOException is thrown if an error occurs while accessing the\n underlying storage.",
      "static": false,
      "params": [
        {
          "name": "offset",
          "type_long": "int",
          "type_short": "int",
          "comment": "byte offset from start of buffer."
        },
        {
          "name": "length",
          "type_long": "int",
          "type_short": "int",
          "comment": "number of bytes to be read and returned"
        }
      ],
      "return": {
        "type_long": "byte[]",
        "type_short": "byte[]",
        "comment": "the byte array."
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "is thrown if an error occurs while accessing the\n underlying storage."
        }
      ]
    },
    {
      "name": "getByte",
      "comment": "Get the 8-bit byte value located at the specified offset.",
      "javadoc": "Get the 8-bit byte value located at the specified offset.\n@param offset byte offset from start of buffer.\n@return the byte value at the specified offset.\n@throws ArrayIndexOutOfBoundsException is thrown if an invalid offset is\n specified.\n@throws IOException is thrown if an error occurs while accessing the\n underlying storage.",
      "static": false,
      "params": [
        {
          "name": "offset",
          "type_long": "int",
          "type_short": "int",
          "comment": "byte offset from start of buffer."
        }
      ],
      "return": {
        "type_long": "byte",
        "type_short": "byte",
        "comment": "the byte value at the specified offset."
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "is thrown if an error occurs while accessing the\n underlying storage."
        }
      ]
    },
    {
      "name": "getInt",
      "comment": "Get the 32-bit integer value located at the specified offset.",
      "javadoc": "Get the 32-bit integer value located at the specified offset.\n@param offset byte offset from start of buffer.\n@return the integer value at the specified offset.\n@throws ArrayIndexOutOfBoundsException is thrown if an invalid offset is\n specified or the end of the buffer was encountered while reading the\n value.\n@throws IOException is thrown if an error occurs while accessing the\n underlying storage.",
      "static": false,
      "params": [
        {
          "name": "offset",
          "type_long": "int",
          "type_short": "int",
          "comment": "byte offset from start of buffer."
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the integer value at the specified offset."
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "is thrown if an error occurs while accessing the\n underlying storage."
        }
      ]
    },
    {
      "name": "getShort",
      "comment": "Get the 16-bit short value located at the specified offset.",
      "javadoc": "Get the 16-bit short value located at the specified offset.\n@param offset byte offset from start of buffer.\n@return the short value at the specified offset.\n@throws ArrayIndexOutOfBoundsException is thrown if an invalid offset is\n specified or the end of the buffer was encountered while reading the\n value.\n@throws IOException is thrown if an error occurs while accessing the\n underlying storage.",
      "static": false,
      "params": [
        {
          "name": "offset",
          "type_long": "int",
          "type_short": "int",
          "comment": "byte offset from start of buffer."
        }
      ],
      "return": {
        "type_long": "short",
        "type_short": "short",
        "comment": "the short value at the specified offset."
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "is thrown if an error occurs while accessing the\n underlying storage."
        }
      ]
    },
    {
      "name": "getLong",
      "comment": "Get the 64-bit long value located at the specified offset.",
      "javadoc": "Get the 64-bit long value located at the specified offset.\n@param offset byte offset from start of buffer.\n@return the long value at the specified offset.\n@throws ArrayIndexOutOfBoundsException is thrown if an invalid offset is\n specified or the end of the buffer was encountered while reading the\n value.\n@throws IOException is thrown if an error occurs while accessing the\n underlying storage.",
      "static": false,
      "params": [
        {
          "name": "offset",
          "type_long": "int",
          "type_short": "int",
          "comment": "byte offset from start of buffer."
        }
      ],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": "the long value at the specified offset."
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "is thrown if an error occurs while accessing the\n underlying storage."
        }
      ]
    },
    {
      "name": "put",
      "comment": "Put a specified number of bytes from the array provided into the buffer\n at the specified offset.  The number of bytes stored is specified by the\n length specified.",
      "javadoc": "Put a specified number of bytes from the array provided into the buffer\n at the specified offset.  The number of bytes stored is specified by the\n length specified.\n@param offset byte offset from start of buffer.\n@param data the byte data to be stored.\n@param dataOffset the starting offset into the data.\n@param length the number of bytes to be stored.\n@return the next available offset into the buffer, or -1 if the buffer is\n full.\n@throws ArrayIndexOutOfBoundsException if an invalid offset is provided\n or the end of buffer was encountered while storing the data.\n@throws IOException is thrown if an error occurs while accessing the\n underlying storage.",
      "static": false,
      "params": [
        {
          "name": "offset",
          "type_long": "int",
          "type_short": "int",
          "comment": "byte offset from start of buffer."
        },
        {
          "name": "data",
          "type_long": "byte[]",
          "type_short": "byte[]",
          "comment": "the byte data to be stored."
        },
        {
          "name": "dataOffset",
          "type_long": "int",
          "type_short": "int",
          "comment": "the starting offset into the data."
        },
        {
          "name": "length",
          "type_long": "int",
          "type_short": "int",
          "comment": "the number of bytes to be stored."
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the next available offset into the buffer, or -1 if the buffer is\n full."
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "is thrown if an error occurs while accessing the\n underlying storage."
        }
      ]
    },
    {
      "name": "put",
      "comment": "Put the bytes provided into the buffer at the specified offset. The\n number of bytes stored is determined by the length of the bytes\n array.",
      "javadoc": "Put the bytes provided into the buffer at the specified offset. The\n number of bytes stored is determined by the length of the bytes\n array.\n@param offset byte offset from start of buffer.\n@param bytes the byte data to be stored.\n@return the next available offset into the buffer, or -1 if the buffer is\n full.\n@throws ArrayIndexOutOfBoundsException if an invalid offset is provided\n or the end of buffer was encountered while storing the data.\n@throws IOException is thrown if an error occurs while accessing the\n underlying storage.",
      "static": false,
      "params": [
        {
          "name": "offset",
          "type_long": "int",
          "type_short": "int",
          "comment": "byte offset from start of buffer."
        },
        {
          "name": "bytes",
          "type_long": "byte[]",
          "type_short": "byte[]",
          "comment": "the byte data to be stored."
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the next available offset into the buffer, or -1 if the buffer is\n full."
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "is thrown if an error occurs while accessing the\n underlying storage."
        }
      ]
    },
    {
      "name": "putByte",
      "comment": "Put the 8-bit byte value into the buffer at the specified offset.",
      "javadoc": "Put the 8-bit byte value into the buffer at the specified offset.\n@param offset byte offset from start of buffer.\n@param b the byte value to be stored.\n@return the next available offset into the buffer, or -1 if the buffer is\n full.\n@throws ArrayIndexOutOfBoundsException if an invalid offset is provided.\n@throws IOException is thrown if an error occurs while accessing the\n underlying storage.",
      "static": false,
      "params": [
        {
          "name": "offset",
          "type_long": "int",
          "type_short": "int",
          "comment": "byte offset from start of buffer."
        },
        {
          "name": "b",
          "type_long": "byte",
          "type_short": "byte",
          "comment": "the byte value to be stored."
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the next available offset into the buffer, or -1 if the buffer is\n full."
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "is thrown if an error occurs while accessing the\n underlying storage."
        }
      ]
    },
    {
      "name": "putInt",
      "comment": "Put the 32-bit integer value into the buffer at the specified offset.",
      "javadoc": "Put the 32-bit integer value into the buffer at the specified offset.\n@param offset byte offset from start of buffer.\n@param v the integer value to be stored.\n@return the next available offset into the buffer, or -1 if the buffer is\n full.\n@throws ArrayIndexOutOfBoundsException if an invalid offset is provided\n or the end of buffer was encountered while storing the data.\n@throws IOException is thrown if an error occurs while accessing the\n underlying storage.",
      "static": false,
      "params": [
        {
          "name": "offset",
          "type_long": "int",
          "type_short": "int",
          "comment": "byte offset from start of buffer."
        },
        {
          "name": "v",
          "type_long": "int",
          "type_short": "int",
          "comment": "the integer value to be stored."
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the next available offset into the buffer, or -1 if the buffer is\n full."
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "is thrown if an error occurs while accessing the\n underlying storage."
        }
      ]
    },
    {
      "name": "putShort",
      "comment": "Put the 16-bit short value into the buffer at the specified offset.",
      "javadoc": "Put the 16-bit short value into the buffer at the specified offset.\n@param offset byte offset from start of buffer.\n@param v the short value to be stored.\n@return the next available offset into the buffer, or -1 if the buffer is\n full.\n@throws ArrayIndexOutOfBoundsException if an invalid offset is provided\n or the end of buffer was encountered while storing the data.\n@throws IOException is thrown if an error occurs while accessing the\n underlying storage.",
      "static": false,
      "params": [
        {
          "name": "offset",
          "type_long": "int",
          "type_short": "int",
          "comment": "byte offset from start of buffer."
        },
        {
          "name": "v",
          "type_long": "short",
          "type_short": "short",
          "comment": "the short value to be stored."
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the next available offset into the buffer, or -1 if the buffer is\n full."
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "is thrown if an error occurs while accessing the\n underlying storage."
        }
      ]
    },
    {
      "name": "putLong",
      "comment": "Put the 64-bit long value into the buffer at the specified offset.",
      "javadoc": "Put the 64-bit long value into the buffer at the specified offset.\n@param offset byte offset from start of buffer.\n@param v the long value to be stored.\n@return the next available offset into the buffer, or -1 if the buffer is\n full.\n@throws ArrayIndexOutOfBoundsException if an invalid offset is provided\n or the end of buffer was encountered while storing the data.\n@throws IOException is thrown if an error occurs while accessing the\n underlying storage.",
      "static": false,
      "params": [
        {
          "name": "offset",
          "type_long": "int",
          "type_short": "int",
          "comment": "byte offset from start of buffer."
        },
        {
          "name": "v",
          "type_long": "long",
          "type_short": "long",
          "comment": "the long value to be stored."
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the next available offset into the buffer, or -1 if the buffer is\n full."
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "is thrown if an error occurs while accessing the\n underlying storage."
        }
      ]
    }
  ]
}
