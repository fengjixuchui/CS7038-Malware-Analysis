{
  "name": "AbstractScreenShotGenerator",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "extends": "ghidra.test.AbstractGhidraHeadedIntegrationTest",
  "fields": [
    {
      "name": "SAVE_CREATED_IMAGE_FILE_KEY",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"ScreenShotGenerator.save.created.image\""
    },
    {
      "name": "SAVE_CREATED_IMAGE_FILE",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "NEW_FILENAME_SUFFIX_KEY",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"ScreenShotGenerator.filename.suffix\""
    },
    {
      "name": "DEFAULT_FILENAME_SUFFIX",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"\""
    },
    {
      "name": "NEW_FILENAME_SUFFIX",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "DIALOG_HEADER_HEIGHT",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "22"
    },
    {
      "name": "tool",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.plugintool.PluginTool",
      "type_short": "PluginTool",
      "constant_value": null
    },
    {
      "name": "env",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.test.TestEnv",
      "type_short": "TestEnv",
      "constant_value": null
    },
    {
      "name": "program",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.listing.Program",
      "type_short": "Program",
      "constant_value": null
    },
    {
      "name": "image",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.awt.Image",
      "type_short": "Image",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setUp",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.lang.Exception",
          "type_short": "Exception",
          "comment": ""
        }
      ]
    },
    {
      "name": "tearDown",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.lang.Exception",
          "type_short": "Exception",
          "comment": ""
        }
      ]
    },
    {
      "name": "prepareTool",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "loadProgram",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.lang.Exception",
          "type_short": "Exception",
          "comment": ""
        }
      ]
    },
    {
      "name": "closeNonProgramArchives",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "loadProgram",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "programName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.listing.Program",
        "type_short": "Program",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "exit",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setUser",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "userName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setDockIcon",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addr",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "value",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setToolSize",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "width",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "height",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setWindowSize",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "window",
          "type_long": "java.awt.Window",
          "type_short": "Window",
          "comment": ""
        },
        {
          "name": "width",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "height",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "performAction",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "actionName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "owner",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "wait",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "performDialogAction",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "actionName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "wait",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "performAction",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "actionName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "owner",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "contextProvider",
          "type_long": "docking.ComponentProvider",
          "type_short": "ComponentProvider",
          "comment": ""
        },
        {
          "name": "wait",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "showOptions",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "optionsCategoryName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "showProgramOptions",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "optionsCategoryName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getCursorBounds",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Rectangle",
        "type_short": "Rectangle",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "pressOkOnDialog",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "pressButtonOnDialog",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "buttonText",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "captureIsolatedComponent",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "component",
          "type_long": "javax.swing.JComponent",
          "type_short": "JComponent",
          "comment": ""
        },
        {
          "name": "width",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "height",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "captureComponent",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "component",
          "type_long": "java.awt.Component",
          "type_short": "Component",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.awt.Image",
        "type_short": "Image",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "captureIsolatedProviderWindow",
      "comment": "The same as GhidraScreenShotGenerator#captureIsolatedProvider(Class, int, int)\n except this method will also capture the containing window.",
      "javadoc": "The same as {@link GhidraScreenShotGenerator#captureIsolatedProvider(Class, int, int)}\n except this method will also capture the containing window.\n@param clazz the provider class\n@param width the width of the capture\n@param height the height of the capture",
      "static": false,
      "params": [
        {
          "name": "clazz",
          "type_long": "java.lang.Class\u003c? extends docking.ComponentProvider\u003e",
          "type_short": "Class",
          "comment": "the provider class"
        },
        {
          "name": "width",
          "type_long": "int",
          "type_short": "int",
          "comment": "the width of the capture"
        },
        {
          "name": "height",
          "type_long": "int",
          "type_short": "int",
          "comment": "the height of the capture"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "captureIsolatedProvider",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "clazz",
          "type_long": "java.lang.Class\u003c? extends docking.ComponentProvider\u003e",
          "type_short": "Class",
          "comment": ""
        },
        {
          "name": "width",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "height",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "captureIsolatedProvider",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "provider",
          "type_long": "docking.ComponentProvider",
          "type_short": "ComponentProvider",
          "comment": ""
        },
        {
          "name": "width",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "height",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "moveProviderToFront",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "provider",
          "type_long": "docking.ComponentProvider",
          "type_short": "ComponentProvider",
          "comment": ""
        },
        {
          "name": "width",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "height",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "moveProviderToFront",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "provider",
          "type_long": "docking.ComponentProvider",
          "type_short": "ComponentProvider",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "moveWindowUp",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "window",
          "type_long": "java.awt.Window",
          "type_short": "Window",
          "comment": ""
        },
        {
          "name": "yOffset",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "moveProviderToItsOwnWindow",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "provider",
          "type_long": "docking.ComponentProvider",
          "type_short": "ComponentProvider",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.awt.Window",
        "type_short": "Window",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "moveProviderToItsOwnWindow",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "provider",
          "type_long": "docking.ComponentProvider",
          "type_short": "ComponentProvider",
          "comment": ""
        },
        {
          "name": "width",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "height",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.awt.Window",
        "type_short": "Window",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDockableComponent",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "provider",
          "type_long": "docking.ComponentProvider",
          "type_short": "ComponentProvider",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.DockableComponent",
        "type_short": "DockableComponent",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "moveProvider",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "movee",
          "type_long": "docking.ComponentProvider",
          "type_short": "ComponentProvider",
          "comment": ""
        },
        {
          "name": "relativeTo",
          "type_long": "docking.ComponentProvider",
          "type_short": "ComponentProvider",
          "comment": ""
        },
        {
          "name": "position",
          "type_long": "docking.WindowPosition",
          "type_short": "WindowPosition",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "captureMenu",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPopupMenu",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "javax.swing.JPopupMenu",
        "type_short": "JPopupMenu",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "captureProvider",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "clazz",
          "type_long": "java.lang.Class\u003c? extends docking.ComponentProvider\u003e",
          "type_short": "Class",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "captureProvider",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "provider",
          "type_long": "docking.ComponentProvider",
          "type_short": "ComponentProvider",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "captureProvider",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "captureProviderWithScreenShot",
      "comment": "Captures the provider by using a screen shot and not by painting the provider directly \n (as does #captureProvider(ComponentProvider)).  Use this method if you need to\n capture the provider along with any popup windows.",
      "javadoc": "Captures the provider by using a screen shot and not by painting the provider directly \n (as does {@link #captureProvider(ComponentProvider)}).  Use this method if you need to\n capture the provider along with any popup windows.\n@param provider the provider",
      "static": false,
      "params": [
        {
          "name": "provider",
          "type_long": "docking.ComponentProvider",
          "type_short": "ComponentProvider",
          "comment": "the provider"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "captureProviderWindow",
      "comment": "Captures the window, including decorations.  This will use a Robot to create a \n screen capture, which has the effect of getting all items within the window bounds.  This\n method is needed if you wish to capture child windows, like popups/hovers.\n \n Other capture methods will not use the screen capture mechanism, but rather will \n directly render the given component.  In this case, subordinate windows will not be \n captured.  For example, see #captureProvider(Class).",
      "javadoc": "Captures the window, including decorations.  This will use a {@link Robot} to create a \n screen capture, which has the effect of getting all items within the window bounds.  This\n method is needed if you wish to capture child windows, like popups/hovers.\n \n \u003cP\u003eOther capture methods will not use the screen capture mechanism, but rather will \n directly render the given component.  In this case, subordinate windows will not be \n captured.  For example, see {@link #captureProvider(Class)}.\n@param name the provider\u0027s name",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the provider\u0027s name"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "captureProviderWindow",
      "comment": "Captures the window, including decorations.  This will use a Robot to create a \n screen capture, which has the effect of getting all items within the window bounds.  This\n method is needed if you wish to capture child windows, like popups/hovers.\n \n Other capture methods will not use the screen capture mechanism, but rather will \n directly render the given component.  In this case, subordinate windows will not be \n captured.  For example, see #captureProvider(Class).",
      "javadoc": "Captures the window, including decorations.  This will use a {@link Robot} to create a \n screen capture, which has the effect of getting all items within the window bounds.  This\n method is needed if you wish to capture child windows, like popups/hovers.\n \n \u003cP\u003eOther capture methods will not use the screen capture mechanism, but rather will \n directly render the given component.  In this case, subordinate windows will not be \n captured.  For example, see {@link #captureProvider(Class)}.\n@param clazz the provider\u0027s class",
      "static": false,
      "params": [
        {
          "name": "clazz",
          "type_long": "java.lang.Class\u003c? extends docking.ComponentProvider\u003e",
          "type_short": "Class",
          "comment": "the provider\u0027s class"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "captureProviderWindow",
      "comment": "Captures the window, including decorations.  This will use a Robot to create a \n screen capture, which has the effect of getting all items within the window bounds.  This\n method is needed if you wish to capture child windows, like popups/hovers.\n \n Other capture methods will not use the screen capture mechanism, but rather will \n directly render the given component.  In this case, subordinate windows will not be \n captured.  For example, see #captureProvider(Class).",
      "javadoc": "Captures the window, including decorations.  This will use a {@link Robot} to create a \n screen capture, which has the effect of getting all items within the window bounds.  This\n method is needed if you wish to capture child windows, like popups/hovers.\n \n \u003cP\u003eOther capture methods will not use the screen capture mechanism, but rather will \n directly render the given component.  In this case, subordinate windows will not be \n captured.  For example, see {@link #captureProvider(Class)}.\n@param provider the provider",
      "static": false,
      "params": [
        {
          "name": "provider",
          "type_long": "docking.ComponentProvider",
          "type_short": "ComponentProvider",
          "comment": "the provider"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "captureProviderWindow",
      "comment": "Captures the window, including decorations.  This will use a Robot to create a \n screen capture, which has the effect of getting all items within the window bounds.  This\n method is needed if you wish to capture child windows, like popups/hovers.\n \n Other capture methods will not use the screen capture mechanism, but rather will \n directly render the given component.  In this case, subordinate windows will not be \n captured.  For example, see #captureProvider(Class).",
      "javadoc": "Captures the window, including decorations.  This will use a {@link Robot} to create a \n screen capture, which has the effect of getting all items within the window bounds.  This\n method is needed if you wish to capture child windows, like popups/hovers.\n \n \u003cP\u003eOther capture methods will not use the screen capture mechanism, but rather will \n directly render the given component.  In this case, subordinate windows will not be \n captured.  For example, see {@link #captureProvider(Class)}.\n@param name the provider\u0027s name\n@param width the desired width\n@param height the desired height",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the provider\u0027s name"
        },
        {
          "name": "width",
          "type_long": "int",
          "type_short": "int",
          "comment": "the desired width"
        },
        {
          "name": "height",
          "type_long": "int",
          "type_short": "int",
          "comment": "the desired height"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "captureProviderWindow",
      "comment": "Captures the window, including decorations.  This will use a Robot to create a \n screen capture, which has the effect of getting all items within the window bounds.  This\n method is needed if you wish to capture child windows, like popups/hovers.\n \n Other capture methods will not use the screen capture mechanism, but rather will \n directly render the given component.  In this case, subordinate windows will not be \n captured.  For example, see #captureProvider(Class).",
      "javadoc": "Captures the window, including decorations.  This will use a {@link Robot} to create a \n screen capture, which has the effect of getting all items within the window bounds.  This\n method is needed if you wish to capture child windows, like popups/hovers.\n \n \u003cP\u003eOther capture methods will not use the screen capture mechanism, but rather will \n directly render the given component.  In this case, subordinate windows will not be \n captured.  For example, see {@link #captureProvider(Class)}.\n@param provider the provider\u0027s name\n@param width the desired width\n@param height the desired height",
      "static": false,
      "params": [
        {
          "name": "provider",
          "type_long": "docking.ComponentProvider",
          "type_short": "ComponentProvider",
          "comment": "the provider\u0027s name"
        },
        {
          "name": "width",
          "type_long": "int",
          "type_short": "int",
          "comment": "the desired width"
        },
        {
          "name": "height",
          "type_long": "int",
          "type_short": "int",
          "comment": "the desired height"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "showProvider",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "clazz",
          "type_long": "java.lang.Class\u003cT\u003e",
          "type_short": "Class",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "T",
        "type_short": "T",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "closeProvider",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "clazz",
          "type_long": "java.lang.Class\u003c? extends docking.ComponentProvider\u003e",
          "type_short": "Class",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "captureActionIcon",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "actionName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "captureIcon",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "icon",
          "type_long": "javax.swing.Icon",
          "type_short": "Icon",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "captureDialog",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDialog",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.DialogComponentProvider",
        "type_short": "DialogComponentProvider",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDialog",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "clazz",
          "type_long": "java.lang.Class\u003c? extends docking.DialogComponentProvider\u003e",
          "type_short": "Class",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.DialogComponentProvider",
        "type_short": "DialogComponentProvider",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "captureDialog",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "width",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "height",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "paintFix",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "window",
          "type_long": "java.awt.Window",
          "type_short": "Window",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "captureDialog",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "title",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "captureDialog",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "clazz",
          "type_long": "java.lang.Class\u003c? extends docking.DialogComponentProvider\u003e",
          "type_short": "Class",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "captureDialog",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "provider",
          "type_long": "docking.DialogComponentProvider",
          "type_short": "DialogComponentProvider",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "captureDialog",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "clazz",
          "type_long": "java.lang.Class\u003c? extends docking.DialogComponentProvider\u003e",
          "type_short": "Class",
          "comment": ""
        },
        {
          "name": "width",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "height",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "captureWindow",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "captureWindow",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "window",
          "type_long": "java.awt.Window",
          "type_short": "Window",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "captureWindow",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "window",
          "type_long": "java.awt.Window",
          "type_short": "Window",
          "comment": ""
        },
        {
          "name": "width",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "height",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "captureToolWindow",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "width",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "height",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "captureDialog",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "dialog",
          "type_long": "java.awt.Dialog",
          "type_short": "Dialog",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "captureDialog",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "dialog",
          "type_long": "java.awt.Dialog",
          "type_short": "Dialog",
          "comment": ""
        },
        {
          "name": "width",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "height",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "captureListingField",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "address",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        },
        {
          "name": "fieldName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "padding",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "generateImage",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "c",
          "type_long": "java.awt.Component",
          "type_short": "Component",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "captureComponents",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "comps",
          "type_long": "java.util.List\u003cjava.awt.Component\u003e",
          "type_short": "List",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "captureMenuBarMenu",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "menuName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "subMenuNames",
          "type_long": "java.lang.String[]",
          "type_short": "java.lang.String[]",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "captureMenuBarMenuHierachy",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "menuName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "subMenuNames",
          "type_long": "java.lang.String[]",
          "type_short": "java.lang.String[]",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "captureListingRange",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "start",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        },
        {
          "name": "end",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        },
        {
          "name": "width",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "error",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "e",
          "type_long": "java.lang.Exception",
          "type_short": "Exception",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setListingFieldWidth",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "fieldName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "width",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getField",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "point",
          "type_long": "java.awt.Point",
          "type_short": "Point",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.widgets.fieldpanel.field.Field",
        "type_short": "Field",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFormatManager",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.util.viewer.format.FormatManager",
        "type_short": "FormatManager",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "leftClickCursor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "rightClickCursor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "middleClickCursor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "doubleClickCursor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "computeBounds",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "comps",
          "type_long": "java.util.List\u003cjava.awt.Component\u003e",
          "type_short": "List",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.awt.Rectangle",
        "type_short": "Rectangle",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "findMenu",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "menuBar",
          "type_long": "javax.swing.JMenuBar",
          "type_short": "JMenuBar",
          "comment": ""
        },
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "javax.swing.JMenuItem",
        "type_short": "JMenuItem",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "findMenuElement",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "menu",
          "type_long": "javax.swing.JMenu",
          "type_short": "JMenu",
          "comment": ""
        },
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "javax.swing.JMenuItem",
        "type_short": "JMenuItem",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "selectRow",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "table",
          "type_long": "javax.swing.JTable",
          "type_short": "JTable",
          "comment": ""
        },
        {
          "name": "rowIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setSelected",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "button",
          "type_long": "javax.swing.JToggleButton",
          "type_short": "JToggleButton",
          "comment": ""
        },
        {
          "name": "select",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "waitForTable",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "table",
          "type_long": "javax.swing.JTable",
          "type_short": "JTable",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hideTableColumn",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "table",
          "type_long": "docking.widgets.table.GTable",
          "type_short": "GTable",
          "comment": ""
        },
        {
          "name": "columnName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "showMenuBarMenu",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "menuName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "submenuNames",
          "type_long": "java.lang.String[]",
          "type_short": "java.lang.String[]",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.List\u003cjava.awt.Component\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "showColumnSettings",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "table",
          "type_long": "docking.widgets.table.GTable",
          "type_short": "GTable",
          "comment": ""
        },
        {
          "name": "colName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "showTableColumn",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "table",
          "type_long": "docking.widgets.table.GTable",
          "type_short": "GTable",
          "comment": ""
        },
        {
          "name": "columnName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setSelectedAnayzer",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "analysisPanel",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        },
        {
          "name": "analyzerName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "showCommentDialog",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "text",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "prepareCommentsDialog",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "dialog",
          "type_long": "ghidra.app.plugin.core.comments.CommentsDialog",
          "type_short": "CommentsDialog",
          "comment": ""
        },
        {
          "name": "annotationText",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createBookmark",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "address",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "selectRow",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "table",
          "type_long": "javax.swing.JTable",
          "type_short": "JTable",
          "comment": ""
        },
        {
          "name": "searchString",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "scrollToRow",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "table",
          "type_long": "javax.swing.JTable",
          "type_short": "JTable",
          "comment": ""
        },
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "findRowByPartialText",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "table",
          "type_long": "javax.swing.JTable",
          "type_short": "JTable",
          "comment": ""
        },
        {
          "name": "searchString",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "performMemorySearch",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "searchString",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeField",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "fieldName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "showAnalysisOptions",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "selectedAnalyzerName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeFlowArrows",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "makeSelection",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "addrSet",
          "type_long": "ghidra.program.model.address.AddressSet",
          "type_short": "AddressSet",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addSelection",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "start",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        },
        {
          "name": "end",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "makeSelection",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "start",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        },
        {
          "name": "end",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "go",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "address",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "goToListing",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "address",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "goToListing",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "address",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        },
        {
          "name": "scrollToMiddle",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "goToListing",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "address",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        },
        {
          "name": "fieldName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "scrollToMiddle",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "positionCursor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "address",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "positionCursor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "address",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        },
        {
          "name": "fieldName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "positionListingTop",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "address",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "positionListingCenter",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "address",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "topOfListing",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "address",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "loadPlugin",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "clazz",
          "type_long": "java.lang.Class\u003c? extends ghidra.framework.plugintool.Plugin\u003e",
          "type_short": "Class",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.framework.plugintool.Plugin",
        "type_short": "Plugin",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "loadPlugin",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "className",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.framework.plugintool.Plugin",
        "type_short": "Plugin",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getProvider",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.ComponentProvider",
        "type_short": "ComponentProvider",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getProvider",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "clazz",
          "type_long": "java.lang.Class\u003cT\u003e",
          "type_short": "Class",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "T",
        "type_short": "T",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDockableComponent",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "clazz",
          "type_long": "java.lang.Class\u003c? extends docking.ComponentProvider\u003e",
          "type_short": "Class",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.DockableComponent",
        "type_short": "DockableComponent",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "findProviderToolBarButton",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "provider",
          "type_long": "docking.ComponentProvider",
          "type_short": "ComponentProvider",
          "comment": ""
        },
        {
          "name": "actionName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "javax.swing.JButton",
        "type_short": "JButton",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "address",
      "comment": "",
      "javadoc": "@param value the address\u0027s long value\n@return the new address\n@deprecated use {@link #addr(long)} instead",
      "static": false,
      "params": [
        {
          "name": "value",
          "type_long": "long",
          "type_short": "long",
          "comment": "the address\u0027s long value"
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": "the new address"
      },
      "throws": []
    },
    {
      "name": "getBounds",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "component",
          "type_long": "javax.swing.JComponent",
          "type_short": "JComponent",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.awt.Rectangle",
        "type_short": "Rectangle",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "drawRectangleWithDropShadowAround",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "component",
          "type_long": "javax.swing.JComponent",
          "type_short": "JComponent",
          "comment": ""
        },
        {
          "name": "color",
          "type_long": "java.awt.Color",
          "type_short": "Color",
          "comment": ""
        },
        {
          "name": "padding",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "drawRectangleAround",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "component",
          "type_long": "javax.swing.JComponent",
          "type_short": "JComponent",
          "comment": ""
        },
        {
          "name": "color",
          "type_long": "java.awt.Color",
          "type_short": "Color",
          "comment": ""
        },
        {
          "name": "padding",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.awt.Rectangle",
        "type_short": "Rectangle",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "drawRectangleAround",
      "comment": "Draws a rectangle around the given component.  The root parameter is used to calculate\n screen coordinates.   This allows you to capture a sub-component of a UI, drawing\n rectangles around children of said sub-component.\n \n If you are unsure of what to pass for root, the call \n #drawRectangleAround(JComponent, Color, int) instead.",
      "javadoc": "Draws a rectangle around the given component.  The root parameter is used to calculate\n screen coordinates.   This allows you to capture a sub-component of a UI, drawing\n rectangles around children of said sub-component.\n \n \u003cP\u003eIf you are unsure of what to pass for \u003ccode\u003eroot\u003c/code\u003e, the call \n {@link #drawRectangleAround(JComponent, Color, int)} instead.\n@param component the component to be en-rectangled\n@param root the outermost container widget being displayed; null implies a \n \t\t  top-level parent\n@param color the rectangle color\n@param padding the space between the rectangle and the component; more space makes\n        the component more visible\n@return the bounds of the drawn rectangle",
      "static": false,
      "params": [
        {
          "name": "component",
          "type_long": "javax.swing.JComponent",
          "type_short": "JComponent",
          "comment": "the component to be en-rectangled"
        },
        {
          "name": "root",
          "type_long": "javax.swing.JComponent",
          "type_short": "JComponent",
          "comment": "the outermost container widget being displayed; null implies a \n \t\t  top-level parent"
        },
        {
          "name": "color",
          "type_long": "java.awt.Color",
          "type_short": "Color",
          "comment": "the rectangle color"
        },
        {
          "name": "padding",
          "type_long": "int",
          "type_short": "int",
          "comment": "the space between the rectangle and the component; more space makes\n        the component more visible"
        }
      ],
      "return": {
        "type_long": "java.awt.Rectangle",
        "type_short": "Rectangle",
        "comment": "the bounds of the drawn rectangle"
      },
      "throws": []
    },
    {
      "name": "drawRectangle",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "c",
          "type_long": "java.awt.Color",
          "type_short": "Color",
          "comment": ""
        },
        {
          "name": "r",
          "type_long": "java.awt.Rectangle",
          "type_short": "Rectangle",
          "comment": ""
        },
        {
          "name": "padding",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "thickness",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.awt.Rectangle",
        "type_short": "Rectangle",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "drawBorder",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "c",
          "type_long": "java.awt.Color",
          "type_short": "Color",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "drawRectangle",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "c",
          "type_long": "java.awt.Color",
          "type_short": "Color",
          "comment": ""
        },
        {
          "name": "rect",
          "type_long": "java.awt.Rectangle",
          "type_short": "Rectangle",
          "comment": ""
        },
        {
          "name": "thickness",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "fillRectangle",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "c",
          "type_long": "java.awt.Color",
          "type_short": "Color",
          "comment": ""
        },
        {
          "name": "rect",
          "type_long": "java.awt.Rectangle",
          "type_short": "Rectangle",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "drawOval",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "c",
          "type_long": "java.awt.Color",
          "type_short": "Color",
          "comment": ""
        },
        {
          "name": "rect",
          "type_long": "java.awt.Rectangle",
          "type_short": "Rectangle",
          "comment": ""
        },
        {
          "name": "thickness",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "drawText",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "text",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "color",
          "type_long": "java.awt.Color",
          "type_short": "Color",
          "comment": ""
        },
        {
          "name": "start",
          "type_long": "java.awt.Point",
          "type_short": "Point",
          "comment": ""
        },
        {
          "name": "size",
          "type_long": "float",
          "type_short": "float",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "drawText",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "text",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "color",
          "type_long": "java.awt.Color",
          "type_short": "Color",
          "comment": ""
        },
        {
          "name": "start",
          "type_long": "java.awt.Point",
          "type_short": "Point",
          "comment": ""
        },
        {
          "name": "font",
          "type_long": "java.awt.Font",
          "type_short": "Font",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "drawLine",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "c",
          "type_long": "java.awt.Color",
          "type_short": "Color",
          "comment": ""
        },
        {
          "name": "thickness",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "start",
          "type_long": "java.awt.Point",
          "type_short": "Point",
          "comment": ""
        },
        {
          "name": "end",
          "type_long": "java.awt.Point",
          "type_short": "Point",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "drawArrow",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "c",
          "type_long": "java.awt.Color",
          "type_short": "Color",
          "comment": ""
        },
        {
          "name": "start",
          "type_long": "java.awt.Point",
          "type_short": "Point",
          "comment": ""
        },
        {
          "name": "end",
          "type_long": "java.awt.Point",
          "type_short": "Point",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "drawArrow",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "c",
          "type_long": "java.awt.Color",
          "type_short": "Color",
          "comment": ""
        },
        {
          "name": "thickness",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "start",
          "type_long": "java.awt.Point",
          "type_short": "Point",
          "comment": ""
        },
        {
          "name": "end",
          "type_long": "java.awt.Point",
          "type_short": "Point",
          "comment": ""
        },
        {
          "name": "arrowSize",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "writeFile",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "imageFile",
          "type_long": "java.io.File",
          "type_short": "File",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "readImage",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "imageFile",
          "type_long": "java.io.File",
          "type_short": "File",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.awt.image.BufferedImage",
        "type_short": "BufferedImage",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "crop",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "bounds",
          "type_long": "java.awt.Rectangle",
          "type_short": "Rectangle",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.awt.Image",
        "type_short": "Image",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "padImage",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "c",
          "type_long": "java.awt.Color",
          "type_short": "Color",
          "comment": ""
        },
        {
          "name": "top",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "left",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "right",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "bottom",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.awt.Image",
        "type_short": "Image",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "placeImagesSideBySide",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "left",
          "type_long": "java.awt.Image",
          "type_short": "Image",
          "comment": ""
        },
        {
          "name": "right",
          "type_long": "java.awt.Image",
          "type_short": "Image",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.awt.Image",
        "type_short": "Image",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createEmptyImage",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "width",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "height",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.awt.image.BufferedImage",
        "type_short": "BufferedImage",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "takeSnippet",
      "comment": "Crops a part of the current image, keeping what is inside the given bounds.  This method\n creates a shape such that the top and bottom of the cropped image have a jagged line, \n looking somewhat like a sideways lightening bolt.",
      "javadoc": "Crops a part of the current image, keeping what is inside the given bounds.  This method\n creates a shape such that the top and bottom of the cropped image have a jagged line, \n looking somewhat like a sideways lightening bolt.\n@param bounds the bounds to keep\n@return the snippet",
      "static": false,
      "params": [
        {
          "name": "bounds",
          "type_long": "java.awt.Rectangle",
          "type_short": "Rectangle",
          "comment": "the bounds to keep"
        }
      ],
      "return": {
        "type_long": "java.awt.Image",
        "type_short": "Image",
        "comment": "the snippet"
      },
      "throws": []
    },
    {
      "name": "crop",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "shape",
          "type_long": "java.awt.Shape",
          "type_short": "Shape",
          "comment": ""
        },
        {
          "name": "bounds",
          "type_long": "java.awt.Rectangle",
          "type_short": "Rectangle",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setDividerPercentage",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "provider1",
          "type_long": "java.lang.Class\u003c? extends docking.ComponentProvider\u003e",
          "type_short": "Class",
          "comment": ""
        },
        {
          "name": "provider2",
          "type_long": "java.lang.Class\u003c? extends docking.ComponentProvider\u003e",
          "type_short": "Class",
          "comment": ""
        },
        {
          "name": "percentage",
          "type_long": "float",
          "type_short": "float",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "findSplitNode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "provider1",
          "type_long": "java.lang.Class\u003c? extends docking.ComponentProvider\u003e",
          "type_short": "Class",
          "comment": ""
        },
        {
          "name": "provider2",
          "type_long": "java.lang.Class\u003c? extends docking.ComponentProvider\u003e",
          "type_short": "Class",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.Object",
        "type_short": "Object",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "findNodePath",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "rootNode",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        },
        {
          "name": "providerClass",
          "type_long": "java.lang.Class\u003c? extends docking.ComponentProvider\u003e",
          "type_short": "Class",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.List\u003cjava.lang.Object\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "findNode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "node",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        },
        {
          "name": "providerClass",
          "type_long": "java.lang.Class\u003c? extends docking.ComponentProvider\u003e",
          "type_short": "Class",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.Object",
        "type_short": "Object",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "findChildWithType",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "node",
          "type_long": "java.awt.Container",
          "type_short": "Container",
          "comment": ""
        },
        {
          "name": "cls",
          "type_long": "java.lang.Class\u003cT\u003e",
          "type_short": "Class",
          "comment": ""
        },
        {
          "name": "pred",
          "type_long": "java.util.function.Predicate\u003cT\u003e",
          "type_short": "Predicate",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "T",
        "type_short": "T",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "findComponent",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "cls",
          "type_long": "java.lang.Class\u003cT\u003e",
          "type_short": "Class",
          "comment": ""
        },
        {
          "name": "pred",
          "type_long": "java.util.function.Predicate\u003cT\u003e",
          "type_short": "Predicate",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "T",
        "type_short": "T",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "showTab",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "title",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.awt.Component",
        "type_short": "Component",
        "comment": ""
      },
      "throws": []
    }
  ]
}
