{
  "name": "HelpModuleCollection",
  "comment": "A class that is meant to hold a single help input directory and 0 or more\n external, pre-built help sources (i.e., jar file or directory).\n \n \n \t\t\t\t\t\tNote\n \t\t\t\t\t\tNote\n \t\t\t\t\t\tNote\n\n  This class is a bit conceptually muddled.  Our build system is reflected in this class in that\n  we currently build one help module at a time.  Thus, any dependencies of that module being\n  built can be passed into this \"collection\" at build time.   We used to build multiple help\n  modules at once, resolving dependencies for all of the input modules after we built each\n  module.  This class will need to be tweaked in order to go back to a build system with\n  multiple input builds.\n\n ",
  "javadoc": "A class that is meant to hold a single help \u003cb\u003einput\u003c/b\u003e directory and 0 or more\n \u003cb\u003eexternal, pre-built\u003c/b\u003e help sources (i.e., jar file or directory).\n \u003cp\u003e\n \u003cpre\u003e\n \t\t\t\t\t\tNote\n \t\t\t\t\t\tNote\n \t\t\t\t\t\tNote\n\n  This class is a bit conceptually muddled.  Our build system is reflected in this class in that\n  we currently build one help module at a time.  Thus, any dependencies of that module being\n  built can be passed into this \"collection\" at build time.   We used to build multiple help\n  modules at once, resolving dependencies for all of the input modules after we built each\n  module.  This class will need to be tweaked in order to go back to a build system with\n  multiple input builds.\n\n \u003c/pre\u003e",
  "static": false,
  "implements": [
    "help.TOCItemProvider"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "helpLocations",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.Collection\u003chelp.validator.location.HelpModuleLocation\u003e",
      "type_short": "Collection",
      "constant_value": null
    },
    {
      "name": "inputHelp",
      "comment": "The help we are building",
      "javadoc": "The help we are building",
      "static": false,
      "type_long": "help.validator.location.HelpModuleLocation",
      "type_short": "HelpModuleLocation",
      "constant_value": null
    },
    {
      "name": "externalHelpSets",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cjavax.help.HelpSet\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "pathToHelpFileMap",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.Map\u003chelp.validator.location.HelpModuleCollection.PathKey,help.validator.model.HelpFile\u003e",
      "type_short": "Map",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "fromHelpDirectory",
      "comment": "Creates a help module collection that contains only a singe help module from a help\n directory, not a pre-built help jar.",
      "javadoc": "Creates a help module collection that contains only a singe help module from a help\n directory, not a pre-built help jar.\n@param dir the directory containing help\n@return the help collection",
      "static": true,
      "params": [
        {
          "name": "dir",
          "type_long": "java.io.File",
          "type_short": "File",
          "comment": "the directory containing help"
        }
      ],
      "return": {
        "type_long": "help.validator.location.HelpModuleCollection",
        "type_short": "HelpModuleCollection",
        "comment": "the help collection"
      },
      "throws": []
    },
    {
      "name": "fromFiles",
      "comment": "Creates a help module collection that assumes zero or more pre-built help jar files and\n one help directory that is an input into the help building process.",
      "javadoc": "Creates a help module collection that assumes zero or more pre-built help jar files and\n one help directory that is an input into the help building process.\n@param files the files from which to get help\n@return the help collection",
      "static": true,
      "params": [
        {
          "name": "files",
          "type_long": "java.util.Collection\u003cjava.io.File\u003e",
          "type_short": "Collection",
          "comment": "the files from which to get help"
        }
      ],
      "return": {
        "type_long": "help.validator.location.HelpModuleCollection",
        "type_short": "HelpModuleCollection",
        "comment": "the help collection"
      },
      "throws": []
    },
    {
      "name": "fromHelpLocations",
      "comment": "Creates a help module collection that assumes zero or more pre-built help jar files and\n one help directory that is an input into the help building process.",
      "javadoc": "Creates a help module collection that assumes zero or more pre-built help jar files and\n one help directory that is an input into the help building process.\n@param locations the locations from which to get help\n@return the help collection",
      "static": true,
      "params": [
        {
          "name": "locations",
          "type_long": "java.util.Collection\u003chelp.validator.location.HelpModuleLocation\u003e",
          "type_short": "Collection",
          "comment": "the locations from which to get help"
        }
      ],
      "return": {
        "type_long": "help.validator.location.HelpModuleCollection",
        "type_short": "HelpModuleCollection",
        "comment": "the help collection"
      },
      "throws": []
    },
    {
      "name": "toHelpLocations",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "files",
          "type_long": "java.util.Collection\u003cjava.io.File\u003e",
          "type_short": "Collection",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.Set\u003chelp.validator.location.HelpModuleLocation\u003e",
        "type_short": "Set",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "locations",
          "type_long": "java.util.Collection\u003chelp.validator.location.HelpModuleLocation\u003e",
          "type_short": "Collection",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSourceTOCFile",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "help.validator.model.GhidraTOCFile",
        "type_short": "GhidraTOCFile",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "loadTOCs",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "loadHelpSets",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "containsHelpFiles",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getHelpRoots",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Collection\u003cjava.nio.file.Path\u003e",
        "type_short": "Collection",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDuplicateAnchorsByFile",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Map\u003chelp.validator.model.HelpFile,java.util.Map\u003cjava.lang.String,java.util.List\u003chelp.validator.model.AnchorDefinition\u003e\u003e\u003e",
        "type_short": "Map",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDuplicateAnchorsByTopic",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Map\u003chelp.validator.model.HelpTopic,java.util.List\u003chelp.validator.model.AnchorDefinition\u003e\u003e",
        "type_short": "Map",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getAllHREFs",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Collection\u003chelp.validator.model.HREF\u003e",
        "type_short": "Collection",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getAllIMGs",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Collection\u003chelp.validator.model.IMG\u003e",
        "type_short": "Collection",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getAllAnchorDefinitions",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Collection\u003chelp.validator.model.AnchorDefinition\u003e",
        "type_short": "Collection",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getAnchorDefinition",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "target",
          "type_long": "java.nio.file.Path",
          "type_short": "Path",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "help.validator.model.AnchorDefinition",
        "type_short": "AnchorDefinition",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getHelpFile",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "helpPath",
          "type_long": "java.nio.file.Path",
          "type_short": "Path",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "help.validator.model.HelpFile",
        "type_short": "HelpFile",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPathHelpFileMap",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Map\u003chelp.validator.location.HelpModuleCollection.PathKey,help.validator.model.HelpFile\u003e",
        "type_short": "Map",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getTocDefinitionsByID",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Map\u003cjava.lang.String,help.validator.model.TOCItemDefinition\u003e",
        "type_short": "Map",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getExternalTocItemsById",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Map\u003cjava.lang.String,help.validator.model.TOCItemExternal\u003e",
        "type_short": "Map",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addPrebuiltItem",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "tn",
          "type_long": "javax.swing.tree.DefaultMutableTreeNode",
          "type_short": "DefaultMutableTreeNode",
          "comment": ""
        },
        {
          "name": "tocPath",
          "type_long": "java.nio.file.Path",
          "type_short": "Path",
          "comment": ""
        },
        {
          "name": "mapByDisplay",
          "type_long": "java.util.Map\u003cjava.lang.String,help.validator.model.TOCItemExternal\u003e",
          "type_short": "Map",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getInputTOCItems",
      "comment": "Input TOC items are those that we are building for the input help module of this collection",
      "javadoc": "Input TOC items are those that we are building for the input help module of this collection\n@return the items",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Collection\u003chelp.validator.model.TOCItem\u003e",
        "type_short": "Collection",
        "comment": "the items"
      },
      "throws": []
    },
    {
      "name": "getTOC_HREFs",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Collection\u003chelp.validator.model.HREF\u003e",
        "type_short": "Collection",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getTOC_HREFs",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "file",
          "type_long": "help.validator.model.GhidraTOCFile",
          "type_short": "GhidraTOCFile",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.Collection\u003chelp.validator.model.HREF\u003e",
        "type_short": "Collection",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    }
  ]
}
