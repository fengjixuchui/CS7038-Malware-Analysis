{
  "name": "TOCConverter",
  "comment": "Converts the Ghidra \"source\" TOC file to a JavaHelp TOC file. The Ghidra\n source TOC file contains the table of context index name and its\n corresponding url. However, JavaHelp expects the target value to be map ID in\n the map file.",
  "javadoc": "Converts the Ghidra \"source\" TOC file to a JavaHelp TOC file. The Ghidra\n source TOC file contains the table of context index name and its\n corresponding url. However, JavaHelp expects the target value to be map ID in\n the map file.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "sourceFilename",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "outFilename",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "TOC_VERSION",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"\u003ctoc version\""
    },
    {
      "name": "TOCITEM",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"\u003ctocitem\""
    },
    {
      "name": "TEXT",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"text\""
    },
    {
      "name": "TARGET",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\" target\""
    },
    {
      "name": "urlMap",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.Map\u003cjava.lang.String,java.lang.String\u003e",
      "type_short": "Map",
      "constant_value": null
    },
    {
      "name": "tocList",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cjava.lang.String\u003e",
      "type_short": "List",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "sourceTOCfilename",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "outFilename",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        },
        {
          "type_long": "org.xml.sax.SAXException",
          "type_short": "SAXException",
          "comment": ""
        },
        {
          "type_long": "javax.xml.parsers.ParserConfigurationException",
          "type_short": "ParserConfigurationException",
          "comment": ""
        }
      ]
    },
    {
      "name": "writeTOCMapFile",
      "comment": "Write the section of the map file for the table of contents.",
      "javadoc": "Write the section of the map file for the table of contents.\n@param out output for the map file that maps a help ID to a url.\n@throws IOException",
      "static": false,
      "params": [
        {
          "name": "out",
          "type_long": "java.io.PrintWriter",
          "type_short": "PrintWriter",
          "comment": "output for the map file that maps a help ID to a url."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "readSourceTOC",
      "comment": "Read the source table of contents file and build up hash maps to maintain\n TOC entry names to urls and map IDs.",
      "javadoc": "Read the source table of contents file and build up hash maps to maintain\n TOC entry names to urls and map IDs.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        },
        {
          "type_long": "org.xml.sax.SAXException",
          "type_short": "SAXException",
          "comment": ""
        },
        {
          "type_long": "javax.xml.parsers.ParserConfigurationException",
          "type_short": "ParserConfigurationException",
          "comment": ""
        }
      ]
    },
    {
      "name": "writeJavaHelpTOC",
      "comment": "Write the JavaHelp table of contents file.",
      "javadoc": "Write the JavaHelp table of contents file.\n@throws IOException",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getPadString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "line",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "parseLine",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "line",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "help.TOCConverter.TOCItem",
        "type_short": "TOCItem",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createTempTOCFile",
      "comment": "Creates a temporary TOC file that does not have the !DOCTYPE line in it\n which causes the SAX parser to blow up; it does not like the bad url in\n it.",
      "javadoc": "Creates a temporary TOC file that does not have the \u003c!DOCTYPE line in it\n which causes the SAX parser to blow up; it does not like the bad url in\n it.\n@return \n@throws IOException",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.io.File",
        "type_short": "File",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "main",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "args",
          "type_long": "java.lang.String[]",
          "type_short": "java.lang.String[]",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
