{
  "name": "DockingWindowManagerTestUtils",
  "comment": "This class mainly serves as a conduit through which testing code can access some of the \n non-public internals of DockingWindowManager, without opening up its interface to the\n public and without using reflective magic.",
  "javadoc": "This class mainly serves as a conduit through which testing code can access some of the \n non-public internals of {@link DockingWindowManager}, without opening up its interface to the\n public \u003cb\u003eand\u003c/b\u003e without using reflective magic.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getActiveProviders",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "dwm",
          "type_long": "docking.DockingWindowManager",
          "type_short": "DockingWindowManager",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.Set\u003cdocking.ComponentProvider\u003e",
        "type_short": "Set",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "moveProviderToWindow",
      "comment": "Moves the given provider to its own window, at its current location.",
      "javadoc": "Moves the given provider to its own window, at its current location.\n@param provider the provider to move\n@return the provider\u0027s window",
      "static": true,
      "params": [
        {
          "name": "dwm",
          "type_long": "docking.DockingWindowManager",
          "type_short": "DockingWindowManager",
          "comment": ""
        },
        {
          "name": "provider",
          "type_long": "docking.ComponentProvider",
          "type_short": "ComponentProvider",
          "comment": "the provider to move"
        }
      ],
      "return": {
        "type_long": "java.awt.Window",
        "type_short": "Window",
        "comment": "the provider\u0027s window"
      },
      "throws": []
    },
    {
      "name": "moveProvider",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "dwm",
          "type_long": "docking.DockingWindowManager",
          "type_short": "DockingWindowManager",
          "comment": ""
        },
        {
          "name": "movee",
          "type_long": "docking.ComponentProvider",
          "type_short": "ComponentProvider",
          "comment": ""
        },
        {
          "name": "relativeTo",
          "type_long": "docking.ComponentProvider",
          "type_short": "ComponentProvider",
          "comment": ""
        },
        {
          "name": "position",
          "type_long": "docking.WindowPosition",
          "type_short": "WindowPosition",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDockableComponent",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "dwm",
          "type_long": "docking.DockingWindowManager",
          "type_short": "DockingWindowManager",
          "comment": ""
        },
        {
          "name": "provider",
          "type_long": "docking.ComponentProvider",
          "type_short": "ComponentProvider",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.DockableComponent",
        "type_short": "DockableComponent",
        "comment": ""
      },
      "throws": []
    }
  ]
}
