{
  "name": "DetachedWindowNode",
  "comment": "Node class for managing a component hierarchy in its own sub-window. (currently uses a JDialog)",
  "javadoc": "Node class for managing a component hierarchy in its own sub-window. (currently uses a JDialog)",
  "static": false,
  "implements": [],
  "extends": "docking.WindowNode",
  "fields": [
    {
      "name": "window",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.awt.Window",
      "type_short": "Window",
      "constant_value": null
    },
    {
      "name": "child",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.Node",
      "type_short": "Node",
      "constant_value": null
    },
    {
      "name": "bounds",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.awt.Rectangle",
      "type_short": "Rectangle",
      "constant_value": null
    },
    {
      "name": "statusBar",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.StatusBar",
      "type_short": "StatusBar",
      "constant_value": null
    },
    {
      "name": "childComp",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.JComponent",
      "type_short": "JComponent",
      "constant_value": null
    },
    {
      "name": "dropTargetHandler",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.DropTargetHandler",
      "type_short": "DropTargetHandler",
      "constant_value": null
    },
    {
      "name": "dropTargetFactory",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.DropTargetFactory",
      "type_short": "DropTargetFactory",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new WindowNode",
      "javadoc": "Constructs a new WindowNode\n@param mgr the DockingWindowManager that this node belongs to.\n@param parent the parent node (should always be the root node)\n@param child the node that manages the component hierarchy.\n@param factory the factory from which we create drop targets",
      "static": false,
      "params": [
        {
          "name": "mgr",
          "type_long": "docking.DockingWindowManager",
          "type_short": "DockingWindowManager",
          "comment": "the DockingWindowManager that this node belongs to."
        },
        {
          "name": "parent",
          "type_long": "docking.Node",
          "type_short": "Node",
          "comment": "the parent node (should always be the root node)"
        },
        {
          "name": "child",
          "type_long": "docking.Node",
          "type_short": "Node",
          "comment": "the node that manages the component hierarchy."
        },
        {
          "name": "factory",
          "type_long": "docking.DropTargetFactory",
          "type_short": "DropTargetFactory",
          "comment": "the factory from which we create drop targets"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new WindowNode from the state information in an XML JDOM element.",
      "javadoc": "Constructs a new WindowNode from the state information in an XML JDOM element.\n@param elem the XML element.\n@param mgr the DockingWindowsManager for this node.\n@param parent the parent node (should always be the root node)\n@param factory the factory from which we create drop targets\n@param list child placeholders to be added to this window after being restored",
      "static": false,
      "params": [
        {
          "name": "elem",
          "type_long": "org.jdom.Element",
          "type_short": "Element",
          "comment": "the XML element."
        },
        {
          "name": "mgr",
          "type_long": "docking.DockingWindowManager",
          "type_short": "DockingWindowManager",
          "comment": "the DockingWindowsManager for this node."
        },
        {
          "name": "parent",
          "type_long": "docking.Node",
          "type_short": "Node",
          "comment": "the parent node (should always be the root node)"
        },
        {
          "name": "factory",
          "type_long": "docking.DropTargetFactory",
          "type_short": "DropTargetFactory",
          "comment": "the factory from which we create drop targets"
        },
        {
          "name": "list",
          "type_long": "java.util.List\u003cdocking.ComponentPlaceholder\u003e",
          "type_short": "List",
          "comment": "child placeholders to be added to this window after being restored"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setInitialLocation",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "x",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "y",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "updateTitle",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getTitle",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDescription",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getChildren",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cdocking.Node\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setIcon",
      "comment": "Set the Icon this window.",
      "javadoc": "Set the Icon this window.\n@param iconImage image icon",
      "static": false,
      "params": [
        {
          "name": "iconImage",
          "type_long": "java.awt.Image",
          "type_short": "Image",
          "comment": "image icon"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setFrameIcon",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "frame",
          "type_long": "java.awt.Frame",
          "type_short": "Frame",
          "comment": ""
        },
        {
          "name": "image",
          "type_long": "java.awt.Image",
          "type_short": "Image",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setFrameIcon",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "frame",
          "type_long": "java.awt.Frame",
          "type_short": "Frame",
          "comment": ""
        },
        {
          "name": "images",
          "type_long": "java.util.List\u003cjava.awt.Image\u003e",
          "type_short": "List",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFrameForWindow",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "coolWindow",
          "type_long": "java.awt.Window",
          "type_short": "Window",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.awt.Frame",
        "type_short": "Frame",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getRootPane",
      "comment": "Returns the root pane if window has been created, otherwise null",
      "javadoc": "Returns the root pane if window has been created, otherwise null\n@return the root pane if window has been created, otherwise null",
      "static": false,
      "params": [],
      "return": {
        "type_long": "javax.swing.JRootPane",
        "type_short": "JRootPane",
        "comment": "the root pane if window has been created, otherwise null"
      },
      "throws": []
    },
    {
      "name": "getWindow",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Window",
        "type_short": "Window",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getContentPane",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Container",
        "type_short": "Container",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "populateActiveComponents",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "list",
          "type_long": "java.util.List\u003cdocking.ComponentPlaceholder\u003e",
          "type_short": "List",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "generateTitle",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "generateTitle",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "includeToolName",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getTitleOfChildren",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "generateTitles",
      "comment": "Creates a list of titles from the given component providers and placeholders.  The utility\n of this method is that it will group like component providers into one title value \n instead of having one value for each placeholder.",
      "javadoc": "Creates a list of titles from the given component providers and placeholders.  The utility\n of this method is that it will group like component providers into one title value \n instead of having one value for each placeholder.",
      "static": false,
      "params": [
        {
          "name": "placeholders",
          "type_long": "java.util.List\u003cdocking.ComponentPlaceholder\u003e",
          "type_short": "List",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.List\u003cjava.lang.String\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createWindow",
      "comment": "Creates a new window to host the components tree.",
      "javadoc": "Creates a new window to host the components tree.",
      "static": false,
      "params": [
        {
          "name": "comp",
          "type_long": "javax.swing.JComponent",
          "type_short": "JComponent",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "adjustBounds",
      "comment": "Ensures the bounds of this window have a valid location and size",
      "javadoc": "Ensures the bounds of this window have a valid location and size",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createFrame",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "javax.swing.JFrame",
        "type_short": "JFrame",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createDialog",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "root",
          "type_long": "docking.RootNode",
          "type_short": "RootNode",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "javax.swing.JDialog",
        "type_short": "JDialog",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setVisible",
      "comment": "Sets the visible state of the dialog.",
      "javadoc": "Sets the visible state of the dialog.\n@param state true to show, false to hide.",
      "static": false,
      "params": [
        {
          "name": "state",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true to show, false to hide."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isVisible",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "updateDialog",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "update",
      "comment": "rebuilds the component tree if needed.",
      "javadoc": "rebuilds the component tree if needed.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "dispose",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "close",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getComponent",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "javax.swing.JComponent",
        "type_short": "JComponent",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeNode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "node",
          "type_long": "docking.Node",
          "type_short": "Node",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "replaceNode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "oldNode",
          "type_long": "docking.Node",
          "type_short": "Node",
          "comment": ""
        },
        {
          "name": "newNode",
          "type_long": "docking.Node",
          "type_short": "Node",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "saveToXML",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "org.jdom.Element",
        "type_short": "Element",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "contains",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "info",
          "type_long": "docking.ComponentPlaceholder",
          "type_short": "ComponentPlaceholder",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setStatusText",
      "comment": "Set the status text",
      "javadoc": "Set the status text\n@param text the text",
      "static": false,
      "params": [
        {
          "name": "text",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the text"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "clearStatusMessages",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setMenuBar",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "menuBar",
          "type_long": "javax.swing.JMenuBar",
          "type_short": "JMenuBar",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "validate",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getTopLevelNode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.WindowNode",
        "type_short": "WindowNode",
        "comment": ""
      },
      "throws": []
    }
  ]
}
