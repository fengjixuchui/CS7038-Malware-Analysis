{
  "name": "WizardState",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [
    "java.lang.Cloneable"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "map",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.Map\u003cT,java.lang.Object\u003e",
      "type_short": "Map",
      "constant_value": null
    },
    {
      "name": "dependentMap",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.Map\u003cT,java.util.Set\u003cT\u003e\u003e",
      "type_short": "Map",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "clone",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.Object",
        "type_short": "Object",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "get",
      "comment": "Gets the value for a property key.",
      "javadoc": "Gets the value for a property key.\n@param key the identifier for the property.  Typically, it would be a string or enum.\n@return the value associated with the given property key or null if the property has no\n value.",
      "static": false,
      "params": [
        {
          "name": "key",
          "type_long": "T",
          "type_short": "T",
          "comment": "the identifier for the property.  Typically, it would be a string or enum."
        }
      ],
      "return": {
        "type_long": "java.lang.Object",
        "type_short": "Object",
        "comment": "the value associated with the given property key or null if the property has no\n value."
      },
      "throws": []
    },
    {
      "name": "put",
      "comment": "Sets the property value for a given property key.  Also clears out the property values for\n any properties that depend on this property.",
      "javadoc": "Sets the property value for a given property key.  Also clears out the property values for\n any properties that depend on this property.\n@param key the propertyKey whose value is to be set or changed with the new value.\n@param value the new value for the property.",
      "static": false,
      "params": [
        {
          "name": "key",
          "type_long": "T",
          "type_short": "T",
          "comment": "the propertyKey whose value is to be set or changed with the new value."
        },
        {
          "name": "value",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": "the new value for the property."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "clear",
      "comment": "Removes the property key,value pair from this wizard state.",
      "javadoc": "Removes the property key,value pair from this wizard state.\n@param key the property key of the property to be cleared.",
      "static": false,
      "params": [
        {
          "name": "key",
          "type_long": "T",
          "type_short": "T",
          "comment": "the property key of the property to be cleared."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addDependency",
      "comment": "Defines a dependency from one property to another.  A property dependency has the effect of\n clear the dependent\u0027s property value whenever the predecessor property is changed or cleared.",
      "javadoc": "Defines a dependency from one property to another.  A property dependency has the effect of\n clear the dependent\u0027s property value whenever the predecessor property is changed or cleared.\n@param dependent the property whose value is to be cleared when the predecessor property is\n changed or cleared.\n@param predecessor the property that, when changed or cleared, will cause the dependent property\n to be cleared.",
      "static": false,
      "params": [
        {
          "name": "dependent",
          "type_long": "T",
          "type_short": "T",
          "comment": "the property whose value is to be cleared when the predecessor property is\n changed or cleared."
        },
        {
          "name": "predecessor",
          "type_long": "T",
          "type_short": "T",
          "comment": "the property that, when changed or cleared, will cause the dependent property\n to be cleared."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "clearDependents",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "key",
          "type_long": "T",
          "type_short": "T",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
