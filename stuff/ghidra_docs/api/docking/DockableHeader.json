{
  "name": "DockableHeader",
  "comment": "Component for providing component titles and toolbar. Also provides Drag\n source functionality.",
  "javadoc": "Component for providing component titles and toolbar. Also provides Drag\n source functionality.",
  "static": false,
  "implements": [
    "java.awt.dnd.DragGestureListener",
    "java.awt.dnd.DragSourceListener"
  ],
  "extends": "docking.GenericHeader",
  "fields": [
    {
      "name": "dockComp",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.DockableComponent",
      "type_short": "DockableComponent",
      "constant_value": null
    },
    {
      "name": "dragCursorManager",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.DockableHeader.DragCursorManager",
      "type_short": "DragCursorManager",
      "constant_value": null
    },
    {
      "name": "dragSource",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.awt.dnd.DragSource",
      "type_short": "DragSource",
      "constant_value": null
    },
    {
      "name": "isDocking",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "focusAnimator",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "org.jdesktop.animation.timing.Animator",
      "type_short": "Animator",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new DockableHeader for the given dockableComponent.",
      "javadoc": "Constructs a new DockableHeader for the given dockableComponent.\n@param dockableComp the dockableComponent that this header is for.\n@param isDocking true means this widget can be dragged and docked by the user",
      "static": false,
      "params": [
        {
          "name": "dockableComp",
          "type_long": "docking.DockableComponent",
          "type_short": "DockableComponent",
          "comment": "the dockableComponent that this header is for."
        },
        {
          "name": "isDocking",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true means this widget can be dragged and docked by the user"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "requestFocus",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setSelected",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "hasFocus",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "installRenameAction",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "java.awt.event.MouseListener",
          "type_short": "MouseListener",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setHelp",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "location",
          "type_long": "ghidra.util.HelpLocation",
          "type_short": "HelpLocation",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "emphasize",
      "comment": "Signals to use the GUI to make this header (and its provider) stand out from the rest.",
      "javadoc": "Signals to use the GUI to make this header (and its provider) stand out from the rest.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createEmphasizingAnimator",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "parentFrame",
          "type_long": "javax.swing.JFrame",
          "type_short": "JFrame",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "org.jdesktop.animation.timing.Animator",
        "type_short": "Animator",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "emphasizeDockableComponent",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "org.jdesktop.animation.timing.Animator",
        "type_short": "Animator",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getComponents",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "node",
          "type_long": "docking.Node",
          "type_short": "Node",
          "comment": ""
        },
        {
          "name": "results",
          "type_long": "java.util.Set\u003cdocking.ComponentNode\u003e",
          "type_short": "Set",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "raiseComponent",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "parent",
          "type_long": "javax.swing.JFrame",
          "type_short": "JFrame",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "org.jdesktop.animation.timing.Animator",
        "type_short": "Animator",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isOnlyComponentInParent",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "parentFrame",
          "type_long": "javax.swing.JFrame",
          "type_short": "JFrame",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isInSplitPanel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "validateFocusability",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "dragGestureRecognized",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "event",
          "type_long": "java.awt.dnd.DragGestureEvent",
          "type_short": "DragGestureEvent",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "dragDropEnd",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "event",
          "type_long": "java.awt.dnd.DragSourceDropEvent",
          "type_short": "DragSourceDropEvent",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "dragEnter",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "event",
          "type_long": "java.awt.dnd.DragSourceDragEvent",
          "type_short": "DragSourceDragEvent",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "dragExit",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "event",
          "type_long": "java.awt.dnd.DragSourceEvent",
          "type_short": "DragSourceEvent",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "dragOver",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "event",
          "type_long": "java.awt.dnd.DragSourceDragEvent",
          "type_short": "DragSourceDragEvent",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setCursor",
      "comment": "Sets the drag/drop cursor based on the current drop code.",
      "javadoc": "Sets the drag/drop cursor based on the current drop code.\n@param event the event containing the drag source context on which to set the cursor.",
      "static": false,
      "params": [
        {
          "name": "event",
          "type_long": "java.awt.dnd.DragSourceEvent",
          "type_short": "DragSourceEvent",
          "comment": "the event containing the drag source context on which to set the cursor."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "dropActionChanged",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "event",
          "type_long": "java.awt.dnd.DragSourceDragEvent",
          "type_short": "DragSourceDragEvent",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createDragCursorManager",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.DockableHeader.DragCursorManager",
        "type_short": "DragCursorManager",
        "comment": ""
      },
      "throws": []
    }
  ]
}
