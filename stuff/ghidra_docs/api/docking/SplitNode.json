{
  "name": "SplitNode",
  "comment": "Node for managing a JSplitPane view of two component trees.",
  "javadoc": "Node for managing a JSplitPane view of two component trees.",
  "static": false,
  "implements": [],
  "extends": "docking.Node",
  "fields": [
    {
      "name": "child1",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.Node",
      "type_short": "Node",
      "constant_value": null
    },
    {
      "name": "child2",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.Node",
      "type_short": "Node",
      "constant_value": null
    },
    {
      "name": "comp",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.JComponent",
      "type_short": "JComponent",
      "constant_value": null
    },
    {
      "name": "splitPane",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.SplitPanel",
      "type_short": "SplitPanel",
      "constant_value": null
    },
    {
      "name": "isHorizontal",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "dividerPosition",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "float",
      "type_short": "float",
      "constant_value": null
    },
    {
      "name": "splitPaneSize",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.awt.Dimension",
      "type_short": "Dimension",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new SplitNode object",
      "javadoc": "Constructs a new SplitNode object\n@param winMgr the DockingWindowsManager that this node belongs to.\n@param child1 the node managing the first component tree.\n@param child2 the node managing the second component tree.\n@param isHorizontal true for horizontal layout",
      "static": false,
      "params": [
        {
          "name": "winMgr",
          "type_long": "docking.DockingWindowManager",
          "type_short": "DockingWindowManager",
          "comment": "the DockingWindowsManager that this node belongs to."
        },
        {
          "name": "child1",
          "type_long": "docking.Node",
          "type_short": "Node",
          "comment": "the node managing the first component tree."
        },
        {
          "name": "child2",
          "type_long": "docking.Node",
          "type_short": "Node",
          "comment": "the node managing the second component tree."
        },
        {
          "name": "isHorizontal",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true for horizontal layout"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new SplitNode from the XML JDOM element",
      "javadoc": "Constructs a new SplitNode from the XML JDOM element\n@param elem the XML JDOM element containing the configuration information.\n@param mgr the DockingWindowsManager for this node.\n@param parent the parent node for this node.\n@param restoredPlaceholders the list into which any restored placeholders will be placed",
      "static": false,
      "params": [
        {
          "name": "elem",
          "type_long": "org.jdom.Element",
          "type_short": "Element",
          "comment": "the XML JDOM element containing the configuration information."
        },
        {
          "name": "mgr",
          "type_long": "docking.DockingWindowManager",
          "type_short": "DockingWindowManager",
          "comment": "the DockingWindowsManager for this node."
        },
        {
          "name": "parent",
          "type_long": "docking.Node",
          "type_short": "Node",
          "comment": "the parent node for this node."
        },
        {
          "name": "restoredPlaceholders",
          "type_long": "java.util.List\u003cdocking.ComponentPlaceholder\u003e",
          "type_short": "List",
          "comment": "the list into which any restored placeholders will be placed"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "close",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getComponent",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "javax.swing.JComponent",
        "type_short": "JComponent",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeNode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "node",
          "type_long": "docking.Node",
          "type_short": "Node",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "replaceNode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "oldNode",
          "type_long": "docking.Node",
          "type_short": "Node",
          "comment": ""
        },
        {
          "name": "newNode",
          "type_long": "docking.Node",
          "type_short": "Node",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "saveToXML",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "org.jdom.Element",
        "type_short": "Element",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "contains",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "info",
          "type_long": "docking.ComponentPlaceholder",
          "type_short": "ComponentPlaceholder",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "populateActiveComponents",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "list",
          "type_long": "java.util.List\u003cdocking.ComponentPlaceholder\u003e",
          "type_short": "List",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getTopLevelNode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.WindowNode",
        "type_short": "WindowNode",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getChildren",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cdocking.Node\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDescription",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "dispose",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
