{
  "name": "ComponentNode",
  "comment": "Node object for managing one or more components. If more that one managed component\n is active, then this node will create a tabbedPane object to contain the active components.",
  "javadoc": "Node object for managing one or more components. If more that one managed component\n is active, then this node will create a tabbedPane object to contain the active components.",
  "static": false,
  "implements": [],
  "extends": "docking.Node",
  "fields": [
    {
      "name": "top",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.ComponentPlaceholder",
      "type_short": "ComponentPlaceholder",
      "constant_value": null
    },
    {
      "name": "windowPlaceholders",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cdocking.ComponentPlaceholder\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "comp",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.JComponent",
      "type_short": "JComponent",
      "constant_value": null
    },
    {
      "name": "isDisposed",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "tabbedPaneChangeListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.event.ChangeListener",
      "type_short": "ChangeListener",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new component node with the given docking windows manager.",
      "javadoc": "Constructs a new component node with the given docking windows manager.\n@param mgr the docking windows manager that this node belongs to.",
      "static": false,
      "params": [
        {
          "name": "mgr",
          "type_long": "docking.DockingWindowManager",
          "type_short": "DockingWindowManager",
          "comment": "the docking windows manager that this node belongs to."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new component node from the given xml element.",
      "javadoc": "Constructs a new component node from the given xml element.\n@param elem the xml element describing the configuration of this node.\n@param mgr the docking windows manager\n@param parent the parent node for this node.\n@param restoredPlaceholders the list into which any restored placeholders will be placed",
      "static": false,
      "params": [
        {
          "name": "elem",
          "type_long": "org.jdom.Element",
          "type_short": "Element",
          "comment": "the xml element describing the configuration of this node."
        },
        {
          "name": "mgr",
          "type_long": "docking.DockingWindowManager",
          "type_short": "DockingWindowManager",
          "comment": "the docking windows manager"
        },
        {
          "name": "parent",
          "type_long": "docking.Node",
          "type_short": "Node",
          "comment": "the parent node for this node."
        },
        {
          "name": "restoredPlaceholders",
          "type_long": "java.util.List\u003cdocking.ComponentPlaceholder\u003e",
          "type_short": "List",
          "comment": "the list into which any restored placeholders will be placed"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "containsPlaceholder",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "placeholder",
          "type_long": "docking.ComponentPlaceholder",
          "type_short": "ComponentPlaceholder",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getUniqueID",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "e",
          "type_long": "org.jdom.Element",
          "type_short": "Element",
          "comment": ""
        },
        {
          "name": "defaultValue",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getChildren",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cdocking.Node\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDescription",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "add",
      "comment": "Adds a component to this node.",
      "javadoc": "Adds a component to this node.\n@param placeholder the component placeholder containing the component to be added.",
      "static": false,
      "params": [
        {
          "name": "placeholder",
          "type_long": "docking.ComponentPlaceholder",
          "type_short": "ComponentPlaceholder",
          "comment": "the component placeholder containing the component to be added."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "remove",
      "comment": "Removes the component from this node, but not from the manager. Used when\n the component is moved.  If component is active, it will remain active.",
      "javadoc": "Removes the component from this node, but not from the manager. Used when\n the component is moved.  If component is active, it will remain active.\n@param placeholder the object containing the component to be removed.",
      "static": false,
      "params": [
        {
          "name": "placeholder",
          "type_long": "docking.ComponentPlaceholder",
          "type_short": "ComponentPlaceholder",
          "comment": "the object containing the component to be removed."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "doRemove",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "placeholder",
          "type_long": "docking.ComponentPlaceholder",
          "type_short": "ComponentPlaceholder",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "remove",
      "comment": "Removes the component from this node (and the manager), but possibly keeps an empty object as\n a placeholder.",
      "javadoc": "Removes the component from this node (and the manager), but possibly keeps an empty object as\n a placeholder.\n@param placeholder the placeholder object to be removed.\n@param keepEmptyPlaceholder flag indicating to keep a placeholder placeholder object.",
      "static": false,
      "params": [
        {
          "name": "placeholder",
          "type_long": "docking.ComponentPlaceholder",
          "type_short": "ComponentPlaceholder",
          "comment": "the placeholder object to be removed."
        },
        {
          "name": "keepEmptyPlaceholder",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "flag indicating to keep a placeholder placeholder object."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getComponentCount",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "close",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getComponent",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "javax.swing.JComponent",
        "type_short": "JComponent",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createTabRenderer",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "pane",
          "type_long": "javax.swing.JTabbedPane",
          "type_short": "JTabbedPane",
          "comment": ""
        },
        {
          "name": "placeholder",
          "type_long": "docking.ComponentPlaceholder",
          "type_short": "ComponentPlaceholder",
          "comment": ""
        },
        {
          "name": "title",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "tabText",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "component",
          "type_long": "docking.DockableComponent",
          "type_short": "DockableComponent",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.widgets.tabbedpane.DockingTabRenderer",
        "type_short": "DockingTabRenderer",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "installRenameMenu",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "placeholder",
          "type_long": "docking.ComponentPlaceholder",
          "type_short": "ComponentPlaceholder",
          "comment": ""
        },
        {
          "name": "tabRenderer",
          "type_long": "docking.widgets.tabbedpane.DockingTabRenderer",
          "type_short": "DockingTabRenderer",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "populateActiveComponents",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "list",
          "type_long": "java.util.List\u003cdocking.ComponentPlaceholder\u003e",
          "type_short": "List",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeNode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "node",
          "type_long": "docking.Node",
          "type_short": "Node",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "replaceNode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "oldNode",
          "type_long": "docking.Node",
          "type_short": "Node",
          "comment": ""
        },
        {
          "name": "newNode",
          "type_long": "docking.Node",
          "type_short": "Node",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "split",
      "comment": "Replaces this node in its parent with a new split node that contains this node as one\n child and a new componentNode containing the source placeholders as the other child.",
      "javadoc": "Replaces this node in its parent with a new split node that contains this node as one\n child and a new componentNode containing the source placeholders as the other child.\n@param source the placeholder to share the current space with.\n@param dropCode int value specifying the split order and orientation.",
      "static": false,
      "params": [
        {
          "name": "source",
          "type_long": "docking.ComponentPlaceholder",
          "type_short": "ComponentPlaceholder",
          "comment": "the placeholder to share the current space with."
        },
        {
          "name": "dropCode",
          "type_long": "docking.WindowPosition",
          "type_short": "WindowPosition",
          "comment": "int value specifying the split order and orientation."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isStacked",
      "comment": "Returns true if there are currently more than one active component in this node.",
      "javadoc": "Returns true if there are currently more than one active component in this node.\n@return true if there are currently more than one active component in this node.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if there are currently more than one active component in this node."
      },
      "throws": []
    },
    {
      "name": "makeSelectedTab",
      "comment": "Makes the component the selected tab.",
      "javadoc": "Makes the component the selected tab.\n@param placeholder the component placeholder object of the component to be shown in the active tab.",
      "static": false,
      "params": [
        {
          "name": "placeholder",
          "type_long": "docking.ComponentPlaceholder",
          "type_short": "ComponentPlaceholder",
          "comment": "the component placeholder object of the component to be shown in the active tab."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "saveToXML",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "org.jdom.Element",
        "type_short": "Element",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "contains",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "placeholder",
          "type_long": "docking.ComponentPlaceholder",
          "type_short": "ComponentPlaceholder",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "titleChanged",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "placeholder",
          "type_long": "docking.ComponentPlaceholder",
          "type_short": "ComponentPlaceholder",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "iconChanged",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "placeholder",
          "type_long": "docking.ComponentPlaceholder",
          "type_short": "ComponentPlaceholder",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "closeTab",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "tabComponent",
          "type_long": "java.awt.Component",
          "type_short": "Component",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPlaceHolderForComponent",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "component",
          "type_long": "java.awt.Component",
          "type_short": "Component",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.ComponentPlaceholder",
        "type_short": "ComponentPlaceholder",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getTopLevelNode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.WindowNode",
        "type_short": "WindowNode",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "dispose",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
