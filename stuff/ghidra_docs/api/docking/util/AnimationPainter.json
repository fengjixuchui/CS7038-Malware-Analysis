{
  "name": "AnimationPainter",
  "comment": "An interface used with AnimationUtils to allow clients to use the timing \n framework while performing their own painting.",
  "javadoc": "An interface used with {@link AnimationUtils} to allow clients to use the timing \n framework while performing their own painting.",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "paint",
      "comment": "Called back each time the animation system generates a timing event.",
      "javadoc": "Called back each time the animation system generates a timing event.\n@param glassPane the glass pane upon which painting takes place\n@param graphics the graphics used to paint\n@param percentComplete a value from 0 to 1, 1 being fully complete.",
      "static": false,
      "params": [
        {
          "name": "glassPane",
          "type_long": "ghidra.util.bean.GGlassPane",
          "type_short": "GGlassPane",
          "comment": "the glass pane upon which painting takes place"
        },
        {
          "name": "graphics",
          "type_long": "java.awt.Graphics",
          "type_short": "Graphics",
          "comment": "the graphics used to paint"
        },
        {
          "name": "percentComplete",
          "type_long": "double",
          "type_short": "double",
          "comment": "a value from 0 to 1, 1 being fully complete."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
