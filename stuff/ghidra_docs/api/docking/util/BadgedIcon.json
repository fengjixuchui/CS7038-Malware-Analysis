{
  "name": "BadgedIcon",
  "comment": "An icon that allows sub-icons to be added at key perimeter locations. Each position can \n be manipulated independently, adding and removing icons as desired. Additionally, \n each position can be toggled enabled or disabled, or visible or invisible.",
  "javadoc": "An icon that allows sub-icons to be added at key perimeter locations. Each position can \n be manipulated independently, adding and removing icons as desired. Additionally, \n each position can be toggled enabled or disabled, or visible or invisible.",
  "static": false,
  "implements": [
    "javax.swing.Icon"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "badgeMap",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.Map\u003cdocking.util.BadgedIcon.BadgePosition,resources.MultiIcon\u003e",
      "type_short": "Map",
      "constant_value": null
    },
    {
      "name": "badgeEnablement",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.Map\u003cdocking.util.BadgedIcon.BadgePosition,java.lang.Boolean\u003e",
      "type_short": "Map",
      "constant_value": null
    },
    {
      "name": "badgeVisibility",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.Map\u003cdocking.util.BadgedIcon.BadgePosition,java.lang.Boolean\u003e",
      "type_short": "Map",
      "constant_value": null
    },
    {
      "name": "BADGE_HSCALE_FACTOR",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "double",
      "type_short": "double",
      "constant_value": null
    },
    {
      "name": "BADGE_VSCALE_FACTOR",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "double",
      "type_short": "double",
      "constant_value": null
    },
    {
      "name": "cachedThis",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.Icon",
      "type_short": "Icon",
      "constant_value": null
    },
    {
      "name": "base",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.Icon",
      "type_short": "Icon",
      "constant_value": null
    },
    {
      "name": "height",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "width",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "enabled",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "baseIcon",
          "type_long": "javax.swing.Icon",
          "type_short": "Icon",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "baseIcon",
          "type_long": "javax.swing.Icon",
          "type_short": "Icon",
          "comment": ""
        },
        {
          "name": "enabled",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "baseIcon",
          "type_long": "javax.swing.Icon",
          "type_short": "Icon",
          "comment": ""
        },
        {
          "name": "enabled",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        },
        {
          "name": "width",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "height",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getEmptyIcon",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "width",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "height",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "enabled",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "resources.MultiIcon",
        "type_short": "MultiIcon",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "initDefaultBadges",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addBadge",
      "comment": "Add an icon at the specified location",
      "javadoc": "Add an icon at the specified location\n@param badge The icon\n@param position Where to place the image\n@return a reference to this object",
      "static": false,
      "params": [
        {
          "name": "badge",
          "type_long": "javax.swing.Icon",
          "type_short": "Icon",
          "comment": "The icon"
        },
        {
          "name": "position",
          "type_long": "docking.util.BadgedIcon.BadgePosition",
          "type_short": "BadgePosition",
          "comment": "Where to place the image"
        }
      ],
      "return": {
        "type_long": "docking.util.BadgedIcon",
        "type_short": "BadgedIcon",
        "comment": "a reference to this object"
      },
      "throws": []
    },
    {
      "name": "addScaledBadge",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "icon",
          "type_long": "javax.swing.Icon",
          "type_short": "Icon",
          "comment": ""
        },
        {
          "name": "newWidth",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "newHeight",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "position",
          "type_long": "docking.util.BadgedIcon.BadgePosition",
          "type_short": "BadgePosition",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.util.BadgedIcon",
        "type_short": "BadgedIcon",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setBadge",
      "comment": "Replace the existing icon with the provided icon at the specified location",
      "javadoc": "Replace the existing icon with the provided icon at the specified location\n@param badge The icon\n@param position Where to place the image\n@return a reference to this object",
      "static": false,
      "params": [
        {
          "name": "badge",
          "type_long": "javax.swing.Icon",
          "type_short": "Icon",
          "comment": "The icon"
        },
        {
          "name": "position",
          "type_long": "docking.util.BadgedIcon.BadgePosition",
          "type_short": "BadgePosition",
          "comment": "Where to place the image"
        }
      ],
      "return": {
        "type_long": "docking.util.BadgedIcon",
        "type_short": "BadgedIcon",
        "comment": "a reference to this object"
      },
      "throws": []
    },
    {
      "name": "removeBadge",
      "comment": "Remove the badge from the specified location",
      "javadoc": "Remove the badge from the specified location\n@param position Where to place the image\n@return a reference to this object",
      "static": false,
      "params": [
        {
          "name": "position",
          "type_long": "docking.util.BadgedIcon.BadgePosition",
          "type_short": "BadgePosition",
          "comment": "Where to place the image"
        }
      ],
      "return": {
        "type_long": "docking.util.BadgedIcon",
        "type_short": "BadgedIcon",
        "comment": "a reference to this object"
      },
      "throws": []
    },
    {
      "name": "setBadgeEnabled",
      "comment": "Set the enablement of the badge at the specified location",
      "javadoc": "Set the enablement of the badge at the specified location\n@param position Which icon to modify\n@param enabled True if the image should be shown \u0027enabled\u0027, false otherwise\n@see BadgedIcon#isBadgeEnabled(BadgePosition)",
      "static": false,
      "params": [
        {
          "name": "position",
          "type_long": "docking.util.BadgedIcon.BadgePosition",
          "type_short": "BadgePosition",
          "comment": "Which icon to modify"
        },
        {
          "name": "enabled",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "True if the image should be shown \u0027enabled\u0027, false otherwise"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isBadgeEnabled",
      "comment": "Get the enablement status of the badge at the specified location",
      "javadoc": "Get the enablement status of the badge at the specified location\n@param position Which icon to enquire about\n@return True if the badge is enabled, false otherwise\n@see BadgedIcon#setBadgeEnabled(BadgePosition, boolean)",
      "static": false,
      "params": [
        {
          "name": "position",
          "type_long": "docking.util.BadgedIcon.BadgePosition",
          "type_short": "BadgePosition",
          "comment": "Which icon to enquire about"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "True if the badge is enabled, false otherwise"
      },
      "throws": []
    },
    {
      "name": "setBadgeVisisble",
      "comment": "Set the visibility status of the badge at the specified location",
      "javadoc": "Set the visibility status of the badge at the specified location\n@param position Which icon to modify\n@param visible True if the badge should be visible, false otherwise\n@see #isBadgeVisible(BadgePosition)",
      "static": false,
      "params": [
        {
          "name": "position",
          "type_long": "docking.util.BadgedIcon.BadgePosition",
          "type_short": "BadgePosition",
          "comment": "Which icon to modify"
        },
        {
          "name": "visible",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "True if the badge should be visible, false otherwise"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isBadgeVisible",
      "comment": "Get the visibility status of the badge at the specified location",
      "javadoc": "Get the visibility status of the badge at the specified location\n@param position Which icon to enquire about\n@return True if the badge is visible, false otherwise\n@see #setBadgeVisisble(BadgePosition, boolean)",
      "static": false,
      "params": [
        {
          "name": "position",
          "type_long": "docking.util.BadgedIcon.BadgePosition",
          "type_short": "BadgePosition",
          "comment": "Which icon to enquire about"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "True if the badge is visible, false otherwise"
      },
      "throws": []
    },
    {
      "name": "getIconHeight",
      "comment": "",
      "javadoc": "@see javax.swing.Icon#getIconHeight()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getIconWidth",
      "comment": "",
      "javadoc": "@see javax.swing.Icon#getIconWidth()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isEnabled",
      "comment": "Determine the overall enablement appearance state.",
      "javadoc": "Determine the overall enablement appearance state.\n@return true if the if the entire icon is rendered as \u0027enabled\u0027; false otherwise.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the if the entire icon is rendered as \u0027enabled\u0027; false otherwise."
      },
      "throws": []
    },
    {
      "name": "setEnabled",
      "comment": "Set the \u0027enabled\u0027 appearance of the entire icon.\n Preserves the underlying enablement state of badges, though the entire icon\n looks disabled if setEnabled(true) is called.",
      "javadoc": "Set the \u0027enabled\u0027 appearance of the entire icon.\n Preserves the underlying enablement state of badges, though the entire icon\n looks disabled if \u003ccode\u003esetEnabled(true)\u003c/code\u003e is called.\n@param enabled",
      "static": false,
      "params": [
        {
          "name": "enabled",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getBadges",
      "comment": "Return array of Icons that were added to this BadgedIcon.",
      "javadoc": "Return array of Icons that were added to this BadgedIcon.",
      "static": false,
      "params": [
        {
          "name": "pos",
          "type_long": "docking.util.BadgedIcon.BadgePosition",
          "type_short": "BadgePosition",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "javax.swing.Icon[]",
        "type_short": "javax.swing.Icon[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getBadgeDimension",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Dimension",
        "type_short": "Dimension",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "paintIcon",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "c",
          "type_long": "java.awt.Component",
          "type_short": "Component",
          "comment": ""
        },
        {
          "name": "g",
          "type_long": "java.awt.Graphics",
          "type_short": "Graphics",
          "comment": ""
        },
        {
          "name": "x",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "y",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "doPaintIcon",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "c",
          "type_long": "java.awt.Component",
          "type_short": "Component",
          "comment": ""
        },
        {
          "name": "g",
          "type_long": "java.awt.Graphics",
          "type_short": "Graphics",
          "comment": ""
        },
        {
          "name": "x",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "y",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "badgeSize",
          "type_long": "java.awt.Dimension",
          "type_short": "Dimension",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getBadgePaintLocation",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "pos",
          "type_long": "docking.util.BadgedIcon.BadgePosition",
          "type_short": "BadgePosition",
          "comment": ""
        },
        {
          "name": "badgeSize",
          "type_long": "java.awt.Dimension",
          "type_short": "Dimension",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.awt.Point",
        "type_short": "Point",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getIconNames",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    }
  ]
}
