{
  "name": "SwingAnimationCallback",
  "comment": "A simple interface that allows implementing clients to get called back from the animation\n framework.  The callbacks can be used to perform swing work.",
  "javadoc": "A simple interface that allows implementing clients to get called back from the animation\n framework.  The callbacks can be used to perform swing work.",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "progress",
      "comment": "Called over the course of an animation cycle.",
      "javadoc": "Called over the course of an animation cycle.\n@param percentComplete a value (from 0 to 1.0) that indicates the percentage of the \n                        animation cycle that has completed.",
      "static": false,
      "params": [
        {
          "name": "percentComplete",
          "type_long": "double",
          "type_short": "double",
          "comment": "a value (from 0 to 1.0) that indicates the percentage of the \n                        animation cycle that has completed."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "done",
      "comment": "Called when the entire animation cycle is done.  This allows clients to perform any\n finalization work.",
      "javadoc": "Called when the entire animation cycle is done.  This allows clients to perform any\n finalization work.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDuration",
      "comment": "Returns the duration of this callback.  The default is 1000 ms.  Subclasses\n can override this as needed.",
      "javadoc": "Returns the duration of this callback.  The default is \u003ccode\u003e1000 ms\u003c/code\u003e.  Subclasses\n can override this as needed.\n@return the duration",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the duration"
      },
      "throws": []
    }
  ]
}
