{
  "name": "HelpService",
  "comment": "HelpService defines a service for displaying Help content by\n an ID or URL.",
  "javadoc": "\u003ccode\u003eHelpService\u003c/code\u003e defines a service for displaying Help content by\n an ID or URL.",
  "static": false,
  "implements": [],
  "fields": [
    {
      "name": "DUMMY_HELP_SET_NAME",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Dummy_HelpSet.hs\""
    }
  ],
  "methods": [
    {
      "name": "showHelp",
      "comment": "Display the Help content identified by the help object.",
      "javadoc": "Display the Help content identified by the help object.\n@param helpObject the object to which help was previously registered\n@param infoOnly display {@link HelpLocation} information only, not the help UI\n@param parent requesting component\n@see #registerHelp(Object, HelpLocation)",
      "static": false,
      "params": [
        {
          "name": "helpObject",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": "the object to which help was previously registered"
        },
        {
          "name": "infoOnly",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "display HelpLocation information only, not the help UI"
        },
        {
          "name": "parent",
          "type_long": "java.awt.Component",
          "type_short": "Component",
          "comment": "requesting component"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "showHelp",
      "comment": "Display the help page for the given URL.  This is a specialty method for displaying\n help when a specific file is desired, like an introduction page.  Showing help for \n objects within the system is accomplished by calling \n #showHelp(Object, boolean, Component).",
      "javadoc": "Display the help page for the given URL.  This is a specialty method for displaying\n help when a specific file is desired, like an introduction page.  Showing help for \n objects within the system is accomplished by calling \n {@link #showHelp(Object, boolean, Component)}.\n@param url the URL to display\n@see #showHelp(Object, boolean, Component)",
      "static": false,
      "params": [
        {
          "name": "url",
          "type_long": "java.net.URL",
          "type_short": "URL",
          "comment": "the URL to display"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "excludeFromHelp",
      "comment": "Signals to the help system to ignore the given object when searching for and validating \n help.  Once this method has been called, no help can be registered for the given object.",
      "javadoc": "Signals to the help system to ignore the given object when searching for and validating \n help.  Once this method has been called, no help can be registered for the given object.\n@param helpObject the object to exclude from the help system.",
      "static": false,
      "params": [
        {
          "name": "helpObject",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": "the object to exclude from the help system."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isExcludedFromHelp",
      "comment": "Returns true if the given object is meant to be ignored by the help system",
      "javadoc": "Returns true if the given object is meant to be ignored by the help system\n@param helpObject the object to check\n@return true if ignored\n@see #excludeFromHelp(Object)",
      "static": false,
      "params": [
        {
          "name": "helpObject",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": "the object to check"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if ignored"
      },
      "throws": []
    },
    {
      "name": "registerHelp",
      "comment": "Register help for a specific object.  \n \n Do not call this method will a null help location.  Instead, to signal that\n an item has no help, call #excludeFromHelp(Object).",
      "javadoc": "Register help for a specific object.  \n \n \u003cP\u003eDo not call this method will a \u003ccode\u003enull\u003c/code\u003e help location.  Instead, to signal that\n an item has no help, call {@link #excludeFromHelp(Object)}.\n@param helpObject the object to associate the specified help location with\n@param helpLocation help content location",
      "static": false,
      "params": [
        {
          "name": "helpObject",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": "the object to associate the specified help location with"
        },
        {
          "name": "helpLocation",
          "type_long": "ghidra.util.HelpLocation",
          "type_short": "HelpLocation",
          "comment": "help content location"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "clearHelp",
      "comment": "Removes this object from the help system.  This method is useful, for example, \n when a single Java Component will have different help locations \n assigned over its lifecycle.",
      "javadoc": "Removes this object from the help system.  This method is useful, for example, \n when a single Java {@link Component} will have different help locations \n assigned over its lifecycle.\n@param helpObject the object for which to clear help",
      "static": false,
      "params": [
        {
          "name": "helpObject",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": "the object for which to clear help"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getHelpLocation",
      "comment": "Returns the registered (via #registerHelp(Object, HelpLocation) help \n location for the given object; null if there is no registered\n help.",
      "javadoc": "Returns the registered (via {@link #registerHelp(Object, HelpLocation)} help \n location for the given object; null if there is no registered\n help.\n@param object The object for which to find a registered HelpLocation.\n@return the registered HelpLocation\n@see #registerHelp(Object, HelpLocation)",
      "static": false,
      "params": [
        {
          "name": "object",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": "The object for which to find a registered HelpLocation."
        }
      ],
      "return": {
        "type_long": "ghidra.util.HelpLocation",
        "type_short": "HelpLocation",
        "comment": "the registered HelpLocation"
      },
      "throws": []
    },
    {
      "name": "helpExists",
      "comment": "Returns true if the help system has been initialized properly; false if help does not\n exist or is not working.",
      "javadoc": "Returns true if the help system has been initialized properly; false if help does not\n exist or is not working.\n@return true if the help system has found the applications help content and has finished\n         initializing",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the help system has found the applications help content and has finished\n         initializing"
      },
      "throws": []
    }
  ]
}
