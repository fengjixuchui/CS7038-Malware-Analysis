{
  "name": "GHelpClassLoader",
  "comment": "A ClassLoader for loading help data.  This is only need when running in Eclipse.  We\n do not include help data in the source tree for any module, in order to save build time.  By\n doing this, we need a way to allow the Java Help system to find this data.  We have\n Overridden #findResource(String) to look in our module directories for their\n respective help.\n \n This class is not needed in an installation since the help is bundled into jar files that\n live in the classpath and thus the default class loader will find them.",
  "javadoc": "A {@link ClassLoader} for loading help data.  This is only need when running in Eclipse.  We\n do not include help data in the source tree for any module, in order to save build time.  By\n doing this, we need a way to allow the Java Help system to find this data.  We have\n Overridden {@link #findResource(String)} to look in our module directories for their\n respective help.\n \u003cp\u003e\n This class is not needed in an installation since the help is bundled into jar files that\n live in the classpath and thus the default class loader will find them.",
  "static": false,
  "implements": [],
  "extends": "java.lang.ClassLoader",
  "fields": [
    {
      "name": "moduleDirectory",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "generic.jar.ResourceFile",
      "type_short": "ResourceFile",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs this class loader with the given module, which may be null.  When the module\n is null, this class will only looks for items on the classpath, under a \u0027help\u0027 directory.",
      "javadoc": "Constructs this class loader with the given module, which may be null.  When the module\n is null, this class will only looks for items on the classpath, under a \u0027help\u0027 directory.\n@param moduleDirectory the module directory to search; may be null",
      "static": false,
      "params": [
        {
          "name": "moduleDirectory",
          "type_long": "generic.jar.ResourceFile",
          "type_short": "ResourceFile",
          "comment": "the module directory to search; may be null"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "findResource",
      "comment": "Overridden to allow us to search our modules in addition to the normal class search\n mechanism.",
      "javadoc": "Overridden to allow us to search our modules in addition to the normal class search\n mechanism.\n@param name the name of the help item to load\n@return the URL for the given item; null if the item cannot be found",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of the help item to load"
        }
      ],
      "return": {
        "type_long": "java.net.URL",
        "type_short": "URL",
        "comment": "the URL for the given item; null if the item cannot be found"
      },
      "throws": []
    },
    {
      "name": "findInJarFile",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.net.URL",
        "type_short": "URL",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "findInModuleDirectory",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.net.URL",
        "type_short": "URL",
        "comment": ""
      },
      "throws": []
    }
  ]
}
