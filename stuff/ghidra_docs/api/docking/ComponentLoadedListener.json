{
  "name": "ComponentLoadedListener",
  "comment": "A listener interface to know when a component has been \n made Component#isDisplayable()",
  "javadoc": "A listener interface to know when a component has been \n made {@link Component#isDisplayable() displayable}",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "componentLoaded",
      "comment": "Called when the component is made displayable",
      "javadoc": "Called when the component is made displayable\n@param windowManager the window manager associated with the loaded component; null if the\n        component for this listener is not parented by a docking window manager\n@param provider the provider that is the parent of the given component; null if the\n        component for this listener is not the child of a component provider",
      "static": false,
      "params": [
        {
          "name": "windowManager",
          "type_long": "docking.DockingWindowManager",
          "type_short": "DockingWindowManager",
          "comment": "the window manager associated with the loaded component; null if the\n        component for this listener is not parented by a docking window manager"
        },
        {
          "name": "provider",
          "type_long": "docking.ComponentProvider",
          "type_short": "ComponentProvider",
          "comment": "the provider that is the parent of the given component; null if the\n        component for this listener is not the child of a component provider"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
