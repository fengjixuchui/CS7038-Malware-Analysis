{
  "name": "ToolActions",
  "comment": "An class to manage actions registered with the tool",
  "javadoc": "An class to manage actions registered with the tool",
  "static": false,
  "implements": [
    "docking.actions.DockingToolActions",
    "java.beans.PropertyChangeListener"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "ACTION_NAME_PATTERN",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.regex.Pattern",
      "type_short": "Pattern",
      "constant_value": null
    },
    {
      "name": "actionGuiHelper",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.ActionToGuiHelper",
      "type_short": "ActionToGuiHelper",
      "constant_value": null
    },
    {
      "name": "actionsByNameByOwner",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.Map\u003cjava.lang.String,java.util.Map\u003cjava.lang.String,java.util.Set\u003cdocking.action.DockingActionIf\u003e\u003e\u003e",
      "type_short": "Map",
      "constant_value": null
    },
    {
      "name": "sharedActionMap",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.Map\u003cjava.lang.String,docking.actions.SharedStubKeyBindingAction\u003e",
      "type_short": "Map",
      "constant_value": null
    },
    {
      "name": "keyBindingOptions",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.options.ToolOptions",
      "type_short": "ToolOptions",
      "constant_value": null
    },
    {
      "name": "dockingTool",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.Tool",
      "type_short": "Tool",
      "constant_value": null
    },
    {
      "name": "keyBindingsManager",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.action.KeyBindingsManager",
      "type_short": "KeyBindingsManager",
      "constant_value": null
    },
    {
      "name": "optionChangeListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.options.OptionsChangeListener",
      "type_short": "OptionsChangeListener",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct an ActionManager",
      "javadoc": "Construct an ActionManager\n@param tool tool using this ActionManager\n@param actionToGuiHelper the class that takes actions and maps them to GUI widgets",
      "static": false,
      "params": [
        {
          "name": "tool",
          "type_long": "docking.Tool",
          "type_short": "Tool",
          "comment": "tool using this ActionManager"
        },
        {
          "name": "actionToGuiHelper",
          "type_long": "docking.ActionToGuiHelper",
          "type_short": "ActionToGuiHelper",
          "comment": "the class that takes actions and maps them to GUI widgets"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createReservedKeyBindings",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "dispose",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addActionToMap",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "action",
          "type_long": "docking.action.DockingActionIf",
          "type_short": "DockingActionIf",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addLocalAction",
      "comment": "Add an action that works specifically with a component provider.",
      "javadoc": "Add an action that works specifically with a component provider.\n@param provider provider associated with the action\n@param action local action to the provider",
      "static": false,
      "params": [
        {
          "name": "provider",
          "type_long": "docking.ComponentProvider",
          "type_short": "ComponentProvider",
          "comment": "provider associated with the action"
        },
        {
          "name": "action",
          "type_long": "docking.action.DockingActionIf",
          "type_short": "DockingActionIf",
          "comment": "local action to the provider"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addGlobalAction",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "action",
          "type_long": "docking.action.DockingActionIf",
          "type_short": "DockingActionIf",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "initializeKeyBinding",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "provider",
          "type_long": "docking.ComponentProvider",
          "type_short": "ComponentProvider",
          "comment": ""
        },
        {
          "name": "action",
          "type_long": "docking.action.DockingActionIf",
          "type_short": "DockingActionIf",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "loadKeyBindingFromOptions",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "action",
          "type_long": "docking.action.DockingActionIf",
          "type_short": "DockingActionIf",
          "comment": ""
        },
        {
          "name": "ks",
          "type_long": "javax.swing.KeyStroke",
          "type_short": "KeyStroke",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "installSharedKeyBinding",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "provider",
          "type_long": "docking.ComponentProvider",
          "type_short": "ComponentProvider",
          "comment": ""
        },
        {
          "name": "action",
          "type_long": "docking.action.DockingActionIf",
          "type_short": "DockingActionIf",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "registerStub",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "stub",
          "type_long": "docking.actions.SharedStubKeyBindingAction",
          "type_short": "SharedStubKeyBindingAction",
          "comment": ""
        },
        {
          "name": "defaultKeyStroke",
          "type_long": "javax.swing.KeyStroke",
          "type_short": "KeyStroke",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeGlobalAction",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "action",
          "type_long": "docking.action.DockingActionIf",
          "type_short": "DockingActionIf",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "dispose",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "action",
          "type_long": "docking.action.DockingActionIf",
          "type_short": "DockingActionIf",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeActions",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "owner",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "checkForAlreadyAddedAction",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "provider",
          "type_long": "docking.ComponentProvider",
          "type_short": "ComponentProvider",
          "comment": ""
        },
        {
          "name": "action",
          "type_long": "docking.action.DockingActionIf",
          "type_short": "DockingActionIf",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getActions",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "owner",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.Set\u003cdocking.action.DockingActionIf\u003e",
        "type_short": "Set",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getAllActions",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Set\u003cdocking.action.DockingActionIf\u003e",
        "type_short": "Set",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getAllActionsIterator",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Iterator\u003cdocking.action.DockingActionIf\u003e",
        "type_short": "Iterator",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "restoreKeyBindings",
      "comment": "Get the keybindings for each action so that they are still registered as being used; \n otherwise the options will be removed because they are noted as not being used.",
      "javadoc": "Get the keybindings for each action so that they are still registered as being used; \n otherwise the options will be removed because they are noted as not being used.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getKeyBindingActionsIterator",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Iterator\u003cdocking.action.DockingActionIf\u003e",
        "type_short": "Iterator",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeLocalAction",
      "comment": "Remove an action that works specifically with a component provider.",
      "javadoc": "Remove an action that works specifically with a component provider.\n@param provider provider associated with the action\n@param action local action to the provider",
      "static": false,
      "params": [
        {
          "name": "provider",
          "type_long": "docking.ComponentProvider",
          "type_short": "ComponentProvider",
          "comment": "provider associated with the action"
        },
        {
          "name": "action",
          "type_long": "docking.action.DockingActionIf",
          "type_short": "DockingActionIf",
          "comment": "local action to the provider"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeActions",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "provider",
          "type_long": "docking.ComponentProvider",
          "type_short": "ComponentProvider",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeAction",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "action",
          "type_long": "docking.action.DockingActionIf",
          "type_short": "DockingActionIf",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getActionStorage",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "action",
          "type_long": "docking.action.DockingActionIf",
          "type_short": "DockingActionIf",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.Set\u003cdocking.action.DockingActionIf\u003e",
        "type_short": "Set",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "updateKeyBindingsFromOptions",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "options",
          "type_long": "ghidra.framework.options.ToolOptions",
          "type_short": "ToolOptions",
          "comment": ""
        },
        {
          "name": "optionName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "newKs",
          "type_long": "javax.swing.KeyStroke",
          "type_short": "KeyStroke",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "propertyChange",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "evt",
          "type_long": "java.beans.PropertyChangeEvent",
          "type_short": "PropertyChangeEvent",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "keyBindingsChanged",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLocalAction",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "provider",
          "type_long": "docking.ComponentProvider",
          "type_short": "ComponentProvider",
          "comment": ""
        },
        {
          "name": "actionName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.action.DockingActionIf",
        "type_short": "DockingActionIf",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getAction",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "ks",
          "type_long": "javax.swing.KeyStroke",
          "type_short": "KeyStroke",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "javax.swing.Action",
        "type_short": "Action",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSharedStubKeyBindingAction",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.action.DockingActionIf",
        "type_short": "DockingActionIf",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "registerSharedActionPlaceholder",
      "comment": "Allows clients to register an action by using a placeholder.  This is useful when \n an API wishes to have a central object (like a plugin) register actions for transient\n providers, that may not be loaded until needed.\n \n This method may be called multiple times with the same conceptual placeholder--the\n placeholder will only be added once.",
      "javadoc": "Allows clients to register an action by using a placeholder.  This is useful when \n an API wishes to have a central object (like a plugin) register actions for transient\n providers, that may not be loaded until needed.\n \n \u003cp\u003eThis method may be called multiple times with the same conceptual placeholder--the\n placeholder will only be added once.\n@param placeholder the placeholder containing information related to the action it represents",
      "static": false,
      "params": [
        {
          "name": "placeholder",
          "type_long": "docking.actions.SharedDockingActionPlaceholder",
          "type_short": "SharedDockingActionPlaceholder",
          "comment": "the placeholder containing information related to the action it represents"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
