{
  "name": "PopupActionProvider",
  "comment": "Provides notification when the popup action menu is displayed.   This interface allows \n temporary/transient actions (those not registered with the tool via \n Tool#addAction(DockingActionIf)) to be used in the popup context menu.   \n \n \n Most clients will register actions directly with the tool.   However, clients that have numerous\n actions that vary greatly with the context can use this method to only create those actions\n on demand as the popup is about to be shown, and only if their context is active.   This \n mechanism can reduce the tool\u0027s action management overhead.    Once you have created an\n implementation of this class, you must register it with\n Tool#addPopupActionProvider(PopupActionProvider).",
  "javadoc": "Provides notification when the popup action menu is displayed.   This interface allows \n temporary/transient actions (those not registered with the tool via \n {@link Tool#addAction(DockingActionIf)}) to be used in the popup context menu.   \n \n \u003cp\u003e\n Most clients will register actions directly with the tool.   However, clients that have numerous\n actions that vary greatly with the context can use this method to only create those actions\n on demand as the popup is about to be shown, and only if their context is active.   This \n mechanism can reduce the tool\u0027s action management overhead.    Once you have created an\n implementation of this class, you must register it with\n {@link Tool#addPopupActionProvider(PopupActionProvider)}.",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "getPopupActions",
      "comment": "Provides notification that the popup menu is about to be displayed and allows a set of \n temporary actions to be included in the popup menu.  Actions returned will be \n included in the menu if they have a valid popup menu path and respond true to the \n DockingActionIf#isValidContext(ActionContext) call.",
      "javadoc": "Provides notification that the popup menu is about to be displayed and allows a set of \n temporary actions to be included in the popup menu.  Actions returned will be \n included in the menu if they have a valid popup menu path and respond true to the \n {@link DockingActionIf#isValidContext(ActionContext)} call.\n@param tool the tool requesting the actions\n@param context the ActionContext\n@return list of temporary popup actions; return null if there are no popup actions",
      "static": false,
      "params": [
        {
          "name": "tool",
          "type_long": "docking.Tool",
          "type_short": "Tool",
          "comment": "the tool requesting the actions"
        },
        {
          "name": "context",
          "type_long": "docking.ActionContext",
          "type_short": "ActionContext",
          "comment": "the ActionContext"
        }
      ],
      "return": {
        "type_long": "java.util.List\u003cdocking.action.DockingActionIf\u003e",
        "type_short": "List",
        "comment": "list of temporary popup actions; return null if there are no popup actions"
      },
      "throws": []
    }
  ]
}
