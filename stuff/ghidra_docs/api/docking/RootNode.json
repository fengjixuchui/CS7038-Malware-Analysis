{
  "name": "RootNode",
  "comment": "Root node for the nodes managing the component hierarchy.",
  "javadoc": "Root node for the nodes managing the component hierarchy.",
  "static": false,
  "implements": [],
  "extends": "docking.WindowNode",
  "fields": [
    {
      "name": "ROOT_NODE_ELEMENT_NAME",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"ROOT_NODE\""
    },
    {
      "name": "dockingWindowListeners",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.datastruct.WeakSet\u003cdocking.DockingWindowListener\u003e",
      "type_short": "WeakSet",
      "constant_value": null
    },
    {
      "name": "toolName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "child",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.Node",
      "type_short": "Node",
      "constant_value": null
    },
    {
      "name": "detachedWindows",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cdocking.DetachedWindowNode\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "childPanel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.JPanel",
      "type_short": "JPanel",
      "constant_value": null
    },
    {
      "name": "statusBar",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.StatusBar",
      "type_short": "StatusBar",
      "constant_value": null
    },
    {
      "name": "windowWrapper",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.RootNode.SwingWindowWrapper",
      "type_short": "SwingWindowWrapper",
      "constant_value": null
    },
    {
      "name": "dropTargetFactory",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.DropTargetFactory",
      "type_short": "DropTargetFactory",
      "constant_value": null
    },
    {
      "name": "rootDropTargetHandler",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.DropTargetHandler",
      "type_short": "DropTargetHandler",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new root node for the given DockingWindowsManager.",
      "javadoc": "Constructs a new root node for the given DockingWindowsManager.\n@param mgr the DockingWindowsManager\n@param toolName the name of the tool to be displayed in all the top-level windows.\n@param factory a factory for creating drop targets for this nodes windows; may be null",
      "static": false,
      "params": [
        {
          "name": "mgr",
          "type_long": "docking.DockingWindowManager",
          "type_short": "DockingWindowManager",
          "comment": "the DockingWindowsManager"
        },
        {
          "name": "toolName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of the tool to be displayed in all the top-level windows."
        },
        {
          "name": "images",
          "type_long": "java.util.List\u003cjava.awt.Image\u003e",
          "type_short": "List",
          "comment": ""
        },
        {
          "name": "isModal",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        },
        {
          "name": "factory",
          "type_long": "docking.DropTargetFactory",
          "type_short": "DropTargetFactory",
          "comment": "a factory for creating drop targets for this nodes windows; may be null"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createDialog",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "title",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "frame",
          "type_long": "docking.DockingFrame",
          "type_short": "DockingFrame",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "javax.swing.JDialog",
        "type_short": "JDialog",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setFrameIcon",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "frame",
          "type_long": "java.awt.Frame",
          "type_short": "Frame",
          "comment": ""
        },
        {
          "name": "image",
          "type_long": "java.awt.Image",
          "type_short": "Image",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setFrameIcon",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "frame",
          "type_long": "java.awt.Frame",
          "type_short": "Frame",
          "comment": ""
        },
        {
          "name": "images",
          "type_long": "java.util.List\u003cjava.awt.Image\u003e",
          "type_short": "List",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setHomeButton",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "icon",
          "type_long": "javax.swing.Icon",
          "type_short": "Icon",
          "comment": ""
        },
        {
          "name": "callback",
          "type_long": "java.lang.Runnable",
          "type_short": "Runnable",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isModal",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isVisible",
      "comment": "Return whether the component for this RootNode is visible.",
      "javadoc": "Return whether the component for this RootNode is visible.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setToolName",
      "comment": "Set the tool name which is displayed as the title\n for all windows.",
      "javadoc": "Set the tool name which is displayed as the title\n for all windows.\n@param toolName tool name / title",
      "static": false,
      "params": [
        {
          "name": "toolName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "tool name / title"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getChildren",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cdocking.Node\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getTitle",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDescription",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setIcon",
      "comment": "Set the Icon for all windows.",
      "javadoc": "Set the Icon for all windows.\n@param icon image icon",
      "static": false,
      "params": [
        {
          "name": "icon",
          "type_long": "javax.swing.ImageIcon",
          "type_short": "ImageIcon",
          "comment": "image icon"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setVisible",
      "comment": "Sets the main frame and all sub windows visible state.",
      "javadoc": "Sets the main frame and all sub windows visible state.\n@param state true to show them, false to make them invisible.",
      "static": false,
      "params": [
        {
          "name": "state",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true to show them, false to make them invisible."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "add",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "info",
          "type_long": "docking.ComponentPlaceholder",
          "type_short": "ComponentPlaceholder",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "add",
      "comment": "Creates a new sub-window for the given component a positions it at the given location.",
      "javadoc": "Creates a new sub-window for the given component a positions it at the given location.\n@param info the component to be put in its own window.\n@param loc the location for the new window.",
      "static": false,
      "params": [
        {
          "name": "info",
          "type_long": "docking.ComponentPlaceholder",
          "type_short": "ComponentPlaceholder",
          "comment": "the component to be put in its own window."
        },
        {
          "name": "loc",
          "type_long": "java.awt.Point",
          "type_short": "Point",
          "comment": "the location for the new window."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "add",
      "comment": "Adds the component to the main window.",
      "javadoc": "Adds the component to the main window.\n@param info the component to be added.",
      "static": false,
      "params": [
        {
          "name": "info",
          "type_long": "docking.ComponentPlaceholder",
          "type_short": "ComponentPlaceholder",
          "comment": "the component to be added."
        },
        {
          "name": "initialPosition",
          "type_long": "docking.WindowPosition",
          "type_short": "WindowPosition",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "updateChild",
      "comment": "Updates the component hierarchy for the main frame.",
      "javadoc": "Updates the component hierarchy for the main frame.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getWindow",
      "comment": "Get the window which contains the specified component.",
      "javadoc": "Get the window which contains the specified component.\n@param info component info\n@return window or null if component is not visible or not found.",
      "static": false,
      "params": [
        {
          "name": "info",
          "type_long": "docking.ComponentPlaceholder",
          "type_short": "ComponentPlaceholder",
          "comment": "component info"
        }
      ],
      "return": {
        "type_long": "java.awt.Window",
        "type_short": "Window",
        "comment": "window or null if component is not visible or not found."
      },
      "throws": []
    },
    {
      "name": "update",
      "comment": "Updates the component hierarchy for the main frame and all sub-frames.",
      "javadoc": "Updates the component hierarchy for the main frame and all sub-frames.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "updateDialogs",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setMenuBar",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "menuBar",
          "type_long": "javax.swing.JMenuBar",
          "type_short": "JMenuBar",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "validate",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "close",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getComponent",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "javax.swing.JComponent",
        "type_short": "JComponent",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeNode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "node",
          "type_long": "docking.Node",
          "type_short": "Node",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFrame",
      "comment": "Returns the main frame of the tool.",
      "javadoc": "Returns the main frame of the tool.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "javax.swing.JFrame",
        "type_short": "JFrame",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getModalDialog",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "javax.swing.JDialog",
        "type_short": "JDialog",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "populateActiveComponents",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "list",
          "type_long": "java.util.List\u003cdocking.ComponentPlaceholder\u003e",
          "type_short": "List",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDetachedWindows",
      "comment": "Returns list of detached windows (WindowNode objects).",
      "javadoc": "Returns list of detached windows (WindowNode objects).",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cdocking.DetachedWindowNode\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getToolName",
      "comment": "Returns the tool name of the tool.",
      "javadoc": "Returns the tool name of the tool.\n@return the tool name of the tool.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the tool name of the tool."
      },
      "throws": []
    },
    {
      "name": "replaceNode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "oldNode",
          "type_long": "docking.Node",
          "type_short": "Node",
          "comment": ""
        },
        {
          "name": "newNode",
          "type_long": "docking.Node",
          "type_short": "Node",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getContentPane",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Container",
        "type_short": "Container",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "saveToXML",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "org.jdom.Element",
        "type_short": "Element",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "restoreFromXML",
      "comment": "Restores the component hierarchy from the given XML JDOM element.",
      "javadoc": "Restores the component hierarchy from the given XML JDOM element.\n@param root the XML from which to restore the state.",
      "static": false,
      "params": [
        {
          "name": "rootNodeElement",
          "type_long": "org.jdom.Element",
          "type_short": "Element",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.List\u003cdocking.ComponentPlaceholder\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "detachChild",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "dispose",
      "comment": "Release all resources. The root node is no longer viable.",
      "javadoc": "Release all resources. The root node is no longer viable.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "contains",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "info",
          "type_long": "docking.ComponentPlaceholder",
          "type_short": "ComponentPlaceholder",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addStatusItem",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "c",
          "type_long": "javax.swing.JComponent",
          "type_short": "JComponent",
          "comment": ""
        },
        {
          "name": "addBorder",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        },
        {
          "name": "rightSide",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeStatusItem",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "c",
          "type_long": "javax.swing.JComponent",
          "type_short": "JComponent",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "clearStatusMessages",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setStatusText",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "text",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getMainWindow",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Window",
        "type_short": "Window",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addDockingWindowListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "docking.DockingWindowListener",
          "type_short": "DockingWindowListener",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeDockingWindowListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "docking.DockingWindowListener",
          "type_short": "DockingWindowListener",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "notifyWindowAdded",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "windowNode",
          "type_long": "docking.DetachedWindowNode",
          "type_short": "DetachedWindowNode",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "notifyWindowRemoved",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "windowNode",
          "type_long": "docking.DetachedWindowNode",
          "type_short": "DetachedWindowNode",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "notifyWindowChanged",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "windowNode",
          "type_long": "docking.WindowNode",
          "type_short": "WindowNode",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "notifyWindowFocusChanged",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "windowNode",
          "type_long": "docking.WindowNode",
          "type_short": "WindowNode",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getTopLevelNode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.WindowNode",
        "type_short": "WindowNode",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getNodeForWindow",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "win",
          "type_long": "java.awt.Window",
          "type_short": "Window",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.WindowNode",
        "type_short": "WindowNode",
        "comment": ""
      },
      "throws": []
    }
  ]
}
