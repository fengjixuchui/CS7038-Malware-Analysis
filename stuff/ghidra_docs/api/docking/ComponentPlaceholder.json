{
  "name": "ComponentPlaceholder",
  "comment": "Class to hold information about a dockable component with respect to its position within the\n windowing system.  It also holds identification information about the provider so that its\n location can be reused when the provider is re-opened.",
  "javadoc": "Class to hold information about a dockable component with respect to its position within the\n windowing system.  It also holds identification information about the provider so that its\n location can be reused when the provider is re-opened.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "name",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "owner",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "group",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "title",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "subTitle",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "tabText",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "icon",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.Icon",
      "type_short": "Icon",
      "constant_value": null
    },
    {
      "name": "componentProvider",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.ComponentProvider",
      "type_short": "ComponentProvider",
      "constant_value": null
    },
    {
      "name": "actions",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cdocking.action.DockingActionIf\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "isShowing",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "compNode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.ComponentNode",
      "type_short": "ComponentNode",
      "constant_value": null
    },
    {
      "name": "comp",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.DockableComponent",
      "type_short": "DockableComponent",
      "constant_value": null
    },
    {
      "name": "showHeader",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "disposed",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "instanceID",
      "comment": "Set to a default value if this class\u0027 provider is not duplicatable; a unique value otherwise",
      "javadoc": "Set to a default value if this class\u0027 provider is not duplicatable; a unique value otherwise",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "provider",
          "type_long": "docking.ComponentProvider",
          "type_short": "ComponentProvider",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "XML Constructor!!!!!",
      "javadoc": "XML Constructor!!!!!\n@param name the name of the component\n@param owner the owner of the component\n@param group the window group\n@param title the title\n@param show whether or not the component is showing\n@param node componentNode that has this placeholder\n@param instanceID the instance ID",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of the component"
        },
        {
          "name": "owner",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the owner of the component"
        },
        {
          "name": "group",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the window group"
        },
        {
          "name": "title",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the title"
        },
        {
          "name": "show",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "whether or not the component is showing"
        },
        {
          "name": "node",
          "type_long": "docking.ComponentNode",
          "type_short": "ComponentNode",
          "comment": "componentNode that has this placeholder"
        },
        {
          "name": "instanceID",
          "type_long": "long",
          "type_short": "long",
          "comment": "the instance ID"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getInstanceID",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getNode",
      "comment": "Returns the componentNode containing this placeholder",
      "javadoc": "Returns the componentNode containing this placeholder\n@return the node",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.ComponentNode",
        "type_short": "ComponentNode",
        "comment": "the node"
      },
      "throws": []
    },
    {
      "name": "showHeader",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "b",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isHeaderShowing",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setNode",
      "comment": "Sets the componentNode containing this placeholder",
      "javadoc": "Sets the componentNode containing this placeholder\n@param node the component node containing this placeholder.",
      "static": false,
      "params": [
        {
          "name": "node",
          "type_long": "docking.ComponentNode",
          "type_short": "ComponentNode",
          "comment": "the component node containing this placeholder."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isParented",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isShowing",
      "comment": "Returns true if the component is not hidden",
      "javadoc": "Returns true if the component is not hidden\n@return true if showing",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if showing"
      },
      "throws": []
    },
    {
      "name": "wantsToBeShowing",
      "comment": "True signals that the showing state of the placeholder is true.  This is used to re-show\n providers after restoring from XML.",
      "javadoc": "True signals that the showing state of the placeholder is true.  This is used to re-show\n providers after restoring from XML.\n@return True signals that the showing state of the placeholder is true",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "True signals that the showing state of the placeholder is true"
      },
      "throws": []
    },
    {
      "name": "invalidateComponentNode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getGroup",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDetachedWindowNode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.DetachedWindowNode",
        "type_short": "DetachedWindowNode",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getWindowNode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.WindowNode",
        "type_short": "WindowNode",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getTopLevelNode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.WindowNode",
        "type_short": "WindowNode",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "reset",
      "comment": "Call to signal that this placeholder is not being used.  This is needed when placeholders\n are restored from XML as being visible, but then no provider can be found for them.",
      "javadoc": "Call to signal that this placeholder is not being used.  This is needed when placeholders\n are restored from XML as being visible, but then no provider can be found for them.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "show",
      "comment": "Sets the active state.",
      "javadoc": "Sets the active state.\n@param doShow true to show the component, false to hide it.",
      "static": false,
      "params": [
        {
          "name": "doShow",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true to show the component, false to hide it."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "invalidate",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isDisposed",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "dispose",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "disposeComponent",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toFront",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "requestFocus",
      "comment": "Requests focus for the component associated with this placeholder.",
      "javadoc": "Requests focus for the component associated with this placeholder.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "activateWindow",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "close",
      "comment": "Hides the component associated with this placeholder and notifies the provider that\n the component has been hidden.",
      "javadoc": "Hides the component associated with this placeholder and notifies the provider that\n the component has been hidden.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getComponent",
      "comment": "Returns a Dockable component that wraps the component for this placeholder",
      "javadoc": "Returns a Dockable component that wraps the component for this placeholder\n@return the component",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.DockableComponent",
        "type_short": "DockableComponent",
        "comment": "the component"
      },
      "throws": []
    },
    {
      "name": "setIcon",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "icon",
          "type_long": "javax.swing.Icon",
          "type_short": "Icon",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getIcon",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "javax.swing.Icon",
        "type_short": "Icon",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getTitle",
      "comment": "Returns the title for this component",
      "javadoc": "Returns the title for this component\n@return the title for this component",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the title for this component"
      },
      "throws": []
    },
    {
      "name": "getSubTitle",
      "comment": "Returns the subtitle for the component",
      "javadoc": "Returns the subtitle for the component\n@return the subtitle for the component",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the subtitle for the component"
      },
      "throws": []
    },
    {
      "name": "getTabText",
      "comment": "The text for display on the tab of a tabbed component.",
      "javadoc": "The text for display on the tab of a tabbed component.\n@return The text for display on the tab of a tabbed component.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "The text for display on the tab of a tabbed component."
      },
      "throws": []
    },
    {
      "name": "getName",
      "comment": "Returns the name of this component.",
      "javadoc": "Returns the name of this component.\n@return the name of this component.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the name of this component."
      },
      "throws": []
    },
    {
      "name": "getOwner",
      "comment": "Returns the owner for the component",
      "javadoc": "Returns the owner for the component\n@return the owner",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the owner"
      },
      "throws": []
    },
    {
      "name": "getProviderComponent",
      "comment": "Returns the component associated with this placeholder",
      "javadoc": "Returns the component associated with this placeholder\n@return the component",
      "static": false,
      "params": [],
      "return": {
        "type_long": "javax.swing.JComponent",
        "type_short": "JComponent",
        "comment": "the component"
      },
      "throws": []
    },
    {
      "name": "isStacked",
      "comment": "Returns true if this placeholder\u0027s component is in a tabbed pane with other components",
      "javadoc": "Returns true if this placeholder\u0027s component is in a tabbed pane with other components\n@return true if in a tabbed pane",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if in a tabbed pane"
      },
      "throws": []
    },
    {
      "name": "hasProvider",
      "comment": "Returns true if this placeholder is currently associated with a component. If it is not,\n then it exists as a place holder.",
      "javadoc": "Returns true if this placeholder is currently associated with a component. If it is not,\n then it exists as a place holder.\n@return true if this placeholder is currently associated with a component",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if this placeholder is currently associated with a component"
      },
      "throws": []
    },
    {
      "name": "setProvider",
      "comment": "Sets the component provider for this placeholder",
      "javadoc": "Sets the component provider for this placeholder\n@param newProvider the new provider",
      "static": false,
      "params": [
        {
          "name": "newProvider",
          "type_long": "docking.ComponentProvider",
          "type_short": "ComponentProvider",
          "comment": "the new provider"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "update",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "updateTitle",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "provider",
          "type_long": "docking.ComponentProvider",
          "type_short": "ComponentProvider",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "updateInfo",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "updatedProvider",
          "type_long": "docking.ComponentProvider",
          "type_short": "ComponentProvider",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getGroup",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "provider",
          "type_long": "docking.ComponentProvider",
          "type_short": "ComponentProvider",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getProvider",
      "comment": "Returns the component provider for this placeholder.",
      "javadoc": "Returns the component provider for this placeholder.\n@return the component provider for this placeholder.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.ComponentProvider",
        "type_short": "ComponentProvider",
        "comment": "the component provider for this placeholder."
      },
      "throws": []
    },
    {
      "name": "addAction",
      "comment": "Adds an action to this component",
      "javadoc": "Adds an action to this component\n@param action the action to be added.",
      "static": false,
      "params": [
        {
          "name": "action",
          "type_long": "docking.action.DockingActionIf",
          "type_short": "DockingActionIf",
          "comment": "the action to be added."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeAllActions",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeAction",
      "comment": "Removes an action from this component",
      "javadoc": "Removes an action from this component\n@param action the action to be removed.",
      "static": false,
      "params": [
        {
          "name": "action",
          "type_long": "docking.action.DockingActionIf",
          "type_short": "DockingActionIf",
          "comment": "the action to be removed."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "contextChanged",
      "comment": "Updates local actions for providers",
      "javadoc": "Updates local actions for providers",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hasAction",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "action",
          "type_long": "docking.action.DockingAction",
          "type_short": "DockingAction",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getActions",
      "comment": "Return iterator over all the local actions defined for this component",
      "javadoc": "Return iterator over all the local actions defined for this component\n@return the actions",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Iterator\u003cdocking.action.DockingActionIf\u003e",
        "type_short": "Iterator",
        "comment": "the actions"
      },
      "throws": []
    },
    {
      "name": "setSelected",
      "comment": "Notifies the node that this component has focus",
      "javadoc": "Notifies the node that this component has focus\n@param state the state",
      "static": false,
      "params": [
        {
          "name": "state",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "the state"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "emphasize",
      "comment": "Signals to use the GUI to make this provider stand out from the rest.",
      "javadoc": "Signals to use the GUI to make this provider stand out from the rest.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setProviderActivated",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "activated",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFullTitle",
      "comment": "Returns the full title for this component (title + subtitle)",
      "javadoc": "Returns the full title for this component (title + subtitle)\n@return the full title for this component (title + subtitle)",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the full title for this component (title + subtitle)"
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    }
  ]
}
