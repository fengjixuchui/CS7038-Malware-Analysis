{
  "name": "GMouseListenerAdapter",
  "comment": "A mouse listener implementation designed to provide consistent handling of triggers for\n popups and double-clicking.\n \n Notes:\n \n \t\tPopup triggers always supersedes double-click actions.\n  \t\tThe stage an action triggers (pressed/released/clicked) is platform dependent.\n  \t\tEach of the methods mentioned below will be called as appropriate.\n  \t\tYou can override any of these methods to be called for each trigger.\n  \t\tNormally popups are handled by the framework via custom actions.  But, for custom\n          widgets it is sometimes simpler to handle your own popups.  This class makes that \n          easier\n ",
  "javadoc": "A mouse listener implementation designed to provide consistent handling of triggers for\n popups and double-clicking.\n \u003cP\u003e\n \u003cU\u003eNotes:\u003c/U\u003e\n \u003cUL\u003e\n \t\t\u003cLI\u003ePopup triggers always supersedes double-click actions.\u003c/LI\u003e\n  \t\t\u003cLI\u003eThe stage an action triggers (pressed/released/clicked) is platform dependent.\u003c/LI\u003e\n  \t\t\u003cLI\u003eEach of the methods mentioned below will be called as appropriate.\u003c/LI\u003e\n  \t\t\u003cLI\u003eYou can override any of these methods to be called for each trigger.\u003c/LI\u003e\n  \t\t\u003cLI\u003eNormally popups are handled by the framework via custom actions.  But, for custom\n          widgets it is sometimes simpler to handle your own popups.  This class makes that \n          easier\u003c/LI\u003e\n \u003c/UL\u003e\n@see #popupTriggered(MouseEvent)\n@see #doubleClickTriggered(MouseEvent)\n@see #shouldConsume(MouseEvent)",
  "static": false,
  "implements": [],
  "extends": "java.awt.event.MouseAdapter",
  "fields": [
    {
      "name": "LEFT",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "1"
    },
    {
      "name": "lastMouseButton",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "didConsume",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "didPopup",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "shouldConsume",
      "comment": "This method is called to ask the client if they wish to consume the given event.  This\n allows clients to keep events from propagating to other listeners.",
      "javadoc": "This method is called to ask the client if they wish to consume the given event.  This\n allows clients to keep events from propagating to other listeners.\n@param e the event to potentially consume\n@return true if the event should be consumed",
      "static": false,
      "params": [
        {
          "name": "e",
          "type_long": "java.awt.event.MouseEvent",
          "type_short": "MouseEvent",
          "comment": "the event to potentially consume"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the event should be consumed"
      },
      "throws": []
    },
    {
      "name": "doubleClickTriggered",
      "comment": "Called when a double-click event is discovered.",
      "javadoc": "Called when a double-click event is discovered.\n@param e the event that triggered the double-click",
      "static": false,
      "params": [
        {
          "name": "e",
          "type_long": "java.awt.event.MouseEvent",
          "type_short": "MouseEvent",
          "comment": "the event that triggered the double-click"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "popupTriggered",
      "comment": "Called when a popup event is discovered.",
      "javadoc": "Called when a popup event is discovered.\n@param e the event that triggered the popup",
      "static": false,
      "params": [
        {
          "name": "e",
          "type_long": "java.awt.event.MouseEvent",
          "type_short": "MouseEvent",
          "comment": "the event that triggered the popup"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "mousePressed",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "e",
          "type_long": "java.awt.event.MouseEvent",
          "type_short": "MouseEvent",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "mouseReleased",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "e",
          "type_long": "java.awt.event.MouseEvent",
          "type_short": "MouseEvent",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "mouseClicked",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "e",
          "type_long": "java.awt.event.MouseEvent",
          "type_short": "MouseEvent",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "doMouseClicked",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "e",
          "type_long": "java.awt.event.MouseEvent",
          "type_short": "MouseEvent",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "popup",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "e",
          "type_long": "java.awt.event.MouseEvent",
          "type_short": "MouseEvent",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "consume",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "e",
          "type_long": "java.awt.event.MouseEvent",
          "type_short": "MouseEvent",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "bothClicksFromLeftButton",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "previousButton",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "currentButton",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "reset",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "trace",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "message",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
