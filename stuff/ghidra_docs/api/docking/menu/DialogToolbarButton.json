{
  "name": "DialogToolbarButton",
  "comment": "Toolbar buttons for Dialogs.   \n \n This class exists because dialog actions are not added to the regular tool\u0027s toolbars.  This\n means that we have to create the dialog\u0027s toolbars outside of the tool.  Thus, this class\n mimics how the tool\u0027s toolbar buttons are created.",
  "javadoc": "Toolbar buttons for Dialogs.   \n \n \u003cp\u003eThis class exists because dialog actions are not added to the regular tool\u0027s toolbars.  This\n means that we have to create the dialog\u0027s toolbars outside of the tool.  Thus, this class\n mimics how the tool\u0027s toolbar buttons are created.",
  "static": false,
  "implements": [],
  "extends": "docking.EmptyBorderToggleButton",
  "fields": [
    {
      "name": "dockingAction",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.action.DockingActionIf",
      "type_short": "DockingActionIf",
      "constant_value": null
    },
    {
      "name": "contextProvider",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.action.ActionContextProvider",
      "type_short": "ActionContextProvider",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "action",
          "type_long": "docking.action.DockingActionIf",
          "type_short": "DockingActionIf",
          "comment": ""
        },
        {
          "name": "contextProvider",
          "type_long": "docking.action.ActionContextProvider",
          "type_short": "ActionContextProvider",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "initFromAction",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "action",
          "type_long": "docking.action.DockingActionIf",
          "type_short": "DockingActionIf",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "doActionPerformed",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "e",
          "type_long": "java.awt.event.ActionEvent",
          "type_short": "ActionEvent",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "doPropertyChange",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "e",
          "type_long": "java.beans.PropertyChangeEvent",
          "type_short": "PropertyChangeEvent",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isButtonSelected",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDockingAction",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.action.DockingActionIf",
        "type_short": "DockingActionIf",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setSelected",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "b",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isSelected",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeListeners",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
