{
  "name": "NonToolbarMultiStateAction",
  "comment": "A class for clients that wish to create a button that has multiple states, controlled by a\n drop-down menu.  Further, this action is not meant to be added to a toolbar.  If you wish \n for this action to appear in the toolbar, then extend MultiStateDockingAction \n instead.\n \n To use this class, extend it, overriding the \n #actionStateChanged(ActionState, EventTrigger) callback.  Call \n #createButton() and add the return value to your UI.",
  "javadoc": "A class for clients that wish to create a button that has multiple states, controlled by a\n drop-down menu.  Further, this action is not meant to be added to a toolbar.  If you wish \n for this action to appear in the toolbar, then extend {@link MultiStateDockingAction} \n instead.\n \n \u003cp\u003eTo use this class, extend it, overriding the \n {@link #actionStateChanged(ActionState, EventTrigger)} callback.  Call \n {@link #createButton()} and add the return value to your UI.\n@param \u003cT\u003e\n@see MultiStateDockingAction",
  "static": false,
  "implements": [],
  "extends": "docking.menu.MultiStateDockingAction",
  "fields": [],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "owner",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
