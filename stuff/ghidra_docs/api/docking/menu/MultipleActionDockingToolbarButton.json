{
  "name": "MultipleActionDockingToolbarButton",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "extends": "docking.widgets.EmptyBorderButton",
  "fields": [
    {
      "name": "primaryIcon",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.Icon",
      "type_short": "Icon",
      "constant_value": null
    },
    {
      "name": "disabledIcon",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.Icon",
      "type_short": "Icon",
      "constant_value": null
    },
    {
      "name": "ARROW_WIDTH",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "ARROW_HEIGHT",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "ARROW_PADDING",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "popupListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.menu.MultipleActionDockingToolbarButton.PopupMouseListener",
      "type_short": "PopupMouseListener",
      "constant_value": null
    },
    {
      "name": "popupContext",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.awt.Shape",
      "type_short": "Shape",
      "constant_value": null
    },
    {
      "name": "multipleAction",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.action.MultiActionDockingActionIf",
      "type_short": "MultiActionDockingActionIf",
      "constant_value": null
    },
    {
      "name": "iconBorderEnabled",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "entireButtonShowsPopupMenu",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "action",
          "type_long": "docking.action.MultiActionDockingActionIf",
          "type_short": "MultiActionDockingActionIf",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setBorder",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "border",
          "type_long": "javax.swing.border.Border",
          "type_short": "Border",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setIcon",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "icon",
          "type_long": "javax.swing.Icon",
          "type_short": "Icon",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDisabledIcon",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "javax.swing.Icon",
        "type_short": "Icon",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setPerformActionOnButtonClick",
      "comment": "By default a click on this button will trigger actionPerformed() to be called.\n You can call this method to disable that feature.  When called with false, this\n method will effectively let the user click anywhere on the button or its drop-down arrow\n to show the popup menu.  During normal operation, the user can only show the popup by\n clicking the drop-down arrow.",
      "javadoc": "By default a click on this button will trigger \u003ccode\u003eactionPerformed()\u003c/code\u003e to be called.\n You can call this method to disable that feature.  When called with \u003ccode\u003efalse\u003c/code\u003e, this\n method will effectively let the user click anywhere on the button or its drop-down arrow\n to show the popup menu.  During normal operation, the user can only show the popup by\n clicking the drop-down arrow.\n@param performActionOnButtonClick true to perform the action when the button is clicked",
      "static": false,
      "params": [
        {
          "name": "performActionOnButtonClick",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true to perform the action when the button is clicked"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "paintBorder",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "g",
          "type_long": "java.awt.Graphics",
          "type_short": "Graphics",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "initIcons",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "installMouseListeners",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createImageIcon",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "javax.swing.Icon",
        "type_short": "Icon",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createPopupContext",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Shape",
        "type_short": "Shape",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getActionContext",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.ActionContext",
        "type_short": "ActionContext",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getComponentProvider",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.ComponentProvider",
        "type_short": "ComponentProvider",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "showPopup",
      "comment": "Show a popup containing all the actions below the button",
      "javadoc": "Show a popup containing all the actions below the button\n@param listener for the created popup menu\n@return the popup menu that was shown",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "javax.swing.event.PopupMenuListener",
          "type_short": "PopupMenuListener",
          "comment": "for the created popup menu"
        }
      ],
      "return": {
        "type_long": "javax.swing.JPopupMenu",
        "type_short": "JPopupMenu",
        "comment": "the popup menu that was shown"
      },
      "throws": []
    },
    {
      "name": "getPopupPoint",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Point",
        "type_short": "Point",
        "comment": ""
      },
      "throws": []
    }
  ]
}
