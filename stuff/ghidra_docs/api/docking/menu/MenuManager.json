{
  "name": "MenuManager",
  "comment": "Class to manage a hierarchy of menus.",
  "javadoc": "Class to manage a hierarchy of menus.",
  "static": false,
  "implements": [
    "docking.menu.ManagedMenuItem"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "NULL_GROUP_NAME",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "managedMenuItems",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.Set\u003cdocking.menu.ManagedMenuItem\u003e",
      "type_short": "Set",
      "constant_value": null
    },
    {
      "name": "subMenus",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.Map\u003cjava.lang.String,docking.menu.MenuManager\u003e",
      "type_short": "Map",
      "constant_value": null
    },
    {
      "name": "name",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "menuPath",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String[]",
      "type_short": "java.lang.String[]",
      "constant_value": null
    },
    {
      "name": "mnemonicKey",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "char",
      "type_short": "char",
      "constant_value": null
    },
    {
      "name": "level",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "usePopupPath",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "menuHandler",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.menu.MenuHandler",
      "type_short": "MenuHandler",
      "constant_value": null
    },
    {
      "name": "group",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "popupMenu",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.JPopupMenu",
      "type_short": "JPopupMenu",
      "constant_value": null
    },
    {
      "name": "menu",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.JMenu",
      "type_short": "JMenu",
      "constant_value": null
    },
    {
      "name": "menuGroupMap",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.menu.MenuGroupMap",
      "type_short": "MenuGroupMap",
      "constant_value": null
    },
    {
      "name": "comparator",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.Comparator\u003cdocking.menu.ManagedMenuItem\u003e",
      "type_short": "Comparator",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new MenuManager",
      "javadoc": "Constructs a new MenuManager\n@param name the name of the menu.\n@param mnemonicKey the key to use for the menu mnemonic\n@param group the group of the menu.\n@param usePopupPath if true, registers actions with popup paths as popup items.\n@param menuHandler Listener to be notified of menu behavior.\n@param menuGroupMap maps menu groups to menu paths",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of the menu."
        },
        {
          "name": "mnemonicKey",
          "type_long": "char",
          "type_short": "char",
          "comment": "the key to use for the menu mnemonic"
        },
        {
          "name": "group",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the group of the menu."
        },
        {
          "name": "usePopupPath",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "if true, registers actions with popup paths as popup items."
        },
        {
          "name": "menuHandler",
          "type_long": "docking.menu.MenuHandler",
          "type_short": "MenuHandler",
          "comment": "Listener to be notified of menu behavior."
        },
        {
          "name": "menuGroupMap",
          "type_long": "docking.menu.MenuGroupMap",
          "type_short": "MenuGroupMap",
          "comment": "maps menu groups to menu paths"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new MenuManager at the given level. The level corresponds to how deep this menu\n is within other menus.",
      "javadoc": "Constructs a new MenuManager at the given level. The level corresponds to how deep this menu\n is within other menus.\n@param name the name of this menu.\n@param menuPath the path of the menu item represented by this menu manager.\n@param mnemonicKey the key to use for the menu mnemonic\n@param level the number of parent menus that this menu is in.\n@param group the group of this menu.\n@param usePopupPath if true, registers actions with popup paths as popup items.\n@param menuHandler Listener to be notified of menu behavior.\n@param menuGroupMap maps menu groups to menu paths",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of this menu."
        },
        {
          "name": "menuPath",
          "type_long": "java.lang.String[]",
          "type_short": "java.lang.String[]",
          "comment": "the path of the menu item represented by this menu manager."
        },
        {
          "name": "mnemonicKey",
          "type_long": "char",
          "type_short": "char",
          "comment": "the key to use for the menu mnemonic"
        },
        {
          "name": "level",
          "type_long": "int",
          "type_short": "int",
          "comment": "the number of parent menus that this menu is in."
        },
        {
          "name": "group",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the group of this menu."
        },
        {
          "name": "usePopupPath",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "if true, registers actions with popup paths as popup items."
        },
        {
          "name": "menuHandler",
          "type_long": "docking.menu.MenuHandler",
          "type_short": "MenuHandler",
          "comment": "Listener to be notified of menu behavior."
        },
        {
          "name": "menuGroupMap",
          "type_long": "docking.menu.MenuGroupMap",
          "type_short": "MenuGroupMap",
          "comment": "maps menu groups to menu paths"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addAction",
      "comment": "Adds an action to this menu. Can create subMenus depending on the menuPath of the action",
      "javadoc": "Adds an action to this menu. Can create subMenus depending on the menuPath of the action\n@param action the action to be added",
      "static": false,
      "params": [
        {
          "name": "action",
          "type_long": "docking.action.DockingActionIf",
          "type_short": "DockingActionIf",
          "comment": "the action to be added"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isSubMenu",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "menuData",
          "type_long": "docking.action.MenuData",
          "type_short": "MenuData",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSubMenu",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "menuData",
          "type_long": "docking.action.MenuData",
          "type_short": "MenuData",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.menu.MenuManager",
        "type_short": "MenuManager",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSubMenuGroup",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "menuData",
          "type_long": "docking.action.MenuData",
          "type_short": "MenuData",
          "comment": ""
        },
        {
          "name": "menuName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "subMenuPath",
          "type_long": "java.lang.String[]",
          "type_short": "java.lang.String[]",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPullRightMenuGroup",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "menuData",
          "type_long": "docking.action.MenuData",
          "type_short": "MenuData",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getAction",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "actionName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.action.DockingActionIf",
        "type_short": "DockingActionIf",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getMnemonicKey",
      "comment": "Parses the mnemonic key from the menu items text.",
      "javadoc": "Parses the mnemonic key from the menu items text.\n@param str the menu item text\n@return the mnemonic key for encoded in the actions menu text. Returns 0 if there is none.",
      "static": true,
      "params": [
        {
          "name": "str",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the menu item text"
        }
      ],
      "return": {
        "type_long": "char",
        "type_short": "char",
        "comment": "the mnemonic key for encoded in the actions menu text. Returns 0 if there is none."
      },
      "throws": []
    },
    {
      "name": "stripMnemonicAmp",
      "comment": "Removes the Mnemonic indicator character () from the text",
      "javadoc": "Removes the Mnemonic indicator character (\u0026amp;) from the text\n@param text the text to strip\n@return the stripped mnemonic",
      "static": true,
      "params": [
        {
          "name": "text",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the text to strip"
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the stripped mnemonic"
      },
      "throws": []
    },
    {
      "name": "isEmpty",
      "comment": "Tests if this menu is empty.",
      "javadoc": "Tests if this menu is empty.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getMenu",
      "comment": "Returns a Menu hierarchy of all the actions",
      "javadoc": "Returns a Menu hierarchy of all the actions\n@return the menu",
      "static": false,
      "params": [],
      "return": {
        "type_long": "javax.swing.JMenu",
        "type_short": "JMenu",
        "comment": "the menu"
      },
      "throws": []
    },
    {
      "name": "getMenuItem",
      "comment": "",
      "javadoc": "@see docking.menu.ManagedMenuItem#getMenuItem()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "javax.swing.JMenuItem",
        "type_short": "JMenuItem",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getGroup",
      "comment": "",
      "javadoc": "@see docking.menu.ManagedMenuItem#getGroup()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSubGroup",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "dispose",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPopupMenu",
      "comment": "Returns a JPopupMenu for the action hierarchy",
      "javadoc": "Returns a JPopupMenu for the action hierarchy\n@return the popup menu",
      "static": false,
      "params": [],
      "return": {
        "type_long": "javax.swing.JPopupMenu",
        "type_short": "JPopupMenu",
        "comment": "the popup menu"
      },
      "throws": []
    },
    {
      "name": "remove",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "item",
          "type_long": "docking.menu.ManagedMenuItem",
          "type_short": "ManagedMenuItem",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeAction",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "action",
          "type_long": "docking.action.DockingActionIf",
          "type_short": "DockingActionIf",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "resetMenus",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "menuGroupChanged",
      "comment": "Notification that a menu item has changed groups.",
      "javadoc": "Notification that a menu item has changed groups.\n@param theMenuPath the menu path of the item whose group changed.\n@param i the index into the menu path of the part that changed groups.\n@param localGroup the new group.",
      "static": false,
      "params": [
        {
          "name": "theMenuPath",
          "type_long": "java.lang.String[]",
          "type_short": "java.lang.String[]",
          "comment": "the menu path of the item whose group changed."
        },
        {
          "name": "i",
          "type_long": "int",
          "type_short": "int",
          "comment": "the index into the menu path of the part that changed groups."
        },
        {
          "name": "localGroup",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the new group."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "checkForSwingThread",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getMenuHandler",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "javax.swing.event.PopupMenuListener",
        "type_short": "PopupMenuListener",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getMenuItemText",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    }
  ]
}
