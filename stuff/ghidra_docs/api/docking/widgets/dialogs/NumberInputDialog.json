{
  "name": "NumberInputDialog",
  "comment": "DialogComponentProvider that provides information to create a modal dialog\n to prompt for a number (int) to be input by the user.\n\n If an initial value is specified it is not in the range of min,max, it will be set to the \n min.\n\n If the maximum value indicated is less than the minimum then the max\n is the largest positive integer. Otherwise the maximum valid value is\n as indicated.\n\n This dialog component provider class can be used by various classes and\n therefore should not have its size or position remembered by the\n tool.showDialog() call parameters.\n To display the dialog call:\n \n \n     String entryType \u003d \"items\";\n     int initial \u003d 5; // initial value in text field.\n     int min \u003d 1;     // minimum valid value in text field.\n     int max \u003d 10;    // maximum valid value in text field.\n\n     NumberInputDialog numInputProvider \u003d new NumberInputProvider(entryType, initial, min, max);\n     if (numInputProvider.show()) {\n     \t   // not cancelled\n     \t   int result \u003d numInputProvider.getValue();\n     }\n \n ",
  "javadoc": "\u003cP\u003eDialogComponentProvider that provides information to create a modal dialog\n to prompt for a number (int) to be input by the user.\u003c/P\u003e\n\n \u003cP\u003eIf an initial value is specified it is not in the range of min,max, it will be set to the \n min.\u003c/P\u003e\n\n \u003cP\u003eIf the maximum value indicated is less than the minimum then the max\n is the largest positive integer. Otherwise the maximum valid value is\n as indicated.\u003c/P\u003e\n\n \u003cP\u003eThis dialog component provider class can be used by various classes and\n therefore should not have its size or position remembered by the\n tool.showDialog() call parameters.\u003c/P\u003e\n \u003cbr\u003eTo display the dialog call:\n \u003cpre\u003e\n \u003ccode\u003e\n     String entryType \u003d \"items\";\n     int initial \u003d 5; // initial value in text field.\n     int min \u003d 1;     // minimum valid value in text field.\n     int max \u003d 10;    // maximum valid value in text field.\n\n     NumberInputDialog numInputProvider \u003d new NumberInputProvider(entryType, initial, min, max);\n     if (numInputProvider.show()) {\n     \t   // not cancelled\n     \t   int result \u003d numInputProvider.getValue();\n     }\n \u003c/code\u003e\n \u003c/pre\u003e",
  "static": false,
  "implements": [],
  "extends": "docking.widgets.dialogs.AbstractNumberInputDialog",
  "fields": [],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new NumberInputDialog",
      "javadoc": "Constructs a new NumberInputDialog\n@param entryType item type the number indicates\n                  (i.e. \"duplicates\", \"items\", or \"elements\")\n@param initial default value displayed in the text field\n@param min minimum value allowed",
      "static": false,
      "params": [
        {
          "name": "entryType",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "item type the number indicates\n                  (i.e. \"duplicates\", \"items\", or \"elements\")"
        },
        {
          "name": "initial",
          "type_long": "int",
          "type_short": "int",
          "comment": "default value displayed in the text field"
        },
        {
          "name": "min",
          "type_long": "int",
          "type_short": "int",
          "comment": "minimum value allowed"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new NumberInputDialog",
      "javadoc": "Constructs a new NumberInputDialog\n@param entryType item type the number indicates\n                  (i.e. \"duplicates\", \"items\", or \"elements\")\n@param initial default value displayed in the text field\n@param min minimum value allowed\n@param max maximum value allowed",
      "static": false,
      "params": [
        {
          "name": "entryType",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "item type the number indicates\n                  (i.e. \"duplicates\", \"items\", or \"elements\")"
        },
        {
          "name": "initial",
          "type_long": "int",
          "type_short": "int",
          "comment": "default value displayed in the text field"
        },
        {
          "name": "min",
          "type_long": "int",
          "type_short": "int",
          "comment": "minimum value allowed"
        },
        {
          "name": "max",
          "type_long": "int",
          "type_short": "int",
          "comment": "maximum value allowed"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Show a number input dialog",
      "javadoc": "Show a number input dialog\n@param title The title of the dialog\n@param prompt the prompt to display before the number input field\n@param initialValue the default value to display, null will leave the field blank\n@param min the minimum allowed value of the field\n@param max the maximum allowed value of the field\n@param showAsHex if true, the initial value will be displayed as hex",
      "static": false,
      "params": [
        {
          "name": "title",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "The title of the dialog"
        },
        {
          "name": "prompt",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the prompt to display before the number input field"
        },
        {
          "name": "initialValue",
          "type_long": "java.lang.Integer",
          "type_short": "Integer",
          "comment": "the default value to display, null will leave the field blank"
        },
        {
          "name": "min",
          "type_long": "int",
          "type_short": "int",
          "comment": "the minimum allowed value of the field"
        },
        {
          "name": "max",
          "type_long": "int",
          "type_short": "int",
          "comment": "the maximum allowed value of the field"
        },
        {
          "name": "showAsHex",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "if true, the initial value will be displayed as hex"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getValue",
      "comment": "Convert the input to an int value",
      "javadoc": "Convert the input to an int value\n@return the int value\n@throws NumberFormatException if entered value cannot be parsed\n@throws IllegalStateException if the dialog was cancelled",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the int value"
      },
      "throws": []
    }
  ]
}
