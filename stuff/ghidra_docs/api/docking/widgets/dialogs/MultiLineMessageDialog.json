{
  "name": "MultiLineMessageDialog",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "extends": "docking.DialogComponentProvider",
  "fields": [
    {
      "name": "ERROR_MESSAGE",
      "comment": "Used for error messages.",
      "javadoc": "Used for error messages.",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "0"
    },
    {
      "name": "INFORMATION_MESSAGE",
      "comment": "Used for information messages.",
      "javadoc": "Used for information messages.",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "1"
    },
    {
      "name": "WARNING_MESSAGE",
      "comment": "Used for warning messages.",
      "javadoc": "Used for warning messages.",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "2"
    },
    {
      "name": "QUESTION_MESSAGE",
      "comment": "Used for questions.",
      "javadoc": "Used for questions.",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "3"
    },
    {
      "name": "PLAIN_MESSAGE",
      "comment": "No icon is used.",
      "javadoc": "No icon is used.",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "-1"
    }
  ],
  "methods": [
    {
      "name": "showModalMessageDialog",
      "comment": "Static helper method to easily display a modal message dialog showing a text string\n with an \"OK\" button.\n \n If the text is too long to fit, a scroll bar will be used.\n \n The text string can be plain text (with \\n line breaks) or HTML (if the first\n 6 characters of the string are html).\n \n This method will not return until the user presses the OK button.\n ",
      "javadoc": "Static helper method to easily display a modal message dialog showing a text string\n with an \"OK\" button.\n \u003cp\u003e\n If the text is too long to fit, a scroll bar will be used.\n \u003cp\u003e\n The text string can be plain text (with \\n line breaks) or HTML (if the first\n 6 characters of the string are \u003ccode\u003e\u0026lt;html\u0026gt;\u003c/code\u003e).\n \u003cp\u003e\n This method will not return until the user presses the OK button.\n \u003cp\u003e\n@param parent - parent component or null\n@param title - dialog title\n@param shortMessage - short message that appears above the main message.\n@param detailedMessage - long scrollable message.\n@param messageType - see {@link #ERROR_MESSAGE}, {@link #INFORMATION_MESSAGE},\n {@link #WARNING_MESSAGE}, {@link #QUESTION_MESSAGE}, {@link #PLAIN_MESSAGE}",
      "static": true,
      "params": [
        {
          "name": "parent",
          "type_long": "java.awt.Component",
          "type_short": "Component",
          "comment": "- parent component or null"
        },
        {
          "name": "title",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "- dialog title"
        },
        {
          "name": "shortMessage",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "- short message that appears above the main message."
        },
        {
          "name": "detailedMessage",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "- long scrollable message."
        },
        {
          "name": "messageType",
          "type_long": "int",
          "type_short": "int",
          "comment": "- see #ERROR_MESSAGE, #INFORMATION_MESSAGE,\n #WARNING_MESSAGE, #QUESTION_MESSAGE, #PLAIN_MESSAGE"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "showMessageDialog",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "parent",
          "type_long": "java.awt.Component",
          "type_short": "Component",
          "comment": ""
        },
        {
          "name": "title",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "shortMessage",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "detailedMessage",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "messageType",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Creates a multi-line popup dialog.",
      "javadoc": "Creates a multi-line popup dialog.\n@param title the dialog title\n@param shortMessage a short message to display at the top of the dialog\n@param detailedMessage the detailed message\n@param messageType the message type (warning, error, info, etc)\n@param modal true if the dialog should be modal",
      "static": false,
      "params": [
        {
          "name": "title",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the dialog title"
        },
        {
          "name": "shortMessage",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "a short message to display at the top of the dialog"
        },
        {
          "name": "detailedMessage",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the detailed message"
        },
        {
          "name": "messageType",
          "type_long": "int",
          "type_short": "int",
          "comment": "the message type (warning, error, info, etc)"
        },
        {
          "name": "modal",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true if the dialog should be modal"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "okCallback",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
