{
  "name": "InputWithChoicesDialog",
  "comment": "A dialog that has text fields to get user input.",
  "javadoc": "A dialog that has text fields to get user input.",
  "static": false,
  "implements": [],
  "extends": "docking.DialogComponentProvider",
  "fields": [
    {
      "name": "isCanceled",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "combo",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.widgets.combobox.GhidraComboBox\u003cjava.lang.String\u003e",
      "type_short": "GhidraComboBox",
      "constant_value": null
    },
    {
      "name": "allowEdits",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Creates a provider for a generic input dialog with the specified title,\n a label and a editable comboBox pre-populated with selectable values. The user\n can check the value of #isCanceled() to know whether or not \n the user canceled the operation. To get the user selected value use the\n #getValue() value(s) entered by the user.  If the user cancelled the operation, then\n null will be returned from getValue().\n ",
      "javadoc": "Creates a provider for a generic input dialog with the specified title,\n a label and a editable comboBox pre-populated with selectable values. The user\n can check the value of {@link #isCanceled()} to know whether or not \n the user canceled the operation. To get the user selected value use the\n {@link #getValue()} value(s) entered by the user.  If the user cancelled the operation, then\n null will be returned from \u003ccode\u003egetValue()\u003c/code\u003e.\n \u003cP\u003e\n@param dialogTitle used as the name of the dialog\u0027s title bar\n@param label value to use for the label of the text field\n@param optionValues values to populate the combo box\n@param initialValue the initial value - can be null\n@param messageIcon the icon to display on the dialog--can be null",
      "static": false,
      "params": [
        {
          "name": "dialogTitle",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "used as the name of the dialog\u0027s title bar"
        },
        {
          "name": "label",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "value to use for the label of the text field"
        },
        {
          "name": "optionValues",
          "type_long": "java.lang.String[]",
          "type_short": "java.lang.String[]",
          "comment": "values to populate the combo box"
        },
        {
          "name": "initialValue",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the initial value - can be null"
        },
        {
          "name": "messageIcon",
          "type_long": "javax.swing.Icon",
          "type_short": "Icon",
          "comment": "the icon to display on the dialog--can be null"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Creates a provider for a generic input dialog with the specified title,\n a label and a editable comboBox pre-populated with selectable values. The user\n can check the value of #isCanceled() to know whether or not \n the user canceled the operation. To get the user selected value use the\n #getValue() value(s) entered by the user.  If the user cancelled the operation, then\n null will be returned from getValue().\n ",
      "javadoc": "Creates a provider for a generic input dialog with the specified title,\n a label and a editable comboBox pre-populated with selectable values. The user\n can check the value of {@link #isCanceled()} to know whether or not \n the user canceled the operation. To get the user selected value use the\n {@link #getValue()} value(s) entered by the user.  If the user cancelled the operation, then\n null will be returned from \u003ccode\u003egetValue()\u003c/code\u003e.\n \u003cP\u003e\n@param dialogTitle used as the name of the dialog\u0027s title bar\n@param label value to use for the label of the text field\n@param optionValues values to populate the combo box\n@param initialValue the initial value - can be null\n@param allowEdits true allows the user to add custom entries to the combo box by entering text\n@param messageIcon the icon to display on the dialog--can be null",
      "static": false,
      "params": [
        {
          "name": "dialogTitle",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "used as the name of the dialog\u0027s title bar"
        },
        {
          "name": "label",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "value to use for the label of the text field"
        },
        {
          "name": "optionValues",
          "type_long": "java.lang.String[]",
          "type_short": "java.lang.String[]",
          "comment": "values to populate the combo box"
        },
        {
          "name": "initialValue",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the initial value - can be null"
        },
        {
          "name": "allowEdits",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true allows the user to add custom entries to the combo box by entering text"
        },
        {
          "name": "messageIcon",
          "type_long": "javax.swing.Icon",
          "type_short": "Icon",
          "comment": "the icon to display on the dialog--can be null"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "dialogShown",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "buildMainPanel",
      "comment": "completes the construction of the gui for this dialog",
      "javadoc": "completes the construction of the gui for this dialog",
      "static": false,
      "params": [
        {
          "name": "labelText",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "optionValues",
          "type_long": "java.lang.String[]",
          "type_short": "java.lang.String[]",
          "comment": ""
        },
        {
          "name": "initialValue",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "messageIcon",
          "type_long": "javax.swing.Icon",
          "type_short": "Icon",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createComboBox",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "optionValues",
          "type_long": "java.lang.String[]",
          "type_short": "java.lang.String[]",
          "comment": ""
        },
        {
          "name": "initialValue",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.widgets.combobox.GhidraComboBox\u003cjava.lang.String\u003e",
        "type_short": "GhidraComboBox",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "okCallback",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "cancelCallback",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isCanceled",
      "comment": "Returns if this dialog is canceled.",
      "javadoc": "Returns if this dialog is canceled.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getValue",
      "comment": "return the value of the first combo box",
      "javadoc": "return the value of the first combo box",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setValue",
      "comment": "Set the current choice to value.",
      "javadoc": "Set the current choice to value.\n@param value updated choice\n@throws NoSuchElementException if choice does not permit edits and value is\n not a valid choice.",
      "static": false,
      "params": [
        {
          "name": "value",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "updated choice"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
