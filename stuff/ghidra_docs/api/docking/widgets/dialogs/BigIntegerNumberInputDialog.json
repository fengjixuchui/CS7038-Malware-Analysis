{
  "name": "BigIntegerNumberInputDialog",
  "comment": "DialogComponentProvider that provides information to create a modal dialog\n to prompt for a number larger than an  or  to be input by the user.\n\n Note: if you intend to only work with number values less than Integer#MAX_VALUE, \n then you should use the NumberInputDialog.\n\n If an initial value is specified it is not in the range of min,max, it will be set to the min.\n\n If the maximum value indicated is less than the minimum then the max\n is the largest positive integer. Otherwise the maximum valid value is\n as indicated.\n\n This dialog component provider class can be used by various classes and\n therefore should not have its size or position remembered by the\n tool.showDialog() call parameters.\n To display the dialog call:\n \n \n     String entryType \u003d \"items\";\n     BigInteger initial \u003d 5; // initial value in text field\n     BigInteger min \u003d BigInteger.valueOf(1);     // minimum valid value in text field\n     BigInteger max \u003d BigInteger.valueOf(10);    // maximum valid value in text field\n\n     BigIntegerNumberInputDialog provider \u003d \n     \tnew BigIntegerNumberInputDialog(\"Title\", entryType, initial, min, max);\n     if (numInputProvider.show()) {\n     \t   // not cancelled\n     \t   BigInteger result \u003d provider.getValue();\n     \t   long longResult \u003d provider.getLongValue();\n     }\n \n ",
  "javadoc": "\u003cP\u003eDialogComponentProvider that provides information to create a modal dialog\n to prompt for a number larger than an {@code int} or {@code long} to be input by the user.\u003c/P\u003e\n\n \u003cP\u003eNote: if you intend to only work with number values less than {@link Integer#MAX_VALUE}, \n then you should use the {@link NumberInputDialog}.\n\n \u003cP\u003eIf an initial value is specified it is not in the range of min,max, it will be set to the min.\u003c/P\u003e\n\n \u003cP\u003eIf the maximum value indicated is less than the minimum then the max\n is the largest positive integer. Otherwise the maximum valid value is\n as indicated.\u003c/P\u003e\n\n \u003cP\u003eThis dialog component provider class can be used by various classes and\n therefore should not have its size or position remembered by the\n tool.showDialog() call parameters.\u003c/P\u003e\n \u003cbr\u003eTo display the dialog call:\n \u003cpre\u003e\n \u003ccode\u003e\n     String entryType \u003d \"items\";\n     BigInteger initial \u003d 5; // initial value in text field\n     BigInteger min \u003d BigInteger.valueOf(1);     // minimum valid value in text field\n     BigInteger max \u003d BigInteger.valueOf(10);    // maximum valid value in text field\n\n     BigIntegerNumberInputDialog provider \u003d \n     \tnew BigIntegerNumberInputDialog(\"Title\", entryType, initial, min, max);\n     if (numInputProvider.show()) {\n     \t   // not cancelled\n     \t   BigInteger result \u003d provider.getValue();\n     \t   long longResult \u003d provider.getLongValue();\n     }\n \u003c/code\u003e\n \u003c/pre\u003e",
  "static": false,
  "implements": [],
  "extends": "docking.widgets.dialogs.AbstractNumberInputDialog",
  "fields": [],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "title",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "prompt",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "initialValue",
          "type_long": "java.math.BigInteger",
          "type_short": "BigInteger",
          "comment": ""
        },
        {
          "name": "min",
          "type_long": "java.math.BigInteger",
          "type_short": "BigInteger",
          "comment": ""
        },
        {
          "name": "max",
          "type_long": "java.math.BigInteger",
          "type_short": "BigInteger",
          "comment": ""
        },
        {
          "name": "showAsHex",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getValue",
      "comment": "Get the current input value",
      "javadoc": "Get the current input value\n@return the value\n@throws NumberFormatException if entered value cannot be parsed\n@throws IllegalStateException if the dialog was cancelled",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.math.BigInteger",
        "type_short": "BigInteger",
        "comment": "the value"
      },
      "throws": []
    }
  ]
}
