{
  "name": "ScrollableTextArea",
  "comment": "A JScrollPane wrapper for a text area that can be told to scroll to bottom",
  "javadoc": "A JScrollPane wrapper for a text area that can be told to scroll to bottom",
  "static": false,
  "implements": [],
  "extends": "javax.swing.JScrollPane",
  "fields": [
    {
      "name": "textArea",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.widgets.ScrollableTextArea.PrivateTextArea",
      "type_short": "PrivateTextArea",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a scrollable JTextArea, where a default model is set,\n the initial string is null, and rows/columns are set to 0.",
      "javadoc": "Constructs a scrollable JTextArea, where a default model is set,\n the initial string is null, and rows/columns are set to 0.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a scrollable JextArea with the specified text displayed.\n A default model is created and rows/columns are set to 0.",
      "javadoc": "Constructs a scrollable JextArea with the specified text displayed.\n A default model is created and rows/columns are set to 0.\n@param text the initial text.",
      "static": false,
      "params": [
        {
          "name": "text",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the initial text."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new empty TextArea with the specified number\n of rows and columns. A default model is created, and the\n initial string is null.",
      "javadoc": "Constructs a new empty TextArea with the specified number\n of rows and columns. A default model is created, and the\n initial string is null.\n@param rows the number of visible rows.\n@param columns the number of visible columns.",
      "static": false,
      "params": [
        {
          "name": "rows",
          "type_long": "int",
          "type_short": "int",
          "comment": "the number of visible rows."
        },
        {
          "name": "columns",
          "type_long": "int",
          "type_short": "int",
          "comment": "the number of visible columns."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a scrollable JTextArea with the specified text and \n number of rows and columns. A default model is created.",
      "javadoc": "Constructs a scrollable JTextArea with the specified text and \n number of rows and columns. A default model is created.\n@param text initial text.\n@param rows the number of visible rows.\n@param columns the number of visible columns.",
      "static": false,
      "params": [
        {
          "name": "text",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "initial text."
        },
        {
          "name": "rows",
          "type_long": "int",
          "type_short": "int",
          "comment": "the number of visible rows."
        },
        {
          "name": "columns",
          "type_long": "int",
          "type_short": "int",
          "comment": "the number of visible columns."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a scrollable JTextArea with the given document model,\n and defaults for all of the other arguments (null, 0, 0).",
      "javadoc": "Constructs a scrollable JTextArea with the given document model,\n and defaults for all of the other arguments (null, 0, 0).\n@param doc - the model to use",
      "static": false,
      "params": [
        {
          "name": "doc",
          "type_long": "javax.swing.text.Document",
          "type_short": "Document",
          "comment": "- the model to use"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a scrollable JTextArea with the specified number of\n rows and columns, and the given model. All of the\n constructors feed through this constructor.",
      "javadoc": "Constructs a scrollable JTextArea with the specified number of\n rows and columns, and the given model. All of the\n constructors feed through this constructor.\n@param doc - the model to use\n@param text initial text.\n@param rows the number of visible rows.\n@param columns the number of visible columns.",
      "static": false,
      "params": [
        {
          "name": "doc",
          "type_long": "javax.swing.text.Document",
          "type_short": "Document",
          "comment": "- the model to use"
        },
        {
          "name": "text",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "initial text."
        },
        {
          "name": "rows",
          "type_long": "int",
          "type_short": "int",
          "comment": "the number of visible rows."
        },
        {
          "name": "columns",
          "type_long": "int",
          "type_short": "int",
          "comment": "the number of visible columns."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "append",
      "comment": "Appends the text to the text area maintained in this scroll pane",
      "javadoc": "Appends the text to the text area maintained in this scroll pane\n@param text the text to append.",
      "static": false,
      "params": [
        {
          "name": "text",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the text to append."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLineCount",
      "comment": "Returns the number of lines current set in the text area",
      "javadoc": "Returns the number of lines current set in the text area\n@return the count",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the count"
      },
      "throws": []
    },
    {
      "name": "getTabSize",
      "comment": "Returns the tab size set in the text area",
      "javadoc": "Returns the tab size set in the text area\n@return the size",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the size"
      },
      "throws": []
    },
    {
      "name": "getTextAreaHeight",
      "comment": "Returns the total area height of the text area (row height * line count)",
      "javadoc": "Returns the total area height of the text area (row height * line count)\n@return the height",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the height"
      },
      "throws": []
    },
    {
      "name": "getTextVisibleHeight",
      "comment": "Returns the visible height of the text area",
      "javadoc": "Returns the visible height of the text area\n@return the height",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the height"
      },
      "throws": []
    },
    {
      "name": "insert",
      "comment": "Inserts the string at the specified position",
      "javadoc": "Inserts the string at the specified position\n@param text the text to insert.\n@param position the character postition at which to insert the text.",
      "static": false,
      "params": [
        {
          "name": "text",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the text to insert."
        },
        {
          "name": "position",
          "type_long": "int",
          "type_short": "int",
          "comment": "the character postition at which to insert the text."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "replaceRange",
      "comment": "replaces the range of text specified",
      "javadoc": "replaces the range of text specified\n@param text the new text that will replace the old text.\n@param start the starting character postition of the text to replace.\n@param end the ending character position of the text to replace.",
      "static": false,
      "params": [
        {
          "name": "text",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the new text that will replace the old text."
        },
        {
          "name": "start",
          "type_long": "int",
          "type_short": "int",
          "comment": "the starting character postition of the text to replace."
        },
        {
          "name": "end",
          "type_long": "int",
          "type_short": "int",
          "comment": "the ending character position of the text to replace."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setCaretPosition",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "position",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPreferredSize",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Dimension",
        "type_short": "Dimension",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "scrollToBottom",
      "comment": "forces the scroll pane to scroll to bottom of text area",
      "javadoc": "forces the scroll pane to scroll to bottom of text area",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "scrollToTop",
      "comment": "Scroll the pane to the top of the text area.",
      "javadoc": "Scroll the pane to the top of the text area.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setTabSize",
      "comment": "Sets the number of characters to expand tabs to. This will be\n multiplied by the maximum advance for variable width fonts.\n A PropertyChange event (\"tabSize\") is fired when tab size changes.",
      "javadoc": "Sets the number of characters to expand tabs to. This will be\n multiplied by the maximum advance for variable width fonts.\n A PropertyChange event (\"tabSize\") is fired when tab size changes.\n@param tabSize the new tab size.",
      "static": false,
      "params": [
        {
          "name": "tabSize",
          "type_long": "int",
          "type_short": "int",
          "comment": "the new tab size."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setText",
      "comment": "set the text in the text area",
      "javadoc": "set the text in the text area\n@param text the text to set.",
      "static": false,
      "params": [
        {
          "name": "text",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the text to set."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getText",
      "comment": "Returns the text contained within the text area",
      "javadoc": "Returns the text contained within the text area\n@return the text",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the text"
      },
      "throws": []
    },
    {
      "name": "setEditable",
      "comment": "Sets the ability to edit the text area content",
      "javadoc": "Sets the ability to edit the text area content\n@param editable true to edit, false to not allow edit.",
      "static": false,
      "params": [
        {
          "name": "editable",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true to edit, false to not allow edit."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "initialize",
      "comment": "used by all constructors to finish initialization of the object",
      "javadoc": "used by all constructors to finish initialization of the object",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
