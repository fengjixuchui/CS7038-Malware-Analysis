{
  "name": "FlowLayoutTextField",
  "comment": "This class provides a TextField implementation that takes multiple AttributedString field\n elements and places as many that will fit on a line without clipping before continuing to the\n next line.",
  "javadoc": "This class provides a TextField implementation that takes multiple AttributedString field\n elements and places as many that will fit on a line without clipping before continuing to the\n next line.",
  "static": false,
  "implements": [],
  "extends": "docking.widgets.fieldpanel.field.VerticalLayoutTextField",
  "fields": [],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "This constructor will create a text field that will render one line of text. If\n metrics.stringWidth(text)  width, then the text will be wrapped.\n If text contains the highlight string, then it will be highlighted using the\n highlight color.",
      "javadoc": "This constructor will create a text field that will render one line of text. If\n \u003ccode\u003emetrics.stringWidth(text) \u0026gt; width\u003c/code\u003e, then the text will be wrapped.\n If \u003ccode\u003etext\u003c/code\u003e contains the highlight string, then it will be highlighted using the\n highlight color.\n@param textElements the AttributedStrings to display\n@param startX the x position to draw the string\n@param width the max width allocated to this field\n@param maxLines the max number of lines to display\n@param hlFactory the highlight factory\n@deprecated use the constructor that takes a list",
      "static": false,
      "params": [
        {
          "name": "textElements",
          "type_long": "docking.widgets.fieldpanel.field.FieldElement[]",
          "type_short": "docking.widgets.fieldpanel.field.FieldElement[]",
          "comment": "the AttributedStrings to display"
        },
        {
          "name": "startX",
          "type_long": "int",
          "type_short": "int",
          "comment": "the x position to draw the string"
        },
        {
          "name": "width",
          "type_long": "int",
          "type_short": "int",
          "comment": "the max width allocated to this field"
        },
        {
          "name": "maxLines",
          "type_long": "int",
          "type_short": "int",
          "comment": "the max number of lines to display"
        },
        {
          "name": "hlFactory",
          "type_long": "docking.widgets.fieldpanel.support.HighlightFactory",
          "type_short": "HighlightFactory",
          "comment": "the highlight factory"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "This constructor will create a text field that will render one line of text. If\n metrics.stringWidth(text)  width, then the text will be wrapped.\n If text contains the highlight string, then it will be highlighted using the\n highlight color.",
      "javadoc": "This constructor will create a text field that will render one line of text. If\n \u003ccode\u003emetrics.stringWidth(text) \u0026gt; width\u003c/code\u003e, then the text will be wrapped.\n If \u003ccode\u003etext\u003c/code\u003e contains the highlight string, then it will be highlighted using the\n highlight color.\n@param elements the AttributedStrings to display\n@param startX the x position to draw the string\n@param width the max width allocated to this field\n@param maxLines the max number of lines to display\n@param hlFactory the highlight factory",
      "static": false,
      "params": [
        {
          "name": "elements",
          "type_long": "java.util.List\u003cdocking.widgets.fieldpanel.field.FieldElement\u003e",
          "type_short": "List",
          "comment": "the AttributedStrings to display"
        },
        {
          "name": "startX",
          "type_long": "int",
          "type_short": "int",
          "comment": "the x position to draw the string"
        },
        {
          "name": "width",
          "type_long": "int",
          "type_short": "int",
          "comment": "the max width allocated to this field"
        },
        {
          "name": "maxLines",
          "type_long": "int",
          "type_short": "int",
          "comment": "the max number of lines to display"
        },
        {
          "name": "hlFactory",
          "type_long": "docking.widgets.fieldpanel.support.HighlightFactory",
          "type_short": "HighlightFactory",
          "comment": "the highlight factory"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createLineElements",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "elements",
          "type_long": "java.util.List\u003cdocking.widgets.fieldpanel.field.FieldElement\u003e",
          "type_short": "List",
          "comment": ""
        },
        {
          "name": "width",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.List\u003cdocking.widgets.fieldpanel.field.FieldElement\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createFieldForLine",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "element",
          "type_long": "docking.widgets.fieldpanel.field.FieldElement",
          "type_short": "FieldElement",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.widgets.fieldpanel.field.TextField",
        "type_short": "TextField",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createLineFromElements",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "elements",
          "type_long": "java.util.List\u003cdocking.widgets.fieldpanel.field.FieldElement\u003e",
          "type_short": "List",
          "comment": ""
        },
        {
          "name": "start",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "length",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.widgets.fieldpanel.field.CompositeFieldElement",
        "type_short": "CompositeFieldElement",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getNumberOfElementsPerLine",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "elements",
          "type_long": "java.util.List\u003cdocking.widgets.fieldpanel.field.FieldElement\u003e",
          "type_short": "List",
          "comment": ""
        },
        {
          "name": "start",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "width",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    }
  ]
}
