{
  "name": "Field",
  "comment": "Interface for display fields used by the FieldPanel",
  "javadoc": "Interface for display fields used by the FieldPanel",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "getWidth",
      "comment": "Returns the current width of this field",
      "javadoc": "Returns the current width of this field\n@return the current width of this field",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the current width of this field"
      },
      "throws": []
    },
    {
      "name": "getPreferredWidth",
      "comment": "The minimum required width to paint the contents of this field",
      "javadoc": "The minimum required width to paint the contents of this field\n@return the minimum required width to paint the contents of this field",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the minimum required width to paint the contents of this field"
      },
      "throws": []
    },
    {
      "name": "getHeight",
      "comment": "Returns the height of this field when populated with the given data",
      "javadoc": "Returns the height of this field when populated with the given data\n@return the height",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the height"
      },
      "throws": []
    },
    {
      "name": "getHeightAbove",
      "comment": "Returns the height above the baseLine",
      "javadoc": "Returns the height above the baseLine\n@return the height above",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the height above"
      },
      "throws": []
    },
    {
      "name": "getHeightBelow",
      "comment": "Returns the height below the baseLine",
      "javadoc": "Returns the height below the baseLine\n@return the height below",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the height below"
      },
      "throws": []
    },
    {
      "name": "getStartX",
      "comment": "Returns the horizontal position of this field",
      "javadoc": "Returns the horizontal position of this field\n@return the position",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the position"
      },
      "throws": []
    },
    {
      "name": "paint",
      "comment": "Paints this field",
      "javadoc": "Paints this field\n@param c the component to paint onto\n@param g the graphics context\n@param context common paint parameters\n@param clip the clipping region to paint into\n@param colorManager contains background color information for the field\n@param cursorLoc the row,column cursor location within the field or null if the field does\n not contain the cursor\n@param rowHeight the number of pixels in each row of text in the field",
      "static": false,
      "params": [
        {
          "name": "c",
          "type_long": "javax.swing.JComponent",
          "type_short": "JComponent",
          "comment": "the component to paint onto"
        },
        {
          "name": "g",
          "type_long": "java.awt.Graphics",
          "type_short": "Graphics",
          "comment": "the graphics context"
        },
        {
          "name": "context",
          "type_long": "docking.widgets.fieldpanel.internal.PaintContext",
          "type_short": "PaintContext",
          "comment": "common paint parameters"
        },
        {
          "name": "clip",
          "type_long": "java.awt.Rectangle",
          "type_short": "Rectangle",
          "comment": "the clipping region to paint into"
        },
        {
          "name": "colorManager",
          "type_long": "docking.widgets.fieldpanel.internal.FieldBackgroundColorManager",
          "type_short": "FieldBackgroundColorManager",
          "comment": "contains background color information for the field"
        },
        {
          "name": "cursorLoc",
          "type_long": "docking.widgets.fieldpanel.support.RowColLocation",
          "type_short": "RowColLocation",
          "comment": "the row,column cursor location within the field or null if the field does\n not contain the cursor"
        },
        {
          "name": "rowHeight",
          "type_long": "int",
          "type_short": "int",
          "comment": "the number of pixels in each row of text in the field"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "contains",
      "comment": "Returns true if the given point is in this field",
      "javadoc": "Returns true if the given point is in this field\n@param x the horizontal coordinate of the point\n@param y the relative y position in this layout\n@return true if the given point is in this field",
      "static": false,
      "params": [
        {
          "name": "x",
          "type_long": "int",
          "type_short": "int",
          "comment": "the horizontal coordinate of the point"
        },
        {
          "name": "y",
          "type_long": "int",
          "type_short": "int",
          "comment": "the relative y position in this layout"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the given point is in this field"
      },
      "throws": []
    },
    {
      "name": "getNumDataRows",
      "comment": "Returns the number of data model rows represented by this field.  Some fields may change\n the row count by wrapping or truncating.  The value returned here will be the original data\n row count before any transformations were applied.",
      "javadoc": "Returns the number of data model rows represented by this field.  Some fields may change\n the row count by wrapping or truncating.  The value returned here will be the original data\n row count before any transformations were applied.\n@return the number of data rows",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the number of data rows"
      },
      "throws": []
    },
    {
      "name": "getNumRows",
      "comment": "Returns the number of rows in this field",
      "javadoc": "Returns the number of rows in this field\n@return the number of rows in this field",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the number of rows in this field"
      },
      "throws": []
    },
    {
      "name": "getNumCols",
      "comment": "Returns the number of columns in the given row",
      "javadoc": "Returns the number of columns in the given row\n@param row the row from which to get the number of columns; this is the screen row\n@return the number of columns",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "the row from which to get the number of columns; this is the screen row"
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the number of columns"
      },
      "throws": []
    },
    {
      "name": "getX",
      "comment": "Returns the x coordinate for the given cursor position",
      "javadoc": "Returns the x coordinate for the given cursor position\n@param row the text row of interest\n@param col the character column\n@return the x value",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "the text row of interest"
        },
        {
          "name": "col",
          "type_long": "int",
          "type_short": "int",
          "comment": "the character column"
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the x value"
      },
      "throws": []
    },
    {
      "name": "getY",
      "comment": "Returns the y coordinate for the given row",
      "javadoc": "Returns the y coordinate for the given row\n@param row the text row of interest\n@return the y value",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "the text row of interest"
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the y value"
      },
      "throws": []
    },
    {
      "name": "getRow",
      "comment": "Returns the row containing the given y coordinate",
      "javadoc": "Returns the row containing the given y coordinate\n@param y vertical pixel coordinate relative to the top of the screen\n@return the row",
      "static": false,
      "params": [
        {
          "name": "y",
          "type_long": "int",
          "type_short": "int",
          "comment": "vertical pixel coordinate relative to the top of the screen"
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the row"
      },
      "throws": []
    },
    {
      "name": "getCol",
      "comment": "Returns the cursor column position for the given x coordinate on the given row",
      "javadoc": "Returns the cursor column position for the given x coordinate on the given row\n@param row the text row to find the column on\n@param x the horizontal pixel coordinate for which to find the character position\n@return the column",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "the text row to find the column on"
        },
        {
          "name": "x",
          "type_long": "int",
          "type_short": "int",
          "comment": "the horizontal pixel coordinate for which to find the character position"
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the column"
      },
      "throws": []
    },
    {
      "name": "isValid",
      "comment": "Returns true if the given row and column represent a valid location for this field with\n the given data",
      "javadoc": "Returns true if the given row and column represent a valid location for this field with\n the given data\n@param row the text row\n@param col the character position\n@return tru if valid",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "the text row"
        },
        {
          "name": "col",
          "type_long": "int",
          "type_short": "int",
          "comment": "the character position"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "tru if valid"
      },
      "throws": []
    },
    {
      "name": "getCursorBounds",
      "comment": "Returns a bounding rectangle for the cursor at the given position",
      "javadoc": "Returns a bounding rectangle for the cursor at the given position\n@param row the text row\n@param col the character position\n@return the rectangle",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "the text row"
        },
        {
          "name": "col",
          "type_long": "int",
          "type_short": "int",
          "comment": "the character position"
        }
      ],
      "return": {
        "type_long": "java.awt.Rectangle",
        "type_short": "Rectangle",
        "comment": "the rectangle"
      },
      "throws": []
    },
    {
      "name": "getScrollableUnitIncrement",
      "comment": "Returns the amount to scroll to the next or previous line",
      "javadoc": "Returns the amount to scroll to the next or previous line\n@param topOfScreen the current y position of the top of the screen\n@param direction the direction of the scroll (1 down, -1 up)\n@param max the maximum amount to scroll for the entire row - will be positive for down, and\n \t\tnegative for up)\n@return the scroll amount",
      "static": false,
      "params": [
        {
          "name": "topOfScreen",
          "type_long": "int",
          "type_short": "int",
          "comment": "the current y position of the top of the screen"
        },
        {
          "name": "direction",
          "type_long": "int",
          "type_short": "int",
          "comment": "the direction of the scroll (1 down, -1 up)"
        },
        {
          "name": "max",
          "type_long": "int",
          "type_short": "int",
          "comment": "the maximum amount to scroll for the entire row - will be positive for down, and\n \t\tnegative for up)"
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the scroll amount"
      },
      "throws": []
    },
    {
      "name": "isPrimary",
      "comment": "Returns true if this field is \"primary\" (the most important) field;  used to determine the\n \"primary\" line in the layout",
      "javadoc": "Returns true if this field is \"primary\" (the most important) field;  used to determine the\n \"primary\" line in the layout\n@return true if this field is \"primary\"",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if this field is \"primary\""
      },
      "throws": []
    },
    {
      "name": "rowHeightChanged",
      "comment": "notifies field that the rowHeight changed",
      "javadoc": "notifies field that the rowHeight changed\n@param heightAbove the height above the baseline\n@param heightBelow the height below the baseline",
      "static": false,
      "params": [
        {
          "name": "heightAbove",
          "type_long": "int",
          "type_short": "int",
          "comment": "the height above the baseline"
        },
        {
          "name": "heightBelow",
          "type_long": "int",
          "type_short": "int",
          "comment": "the height below the baseline"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getText",
      "comment": "Returns a string containing all the text in the field",
      "javadoc": "Returns a string containing all the text in the field\n@return the string",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the string"
      },
      "throws": []
    },
    {
      "name": "getTextWithLineSeparators",
      "comment": "Returns a string containing all the text in the field with extra newlines",
      "javadoc": "Returns a string containing all the text in the field with extra newlines\n@return a string containing all the text in the field with extra newlines",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "a string containing all the text in the field with extra newlines"
      },
      "throws": []
    },
    {
      "name": "textOffsetToScreenLocation",
      "comment": "Returns the row, column position  for an offset into the string returned by getText()",
      "javadoc": "Returns the row, column position  for an offset into the string returned by getText()\n@param textOffset the offset into the entire text string for this field\n@return a RowColLocation that contains the row,column location in the field for a position in\n \t\tthe overall field text",
      "static": false,
      "params": [
        {
          "name": "textOffset",
          "type_long": "int",
          "type_short": "int",
          "comment": "the offset into the entire text string for this field"
        }
      ],
      "return": {
        "type_long": "docking.widgets.fieldpanel.support.RowColLocation",
        "type_short": "RowColLocation",
        "comment": "a RowColLocation that contains the row,column location in the field for a position in\n \t\tthe overall field text"
      },
      "throws": []
    },
    {
      "name": "screenLocationToTextOffset",
      "comment": "Returns the text offset in the overall field text string for the given row and column",
      "javadoc": "Returns the text offset in the overall field text string for the given row and column\n@param row the row\n@param col the column\n@return the offset",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "the row"
        },
        {
          "name": "col",
          "type_long": "int",
          "type_short": "int",
          "comment": "the column"
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the offset"
      },
      "throws": []
    }
  ]
}
