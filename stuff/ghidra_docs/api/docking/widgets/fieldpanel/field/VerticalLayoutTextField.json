{
  "name": "VerticalLayoutTextField",
  "comment": "This class provides a TextField implementation that takes multiple FieldElements and places\n each on its own line within the field.",
  "javadoc": "This class provides a TextField implementation that takes multiple FieldElements and places\n each on its own line within the field.",
  "static": false,
  "implements": [
    "docking.widgets.fieldpanel.field.TextField"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "subFields",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cdocking.widgets.fieldpanel.field.VerticalLayoutTextField.FieldRow\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "startX",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "width",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "preferredWidth",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "hlFactory",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.widgets.fieldpanel.support.HighlightFactory",
      "type_short": "HighlightFactory",
      "constant_value": null
    },
    {
      "name": "height",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "heightAbove",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "numDataRows",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "isPrimary",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "fullText",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "lines",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cjava.lang.String\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "rowSeparator",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "isClipped",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "This constructor will create a text field from an array of FieldElements, putting each\n element on its own line.",
      "javadoc": "This constructor will create a text field from an array of FieldElements, putting each\n element on its own line.\n@param textElements the FieldElements to display\n@param startX the x position to draw the element\n@param width the max width allocated to this field\n@param maxLines the max number of lines to display\n@param hlFactory the highlight factory\n@deprecated use the constructor that takes a list",
      "static": false,
      "params": [
        {
          "name": "textElements",
          "type_long": "docking.widgets.fieldpanel.field.FieldElement[]",
          "type_short": "docking.widgets.fieldpanel.field.FieldElement[]",
          "comment": "the FieldElements to display"
        },
        {
          "name": "startX",
          "type_long": "int",
          "type_short": "int",
          "comment": "the x position to draw the element"
        },
        {
          "name": "width",
          "type_long": "int",
          "type_short": "int",
          "comment": "the max width allocated to this field"
        },
        {
          "name": "maxLines",
          "type_long": "int",
          "type_short": "int",
          "comment": "the max number of lines to display"
        },
        {
          "name": "hlFactory",
          "type_long": "docking.widgets.fieldpanel.support.HighlightFactory",
          "type_short": "HighlightFactory",
          "comment": "the highlight factory"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "This constructor will create a text field from an array of FieldElements, putting each\n element on its own line.",
      "javadoc": "This constructor will create a text field from an array of FieldElements, putting each\n element on its own line.\n@param textElements the FieldElements to display\n@param startX the x position to draw the element\n@param width the max width allocated to this field\n@param maxLines the max number of lines to display\n@param hlFactory the highlight factory",
      "static": false,
      "params": [
        {
          "name": "textElements",
          "type_long": "java.util.List\u003cdocking.widgets.fieldpanel.field.FieldElement\u003e",
          "type_short": "List",
          "comment": "the FieldElements to display"
        },
        {
          "name": "startX",
          "type_long": "int",
          "type_short": "int",
          "comment": "the x position to draw the element"
        },
        {
          "name": "width",
          "type_long": "int",
          "type_short": "int",
          "comment": "the max width allocated to this field"
        },
        {
          "name": "maxLines",
          "type_long": "int",
          "type_short": "int",
          "comment": "the max number of lines to display"
        },
        {
          "name": "hlFactory",
          "type_long": "docking.widgets.fieldpanel.support.HighlightFactory",
          "type_short": "HighlightFactory",
          "comment": "the highlight factory"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "This constructor will create a text field from an array of FieldElements, putting each\n element on its own line.",
      "javadoc": "This constructor will create a text field from an array of FieldElements, putting each\n element on its own line.\n@param textElements the FieldElements to display\n@param startX the x position to draw the element\n@param width the max width allocated to this field\n@param maxLines the max number of lines to display\n@param hlFactory the highlight factory\n@param rowSeparator The string used to space lines of text when concatenated by the\n        getText() method.",
      "static": false,
      "params": [
        {
          "name": "textElements",
          "type_long": "java.util.List\u003cdocking.widgets.fieldpanel.field.FieldElement\u003e",
          "type_short": "List",
          "comment": "the FieldElements to display"
        },
        {
          "name": "startX",
          "type_long": "int",
          "type_short": "int",
          "comment": "the x position to draw the element"
        },
        {
          "name": "width",
          "type_long": "int",
          "type_short": "int",
          "comment": "the max width allocated to this field"
        },
        {
          "name": "maxLines",
          "type_long": "int",
          "type_short": "int",
          "comment": "the max number of lines to display"
        },
        {
          "name": "hlFactory",
          "type_long": "docking.widgets.fieldpanel.support.HighlightFactory",
          "type_short": "HighlightFactory",
          "comment": "the highlight factory"
        },
        {
          "name": "rowSeparator",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "The string used to space lines of text when concatenated by the\n        getText() method."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "generateLines",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "textElements",
          "type_long": "java.util.List\u003cdocking.widgets.fieldpanel.field.FieldElement\u003e",
          "type_short": "List",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.List\u003cjava.lang.String\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "generateText",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "elements",
          "type_long": "java.util.List\u003cdocking.widgets.fieldpanel.field.FieldElement\u003e",
          "type_short": "List",
          "comment": ""
        },
        {
          "name": "delimiter",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "calculateHeight",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "calculatePreferredWidth",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getText",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getTextWithLineSeparators",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getWidth",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPreferredWidth",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getHeight",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getStartX",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getNumDataRows",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getNumRows",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getNumCols",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getRow",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "y",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getCol",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "x",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getY",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getX",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "col",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isValid",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "col",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "paint",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "c",
          "type_long": "javax.swing.JComponent",
          "type_short": "JComponent",
          "comment": ""
        },
        {
          "name": "g",
          "type_long": "java.awt.Graphics",
          "type_short": "Graphics",
          "comment": ""
        },
        {
          "name": "context",
          "type_long": "docking.widgets.fieldpanel.internal.PaintContext",
          "type_short": "PaintContext",
          "comment": ""
        },
        {
          "name": "clip",
          "type_long": "java.awt.Rectangle",
          "type_short": "Rectangle",
          "comment": ""
        },
        {
          "name": "colorManager",
          "type_long": "docking.widgets.fieldpanel.internal.FieldBackgroundColorManager",
          "type_short": "FieldBackgroundColorManager",
          "comment": ""
        },
        {
          "name": "cursorLoc",
          "type_long": "docking.widgets.fieldpanel.support.RowColLocation",
          "type_short": "RowColLocation",
          "comment": ""
        },
        {
          "name": "rowHeight",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "print",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "g",
          "type_long": "java.awt.Graphics",
          "type_short": "Graphics",
          "comment": ""
        },
        {
          "name": "context",
          "type_long": "docking.widgets.fieldpanel.internal.PaintContext",
          "type_short": "PaintContext",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getCursorBounds",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "col",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.awt.Rectangle",
        "type_short": "Rectangle",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "contains",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "x",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "y",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getScrollableUnitIncrement",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "topOfScreen",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "direction",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "max",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isPrimary",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setPrimary",
      "comment": "Sets the primary State.",
      "javadoc": "Sets the primary State.\n@param state the state to set.",
      "static": false,
      "params": [
        {
          "name": "state",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "the state to set."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getHeightAbove",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getHeightBelow",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "rowHeightChanged",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "heightAbove1",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "heightBelow",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFieldElement",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "screenRow",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "screenColumn",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.widgets.fieldpanel.field.FieldElement",
        "type_short": "FieldElement",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "layoutElements",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "textElements",
          "type_long": "java.util.List\u003cdocking.widgets.fieldpanel.field.FieldElement\u003e",
          "type_short": "List",
          "comment": ""
        },
        {
          "name": "maxLines",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.List\u003cdocking.widgets.fieldpanel.field.VerticalLayoutTextField.FieldRow\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createFieldForLine",
      "comment": "Create the text field for given field element",
      "javadoc": "Create the text field for given field element\n@param element the element\n@return the field",
      "static": false,
      "params": [
        {
          "name": "element",
          "type_long": "docking.widgets.fieldpanel.field.FieldElement",
          "type_short": "FieldElement",
          "comment": "the element"
        }
      ],
      "return": {
        "type_long": "docking.widgets.fieldpanel.field.TextField",
        "type_short": "TextField",
        "comment": "the field"
      },
      "throws": []
    },
    {
      "name": "screenToDataLocation",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "screenRow",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "screenColumn",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.widgets.fieldpanel.support.RowColLocation",
        "type_short": "RowColLocation",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "dataToScreenLocation",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "dataRow",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "dataColumn",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.widgets.fieldpanel.support.RowColLocation",
        "type_short": "RowColLocation",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "screenLocationToTextOffset",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "col",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "textOffsetToScreenLocation",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "textOffset",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.widgets.fieldpanel.support.RowColLocation",
        "type_short": "RowColLocation",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isClipped",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLines",
      "comment": "Returns the view\u0027s text lines of this field",
      "javadoc": "Returns the view\u0027s text lines of this field\n@return the lines",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cjava.lang.String\u003e",
        "type_short": "List",
        "comment": "the lines"
      },
      "throws": []
    },
    {
      "name": "getField",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "screenRow",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.widgets.fieldpanel.field.TextField",
        "type_short": "TextField",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFieldRowFromDataRow",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "dataRow",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.widgets.fieldpanel.field.VerticalLayoutTextField.FieldRow",
        "type_short": "FieldRow",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDataRow",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "field",
          "type_long": "docking.widgets.fieldpanel.field.TextField",
          "type_short": "TextField",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    }
  ]
}
