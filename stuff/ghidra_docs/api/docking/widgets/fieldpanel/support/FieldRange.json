{
  "name": "FieldRange",
  "comment": "Class to a range consisting of a start position within a start row to an end position within an \n  end row (exclusive).  \n  \n  Conceptually, this class can be thought of as a range of rows (defined by \n  startIndex and endindex) with sub-positions within those rows (defined by\n  startField and endField). As an example, consider a text select that begins on\n  some word in a row and ends on another word in a different row.",
  "javadoc": "Class to a range consisting of a start position within a start row to an end position within an \n  end row (exclusive).  \n  \u003cp\u003e\n  Conceptually, this class can be thought of as a range of rows (defined by \n  \u003ccode\u003estartIndex\u003c/code\u003e and \u003ccode\u003eendindex\u003c/code\u003e) with sub-positions within those rows (defined by\n  \u003ccode\u003estartField\u003c/code\u003e and \u003ccode\u003eendField\u003c/code\u003e). As an example, consider a text select that begins on\n  some word in a row and ends on another word in a different row.",
  "static": false,
  "implements": [
    "java.lang.Comparable"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "start",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.widgets.fieldpanel.support.FieldLocation",
      "type_short": "FieldLocation",
      "constant_value": null
    },
    {
      "name": "end",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.widgets.fieldpanel.support.FieldLocation",
      "type_short": "FieldLocation",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "start",
          "type_long": "docking.widgets.fieldpanel.support.FieldLocation",
          "type_short": "FieldLocation",
          "comment": ""
        },
        {
          "name": "end",
          "type_long": "docking.widgets.fieldpanel.support.FieldLocation",
          "type_short": "FieldLocation",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "range",
          "type_long": "docking.widgets.fieldpanel.support.FieldRange",
          "type_short": "FieldRange",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "element",
          "type_long": "org.jdom.Element",
          "type_short": "Element",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getElement",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "org.jdom.Element",
        "type_short": "Element",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getStart",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.widgets.fieldpanel.support.FieldLocation",
        "type_short": "FieldLocation",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getEnd",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.widgets.fieldpanel.support.FieldLocation",
        "type_short": "FieldLocation",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "Return string representation for debugging purposes.",
      "javadoc": "Return string representation for debugging purposes.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "contains",
      "comment": "checks if the given location is contained in the range.",
      "javadoc": "checks if the given location is contained in the range.\n@param loc the field location.\n@return true if the field range contains the specified location.",
      "static": false,
      "params": [
        {
          "name": "loc",
          "type_long": "docking.widgets.fieldpanel.support.FieldLocation",
          "type_short": "FieldLocation",
          "comment": "the field location."
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the field range contains the specified location."
      },
      "throws": []
    },
    {
      "name": "equals",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "obj",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hashCode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "compareTo",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "o",
          "type_long": "docking.widgets.fieldpanel.support.FieldRange",
          "type_short": "FieldRange",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "canMerge",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "newRange",
          "type_long": "docking.widgets.fieldpanel.support.FieldRange",
          "type_short": "FieldRange",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "merge",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "newRange",
          "type_long": "docking.widgets.fieldpanel.support.FieldRange",
          "type_short": "FieldRange",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isEmpty",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "intersects",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "range",
          "type_long": "docking.widgets.fieldpanel.support.FieldRange",
          "type_short": "FieldRange",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "intersect",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "range",
          "type_long": "docking.widgets.fieldpanel.support.FieldRange",
          "type_short": "FieldRange",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.widgets.fieldpanel.support.FieldRange",
        "type_short": "FieldRange",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "subtract",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "deleteRange",
          "type_long": "docking.widgets.fieldpanel.support.FieldRange",
          "type_short": "FieldRange",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.widgets.fieldpanel.support.FieldRange",
        "type_short": "FieldRange",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "containsEntirely",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "containsEntirely",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "java.math.BigInteger",
          "type_short": "BigInteger",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    }
  ]
}
