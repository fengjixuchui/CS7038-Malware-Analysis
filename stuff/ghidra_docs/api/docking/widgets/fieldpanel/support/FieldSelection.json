{
  "name": "FieldSelection",
  "comment": "Interface for reporting the FieldViewer selection.  The selection consists of\n a sequence of ranges of indexes.",
  "javadoc": "Interface for reporting the FieldViewer selection.  The selection consists of\n a sequence of ranges of indexes.",
  "static": false,
  "implements": [
    "java.lang.Iterable"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "ranges",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cdocking.widgets.fieldpanel.support.FieldRange\u003e",
      "type_short": "List",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a new empty FieldSelection.",
      "javadoc": "Construct a new empty FieldSelection.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a new FieldSelection with the same selection as the given FieldSelection.",
      "javadoc": "Construct a new FieldSelection with the same selection as the given FieldSelection.\n@param selection the FieldSelection to copy.",
      "static": false,
      "params": [
        {
          "name": "selection",
          "type_long": "docking.widgets.fieldpanel.support.FieldSelection",
          "type_short": "FieldSelection",
          "comment": "the FieldSelection to copy."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "clear",
      "comment": "Removes all indexes from the list.",
      "javadoc": "Removes all indexes from the list.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "contains",
      "comment": "Returns true if the given Field at the given index is in the selection.",
      "javadoc": "Returns true if the given Field at the given index is in the selection.\n@param loc the field location.\n@return true if the field selection contains the specified location.",
      "static": false,
      "params": [
        {
          "name": "loc",
          "type_long": "docking.widgets.fieldpanel.support.FieldLocation",
          "type_short": "FieldLocation",
          "comment": "the field location."
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the field selection contains the specified location."
      },
      "throws": []
    },
    {
      "name": "getRangeContaining",
      "comment": "Returns the range if the given Field at the given index is in the selection.\n Otherwise returns null.",
      "javadoc": "Returns the range if the given Field at the given index is in the selection.\n Otherwise returns null.\n@param loc location to find the range for.",
      "static": false,
      "params": [
        {
          "name": "loc",
          "type_long": "docking.widgets.fieldpanel.support.FieldLocation",
          "type_short": "FieldLocation",
          "comment": "location to find the range for."
        }
      ],
      "return": {
        "type_long": "docking.widgets.fieldpanel.support.FieldRange",
        "type_short": "FieldRange",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "containsEntirely",
      "comment": "Returns true if the all the fields in the layout with the given index are\n  included in this selection.",
      "javadoc": "Returns true if the all the fields in the layout with the given index are\n  included in this selection.\n@param index index of the layout to test.",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "java.math.BigInteger",
          "type_short": "BigInteger",
          "comment": "index of the layout to test."
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "containsEntirely",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "range",
          "type_long": "docking.widgets.fieldpanel.support.FieldRange",
          "type_short": "FieldRange",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "excludesEntirely",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "range",
          "type_long": "docking.widgets.fieldpanel.support.FieldRange",
          "type_short": "FieldRange",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "excludesEntirely",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "java.math.BigInteger",
          "type_short": "BigInteger",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addRange",
      "comment": "Adds a field range to this selection.",
      "javadoc": "Adds a field range to this selection.\n@param start the starting field location.\n@param end the ending field location.",
      "static": false,
      "params": [
        {
          "name": "start",
          "type_long": "docking.widgets.fieldpanel.support.FieldLocation",
          "type_short": "FieldLocation",
          "comment": "the starting field location."
        },
        {
          "name": "end",
          "type_long": "docking.widgets.fieldpanel.support.FieldLocation",
          "type_short": "FieldLocation",
          "comment": "the ending field location."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addRange",
      "comment": "Add the all the indexes from startIndex to endIndex to the selection.  The added\n range includes the startIndex, but not the endIndex.",
      "javadoc": "Add the all the indexes from startIndex to endIndex to the selection.  The added\n range includes the startIndex, but not the endIndex.\n@param startIndex the start index of the layouts to include\n@param endIndex the end index(not inclusive) of the layouts to include",
      "static": false,
      "params": [
        {
          "name": "startIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": "the start index of the layouts to include"
        },
        {
          "name": "endIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": "the end index(not inclusive) of the layouts to include"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addRange",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "startIndex",
          "type_long": "java.math.BigInteger",
          "type_short": "BigInteger",
          "comment": ""
        },
        {
          "name": "endIndex",
          "type_long": "java.math.BigInteger",
          "type_short": "BigInteger",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addRange",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "startIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "startFieldNum",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "endIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "endFieldNum",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addRange",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "startIndex",
          "type_long": "java.math.BigInteger",
          "type_short": "BigInteger",
          "comment": ""
        },
        {
          "name": "startFieldNum",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "endIndex",
          "type_long": "java.math.BigInteger",
          "type_short": "BigInteger",
          "comment": ""
        },
        {
          "name": "endFieldNum",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeRange",
      "comment": "Removes the given field range from the current selection.",
      "javadoc": "Removes the given field range from the current selection.\n@param start the starting field location.\n@param end the ending field location.",
      "static": false,
      "params": [
        {
          "name": "start",
          "type_long": "docking.widgets.fieldpanel.support.FieldLocation",
          "type_short": "FieldLocation",
          "comment": "the starting field location."
        },
        {
          "name": "end",
          "type_long": "docking.widgets.fieldpanel.support.FieldLocation",
          "type_short": "FieldLocation",
          "comment": "the ending field location."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeRange",
      "comment": "Removes the all the fields in the index range from the selection.",
      "javadoc": "Removes the all the fields in the index range from the selection.\n@param startIndex the first index in the range to remove.\n@param endIndex the last index in the range to remove.",
      "static": false,
      "params": [
        {
          "name": "startIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": "the first index in the range to remove."
        },
        {
          "name": "endIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": "the last index in the range to remove."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeRange",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "startIndex",
          "type_long": "java.math.BigInteger",
          "type_short": "BigInteger",
          "comment": ""
        },
        {
          "name": "endIndex",
          "type_long": "java.math.BigInteger",
          "type_short": "BigInteger",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getNumRanges",
      "comment": "Returns the current number of ranges in the list.",
      "javadoc": "Returns the current number of ranges in the list.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFieldRange",
      "comment": "Returns the i\u0027th Field Range in the selection.",
      "javadoc": "Returns the i\u0027th Field Range in the selection.\n@param rangeNum the index of the range to retrieve.",
      "static": false,
      "params": [
        {
          "name": "rangeNum",
          "type_long": "int",
          "type_short": "int",
          "comment": "the index of the range to retrieve."
        }
      ],
      "return": {
        "type_long": "docking.widgets.fieldpanel.support.FieldRange",
        "type_short": "FieldRange",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "intersect",
      "comment": "Compute the intersection of this field selection and another one.\n The intersection of two field selections is all fields existing in \n both selections.\n Note: This field selection becomes the intersection.",
      "javadoc": "Compute the intersection of this field selection and another one.\n The intersection of two field selections is all fields existing in \n both selections.\n \u003cP\u003eNote: This field selection becomes the intersection.\n@param selection field selection to intersect.",
      "static": false,
      "params": [
        {
          "name": "selection",
          "type_long": "docking.widgets.fieldpanel.support.FieldSelection",
          "type_short": "FieldSelection",
          "comment": "field selection to intersect."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "findIntersection",
      "comment": "Computes the intersection of this field selection and the given field selection.",
      "javadoc": "Computes the intersection of this field selection and the given field selection.\n@param selection the selection to intersect with.",
      "static": false,
      "params": [
        {
          "name": "selection",
          "type_long": "docking.widgets.fieldpanel.support.FieldSelection",
          "type_short": "FieldSelection",
          "comment": "the selection to intersect with."
        }
      ],
      "return": {
        "type_long": "docking.widgets.fieldpanel.support.FieldSelection",
        "type_short": "FieldSelection",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "delete",
      "comment": "Delete all fields in the ranges in the given field selection from this one.",
      "javadoc": "Delete all fields in the ranges in the given field selection from this one.\n@param selection the field selection fields to remove from this \n field selection.",
      "static": false,
      "params": [
        {
          "name": "selection",
          "type_long": "docking.widgets.fieldpanel.support.FieldSelection",
          "type_short": "FieldSelection",
          "comment": "the field selection fields to remove from this \n field selection."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "insert",
      "comment": "Insert all fields in the ranges in the given field selection from this one.",
      "javadoc": "Insert all fields in the ranges in the given field selection from this one.\n@param selection the field selection fields to add to this \n field selection.",
      "static": false,
      "params": [
        {
          "name": "selection",
          "type_long": "docking.widgets.fieldpanel.support.FieldSelection",
          "type_short": "FieldSelection",
          "comment": "the field selection fields to add to this \n field selection."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "printRanges",
      "comment": "Prints out the ranges for debugging.",
      "javadoc": "Prints out the ranges for debugging.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "equals",
      "comment": "",
      "javadoc": "@see java.lang.Object#equals(java.lang.Object)",
      "static": false,
      "params": [
        {
          "name": "obj",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "save",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "saveState",
          "type_long": "ghidra.framework.options.SaveState",
          "type_short": "SaveState",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "load",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "saveState",
          "type_long": "ghidra.framework.options.SaveState",
          "type_short": "SaveState",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isEmpty",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "intersect",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.widgets.fieldpanel.support.FieldSelection",
        "type_short": "FieldSelection",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "intersect",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "java.math.BigInteger",
          "type_short": "BigInteger",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.widgets.fieldpanel.support.FieldSelection",
        "type_short": "FieldSelection",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "intersect",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "range",
          "type_long": "docking.widgets.fieldpanel.support.FieldRange",
          "type_short": "FieldRange",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.widgets.fieldpanel.support.FieldSelection",
        "type_short": "FieldSelection",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addRange",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "range",
          "type_long": "docking.widgets.fieldpanel.support.FieldRange",
          "type_short": "FieldRange",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "iterator",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Iterator\u003cdocking.widgets.fieldpanel.support.FieldRange\u003e",
        "type_short": "Iterator",
        "comment": ""
      },
      "throws": []
    }
  ]
}
