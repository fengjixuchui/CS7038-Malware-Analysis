{
  "name": "HoverProvider",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "isShowing",
      "comment": "Returns true if this service\u0027s popup window is currently visible",
      "javadoc": "Returns true if this service\u0027s popup window is currently visible\n@return true if this service\u0027s popup window is currently visible",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if this service\u0027s popup window is currently visible"
      },
      "throws": []
    },
    {
      "name": "closeHover",
      "comment": "Hide this service\u0027s popup window if visible",
      "javadoc": "Hide this service\u0027s popup window if visible",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "mouseHovered",
      "comment": "Notify this service that the mouse is hovering over a specific field within a \n field viewer.",
      "javadoc": "Notify this service that the mouse is hovering over a specific field within a \n field viewer.\n@param fieldLocation the precise mouse location within the field viewer\n@param field the field over which the mouse is hovering\n@param fieldBounds the rectangle containing the bounds of the given field.\n@param event the last mouse motion event over the field viewer component (i.e., FieldPanel).",
      "static": false,
      "params": [
        {
          "name": "fieldLocation",
          "type_long": "docking.widgets.fieldpanel.support.FieldLocation",
          "type_short": "FieldLocation",
          "comment": "the precise mouse location within the field viewer"
        },
        {
          "name": "field",
          "type_long": "docking.widgets.fieldpanel.field.Field",
          "type_short": "Field",
          "comment": "the field over which the mouse is hovering"
        },
        {
          "name": "fieldBounds",
          "type_long": "java.awt.Rectangle",
          "type_short": "Rectangle",
          "comment": "the rectangle containing the bounds of the given field."
        },
        {
          "name": "event",
          "type_long": "java.awt.event.MouseEvent",
          "type_short": "MouseEvent",
          "comment": "the last mouse motion event over the field viewer component (i.e., FieldPanel)."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "scroll",
      "comment": "If this service\u0027s window supports scrolling, scroll by the specified amount.  The value\n will be negative when scrolling should move up.",
      "javadoc": "If this service\u0027s window supports scrolling, scroll by the specified amount.  The value\n will be negative when scrolling should move up.\n@param amount the amount by which to scroll",
      "static": false,
      "params": [
        {
          "name": "amount",
          "type_long": "int",
          "type_short": "int",
          "comment": "the amount by which to scroll"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
