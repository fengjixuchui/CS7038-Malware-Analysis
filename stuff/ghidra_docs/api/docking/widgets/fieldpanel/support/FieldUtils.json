{
  "name": "FieldUtils",
  "comment": "A utility class for working with Field objects.",
  "javadoc": "A utility class for working with Field objects.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "WHITE_SPACE",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "char[]",
      "type_short": "char[]",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "wrap",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "fieldElements",
          "type_long": "java.util.List\u003cdocking.widgets.fieldpanel.field.FieldElement\u003e",
          "type_short": "List",
          "comment": ""
        },
        {
          "name": "width",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.List\u003cdocking.widgets.fieldpanel.field.FieldElement\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "wrap",
      "comment": "Splits the given FieldElement into sub-elements by wrapping the element on whitespace.",
      "javadoc": "Splits the given FieldElement into sub-elements by wrapping the element on whitespace.\n@param fieldElement The element to wrap\n@param width The maximum width to allow before wrapping\n@return The wrapped elements",
      "static": true,
      "params": [
        {
          "name": "fieldElement",
          "type_long": "docking.widgets.fieldpanel.field.FieldElement",
          "type_short": "FieldElement",
          "comment": "The element to wrap"
        },
        {
          "name": "width",
          "type_long": "int",
          "type_short": "int",
          "comment": "The maximum width to allow before wrapping"
        }
      ],
      "return": {
        "type_long": "java.util.List\u003cdocking.widgets.fieldpanel.field.FieldElement\u003e",
        "type_short": "List",
        "comment": "The wrapped elements"
      },
      "throws": []
    },
    {
      "name": "wrap",
      "comment": "Splits the given FieldElement into sub-elements by wrapping the element in some fashion.\n If breakOnWhiteSpace is indicated, wrapping will break lines on a white space character\n if possible, otherwise wrapping occurs on the last possible character.",
      "javadoc": "Splits the given FieldElement into sub-elements by wrapping the element in some fashion.\n If breakOnWhiteSpace is indicated, wrapping will break lines on a white space character\n if possible, otherwise wrapping occurs on the last possible character.\n@param fieldElement is the element to wrap\n@param width is the maximum width to allow before wrapping\n@param breakOnWhiteSpace determines whether line breaks should happen at white space chars\n@return the wrapped elements",
      "static": true,
      "params": [
        {
          "name": "fieldElement",
          "type_long": "docking.widgets.fieldpanel.field.FieldElement",
          "type_short": "FieldElement",
          "comment": "is the element to wrap"
        },
        {
          "name": "width",
          "type_long": "int",
          "type_short": "int",
          "comment": "is the maximum width to allow before wrapping"
        },
        {
          "name": "breakOnWhiteSpace",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "determines whether line breaks should happen at white space chars"
        }
      ],
      "return": {
        "type_long": "java.util.List\u003cdocking.widgets.fieldpanel.field.FieldElement\u003e",
        "type_short": "List",
        "comment": "the wrapped elements"
      },
      "throws": []
    },
    {
      "name": "wordWrapList",
      "comment": "Splits the given FieldElement into sub-elements by wrapping the element on whitespace.",
      "javadoc": "Splits the given FieldElement into sub-elements by wrapping the element on whitespace.\n@param fieldElement The element to wrap\n@param width The maximum width to allow before wrapping\n@return The wrapped elements",
      "static": true,
      "params": [
        {
          "name": "fieldElement",
          "type_long": "docking.widgets.fieldpanel.field.FieldElement",
          "type_short": "FieldElement",
          "comment": "The element to wrap"
        },
        {
          "name": "width",
          "type_long": "int",
          "type_short": "int",
          "comment": "The maximum width to allow before wrapping"
        }
      ],
      "return": {
        "type_long": "java.util.List\u003cdocking.widgets.fieldpanel.field.FieldElement\u003e",
        "type_short": "List",
        "comment": "The wrapped elements"
      },
      "throws": []
    },
    {
      "name": "findWordWrapPosition",
      "comment": "Finds the position within the given element at which to split the line for word wrapping.\n This method finds the last whitespace character that completely fits within the given width.\n If there is no whitespace character before the width break point, it finds the first\n whitespace character after the width.  If no whitespace can be found, then the text will\n be split at a non-whitespace character.",
      "javadoc": "Finds the position within the given element at which to split the line for word wrapping.\n This method finds the last whitespace character that completely fits within the given width.\n If there is no whitespace character before the width break point, it finds the first\n whitespace character after the width.  If no whitespace can be found, then the text will\n be split at a non-whitespace character.\n@param element the element to split\n@param width the max width to allow before looking for a word wrap positions\n@return 0 if the element cannot be split, else the character position of the string\n to be split off.",
      "static": true,
      "params": [
        {
          "name": "element",
          "type_long": "docking.widgets.fieldpanel.field.FieldElement",
          "type_short": "FieldElement",
          "comment": "the element to split"
        },
        {
          "name": "width",
          "type_long": "int",
          "type_short": "int",
          "comment": "the max width to allow before looking for a word wrap positions"
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "0 if the element cannot be split, else the character position of the string\n to be split off."
      },
      "throws": []
    },
    {
      "name": "trimString",
      "comment": "Trims unwanted characters off of the given label, like spaces, \u0027[\u0027,\u0027]\u0027, etc.",
      "javadoc": "Trims unwanted characters off of the given label, like spaces, \u0027[\u0027,\u0027]\u0027, etc.\n@param string The string to be trimmed\n@return The trimmed string.",
      "static": true,
      "params": [
        {
          "name": "string",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "The string to be trimmed"
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "The trimmed string."
      },
      "throws": []
    }
  ]
}
