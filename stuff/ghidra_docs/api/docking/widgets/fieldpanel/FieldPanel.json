{
  "name": "FieldPanel",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [
    "docking.widgets.indexedscrollpane.IndexedScrollable",
    "docking.widgets.fieldpanel.listener.LayoutModelListener",
    "javax.swing.event.ChangeListener"
  ],
  "extends": "javax.swing.JPanel",
  "fields": [
    {
      "name": "MOUSEWHEEL_LINES_TO_SCROLL",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "3"
    },
    {
      "name": "model",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.widgets.fieldpanel.LayoutModel",
      "type_short": "LayoutModel",
      "constant_value": null
    },
    {
      "name": "repaintPosted",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "inFocus",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "backgroundColorModel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.widgets.fieldpanel.support.BackgroundColorModel",
      "type_short": "BackgroundColorModel",
      "constant_value": null
    },
    {
      "name": "paintContext",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.widgets.fieldpanel.internal.PaintContext",
      "type_short": "PaintContext",
      "constant_value": null
    },
    {
      "name": "layoutHandler",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.widgets.fieldpanel.internal.AnchoredLayoutHandler",
      "type_short": "AnchoredLayoutHandler",
      "constant_value": null
    },
    {
      "name": "cursorHandler",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.widgets.fieldpanel.FieldPanel.CursorHandler",
      "type_short": "CursorHandler",
      "constant_value": null
    },
    {
      "name": "mouseHandler",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.widgets.fieldpanel.FieldPanel.MouseHandler",
      "type_short": "MouseHandler",
      "constant_value": null
    },
    {
      "name": "keyHandler",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.widgets.fieldpanel.FieldPanel.KeyHandler",
      "type_short": "KeyHandler",
      "constant_value": null
    },
    {
      "name": "hoverHandler",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.widgets.fieldpanel.HoverHandler",
      "type_short": "HoverHandler",
      "constant_value": null
    },
    {
      "name": "selectionHandler",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.widgets.fieldpanel.FieldPanel.SelectionHandler",
      "type_short": "SelectionHandler",
      "constant_value": null
    },
    {
      "name": "horizontalScrollingEnabled",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "cursorPosition",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.widgets.fieldpanel.support.FieldLocation",
      "type_short": "FieldLocation",
      "constant_value": null
    },
    {
      "name": "selection",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.widgets.fieldpanel.support.FieldSelection",
      "type_short": "FieldSelection",
      "constant_value": null
    },
    {
      "name": "highlight",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.widgets.fieldpanel.support.FieldSelection",
      "type_short": "FieldSelection",
      "constant_value": null
    },
    {
      "name": "listeners",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cdocking.widgets.indexedscrollpane.IndexScrollListener\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "fieldMouseListeners",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cdocking.widgets.fieldpanel.listener.FieldMouseListener\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "inputListeners",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cdocking.widgets.fieldpanel.listener.FieldInputListener\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "cursorListeners",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cdocking.widgets.fieldpanel.listener.FieldLocationListener\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "layoutListeners",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cdocking.widgets.fieldpanel.listener.LayoutListener\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "viewListeners",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cdocking.widgets.fieldpanel.listener.ViewListener\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "selectionListeners",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cdocking.widgets.fieldpanel.listener.FieldSelectionListener\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "highlightListeners",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cdocking.widgets.fieldpanel.listener.FieldSelectionListener\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "liveSelectionListeners",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cdocking.widgets.fieldpanel.listener.FieldSelectionListener\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "layouts",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cdocking.widgets.fieldpanel.support.AnchoredLayout\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "currentViewXpos",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "viewport",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.JViewport",
      "type_short": "JViewport",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "model",
          "type_long": "docking.widgets.fieldpanel.LayoutModel",
          "type_short": "LayoutModel",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "showIndex",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "layoutIndex",
          "type_long": "java.math.BigInteger",
          "type_short": "BigInteger",
          "comment": ""
        },
        {
          "name": "verticalOffset",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "scrollView",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "viewAmount",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "scrollTo",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "fieldLocation",
          "type_long": "docking.widgets.fieldpanel.support.FieldLocation",
          "type_short": "FieldLocation",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "center",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "location",
          "type_long": "docking.widgets.fieldpanel.support.FieldLocation",
          "type_short": "FieldLocation",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "doScrollTo",
      "comment": "Makes sure the location is completely visible on the screen. If it already is visible, this\n routine will do nothing. If the location is above the screen (at an index less than the first\n line on the screen), the view will be scrolled such that the location will appear at the top\n of the screen. If the location is below the screen, the view will be scrolled such that the\n location will appear at the bottom the screen. The layouts[] array will be updated to reflect\n the current view.",
      "javadoc": "Makes sure the location is completely visible on the screen. If it already is visible, this\n routine will do nothing. If the location is above the screen (at an index less than the first\n line on the screen), the view will be scrolled such that the location will appear at the top\n of the screen. If the location is below the screen, the view will be scrolled such that the\n location will appear at the bottom the screen. The layouts[] array will be updated to reflect\n the current view.",
      "static": false,
      "params": [
        {
          "name": "location",
          "type_long": "docking.widgets.fieldpanel.support.FieldLocation",
          "type_short": "FieldLocation",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "scrollLineDown",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "scrollLineUp",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "scrollPageDown",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "scrollPageUp",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "pageUp",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "pageDown",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getHeight",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "java.math.BigInteger",
          "type_short": "BigInteger",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getIndexAfter",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "java.math.BigInteger",
          "type_short": "BigInteger",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.math.BigInteger",
        "type_short": "BigInteger",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getIndexBefore",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "java.math.BigInteger",
          "type_short": "BigInteger",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.math.BigInteger",
        "type_short": "BigInteger",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getIndexCount",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.math.BigInteger",
        "type_short": "BigInteger",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isUniformIndex",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "cursorUp",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "cursorDown",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "cursorLeft",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "cursorRight",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "cursorHome",
      "comment": "Moves the cursor to the beginning of the line.",
      "javadoc": "Moves the cursor to the beginning of the line.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "cursorTopOfFile",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "cursorBottomOfFile",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "cursorEnd",
      "comment": "Moves the cursor to the end of the line.",
      "javadoc": "Moves the cursor to the end of the line.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getVisibleLayouts",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cdocking.widgets.fieldpanel.support.AnchoredLayout\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isLocationVisible",
      "comment": "Returns true if the given field location is rendered on the screen; false if scrolled\n offscreen",
      "javadoc": "Returns true if the given field location is rendered on the screen; false if scrolled\n offscreen\n@param location the location to check\n@return true if the location is on the screen",
      "static": false,
      "params": [
        {
          "name": "location",
          "type_long": "docking.widgets.fieldpanel.support.FieldLocation",
          "type_short": "FieldLocation",
          "comment": "the location to check"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the location is on the screen"
      },
      "throws": []
    },
    {
      "name": "getVisibleStartLayout",
      "comment": "Returns the first visible layout or null if there are no visible layouts",
      "javadoc": "Returns the first visible layout or null if there are no visible layouts\n@return the first visible layout",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.widgets.fieldpanel.support.AnchoredLayout",
        "type_short": "AnchoredLayout",
        "comment": "the first visible layout"
      },
      "throws": []
    },
    {
      "name": "getVisibleEndLayout",
      "comment": "Returns the last visible layout or null if there are no visible layouts",
      "javadoc": "Returns the last visible layout or null if there are no visible layouts\n@return the last visible layout",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.widgets.fieldpanel.support.AnchoredLayout",
        "type_short": "AnchoredLayout",
        "comment": "the last visible layout"
      },
      "throws": []
    },
    {
      "name": "repaint",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPreferredSize",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Dimension",
        "type_short": "Dimension",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "stateChanged",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "e",
          "type_long": "javax.swing.event.ChangeEvent",
          "type_short": "ChangeEvent",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setBounds",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "x",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "y",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "width",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "height",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setBlinkCursor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "blinkCursor",
          "type_long": "java.lang.Boolean",
          "type_short": "Boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "enableSelection",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "b",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setHorizontalScrollingEnabled",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "enabled",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getBackgroundColor",
      "comment": "Returns the default background color.",
      "javadoc": "Returns the default background color.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Color",
        "type_short": "Color",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getBackground",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Color",
        "type_short": "Color",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setBackgroundColor",
      "comment": "Sets the default background color",
      "javadoc": "Sets the default background color\n@param c the color to use for the background.",
      "static": false,
      "params": [
        {
          "name": "c",
          "type_long": "java.awt.Color",
          "type_short": "Color",
          "comment": "the color to use for the background."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getBackgroundColor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "java.math.BigInteger",
          "type_short": "BigInteger",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.awt.Color",
        "type_short": "Color",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setBackgroundColorModel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "model",
          "type_long": "docking.widgets.fieldpanel.support.BackgroundColorModel",
          "type_short": "BackgroundColorModel",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getForegroundColor",
      "comment": "Returns the foreground color.",
      "javadoc": "Returns the foreground color.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Color",
        "type_short": "Color",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSelectionColor",
      "comment": "Returns the color used as the background for selected items.",
      "javadoc": "Returns the color used as the background for selected items.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Color",
        "type_short": "Color",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getHighlightColor",
      "comment": "Returns the color color used as the background for highlighted items.",
      "javadoc": "Returns the color color used as the background for highlighted items.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Color",
        "type_short": "Color",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFocusedCursorColor",
      "comment": "Returns the current cursor color.",
      "javadoc": "Returns the current cursor color.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Color",
        "type_short": "Color",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getNonFocusCursorColor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Color",
        "type_short": "Color",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isFocused",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "dispose",
      "comment": "Cleans up resources when this FieldPanel is no longer needed.",
      "javadoc": "Cleans up resources when this FieldPanel is no longer needed.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getCursorPoint",
      "comment": "Returns the point in pixels of where the cursor is located.",
      "javadoc": "Returns the point in pixels of where the cursor is located.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Point",
        "type_short": "Point",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getCursorBounds",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Rectangle",
        "type_short": "Rectangle",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getCursorLocation",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.widgets.fieldpanel.support.FieldLocation",
        "type_short": "FieldLocation",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getCurrentField",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.widgets.fieldpanel.field.Field",
        "type_short": "Field",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addIndexScrollListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "docking.widgets.indexedscrollpane.IndexScrollListener",
          "type_short": "IndexScrollListener",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeIndexScrollListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "docking.widgets.indexedscrollpane.IndexScrollListener",
          "type_short": "IndexScrollListener",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addFieldSelectionListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "docking.widgets.fieldpanel.listener.FieldSelectionListener",
          "type_short": "FieldSelectionListener",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeFieldSelectionListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "docking.widgets.fieldpanel.listener.FieldSelectionListener",
          "type_short": "FieldSelectionListener",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addLiveFieldSelectionListener",
      "comment": "Adds a selection listener that will be notified while the selection is being created",
      "javadoc": "Adds a selection listener that will be notified while the selection is being created\n@param listener the listener to be notified",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "docking.widgets.fieldpanel.listener.FieldSelectionListener",
          "type_short": "FieldSelectionListener",
          "comment": "the listener to be notified"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeLiveFieldSelectionListener",
      "comment": "Removes the selection listener from being notified when the selection is being created",
      "javadoc": "Removes the selection listener from being notified when the selection is being created\n@param listener the listener to be removed from being notified",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "docking.widgets.fieldpanel.listener.FieldSelectionListener",
          "type_short": "FieldSelectionListener",
          "comment": "the listener to be removed from being notified"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addHighlightListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "docking.widgets.fieldpanel.listener.FieldSelectionListener",
          "type_short": "FieldSelectionListener",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeHighlightListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "docking.widgets.fieldpanel.listener.FieldSelectionListener",
          "type_short": "FieldSelectionListener",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addFieldMouseListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "docking.widgets.fieldpanel.listener.FieldMouseListener",
          "type_short": "FieldMouseListener",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeFieldMouseListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "docking.widgets.fieldpanel.listener.FieldMouseListener",
          "type_short": "FieldMouseListener",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addFieldInputListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "docking.widgets.fieldpanel.listener.FieldInputListener",
          "type_short": "FieldInputListener",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeFieldInputListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "docking.widgets.fieldpanel.listener.FieldInputListener",
          "type_short": "FieldInputListener",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addFieldLocationListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "docking.widgets.fieldpanel.listener.FieldLocationListener",
          "type_short": "FieldLocationListener",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeFieldLocationListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "docking.widgets.fieldpanel.listener.FieldLocationListener",
          "type_short": "FieldLocationListener",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addLayoutListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "docking.widgets.fieldpanel.listener.LayoutListener",
          "type_short": "LayoutListener",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeLayoutListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "docking.widgets.fieldpanel.listener.LayoutListener",
          "type_short": "LayoutListener",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addViewListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "docking.widgets.fieldpanel.listener.ViewListener",
          "type_short": "ViewListener",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeViewListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "docking.widgets.fieldpanel.listener.ViewListener",
          "type_short": "ViewListener",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setHoverProvider",
      "comment": "Add a new hover provider to be managed.",
      "javadoc": "Add a new hover provider to be managed.\n@param hoverProvider the new hover provider to be managed.",
      "static": false,
      "params": [
        {
          "name": "hoverProvider",
          "type_long": "docking.widgets.fieldpanel.support.HoverProvider",
          "type_short": "HoverProvider",
          "comment": "the new hover provider to be managed."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getHoverHandler",
      "comment": "Returns the class responsible for triggering popups for this field panel.",
      "javadoc": "Returns the class responsible for triggering popups for this field panel.\n@return the hover handler.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.widgets.fieldpanel.HoverHandler",
        "type_short": "HoverHandler",
        "comment": "the hover handler."
      },
      "throws": []
    },
    {
      "name": "getFieldAt",
      "comment": "Returns the Field at the given x,y coordinates. Note the x,y must currently be visible on the\n screen or else this method will return null.",
      "javadoc": "Returns the Field at the given x,y coordinates. Note the x,y must currently be visible on the\n screen or else this method will return null.\n@param x the x mouse coordinate in the component.\n@param y the y mouse coordinate in the component.\n@param loc will be filled in with the FieldLocation for the given point. Values will be\n            undefined if the Field return value is null.\n@return Field the Field object the point is over.",
      "static": false,
      "params": [
        {
          "name": "x",
          "type_long": "int",
          "type_short": "int",
          "comment": "the x mouse coordinate in the component."
        },
        {
          "name": "y",
          "type_long": "int",
          "type_short": "int",
          "comment": "the y mouse coordinate in the component."
        },
        {
          "name": "loc",
          "type_long": "docking.widgets.fieldpanel.support.FieldLocation",
          "type_short": "FieldLocation",
          "comment": "will be filled in with the FieldLocation for the given point. Values will be\n            undefined if the Field return value is null."
        }
      ],
      "return": {
        "type_long": "docking.widgets.fieldpanel.field.Field",
        "type_short": "Field",
        "comment": "Field the Field object the point is over."
      },
      "throws": []
    },
    {
      "name": "clearSelection",
      "comment": "Clears the selection;",
      "javadoc": "Clears the selection;",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "clearHighlight",
      "comment": "Clears the marked area highlight;",
      "javadoc": "Clears the marked area highlight;",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setFocusedCursorColor",
      "comment": "Sets the cursor color for when this component has focus.",
      "javadoc": "Sets the cursor color for when this component has focus.\n@param color Color to use for the cursor when this component has keyboard focus.",
      "static": false,
      "params": [
        {
          "name": "color",
          "type_long": "java.awt.Color",
          "type_short": "Color",
          "comment": "Color to use for the cursor when this component has keyboard focus."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setNonFocusCursorColor",
      "comment": "Sets the cursor color for when this component does not have focus.",
      "javadoc": "Sets the cursor color for when this component does not have focus.\n@param color Color to use for the cursor when this component does not have keyboard focus.",
      "static": false,
      "params": [
        {
          "name": "color",
          "type_long": "java.awt.Color",
          "type_short": "Color",
          "comment": "Color to use for the cursor when this component does not have keyboard focus."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSelection",
      "comment": "Returns the current selection.",
      "javadoc": "Returns the current selection.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.widgets.fieldpanel.support.FieldSelection",
        "type_short": "FieldSelection",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getHighlight",
      "comment": "Returns the current highlight (marked area).",
      "javadoc": "Returns the current highlight (marked area).",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.widgets.fieldpanel.support.FieldSelection",
        "type_short": "FieldSelection",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setSelection",
      "comment": "Sets the current selection.",
      "javadoc": "Sets the current selection.\n@param sel the selection to set.",
      "static": false,
      "params": [
        {
          "name": "sel",
          "type_long": "docking.widgets.fieldpanel.support.FieldSelection",
          "type_short": "FieldSelection",
          "comment": "the selection to set."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setHighlight",
      "comment": "Sets the current highlight to the specified field selection.",
      "javadoc": "Sets the current highlight to the specified field selection.\n@param sel the selection to set as the highlight.",
      "static": false,
      "params": [
        {
          "name": "sel",
          "type_long": "docking.widgets.fieldpanel.support.FieldSelection",
          "type_short": "FieldSelection",
          "comment": "the selection to set as the highlight."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setCursorPosition",
      "comment": "Sets the cursorPosition to the given location.",
      "javadoc": "Sets the cursorPosition to the given location.\n@param index the index of the Layout on which to place the cursor.\n@param fieldNum the index of the field within its layout on which to place the cursor.\n@param row the row within the field to place the cursor.\n@param col the col within the row to place the cursor.\n@return true if the cursor changed",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "java.math.BigInteger",
          "type_short": "BigInteger",
          "comment": "the index of the Layout on which to place the cursor."
        },
        {
          "name": "fieldNum",
          "type_long": "int",
          "type_short": "int",
          "comment": "the index of the field within its layout on which to place the cursor."
        },
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "the row within the field to place the cursor."
        },
        {
          "name": "col",
          "type_long": "int",
          "type_short": "int",
          "comment": "the col within the row to place the cursor."
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the cursor changed"
      },
      "throws": []
    },
    {
      "name": "setCursorPosition",
      "comment": "Sets the cursorPosition to the given location with the given trigger.",
      "javadoc": "Sets the cursorPosition to the given location with the given trigger.\n@param index the index of the Layout on which to place the cursor.\n@param fieldNum the index of the field within its layout on which to place the cursor.\n@param row the row within the field to place the cursor.\n@param col the col within the row to place the cursor.\n@param trigger a caller-specified event trigger.\n@return true if the cursor changed",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "java.math.BigInteger",
          "type_short": "BigInteger",
          "comment": "the index of the Layout on which to place the cursor."
        },
        {
          "name": "fieldNum",
          "type_long": "int",
          "type_short": "int",
          "comment": "the index of the field within its layout on which to place the cursor."
        },
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "the row within the field to place the cursor."
        },
        {
          "name": "col",
          "type_long": "int",
          "type_short": "int",
          "comment": "the col within the row to place the cursor."
        },
        {
          "name": "trigger",
          "type_long": "docking.widgets.EventTrigger",
          "type_short": "EventTrigger",
          "comment": "a caller-specified event trigger."
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the cursor changed"
      },
      "throws": []
    },
    {
      "name": "setCursorOn",
      "comment": "Sets the cursor on or off. When the cursor is turned off, there is no visible cursor\n displayed on the screen.",
      "javadoc": "Sets the cursor on or off. When the cursor is turned off, there is no visible cursor\n displayed on the screen.\n@param cursorOn true turns the cursor on, false turns it off.",
      "static": false,
      "params": [
        {
          "name": "cursorOn",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true turns the cursor on, false turns it off."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isCursorOn",
      "comment": "Returns the state of the cursor. True if on, false if off.",
      "javadoc": "Returns the state of the cursor. True if on, false if off.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "scrollToCursor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "goTo",
      "comment": "Sets the cursor to the given Field location and attempts to show that location in the center\n of the screen.",
      "javadoc": "Sets the cursor to the given Field location and attempts to show that location in the center\n of the screen.\n@param index the index of the line to go to.\n@param fieldNum the field on the line to go to.\n@param row the row in the field to go to.\n@param col the column in the field to go to.\n@param alwaysCenterCursor if true, centers cursor on screen. Otherwise, only centers cursor\n            if cursor is offscreen.",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "java.math.BigInteger",
          "type_short": "BigInteger",
          "comment": "the index of the line to go to."
        },
        {
          "name": "fieldNum",
          "type_long": "int",
          "type_short": "int",
          "comment": "the field on the line to go to."
        },
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "the row in the field to go to."
        },
        {
          "name": "col",
          "type_long": "int",
          "type_short": "int",
          "comment": "the column in the field to go to."
        },
        {
          "name": "alwaysCenterCursor",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "if true, centers cursor on screen. Otherwise, only centers cursor\n            if cursor is offscreen."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "goTo",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "java.math.BigInteger",
          "type_short": "BigInteger",
          "comment": ""
        },
        {
          "name": "fieldNum",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "col",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "alwaysCenterCursor",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        },
        {
          "name": "trigger",
          "type_long": "docking.widgets.EventTrigger",
          "type_short": "EventTrigger",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "takeFocus",
      "comment": "Tell the panel to grab the keyboard input focus.",
      "javadoc": "Tell the panel to grab the keyboard input focus.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "positionCursor",
      "comment": "Scrolls the view so that the cursor is at the given offset from the top of the screen",
      "javadoc": "Scrolls the view so that the cursor is at the given offset from the top of the screen\n@param offset the pixel distance from the top of the screen at which to scroll the display\n            such that the cursor is at that offset.",
      "static": false,
      "params": [
        {
          "name": "offset",
          "type_long": "int",
          "type_short": "int",
          "comment": "the pixel distance from the top of the screen at which to scroll the display\n            such that the cursor is at that offset."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isStartDragOK",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setSelectionColor",
      "comment": "Sets the selection color",
      "javadoc": "Sets the selection color\n@param color the color to use for selection.",
      "static": false,
      "params": [
        {
          "name": "color",
          "type_long": "java.awt.Color",
          "type_short": "Color",
          "comment": "the color to use for selection."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setHighlightColor",
      "comment": "Sets the highlight color",
      "javadoc": "Sets the highlight color\n@param color the color to use for highlights.",
      "static": false,
      "params": [
        {
          "name": "color",
          "type_long": "java.awt.Color",
          "type_short": "Color",
          "comment": "the color to use for highlights."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getViewerPosition",
      "comment": "Returns a ViewerPosition object which contains the top of screen information. The\n ViewerPosition will have the index of the layout at the top of the screen and the yPos of\n that layout. For example, if the layout is completely displayed, yPos will be 0. If part of\n the layout is off the top off the screen, then yPos will have a negative value (indicating\n that it begins above the displayable part of the screen.",
      "javadoc": "Returns a ViewerPosition object which contains the top of screen information. The\n ViewerPosition will have the index of the layout at the top of the screen and the yPos of\n that layout. For example, if the layout is completely displayed, yPos will be 0. If part of\n the layout is off the top off the screen, then yPos will have a negative value (indicating\n that it begins above the displayable part of the screen.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.widgets.fieldpanel.support.ViewerPosition",
        "type_short": "ViewerPosition",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setViewerPosition",
      "comment": "Scrolls the display to show the layout specified by index at the vertical position specified\n by yPos. Generally, the index will be layout at the top of the screen and the yPos will be\n \u003d 0, meaning the layout may be partially off the top of the screen.",
      "javadoc": "Scrolls the display to show the layout specified by index at the vertical position specified\n by yPos. Generally, the index will be layout at the top of the screen and the yPos will be\n \u0026lt;\u003d 0, meaning the layout may be partially off the top of the screen.\n@param index the index of the layout to show at the top of the screen.\n@param yPos the position to show the layout.",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "java.math.BigInteger",
          "type_short": "BigInteger",
          "comment": "the index of the layout to show at the top of the screen."
        },
        {
          "name": "xPos",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "yPos",
          "type_long": "int",
          "type_short": "int",
          "comment": "the position to show the layout."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLayoutModel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.widgets.fieldpanel.LayoutModel",
        "type_short": "LayoutModel",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setLayoutModel",
      "comment": "Sets the layout model for this field panel",
      "javadoc": "Sets the layout model for this field panel\n@param model the layout model to use.",
      "static": false,
      "params": [
        {
          "name": "model",
          "type_long": "docking.widgets.fieldpanel.LayoutModel",
          "type_short": "LayoutModel",
          "comment": "the layout model to use."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "dataChanged",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "start",
          "type_long": "java.math.BigInteger",
          "type_short": "BigInteger",
          "comment": ""
        },
        {
          "name": "end",
          "type_long": "java.math.BigInteger",
          "type_short": "BigInteger",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "adjustCursorForDataChange",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "modelSizeChanged",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "indexMapper",
          "type_long": "docking.widgets.fieldpanel.listener.IndexMapper",
          "type_short": "IndexMapper",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "updateHighlight",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "mapper",
          "type_long": "docking.widgets.fieldpanel.listener.IndexMapper",
          "type_short": "IndexMapper",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "paintComponent",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "g",
          "type_long": "java.awt.Graphics",
          "type_short": "Graphics",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getOffset",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "location",
          "type_long": "docking.widgets.fieldpanel.support.FieldLocation",
          "type_short": "FieldLocation",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getCursorOffset",
      "comment": "Returns the offset of the cursor from the top of the screen",
      "javadoc": "Returns the offset of the cursor from the top of the screen",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "notifyScrollListenerViewChangedAndRepaint",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "notifyScrollListenerModelChanged",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "notifyScrollListenerDataChanged",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "start",
          "type_long": "java.math.BigInteger",
          "type_short": "BigInteger",
          "comment": ""
        },
        {
          "name": "end",
          "type_long": "java.math.BigInteger",
          "type_short": "BigInteger",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "notifyViewChanged",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLayoutSelectionMap",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "layoutIndex",
          "type_long": "java.math.BigInteger",
          "type_short": "BigInteger",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.widgets.fieldpanel.internal.LayoutBackgroundColorManager",
        "type_short": "LayoutBackgroundColorManager",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "blend",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "primary",
          "type_long": "java.awt.Color",
          "type_short": "Color",
          "comment": ""
        },
        {
          "name": "secondary",
          "type_long": "java.awt.Color",
          "type_short": "Color",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.awt.Color",
        "type_short": "Color",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "paintLayoutBackground",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "g",
          "type_long": "java.awt.Graphics",
          "type_short": "Graphics",
          "comment": ""
        },
        {
          "name": "rect",
          "type_long": "java.awt.Rectangle",
          "type_short": "Rectangle",
          "comment": ""
        },
        {
          "name": "layout",
          "type_long": "docking.widgets.fieldpanel.support.AnchoredLayout",
          "type_short": "AnchoredLayout",
          "comment": ""
        },
        {
          "name": "layoutSelectionMap",
          "type_long": "docking.widgets.fieldpanel.internal.LayoutBackgroundColorManager",
          "type_short": "LayoutBackgroundColorManager",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "clearDisplay",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "g",
          "type_long": "java.awt.Graphics",
          "type_short": "Graphics",
          "comment": ""
        },
        {
          "name": "rect",
          "type_long": "java.awt.Rectangle",
          "type_short": "Rectangle",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "paintExceptionInLayout",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "g",
          "type_long": "java.awt.Graphics",
          "type_short": "Graphics",
          "comment": ""
        },
        {
          "name": "r",
          "type_long": "java.awt.Rectangle",
          "type_short": "Rectangle",
          "comment": ""
        },
        {
          "name": "layout",
          "type_long": "docking.widgets.fieldpanel.support.AnchoredLayout",
          "type_short": "AnchoredLayout",
          "comment": ""
        },
        {
          "name": "e",
          "type_long": "java.lang.Exception",
          "type_short": "Exception",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "doPageUp",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "trigger",
          "type_long": "docking.widgets.EventTrigger",
          "type_short": "EventTrigger",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "doPageDown",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "trigger",
          "type_long": "docking.widgets.EventTrigger",
          "type_short": "EventTrigger",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "doTopOfFile",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "trigger",
          "type_long": "docking.widgets.EventTrigger",
          "type_short": "EventTrigger",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "doEndOfFile",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "trigger",
          "type_long": "docking.widgets.EventTrigger",
          "type_short": "EventTrigger",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPointForLocation",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "location",
          "type_long": "docking.widgets.fieldpanel.support.FieldLocation",
          "type_short": "FieldLocation",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.awt.Point",
        "type_short": "Point",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLocationForPoint",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "x",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "y",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.widgets.fieldpanel.support.FieldLocation",
        "type_short": "FieldLocation",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "findLayoutOnScreen",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "java.math.BigInteger",
          "type_short": "BigInteger",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.widgets.fieldpanel.support.AnchoredLayout",
        "type_short": "AnchoredLayout",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "findClosestLayoutOnScreen",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "java.math.BigInteger",
          "type_short": "BigInteger",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.widgets.fieldpanel.support.AnchoredLayout",
        "type_short": "AnchoredLayout",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "findLayoutAt",
      "comment": "Finds the layout containing the given point.",
      "javadoc": "Finds the layout containing the given point.",
      "static": false,
      "params": [
        {
          "name": "y",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.widgets.fieldpanel.support.AnchoredLayout",
        "type_short": "AnchoredLayout",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "notifyFieldMouseListeners",
      "comment": "Notifies all FieldMouselisteners that the cursor position changed.",
      "javadoc": "Notifies all FieldMouselisteners that the cursor position changed.",
      "static": false,
      "params": [
        {
          "name": "ev",
          "type_long": "java.awt.event.MouseEvent",
          "type_short": "MouseEvent",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getViewport",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "javax.swing.JViewport",
        "type_short": "JViewport",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "notifySelectionChanged",
      "comment": "Notifies all listeners that the selection changed.",
      "javadoc": "Notifies all listeners that the selection changed.",
      "static": false,
      "params": [
        {
          "name": "trigger",
          "type_long": "docking.widgets.EventTrigger",
          "type_short": "EventTrigger",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "notifyLiveSelectionChanged",
      "comment": "Notifies all live listeners that the selection changed.",
      "javadoc": "Notifies all live listeners that the selection changed.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "notifyHighlightChanged",
      "comment": "Notifies all listeners that the selection changed.",
      "javadoc": "Notifies all listeners that the selection changed.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
