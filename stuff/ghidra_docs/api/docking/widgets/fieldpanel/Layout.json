{
  "name": "Layout",
  "comment": "Interface for a set of data fields that represent one indexable set of information\n in the model. The fields in a layout are arranged into rows.  The height of the\n row is the height of the tallest field in that row.  Each field contains one or\n more lines of text.",
  "javadoc": "Interface for a set of data fields that represent one indexable set of information\n in the model. The fields in a layout are arranged into rows.  The height of the\n row is the height of the tallest field in that row.  Each field contains one or\n more lines of text.",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "getHeight",
      "comment": "Returns the total height of this layout.",
      "javadoc": "Returns the total height of this layout.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPrimaryOffset",
      "comment": "Returns the vertical offset (in pixels) of the start of the primary\n field in the layout.",
      "javadoc": "Returns the vertical offset (in pixels) of the start of the primary\n field in the layout.\n@return -1 if layout does not have a primary field.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "-1 if layout does not have a primary field."
      },
      "throws": []
    },
    {
      "name": "insertSpaceAbove",
      "comment": "Inserts empty space above the layout",
      "javadoc": "Inserts empty space above the layout\n@param size the amount of space to insert above the layout",
      "static": false,
      "params": [
        {
          "name": "size",
          "type_long": "int",
          "type_short": "int",
          "comment": "the amount of space to insert above the layout"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "insertSpaceBelow",
      "comment": "Inserts empty space below the layout",
      "javadoc": "Inserts empty space below the layout\n@param size the amount of space to insert below the layout",
      "static": false,
      "params": [
        {
          "name": "size",
          "type_long": "int",
          "type_short": "int",
          "comment": "the amount of space to insert below the layout"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getNumFields",
      "comment": "Returns the number of Fields in this Layout.",
      "javadoc": "Returns the number of Fields in this Layout.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getField",
      "comment": "Returns the i\u0027th Field in this Layout.",
      "javadoc": "Returns the i\u0027th Field in this Layout.\n@param index the index of the field to retrieve.",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "int",
          "type_short": "int",
          "comment": "the index of the field to retrieve."
        }
      ],
      "return": {
        "type_long": "docking.widgets.fieldpanel.field.Field",
        "type_short": "Field",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "paint",
      "comment": "Paints this layout on the screen.",
      "javadoc": "Paints this layout on the screen.\n@param g The graphics context with which to paint.\n@param context contains various information needed to do the paint\n@param rect the screen area that needs to be painted.\n@param layoutColorMap indicates where the selection exists\n@param cursorLocation the location of the cursor or null if the cursor is not in this layout",
      "static": false,
      "params": [
        {
          "name": "c",
          "type_long": "javax.swing.JComponent",
          "type_short": "JComponent",
          "comment": ""
        },
        {
          "name": "g",
          "type_long": "java.awt.Graphics",
          "type_short": "Graphics",
          "comment": "The graphics context with which to paint."
        },
        {
          "name": "context",
          "type_long": "docking.widgets.fieldpanel.internal.PaintContext",
          "type_short": "PaintContext",
          "comment": "contains various information needed to do the paint"
        },
        {
          "name": "rect",
          "type_long": "java.awt.Rectangle",
          "type_short": "Rectangle",
          "comment": "the screen area that needs to be painted."
        },
        {
          "name": "layoutColorMap",
          "type_long": "docking.widgets.fieldpanel.internal.LayoutBackgroundColorManager",
          "type_short": "LayoutBackgroundColorManager",
          "comment": "indicates where the selection exists"
        },
        {
          "name": "cursorLocation",
          "type_long": "docking.widgets.fieldpanel.support.FieldLocation",
          "type_short": "FieldLocation",
          "comment": "the location of the cursor or null if the cursor is not in this layout"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setCursor",
      "comment": "Sets the cursor to the given point location.  The cursor will be positioned\n to the row column position that is closest to the given point.",
      "javadoc": "Sets the cursor to the given point location.  The cursor will be positioned\n to the row column position that is closest to the given point.\n@param cursorLoc the location that is to be filled in.\n@param x the x coordinate of the point to be translated into a cursor location.\n@param y the y coordinate of the point to be translated into a cursor location.\n@return the x coordinated of the computed cursor location.",
      "static": false,
      "params": [
        {
          "name": "cursorLoc",
          "type_long": "docking.widgets.fieldpanel.support.FieldLocation",
          "type_short": "FieldLocation",
          "comment": "the location that is to be filled in."
        },
        {
          "name": "x",
          "type_long": "int",
          "type_short": "int",
          "comment": "the x coordinate of the point to be translated into a cursor location."
        },
        {
          "name": "y",
          "type_long": "int",
          "type_short": "int",
          "comment": "the y coordinate of the point to be translated into a cursor location."
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the x coordinated of the computed cursor location."
      },
      "throws": []
    },
    {
      "name": "getCursorRect",
      "comment": "Returns a rectangle which bounds the given cursor position.",
      "javadoc": "Returns a rectangle which bounds the given cursor position.\n@param fieldNum the index of the field containing the cursor position.\n@param row the the text row in the field containing the cursor position.\n@param col the character position in the row containing the cursor position.",
      "static": false,
      "params": [
        {
          "name": "fieldNum",
          "type_long": "int",
          "type_short": "int",
          "comment": "the index of the field containing the cursor position."
        },
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "the the text row in the field containing the cursor position."
        },
        {
          "name": "col",
          "type_long": "int",
          "type_short": "int",
          "comment": "the character position in the row containing the cursor position."
        }
      ],
      "return": {
        "type_long": "java.awt.Rectangle",
        "type_short": "Rectangle",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "cursorUp",
      "comment": "Moves the cursor up one row from its current position.",
      "javadoc": "Moves the cursor up one row from its current position.\n@param cursorLoc the cursor location object to be modified\n@param lastX the x coordinate of the cursor before the move.\n@return true if the cursor was successfully moved up without leaving the layout.",
      "static": false,
      "params": [
        {
          "name": "cursorLoc",
          "type_long": "docking.widgets.fieldpanel.support.FieldLocation",
          "type_short": "FieldLocation",
          "comment": "the cursor location object to be modified"
        },
        {
          "name": "lastX",
          "type_long": "int",
          "type_short": "int",
          "comment": "the x coordinate of the cursor before the move."
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the cursor was successfully moved up without leaving the layout."
      },
      "throws": []
    },
    {
      "name": "cursorDown",
      "comment": "Moves the cursor up down row from its current position.",
      "javadoc": "Moves the cursor up down row from its current position.\n@param cursorLoc the cursor location object to be modified\n@param lastX the x coordinate of the cursor before the move.\n@return true if the cursor was successfully moved down without leaving the layout.",
      "static": false,
      "params": [
        {
          "name": "cursorLoc",
          "type_long": "docking.widgets.fieldpanel.support.FieldLocation",
          "type_short": "FieldLocation",
          "comment": "the cursor location object to be modified"
        },
        {
          "name": "lastX",
          "type_long": "int",
          "type_short": "int",
          "comment": "the x coordinate of the cursor before the move."
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the cursor was successfully moved down without leaving the layout."
      },
      "throws": []
    },
    {
      "name": "cursorBeginning",
      "comment": "Sets the given FieldLocation as far to the left as possible.",
      "javadoc": "Sets the given FieldLocation as far to the left as possible.\n@param cursorLoc the cursor location object to be modified.\n@return the x coordinate of the cursor after the operation.",
      "static": false,
      "params": [
        {
          "name": "cursorLoc",
          "type_long": "docking.widgets.fieldpanel.support.FieldLocation",
          "type_short": "FieldLocation",
          "comment": "the cursor location object to be modified."
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the x coordinate of the cursor after the operation."
      },
      "throws": []
    },
    {
      "name": "cursorEnd",
      "comment": "Sets the given FieldLocation as far to the right as possible.",
      "javadoc": "Sets the given FieldLocation as far to the right as possible.\n@param cursorLoc the cursor location object to be modified.\n@return the x coordinate of the cursor after the operation.",
      "static": false,
      "params": [
        {
          "name": "cursorLoc",
          "type_long": "docking.widgets.fieldpanel.support.FieldLocation",
          "type_short": "FieldLocation",
          "comment": "the cursor location object to be modified."
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the x coordinate of the cursor after the operation."
      },
      "throws": []
    },
    {
      "name": "cursorLeft",
      "comment": "Sets the given FieldLocation one position to the left.  If already at the\n left most position, it tries to move to the end of the previous row.",
      "javadoc": "Sets the given FieldLocation one position to the left.  If already at the\n left most position, it tries to move to the end of the previous row.\n@param cursorLoc the cursor location object to be modified.\n@return the x coordinate of the cursor after the operation.  Returns -1 if\n it was already at the top, left most position.",
      "static": false,
      "params": [
        {
          "name": "cursorLoc",
          "type_long": "docking.widgets.fieldpanel.support.FieldLocation",
          "type_short": "FieldLocation",
          "comment": "the cursor location object to be modified."
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the x coordinate of the cursor after the operation.  Returns -1 if\n it was already at the top, left most position."
      },
      "throws": []
    },
    {
      "name": "cursorRight",
      "comment": "Sets the given FieldLocation one position to the right.  If already at the\n right most position, it tries to move to the beginning of the next row.",
      "javadoc": "Sets the given FieldLocation one position to the right.  If already at the\n right most position, it tries to move to the beginning of the next row.\n@param cursorLoc the cursor location object to be modified.\n@return the x coordinate of the cursor after the operation.  Returns -1 if\n it was already at the bottom, right most position.",
      "static": false,
      "params": [
        {
          "name": "cursorLoc",
          "type_long": "docking.widgets.fieldpanel.support.FieldLocation",
          "type_short": "FieldLocation",
          "comment": "the cursor location object to be modified."
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the x coordinate of the cursor after the operation.  Returns -1 if\n it was already at the bottom, right most position."
      },
      "throws": []
    },
    {
      "name": "enterLayout",
      "comment": "Tries to move the cursor into this layout.",
      "javadoc": "Tries to move the cursor into this layout.\n@param cursorLoc the field location to hold new location.\n@param lastX the last valid x coordinate.\n@param fromTop true if entering from the above this layout\n@return true if the cursor successfully moves into this layout.",
      "static": false,
      "params": [
        {
          "name": "cursorLoc",
          "type_long": "docking.widgets.fieldpanel.support.FieldLocation",
          "type_short": "FieldLocation",
          "comment": "the field location to hold new location."
        },
        {
          "name": "lastX",
          "type_long": "int",
          "type_short": "int",
          "comment": "the last valid x coordinate."
        },
        {
          "name": "fromTop",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true if entering from the above this layout"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the cursor successfully moves into this layout."
      },
      "throws": []
    },
    {
      "name": "getScrollableUnitIncrement",
      "comment": "Returns the amount to scroll to reveal the line of text.",
      "javadoc": "Returns the amount to scroll to reveal the line of text.\n@param topOfScreen the y coordinate that represents the top or bottom of\n the screen\n@param direction the direction to scroll",
      "static": false,
      "params": [
        {
          "name": "topOfScreen",
          "type_long": "int",
          "type_short": "int",
          "comment": "the y coordinate that represents the top or bottom of\n the screen"
        },
        {
          "name": "direction",
          "type_long": "int",
          "type_short": "int",
          "comment": "the direction to scroll"
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "contains",
      "comment": "Returns true if the the given yPos lies within this layout.",
      "javadoc": "Returns true if the the given yPos lies within this layout.\n@param yPos the vertical coordinate to check if in this layout.",
      "static": false,
      "params": [
        {
          "name": "yPos",
          "type_long": "int",
          "type_short": "int",
          "comment": "the vertical coordinate to check if in this layout."
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFieldBounds",
      "comment": "Returns the bounds of the given field (in coordinates relative to the layout)",
      "javadoc": "Returns the bounds of the given field (in coordinates relative to the layout)\n@param index the field id for the field for which to get bounds",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "int",
          "type_short": "int",
          "comment": "the field id for the field for which to get bounds"
        }
      ],
      "return": {
        "type_long": "java.awt.Rectangle",
        "type_short": "Rectangle",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getIndexSize",
      "comment": "Returns the number of indexes consumed by this layout.",
      "javadoc": "Returns the number of indexes consumed by this layout.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getBeginRowFieldNum",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "field1",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getEndRowFieldNum",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "field2",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getCompressableWidth",
      "comment": "Returns the smallest possible width of this layout that can display its full contents",
      "javadoc": "Returns the smallest possible width of this layout that can display its full contents\n@return the smallest possible width of this layout that can display its full contents",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the smallest possible width of this layout that can display its full contents"
      },
      "throws": []
    }
  ]
}
