{
  "name": "IndexMapper",
  "comment": "Interface for mapping indexes when the LayoutModel changes. In other words, if the mapping\n of layout indexes to some data model changes and you want the FieldPanel to continue\n to display the same model data on the screen, the IndexMapper can be used to convert old\n indexes to new indexes.",
  "javadoc": "Interface for mapping indexes when the LayoutModel changes. In other words, if the mapping\n of layout indexes to some data model changes and you want the {@link FieldPanel} to continue\n to display the same model data on the screen, the IndexMapper can be used to convert old\n indexes to new indexes.",
  "static": false,
  "implements": [],
  "fields": [
    {
      "name": "IDENTITY_MAPPER",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "docking.widgets.fieldpanel.listener.IndexMapper",
      "type_short": "IndexMapper",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "map",
      "comment": "Maps an index from one address mapping to another. This method will return\n BigInteger#ZERO if there no mapping.",
      "javadoc": "Maps an index from one address mapping to another. This method will return\n {@link BigInteger#ZERO} if there no mapping.\n@param value the index value to map from an old index map to a new index map\n@return the mapped index",
      "static": false,
      "params": [
        {
          "name": "value",
          "type_long": "java.math.BigInteger",
          "type_short": "BigInteger",
          "comment": "the index value to map from an old index map to a new index map"
        }
      ],
      "return": {
        "type_long": "java.math.BigInteger",
        "type_short": "BigInteger",
        "comment": "the mapped index"
      },
      "throws": []
    }
  ]
}
