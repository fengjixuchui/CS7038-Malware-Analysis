{
  "name": "LayoutModel",
  "comment": "The Big Layout Model interface.  Objects that implement this interface can be dispayed\n using a BigFieldPanel.",
  "javadoc": "The Big Layout Model interface.  Objects that implement this interface can be dispayed\n using a BigFieldPanel.",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "isUniform",
      "comment": "Returns true if every index returns a non-null layout and all the layouts\n are the same height.",
      "javadoc": "Returns true if every index returns a non-null layout and all the layouts\n are the same height.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPreferredViewSize",
      "comment": "Returns the width of the largest possible layout.",
      "javadoc": "Returns the width of the largest possible layout.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Dimension",
        "type_short": "Dimension",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getNumIndexes",
      "comment": "Returns the total number of indexes.",
      "javadoc": "Returns the total number of indexes.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.math.BigInteger",
        "type_short": "BigInteger",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getIndexAfter",
      "comment": "Returns the closest larger index in the model that has a non-null layout.",
      "javadoc": "Returns the closest larger index in the model that has a non-null layout.\n@param index for which to find the next index with a non-null layout.\n@return returns the closest larger index in the model that has a non-null layout.",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "java.math.BigInteger",
          "type_short": "BigInteger",
          "comment": "for which to find the next index with a non-null layout."
        }
      ],
      "return": {
        "type_long": "java.math.BigInteger",
        "type_short": "BigInteger",
        "comment": "returns the closest larger index in the model that has a non-null layout."
      },
      "throws": []
    },
    {
      "name": "getIndexBefore",
      "comment": "Returns the closest smaller index in the model that has a non-null layout.",
      "javadoc": "Returns the closest smaller index in the model that has a non-null layout.\n@param index for which to find the previous index with a non-null layout.\n@return returns the closest smaller index in the model that has a non-null layout.",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "java.math.BigInteger",
          "type_short": "BigInteger",
          "comment": "for which to find the previous index with a non-null layout."
        }
      ],
      "return": {
        "type_long": "java.math.BigInteger",
        "type_short": "BigInteger",
        "comment": "returns the closest smaller index in the model that has a non-null layout."
      },
      "throws": []
    },
    {
      "name": "getLayout",
      "comment": "Returns a layout for the given index.",
      "javadoc": "Returns a layout for the given index.\n@param index the index of the layout to retrieve.",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "java.math.BigInteger",
          "type_short": "BigInteger",
          "comment": "the index of the layout to retrieve."
        }
      ],
      "return": {
        "type_long": "docking.widgets.fieldpanel.Layout",
        "type_short": "Layout",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "iterator",
      "comment": "Returns an iterator that walks all the Layout items in this model.",
      "javadoc": "Returns an iterator that walks all the Layout items in this model.\n@return new iterator",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.widgets.fieldpanel.LayoutModelIterator",
        "type_short": "LayoutModelIterator",
        "comment": "new iterator"
      },
      "throws": []
    },
    {
      "name": "iterator",
      "comment": "Returns an iterator that walks all the Layout items in this model, starting at the\n specified index.",
      "javadoc": "Returns an iterator that walks all the Layout items in this model, starting at the\n specified index.\n@param startIndex start index in the model to beginning iterating\n@return new iterator",
      "static": false,
      "params": [
        {
          "name": "startIndex",
          "type_long": "java.math.BigInteger",
          "type_short": "BigInteger",
          "comment": "start index in the model to beginning iterating"
        }
      ],
      "return": {
        "type_long": "docking.widgets.fieldpanel.LayoutModelIterator",
        "type_short": "LayoutModelIterator",
        "comment": "new iterator"
      },
      "throws": []
    },
    {
      "name": "addLayoutModelListener",
      "comment": "Adds a LayoutModelListener to be notified when changes occur.",
      "javadoc": "Adds a LayoutModelListener to be notified when changes occur.\n@param listener the LayoutModelListener to add.",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "docking.widgets.fieldpanel.listener.LayoutModelListener",
          "type_short": "LayoutModelListener",
          "comment": "the LayoutModelListener to add."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeLayoutModelListener",
      "comment": "Removes a LayoutModelListener to be notified when changes occur.",
      "javadoc": "Removes a LayoutModelListener to be notified when changes occur.\n@param listener the LayoutModelListener to remove.",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "docking.widgets.fieldpanel.listener.LayoutModelListener",
          "type_short": "LayoutModelListener",
          "comment": "the LayoutModelListener to remove."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "flushChanges",
      "comment": "Returns true if the model knows about changes that haven\u0027t yet been told to the \n LayoutModelListeners.",
      "javadoc": "Returns true if the model knows about changes that haven\u0027t yet been told to the \n LayoutModelListeners.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
