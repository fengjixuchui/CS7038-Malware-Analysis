{
  "name": "GhidraFileChooserPanel",
  "comment": "Panel for entering a file name that includes a title border, a text field\n for entering a filename, and a button for bringing up a file chooser dialog.",
  "javadoc": "Panel for entering a file name that includes a title border, a text field\n for entering a filename, and a button for bringing up a file chooser dialog.",
  "static": false,
  "implements": [
    "docking.dnd.Droppable"
  ],
  "extends": "javax.swing.JPanel",
  "fields": [
    {
      "name": "serialVersionUID",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "long",
      "type_short": "long",
      "constant_value": "1"
    },
    {
      "name": "INPUT_MODE",
      "comment": "This mode denotes that only existing files will\n be chosen for the purpose of reading.",
      "javadoc": "This mode denotes that only existing files will\n be chosen for the purpose of reading.",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "0"
    },
    {
      "name": "OUTPUT_MODE",
      "comment": "This mode denotes that existing files (or new files)\n will be chosen for the purpose of writing.\n If an existing file is selected the user will\n be prompted to confirm overwrite.",
      "javadoc": "This mode denotes that existing files (or new files)\n will be chosen for the purpose of writing.\n If an existing file is selected the user will\n be prompted to confirm overwrite.",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "1"
    },
    {
      "name": "fileChooser",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.widgets.filechooser.GhidraFileChooser",
      "type_short": "GhidraFileChooser",
      "constant_value": null
    },
    {
      "name": "filter",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.filechooser.GhidraFileFilter",
      "type_short": "GhidraFileFilter",
      "constant_value": null
    },
    {
      "name": "filenameTextField",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.JTextField",
      "type_short": "JTextField",
      "constant_value": null
    },
    {
      "name": "chooseButton",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.JButton",
      "type_short": "JButton",
      "constant_value": null
    },
    {
      "name": "title",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "propertyName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "defaultFileName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "createBorder",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "mode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "listener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.widgets.filechooser.GhidraFileChooserPanelListener",
      "type_short": "GhidraFileChooserPanelListener",
      "constant_value": null
    },
    {
      "name": "dropTarget",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.awt.dnd.DropTarget",
      "type_short": "DropTarget",
      "constant_value": null
    },
    {
      "name": "dropTargetAdapter",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.dnd.DropTgtAdapter",
      "type_short": "DropTgtAdapter",
      "constant_value": null
    },
    {
      "name": "acceptableFlavors",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.awt.datatransfer.DataFlavor[]",
      "type_short": "java.awt.datatransfer.DataFlavor[]",
      "constant_value": null
    },
    {
      "name": "selectionMode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.widgets.filechooser.GhidraFileChooserMode",
      "type_short": "GhidraFileChooserMode",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new GhidraFileChooserPanel",
      "javadoc": "Constructs a new GhidraFileChooserPanel\n@param title the title for this panel\n@param propertyName the property name to save state\n@param defaultFileName the default file name.\n@param createBorder flag to create the border or not.",
      "static": false,
      "params": [
        {
          "name": "title",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the title for this panel"
        },
        {
          "name": "propertyName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the property name to save state"
        },
        {
          "name": "defaultFileName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the default file name."
        },
        {
          "name": "createBorder",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "flag to create the border or not."
        },
        {
          "name": "mode",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setListener",
      "comment": "Sets the listener.",
      "javadoc": "Sets the listener.\n@param listener the new listener",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "docking.widgets.filechooser.GhidraFileChooserPanelListener",
          "type_short": "GhidraFileChooserPanelListener",
          "comment": "the new listener"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setFileFilter",
      "comment": "Sets the file filter.",
      "javadoc": "Sets the file filter.\n@param filter the new file filter",
      "static": false,
      "params": [
        {
          "name": "filter",
          "type_long": "ghidra.util.filechooser.GhidraFileFilter",
          "type_short": "GhidraFileFilter",
          "comment": "the new file filter"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "build",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "fileChanged",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addDocumentListener",
      "comment": "Adds a document listener to the text field.",
      "javadoc": "Adds a document listener to the text field.\n@param dl the document listener to add.",
      "static": false,
      "params": [
        {
          "name": "dl",
          "type_long": "javax.swing.event.DocumentListener",
          "type_short": "DocumentListener",
          "comment": "the document listener to add."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFileName",
      "comment": "Returns the filename currently in the text field.",
      "javadoc": "Returns the filename currently in the text field.\n@return the filename currently in the text field",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the filename currently in the text field"
      },
      "throws": []
    },
    {
      "name": "getCurrentDirectory",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setFileName",
      "comment": "Sets the textfield with the given filename.",
      "javadoc": "Sets the textfield with the given filename.\n@param path the name of the file to put in the text field.",
      "static": false,
      "params": [
        {
          "name": "path",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of the file to put in the text field."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setEnabled",
      "comment": "",
      "javadoc": "@see java.awt.Component#setEnabled(boolean)",
      "static": false,
      "params": [
        {
          "name": "enabled",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "chooseFile",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "parent",
          "type_long": "java.awt.Component",
          "type_short": "Component",
          "comment": ""
        },
        {
          "name": "buttonText",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.io.File",
        "type_short": "File",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setupDragAndDrop",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "add",
      "comment": "",
      "javadoc": "@see docking.dnd.Droppable#add(java.lang.Object, java.awt.dnd.DropTargetDropEvent, java.awt.datatransfer.DataFlavor)",
      "static": false,
      "params": [
        {
          "name": "obj",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        },
        {
          "name": "e",
          "type_long": "java.awt.dnd.DropTargetDropEvent",
          "type_short": "DropTargetDropEvent",
          "comment": ""
        },
        {
          "name": "f",
          "type_long": "java.awt.datatransfer.DataFlavor",
          "type_short": "DataFlavor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setFileSelectionMode",
      "comment": "Sets the GhidraFileChooser to allow the user to just\n select files, just select\n directories, or select both files and directories.  The default is\n GhidraFileChooserMode.FILES_ONLY.",
      "javadoc": "Sets the \u003ccode\u003eGhidraFileChooser\u003c/code\u003e to allow the user to just\n select files, just select\n directories, or select both files and directories.  The default is\n \u003ccode\u003eGhidraFileChooserMode.FILES_ONLY\u003c/code\u003e.\n@param mode the type of files to be displayed\n@exception IllegalArgumentException if \u003ccode\u003emode\u003c/code\u003e is an\n\t\t\t\tillegal Dialog mode",
      "static": false,
      "params": [
        {
          "name": "mode",
          "type_long": "docking.widgets.filechooser.GhidraFileChooserMode",
          "type_short": "GhidraFileChooserMode",
          "comment": "the type of files to be displayed"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "dragUnderFeedback",
      "comment": "",
      "javadoc": "@see docking.dnd.Droppable#dragUnderFeedback(boolean, java.awt.dnd.DropTargetDragEvent)",
      "static": false,
      "params": [
        {
          "name": "ok",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        },
        {
          "name": "e",
          "type_long": "java.awt.dnd.DropTargetDragEvent",
          "type_short": "DropTargetDragEvent",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isDropOk",
      "comment": "",
      "javadoc": "@see docking.dnd.Droppable#isDropOk(java.awt.dnd.DropTargetDragEvent)",
      "static": false,
      "params": [
        {
          "name": "e",
          "type_long": "java.awt.dnd.DropTargetDragEvent",
          "type_short": "DropTargetDragEvent",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "undoDragUnderFeedback",
      "comment": "",
      "javadoc": "@see docking.dnd.Droppable#undoDragUnderFeedback()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
