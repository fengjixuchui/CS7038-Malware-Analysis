{
  "name": "PasswordDialog",
  "comment": "PasswordDialog is a modal dialog which \n prompts a user for a password.",
  "javadoc": "\u003ccode\u003ePasswordDialog\u003c/code\u003e is a modal dialog which \n prompts a user for a password.",
  "static": false,
  "implements": [],
  "extends": "docking.DialogComponentProvider",
  "fields": [
    {
      "name": "workPanel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.JPanel",
      "type_short": "JPanel",
      "constant_value": null
    },
    {
      "name": "nameField",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.JTextField",
      "type_short": "JTextField",
      "constant_value": null
    },
    {
      "name": "passwordField",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.JPasswordField",
      "type_short": "JPasswordField",
      "constant_value": null
    },
    {
      "name": "choiceCB",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.JComboBox\u003cjava.lang.String\u003e",
      "type_short": "JComboBox",
      "constant_value": null
    },
    {
      "name": "anonymousAccess",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.JCheckBox",
      "type_short": "JCheckBox",
      "constant_value": null
    },
    {
      "name": "okPressed",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a new PasswordDialog.",
      "javadoc": "Construct a new PasswordDialog.\n@param title title of the dialog\n@param serverType \u0027Server\u0027 or \u0027Key-store\u0027 designation\n@param serverName name of server or keystore pathname\n@param passPrompt password prompt to show in the dialog; may be null, in which case\n \"Password:\" is displayed next to the password field\n@param namePrompt name prompt to show in the dialog, if null a name will not be prompted for.\n@param defaultUserID default name when prompting for a name\n@param choicePrompt namePrompt name prompt to show in the dialog, if null a name will not be prompted for.\n@param choices array of choices to present if choicePrompt is not null\n@param defaultChoice default choice index\n@param includeAnonymousOption true signals to add a checkbox to request anonymous login",
      "static": false,
      "params": [
        {
          "name": "title",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "title of the dialog"
        },
        {
          "name": "serverType",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "\u0027Server\u0027 or \u0027Key-store\u0027 designation"
        },
        {
          "name": "serverName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "name of server or keystore pathname"
        },
        {
          "name": "passPrompt",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "password prompt to show in the dialog; may be null, in which case\n \"Password:\" is displayed next to the password field"
        },
        {
          "name": "namePrompt",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "name prompt to show in the dialog, if null a name will not be prompted for."
        },
        {
          "name": "defaultUserID",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "default name when prompting for a name"
        },
        {
          "name": "choicePrompt",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "namePrompt name prompt to show in the dialog, if null a name will not be prompted for."
        },
        {
          "name": "choices",
          "type_long": "java.lang.String[]",
          "type_short": "java.lang.String[]",
          "comment": "array of choices to present if choicePrompt is not null"
        },
        {
          "name": "defaultChoice",
          "type_long": "int",
          "type_short": "int",
          "comment": "default choice index"
        },
        {
          "name": "includeAnonymousOption",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true signals to add a checkbox to request anonymous login"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a new PasswordDialog.",
      "javadoc": "Construct a new PasswordDialog.\n@param title title of the dialog\n@param serverType \u0027Server\u0027 or \u0027Key-store\u0027 designation\n@param serverName name of server or keystore pathname\n@param passPrompt password prompt to show in the dialog; may be null, in which case\n \"Password:\" is displayed next to the password field\n@param namePrompt name prompt to show in the dialog, if null a name will not be prompted for.\n@param defaultUserID default name when prompting for a name",
      "static": false,
      "params": [
        {
          "name": "title",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "title of the dialog"
        },
        {
          "name": "serverType",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "\u0027Server\u0027 or \u0027Key-store\u0027 designation"
        },
        {
          "name": "serverName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "name of server or keystore pathname"
        },
        {
          "name": "passPrompt",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "password prompt to show in the dialog; may be null, in which case\n \"Password:\" is displayed next to the password field"
        },
        {
          "name": "namePrompt",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "name prompt to show in the dialog, if null a name will not be prompted for."
        },
        {
          "name": "defaultUserID",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "default name when prompting for a name"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a new PasswordDialog.",
      "javadoc": "Construct a new PasswordDialog.\n@param title title of the dialog\n@param serverType \u0027Server\u0027 or \u0027Key-store\u0027 designation\n@param serverName name of server or keystore pathname\n@param passPrompt password prompt to show in the dialog; may be null, in which case\n \"Password:\" is displayed next to the password field\n@param namePrompt name prompt to show in the dialog, if null a name will not be prompted for.\n@param defaultUserID default name when prompting for a name\n@param hasMessages true if the client will set messages on this dialog.  If true, the \n        dialog\u0027s minimum size will be increased",
      "static": false,
      "params": [
        {
          "name": "title",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "title of the dialog"
        },
        {
          "name": "serverType",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "\u0027Server\u0027 or \u0027Key-store\u0027 designation"
        },
        {
          "name": "serverName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "name of server or keystore pathname"
        },
        {
          "name": "passPrompt",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "password prompt to show in the dialog; may be null, in which case\n \"Password:\" is displayed next to the password field"
        },
        {
          "name": "namePrompt",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "name prompt to show in the dialog, if null a name will not be prompted for."
        },
        {
          "name": "defaultUserID",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "default name when prompting for a name"
        },
        {
          "name": "hasMessages",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true if the client will set messages on this dialog.  If true, the \n        dialog\u0027s minimum size will be increased"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setErrorText",
      "comment": "Display error status",
      "javadoc": "Display error status\n@param text the text",
      "static": false,
      "params": [
        {
          "name": "text",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the text"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPassword",
      "comment": "Return the password entered in the password field.",
      "javadoc": "Return the password entered in the password field.\n@return the password chars",
      "static": false,
      "params": [],
      "return": {
        "type_long": "char[]",
        "type_short": "char[]",
        "comment": "the password chars"
      },
      "throws": []
    },
    {
      "name": "anonymousAccessRequested",
      "comment": "Returns true if anonymous access is requested",
      "javadoc": "Returns true if anonymous access is requested\n@return true if anonymous access requested",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if anonymous access requested"
      },
      "throws": []
    },
    {
      "name": "getUserID",
      "comment": "Return the user ID entered in the password field",
      "javadoc": "Return the user ID entered in the password field\n@return the user ID entered in the password field",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the user ID entered in the password field"
      },
      "throws": []
    },
    {
      "name": "getChoice",
      "comment": "Returns index of selected choice or -1 if no choice has been made",
      "javadoc": "Returns index of selected choice or -1 if no choice has been made\n@return index of selected choice or -1 if no choice has been made",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "index of selected choice or -1 if no choice has been made"
      },
      "throws": []
    },
    {
      "name": "okWasPressed",
      "comment": "Returns true if the OK button was pressed.",
      "javadoc": "Returns true if the OK button was pressed.\n@return true if the OK button was pressed.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the OK button was pressed."
      },
      "throws": []
    },
    {
      "name": "okCallback",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "dispose",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
