{
  "name": "ImagePanel",
  "comment": "Creates a panel that displays an Image. Users may pan the image as desired and zoom the\n image according to specific zoom levels.",
  "javadoc": "Creates a panel that displays an {@link Image}. Users may pan the image as desired and zoom the\n image according to specific zoom levels.",
  "static": false,
  "implements": [],
  "extends": "javax.swing.JPanel",
  "fields": [
    {
      "name": "ZOOM_LEVELS",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "float[]",
      "type_short": "float[]",
      "constant_value": null
    },
    {
      "name": "ZERO_MAGNIFICATION_INDEX",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "ZOOM_FACTOR_INDEX_DEFAULT",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "zoomLevelIndex",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "image",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.awt.Image",
      "type_short": "Image",
      "constant_value": null
    },
    {
      "name": "label",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.widgets.imagepanel.ImagePanel.PanAndZoomComponent",
      "type_short": "PanAndZoomComponent",
      "constant_value": null
    },
    {
      "name": "imageScroller",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.JScrollPane",
      "type_short": "JScrollPane",
      "constant_value": null
    },
    {
      "name": "zoomEnabled",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "translateEnabled",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "DEFAULT_ZOOM_FACTOR",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "float",
      "type_short": "float",
      "constant_value": "1.0"
    },
    {
      "name": "defaultZoomFactor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "float",
      "type_short": "float",
      "constant_value": null
    },
    {
      "name": "IMAGE_PROPERTY",
      "comment": "Property name that indicates the image displayed by this panel has changed",
      "javadoc": "Property name that indicates the image displayed by this panel has changed",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"image\""
    },
    {
      "name": "ZOOM_PROPERTY",
      "comment": "Property name that indicates the zoom level of the image has changed",
      "javadoc": "Property name that indicates the zoom level of the image has changed",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"zoom\""
    },
    {
      "name": "DEFAULT_ZOOM_PROPERTY",
      "comment": "Property name that indicates the default zoom level of the image has changed",
      "javadoc": "Property name that indicates the default zoom level of the image has changed",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"default_zoom\""
    },
    {
      "name": "TRANSLATION_PROPERTY",
      "comment": "Property name that indicates the image has been translated",
      "javadoc": "Property name that indicates the image has been translated",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"translation\""
    },
    {
      "name": "zoomAndPanMouseAdapter",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.awt.event.MouseAdapter",
      "type_short": "MouseAdapter",
      "constant_value": null
    },
    {
      "name": "imagePanel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.JPanel",
      "type_short": "JPanel",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "findZeroMagnificationIndex",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Create an empty NavigableImagePanel",
      "javadoc": "Create an empty NavigableImagePanel",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Create an NavigableImagePanel with the specified image",
      "javadoc": "Create an NavigableImagePanel with the specified image",
      "static": false,
      "params": [
        {
          "name": "image",
          "type_long": "java.awt.Image",
          "type_short": "Image",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "initUI",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setImage",
      "comment": "Set the image this panel should display",
      "javadoc": "Set the image this panel should display\n@param image the new image to display",
      "static": false,
      "params": [
        {
          "name": "image",
          "type_long": "java.awt.Image",
          "type_short": "Image",
          "comment": "the new image to display"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getImage",
      "comment": "Get the currently-displayed image",
      "javadoc": "Get the currently-displayed image\n@return the current image",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Image",
        "type_short": "Image",
        "comment": "the current image"
      },
      "throws": []
    },
    {
      "name": "setImageBackgroundColor",
      "comment": "Set the background color of the panel. If the specified color is null, the \n default color for panel backgrounds is used.",
      "javadoc": "Set the background color of the panel. If the specified color is null, the \n default color for panel backgrounds is used.\n@param color the new background color",
      "static": false,
      "params": [
        {
          "name": "color",
          "type_long": "java.awt.Color",
          "type_short": "Color",
          "comment": "the new background color"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getImageBackgroundColor",
      "comment": "Get the current background color of this panel",
      "javadoc": "Get the current background color of this panel\n@return the background color",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Color",
        "type_short": "Color",
        "comment": "the background color"
      },
      "throws": []
    },
    {
      "name": "setText",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "text",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getText",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getZoomFactor",
      "comment": "Get the current zoom factor the image is being drawn to",
      "javadoc": "Get the current zoom factor the image is being drawn to\n@return the image magnification factor",
      "static": false,
      "params": [],
      "return": {
        "type_long": "float",
        "type_short": "float",
        "comment": "the image magnification factor"
      },
      "throws": []
    },
    {
      "name": "setZoomFactor",
      "comment": "Set the magnification factor of the image. The zoom parameter is aligned to the \n nearest pre-configured magnification factor, rounding down for zoom factors less than \n 1.0, and up for factors greater than 1.0. Zoom factors outside the pre-configured range\n are limited to the nearest range extent.",
      "javadoc": "Set the magnification factor of the image. The zoom parameter is aligned to the \n nearest pre-configured magnification factor, rounding down for zoom factors less than \n 1.0, and up for factors greater than 1.0. Zoom factors outside the pre-configured range\n are limited to the nearest range extent.\n@param zoom",
      "static": false,
      "params": [
        {
          "name": "zoom",
          "type_long": "float",
          "type_short": "float",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getIndexForLevel",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "levels",
          "type_long": "float[]",
          "type_short": "float[]",
          "comment": ""
        },
        {
          "name": "zoom",
          "type_long": "float",
          "type_short": "float",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDefaultZoomFactor",
      "comment": "Get the default zoom level",
      "javadoc": "Get the default zoom level\n@return ",
      "static": false,
      "params": [],
      "return": {
        "type_long": "float",
        "type_short": "float",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setDefaultZoomFactor",
      "comment": "Set the default zoom level, adhering to the same set of constrains as #setZoomFactor(float)",
      "javadoc": "Set the default zoom level, adhering to the same set of constrains as {@link #setZoomFactor(float)}\n@param zoom\n@see #setZoomFactor(float)\n@see #resetZoom()",
      "static": false,
      "params": [
        {
          "name": "zoom",
          "type_long": "float",
          "type_short": "float",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "resetZoom",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getImageComponentCenter",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Point",
        "type_short": "Point",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "canZoomIn",
      "comment": "Determine if the image can zoom in further based on current magnification levels",
      "javadoc": "Determine if the image can zoom in further based on current magnification levels\n@return True if magnification steps are available, false otherwise",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "True if magnification steps are available, false otherwise"
      },
      "throws": []
    },
    {
      "name": "zoomIn",
      "comment": "Enlarge the image about the image center",
      "javadoc": "Enlarge the image about the image center",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "zoomIn",
      "comment": "Enlarge the image about the given point",
      "javadoc": "Enlarge the image about the given point\n@param center location to enlarge the image around",
      "static": false,
      "params": [
        {
          "name": "center",
          "type_long": "java.awt.Point",
          "type_short": "Point",
          "comment": "location to enlarge the image around"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "canZoomOut",
      "comment": "Determine if the image can zoom out further based on current magnification levels",
      "javadoc": "Determine if the image can zoom out further based on current magnification levels\n@return True if (de-)magnification steps are available, false otherwise",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "True if (de-)magnification steps are available, false otherwise"
      },
      "throws": []
    },
    {
      "name": "zoomOut",
      "comment": "Shrink the image about the image center",
      "javadoc": "Shrink the image about the image center",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "zoomOut",
      "comment": "Shrink the image about the given point",
      "javadoc": "Shrink the image about the given point\n@param center location to shrink the image around",
      "static": false,
      "params": [
        {
          "name": "center",
          "type_long": "java.awt.Point",
          "type_short": "Point",
          "comment": "location to shrink the image around"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "doZoom",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "center",
          "type_long": "java.awt.Point",
          "type_short": "Point",
          "comment": ""
        },
        {
          "name": "zoomFactor",
          "type_long": "float",
          "type_short": "float",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isImageZoomEnabled",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setImageZoomEnabled",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "enabled",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "resetImageTranslation",
      "comment": "Move the image back to the center. Zoom factor is unmodified.",
      "javadoc": "Move the image back to the center. Zoom factor is unmodified.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isTranslated",
      "comment": "Determine if the image has been moved from its original location",
      "javadoc": "Determine if the image has been moved from its original location\n@return True if the image has moved, false otherwise",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "True if the image has moved, false otherwise"
      },
      "throws": []
    },
    {
      "name": "getTranslation",
      "comment": "Get the X-Y distance the image has moved",
      "javadoc": "Get the X-Y distance the image has moved\n@return the X-Y distances the image has moved",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Point",
        "type_short": "Point",
        "comment": "the X-Y distances the image has moved"
      },
      "throws": []
    },
    {
      "name": "translateImage",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "dX",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "dY",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isImageTranslationEnabled",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setImageTranslationEnabled",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "enabled",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
