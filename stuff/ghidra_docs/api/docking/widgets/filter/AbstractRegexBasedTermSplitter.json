{
  "name": "AbstractRegexBasedTermSplitter",
  "comment": "Allows the user to split a string using a regex as the delimiter.",
  "javadoc": "Allows the user to split a string using a regex as the delimiter.",
  "static": false,
  "implements": [
    "docking.widgets.filter.TermSplitter"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "pattern",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.regex.Pattern",
      "type_short": "Pattern",
      "constant_value": null
    },
    {
      "name": "EMPTY",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String[]",
      "type_short": "java.lang.String[]",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "generatePattern",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "delim",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "delimiter",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "split",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "input",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String[]",
        "type_short": "java.lang.String[]",
        "comment": ""
      },
      "throws": []
    }
  ]
}
