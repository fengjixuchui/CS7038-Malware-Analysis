{
  "name": "TextFilter",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "matches",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "text",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFilterText",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isSubFilterOf",
      "comment": "Returns true if this filter is a more specific filter of the given filter.  This is \n specific to the implementation.   Some filters cannot be sub-filters of another filter, \n such as the \u0027matches exactly\u0027 filter.  Contrastingly, a \u0027starts with\u0027 filter can have\n a sub-filter; for example, for a \u0027starts with\u0027 filter, \u0027cat\u0027 is a sub-filter of \u0027ca\u0027, as\n \u0027cat\u0027 starts with \u0027ca\u0027.",
      "javadoc": "Returns true if this filter is a more specific filter of the given filter.  This is \n specific to the implementation.   Some filters cannot be sub-filters of another filter, \n such as the \u0027matches exactly\u0027 filter.  Contrastingly, a \u0027starts with\u0027 filter can have\n a sub-filter; for example, for a \u0027starts with\u0027 filter, \u0027cat\u0027 is a sub-filter of \u0027ca\u0027, as\n \u0027cat\u0027 starts with \u0027ca\u0027.\n@param filter the potential parent filter\n@return true if this filter is a more specific filter of the given filter.",
      "static": false,
      "params": [
        {
          "name": "filter",
          "type_long": "docking.widgets.filter.TextFilter",
          "type_short": "TextFilter",
          "comment": "the potential parent filter"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if this filter is a more specific filter of the given filter."
      },
      "throws": []
    }
  ]
}
