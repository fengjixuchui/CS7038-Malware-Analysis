{
  "name": "GList",
  "comment": "A sub-class of JList that provides an auto-lookup feature.\n \n The user can begin typing the first few letters of a desired\n list element and the selection will automatically navigate to it.\n \n HTML rendering is disabled by default.\n ",
  "javadoc": "A sub-class of JList that provides an auto-lookup feature.\n \u003cp\u003e\n The user can begin typing the first few letters of a desired\n list element and the selection will automatically navigate to it.\n \u003cp\u003e\n HTML rendering is disabled by default.\n \u003cp\u003e\n@param \u003cT\u003e the row type of the list",
  "static": false,
  "implements": [
    "docking.widgets.GComponent"
  ],
  "extends": "javax.swing.JList",
  "fields": [
    {
      "name": "autoLookup",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.widgets.AutoLookup",
      "type_short": "AutoLookup",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a GhidraList with an empty model.",
      "javadoc": "Constructs a \u003ccode\u003eGhidraList\u003c/code\u003e with an empty model.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a GhidraList that displays the elements in\n the specified array.  This constructor just delegates to the\n ListModel constructor.",
      "javadoc": "Constructs a \u003ccode\u003eGhidraList\u003c/code\u003e that displays the elements in\n the specified array.  This constructor just delegates to the\n \u003ccode\u003eListModel\u003c/code\u003e constructor.\n@param listData the array of Objects to be loaded into the data model",
      "static": false,
      "params": [
        {
          "name": "listData",
          "type_long": "T[]",
          "type_short": "T[]",
          "comment": "the array of Objects to be loaded into the data model"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a GhidraList that displays the elements in\n the specified Vector.  This constructor just\n delegates to the ListModel constructor.",
      "javadoc": "Constructs a \u003ccode\u003eGhidraList\u003c/code\u003e that displays the elements in\n the specified \u003ccode\u003eVector\u003c/code\u003e.  This constructor just\n delegates to the \u003ccode\u003eListModel\u003c/code\u003e constructor.\n@param listData the \u003ccode\u003eVector\u003c/code\u003e to be loaded into the data model",
      "static": false,
      "params": [
        {
          "name": "listData",
          "type_long": "java.util.Vector\u003cT\u003e",
          "type_short": "Vector",
          "comment": "the Vector to be loaded into the data model"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a GhidraList that displays the elements in the\n specified, non-null model. \n All GhidraList constructors delegate to this one.",
      "javadoc": "Constructs a \u003ccode\u003eGhidraList\u003c/code\u003e that displays the elements in the\n specified, non-\u003ccode\u003enull\u003c/code\u003e model. \n All \u003ccode\u003eGhidraList\u003c/code\u003e constructors delegate to this one.\n@param dataModel the data model for this list\n@exception IllegalArgumentException if \u003ccode\u003edataModel\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e",
      "static": false,
      "params": [
        {
          "name": "dataModel",
          "type_long": "javax.swing.ListModel\u003cT\u003e",
          "type_short": "ListModel",
          "comment": "the data model for this list"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "init",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setAutoLookupTimeout",
      "comment": "Sets the delay between keystrokes after which each keystroke is considered a new lookup",
      "javadoc": "Sets the delay between keystrokes after which each keystroke is considered a new lookup\n@param timeout the timeout\n@see AutoLookup#KEY_TYPING_TIMEOUT",
      "static": false,
      "params": [
        {
          "name": "timeout",
          "type_long": "long",
          "type_short": "long",
          "comment": "the timeout"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getNextMatch",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "prefix",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "startIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "bias",
          "type_long": "javax.swing.text.Position.Bias",
          "type_short": "Bias",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createAutoLookup",
      "comment": "Allows subclasses to change the type of AutoLookup created by this list",
      "javadoc": "Allows subclasses to change the type of {@link AutoLookup} created by this list\n@return the auto lookup",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.widgets.AutoLookup",
        "type_short": "AutoLookup",
        "comment": "the auto lookup"
      },
      "throws": []
    }
  ]
}
