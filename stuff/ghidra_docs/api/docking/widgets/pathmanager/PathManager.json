{
  "name": "PathManager",
  "comment": "Component that has a table to show pathnames; the panel includes buttons to control\n the order of the paths, and to add and remove paths. The add button brings up a\n file chooser. Call the setFileChooser() method to control how the file chooser should\n behave.  If the table entries should not be edited, call setEditingEnabled(false).",
  "javadoc": "Component that has a table to show pathnames; the panel includes buttons to control\n the order of the paths, and to add and remove paths. The add button brings up a\n file chooser. Call the setFileChooser() method to control how the file chooser should\n behave.  If the table entries should not be edited, call setEditingEnabled(false).",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "panel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.JPanel",
      "type_short": "JPanel",
      "constant_value": null
    },
    {
      "name": "pathTable",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.widgets.table.GTable",
      "type_short": "GTable",
      "constant_value": null
    },
    {
      "name": "pathModel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.widgets.pathmanager.PathManagerModel",
      "type_short": "PathManagerModel",
      "constant_value": null
    },
    {
      "name": "pathModelListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.event.TableModelListener",
      "type_short": "TableModelListener",
      "constant_value": null
    },
    {
      "name": "upButton",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.JButton",
      "type_short": "JButton",
      "constant_value": null
    },
    {
      "name": "downButton",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.JButton",
      "type_short": "JButton",
      "constant_value": null
    },
    {
      "name": "addButton",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.JButton",
      "type_short": "JButton",
      "constant_value": null
    },
    {
      "name": "removeButton",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.JButton",
      "type_short": "JButton",
      "constant_value": null
    },
    {
      "name": "selectionColor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.awt.Color",
      "type_short": "Color",
      "constant_value": null
    },
    {
      "name": "fileChooser",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.widgets.filechooser.GhidraFileChooser",
      "type_short": "GhidraFileChooser",
      "constant_value": null
    },
    {
      "name": "preferenceForLastSelectedDir",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "title",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "fileChooserMode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.widgets.filechooser.GhidraFileChooserMode",
      "type_short": "GhidraFileChooserMode",
      "constant_value": null
    },
    {
      "name": "allowMultiFileSelection",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "filter",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.filechooser.GhidraFileFilter",
      "type_short": "GhidraFileFilter",
      "constant_value": null
    },
    {
      "name": "addToTop",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "allowOrdering",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "listeners",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.ArrayList\u003cdocking.widgets.pathmanager.PathManagerListener\u003e",
      "type_short": "ArrayList",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a new PathnameTablePanel.",
      "javadoc": "Construct a new PathnameTablePanel.\n@param paths list of paths to show; may be null\n@param addToTop true if new paths are to be added to the top of the table, false\n@param allowOrdering if true the ability to move path items up/down will be provided\n if new paths are to be added to the end of the table",
      "static": false,
      "params": [
        {
          "name": "paths",
          "type_long": "java.util.List\u003cgeneric.util.Path\u003e",
          "type_short": "List",
          "comment": "list of paths to show; may be null"
        },
        {
          "name": "addToTop",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true if new paths are to be added to the top of the table, false"
        },
        {
          "name": "allowOrdering",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "if true the ability to move path items up/down will be provided\n if new paths are to be added to the end of the table"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "addToTop",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        },
        {
          "name": "allowOrdering",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setFileChooserProperties",
      "comment": "Set properties on the file chooser that is displayed when the \"Add\" button is pressed.",
      "javadoc": "Set properties on the file chooser that is displayed when the \"Add\" button is pressed.\n@param title title of the file chooser\n@param preferenceForLastSelectedDir Preference to use as the current directory in the\n file chooser\n@param selectionMode mode defined in GhidraFileChooser, e.g., GhidraFileChooser.FILES_ONLY\n@param allowMultiSelection true if multiple files can be selected\n@param filter filter to use; may be null if no filtering is required",
      "static": false,
      "params": [
        {
          "name": "title",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "title of the file chooser"
        },
        {
          "name": "preferenceForLastSelectedDir",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "Preference to use as the current directory in the\n file chooser"
        },
        {
          "name": "selectionMode",
          "type_long": "docking.widgets.filechooser.GhidraFileChooserMode",
          "type_short": "GhidraFileChooserMode",
          "comment": "mode defined in GhidraFileChooser, e.g., GhidraFileChooser.FILES_ONLY"
        },
        {
          "name": "allowMultiSelection",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true if multiple files can be selected"
        },
        {
          "name": "filter",
          "type_long": "ghidra.util.filechooser.GhidraFileFilter",
          "type_short": "GhidraFileFilter",
          "comment": "filter to use; may be null if no filtering is required"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addPath",
      "comment": "Add a new file path and set its enablement",
      "javadoc": "Add a new file path and set its enablement\n@param file\n@param enabled\n@return true if the enabled path did not already exist",
      "static": false,
      "params": [
        {
          "name": "file",
          "type_long": "generic.jar.ResourceFile",
          "type_short": "ResourceFile",
          "comment": ""
        },
        {
          "name": "enabled",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the enabled path did not already exist"
      },
      "throws": []
    },
    {
      "name": "setPaths",
      "comment": "Set the paths.",
      "javadoc": "Set the paths.",
      "static": false,
      "params": [
        {
          "name": "paths",
          "type_long": "java.util.List\u003cgeneric.util.Path\u003e",
          "type_short": "List",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "clear",
      "comment": "Clear the paths in the table.",
      "javadoc": "Clear the paths in the table.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "docking.widgets.pathmanager.PathManagerListener",
          "type_short": "PathManagerListener",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "docking.widgets.pathmanager.PathManagerListener",
          "type_short": "PathManagerListener",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getListeners",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cdocking.widgets.pathmanager.PathManagerListener\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "firePathsChanged",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "create",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "paths",
          "type_long": "java.util.List\u003cgeneric.util.Path\u003e",
          "type_short": "List",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "updateButtonsEnabled",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "remove",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "add",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "up",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "down",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getComponent",
      "comment": "Returns the GUI component for the path manager.",
      "javadoc": "Returns the GUI component for the path manager.\n@return the GUI component for the path manager",
      "static": false,
      "params": [],
      "return": {
        "type_long": "javax.swing.JComponent",
        "type_short": "JComponent",
        "comment": "the GUI component for the path manager"
      },
      "throws": []
    },
    {
      "name": "saveState",
      "comment": "Saves the paths to the specified SaveState object.",
      "javadoc": "Saves the paths to the specified SaveState object.\n@param ss the SaveState object",
      "static": false,
      "params": [
        {
          "name": "ss",
          "type_long": "ghidra.framework.options.SaveState",
          "type_short": "SaveState",
          "comment": "the SaveState object"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "restoreFromPreferences",
      "comment": "Restore paths from user Preferences using the specified keys.  \n If preferences have never been saved, the specified \n will be used.  Note: the encoded path list must have been stored\n using the same keys using the #savePathsToPreferences(String, String, Path[])\n or #saveToPreferences(String, String) methods.",
      "javadoc": "Restore paths from user Preferences using the specified keys.  \n If preferences have never been saved, the specified {@code defaultEnablePaths}\n will be used.  Note: the encoded path list must have been stored\n using the same keys using the {@link #savePathsToPreferences(String, String, Path[])}\n or {@link #saveToPreferences(String, String)} methods.\n@param enablePathKey preference key for storing enabled paths\n@param defaultEnablePaths default paths\n@param disabledPathKey preference key for storing disabled paths",
      "static": false,
      "params": [
        {
          "name": "enablePathKey",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "preference key for storing enabled paths"
        },
        {
          "name": "defaultEnablePaths",
          "type_long": "generic.util.Path[]",
          "type_short": "generic.util.Path[]",
          "comment": "default paths"
        },
        {
          "name": "disabledPathKey",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "preference key for storing disabled paths"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPathsFromPreferences",
      "comment": "Restore paths from user Preferences using the specified keys.  \n If preferences have never been saved, the specified \n will be returned.  Note: the encoded path list must have been stored\n using the same keys using the #savePathsToPreferences(String, String, Path[])\n or #saveToPreferences(String, String) methods.",
      "javadoc": "Restore paths from user Preferences using the specified keys.  \n If preferences have never been saved, the specified {@code defaultEnablePaths}\n will be returned.  Note: the encoded path list must have been stored\n using the same keys using the {@link #savePathsToPreferences(String, String, Path[])}\n or {@link #saveToPreferences(String, String)} methods.\n@param enablePathKey preference key for storing enabled paths\n@param defaultEnablePaths default paths\n@param disabledPathKey preference key for storing disabled paths\n@return ordered paths from Preferences",
      "static": true,
      "params": [
        {
          "name": "enablePathKey",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "preference key for storing enabled paths"
        },
        {
          "name": "defaultEnablePaths",
          "type_long": "generic.util.Path[]",
          "type_short": "generic.util.Path[]",
          "comment": "default paths"
        },
        {
          "name": "disabledPathKey",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "preference key for storing disabled paths"
        }
      ],
      "return": {
        "type_long": "generic.util.Path[]",
        "type_short": "generic.util.Path[]",
        "comment": "ordered paths from Preferences"
      },
      "throws": []
    },
    {
      "name": "saveToPreferences",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "enablePathKey",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "disabledPathKey",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "appendPath",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "buf",
          "type_long": "java.lang.StringBuilder",
          "type_short": "StringBuilder",
          "comment": ""
        },
        {
          "name": "path",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "previousPathIsEmpty",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "savePathsToPreferences",
      "comment": "Save the specified paths to the user Preferences using the specified keys.\n Note: The encoded path Preferences are intended to be decoded by the \n #restoreFromPreferences(String, Path[], String) and\n #getPathsFromPreferences(String, Path[], String) methods.",
      "javadoc": "Save the specified paths to the user Preferences using the specified keys.\n Note: The encoded path Preferences are intended to be decoded by the \n {@link #restoreFromPreferences(String, Path[], String)} and\n {@link #getPathsFromPreferences(String, Path[], String)} methods.\n@param enablePathKey preference key for storing enabled paths\n@param disabledPathKey preference key for storing disabled paths\n@param paths paths to be saved\n@return true if Preference saved properly",
      "static": true,
      "params": [
        {
          "name": "enablePathKey",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "preference key for storing enabled paths"
        },
        {
          "name": "disabledPathKey",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "preference key for storing disabled paths"
        },
        {
          "name": "paths",
          "type_long": "generic.util.Path[]",
          "type_short": "generic.util.Path[]",
          "comment": "paths to be saved"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if Preference saved properly"
      },
      "throws": []
    },
    {
      "name": "restoreState",
      "comment": "Restores the paths from the specified SaveState object.",
      "javadoc": "Restores the paths from the specified SaveState object.\n@param ss the SaveState object",
      "static": false,
      "params": [
        {
          "name": "ss",
          "type_long": "ghidra.framework.options.SaveState",
          "type_short": "SaveState",
          "comment": "the SaveState object"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPath",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "filepath",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "paths",
          "type_long": "java.util.List\u003cgeneric.util.Path\u003e",
          "type_short": "List",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "generic.util.Path",
        "type_short": "Path",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isValidPath",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "path",
          "type_long": "generic.util.Path",
          "type_short": "Path",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "dispose",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
