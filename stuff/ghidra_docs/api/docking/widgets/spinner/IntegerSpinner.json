{
  "name": "IntegerSpinner",
  "comment": "Creates a component for editing Integer values using an IntegerTextField and a JSpinner.",
  "javadoc": "Creates a component for editing Integer values using an {@link IntegerTextField} and a {@link JSpinner}.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "spinner",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.JSpinner",
      "type_short": "JSpinner",
      "constant_value": null
    },
    {
      "name": "integerTextField",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.widgets.textfield.IntegerTextField",
      "type_short": "IntegerTextField",
      "constant_value": null
    },
    {
      "name": "changeListeners",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cjavax.swing.event.ChangeListener\u003e",
      "type_short": "List",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Creates a new IntegerSpinner using the given spinner model.",
      "javadoc": "Creates a new IntegerSpinner using the given spinner model.\n@param spinnerModel the spinner model to use in the JSpinner.",
      "static": false,
      "params": [
        {
          "name": "spinnerModel",
          "type_long": "javax.swing.SpinnerNumberModel",
          "type_short": "SpinnerNumberModel",
          "comment": "the spinner model to use in the JSpinner."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSpinner",
      "comment": "Returns the JSpinner that has been attached to the text field.",
      "javadoc": "Returns the JSpinner that has been attached to the text field.\n@return the JSpinner that has been attached to the text field",
      "static": false,
      "params": [],
      "return": {
        "type_long": "javax.swing.JSpinner",
        "type_short": "JSpinner",
        "comment": "the JSpinner that has been attached to the text field"
      },
      "throws": []
    },
    {
      "name": "getTextField",
      "comment": "Returns the IntegerTextField that has been attached to the spinner.",
      "javadoc": "Returns the IntegerTextField that has been attached to the spinner.\n@return the IntegerTextField that has been attached to the spinner.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.widgets.textfield.IntegerTextField",
        "type_short": "IntegerTextField",
        "comment": "the IntegerTextField that has been attached to the spinner."
      },
      "throws": []
    },
    {
      "name": "setValue",
      "comment": "Sets the given value to both the spinner and the text field.",
      "javadoc": "Sets the given value to both the spinner and the text field.\n@param value the value to set.",
      "static": false,
      "params": [
        {
          "name": "value",
          "type_long": "java.lang.Number",
          "type_short": "Number",
          "comment": "the value to set."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addChangeListener",
      "comment": "Adds a ChangeListener to the model\u0027s listener list.  The\n ChangeListeners must be notified when the models value changes.",
      "javadoc": "Adds a ChangeListener to the model\u0027s listener list.  The\n ChangeListeners must be notified when the models value changes.\n@param listener the ChangeListener to add",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "javax.swing.event.ChangeListener",
          "type_short": "ChangeListener",
          "comment": "the ChangeListener to add"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeChangeListener",
      "comment": "Removes a ChangeListener from the model\u0027s listener list.",
      "javadoc": "Removes a ChangeListener from the model\u0027s listener list.\n@param listener the ChangeListener to remove",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "javax.swing.event.ChangeListener",
          "type_short": "ChangeListener",
          "comment": "the ChangeListener to remove"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "fireStateChanged",
      "comment": "Run each ChangeListeners stateChanged() method.",
      "javadoc": "Run each ChangeListeners stateChanged() method.\n@see #setValue\n@see EventListenerList",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
