{
  "name": "GDHtmlLabel",
  "comment": "A \u0027dynamic\u0027 label (the text can be changed), with HTML rendering allowed.\n \n See also:\n \n \tClassMutable textHTML renderingDescription\n  GLabelImmutableNONon-html unchangeable label\n  GDLabelMutableNONon-html changeable label\n  GHtmlLabelImmutableYESHtml unchangeable label\n  GDHtmlLabelMutableYESHtml changeable label\n  GIconLabelN/ANOLabel that only has an icon image, no text\n  Other components of note:\n  GCheckBoxNONon-html checkbox\n  GHtmlCheckBoxYESHtml checkbox\n ",
  "javadoc": "A \u0027dynamic\u0027 label (the text can be changed), with HTML rendering allowed.\n \u003cp\u003e\n See also:\n \u003ctable border\u003d1\u003e\u003ccaption\u003e\u003c/caption\u003e\n \t\u003ctr\u003e\u003cth\u003eClass\u003c/th\u003e\u003cth\u003eMutable text\u003c/th\u003e\u003cth\u003eHTML rendering\u003c/th\u003e\u003cth\u003eDescription\u003c/th\u003e\u003c/tr\u003e\n  \u003ctr\u003e\u003ctd\u003e{@link GLabel}\u003c/td\u003e\u003ctd\u003eImmutable\u003c/td\u003e\u003ctd\u003eNO\u003c/td\u003e\u003ctd\u003eNon-html unchangeable label\u003c/td\u003e\u003c/tr\u003e\n  \u003ctr\u003e\u003ctd\u003e{@link GDLabel}\u003c/td\u003e\u003ctd\u003eMutable\u003c/td\u003e\u003ctd\u003eNO\u003c/td\u003e\u003ctd\u003eNon-html changeable label\u003c/td\u003e\u003c/tr\u003e\n  \u003ctr\u003e\u003ctd\u003e{@link GHtmlLabel}\u003c/td\u003e\u003ctd\u003eImmutable\u003c/td\u003e\u003ctd\u003eYES\u003c/td\u003e\u003ctd\u003eHtml unchangeable label\u003c/td\u003e\u003c/tr\u003e\n  \u003ctr\u003e\u003ctd\u003e{@link GDHtmlLabel}\u003c/td\u003e\u003ctd\u003eMutable\u003c/td\u003e\u003ctd\u003eYES\u003c/td\u003e\u003ctd\u003eHtml changeable label\u003c/td\u003e\u003c/tr\u003e\n  \u003ctr\u003e\u003ctd\u003e{@link GIconLabel}\u003c/td\u003e\u003ctd\u003eN/A\u003c/td\u003e\u003ctd\u003eNO\u003c/td\u003e\u003ctd\u003eLabel that only has an icon image, no text\u003c/td\u003e\u003c/tr\u003e\n  \u003ctr\u003e\u003cth colspan\u003d4\u003eOther components of note:\u003c/th\u003e\u003c/tr\u003e\n  \u003ctr\u003e\u003ctd\u003e{@link GCheckBox}\u003c/td\u003e\u003ctd\u003e\u003c/td\u003e\u003ctd\u003eNO\u003c/td\u003e\u003ctd\u003eNon-html checkbox\u003c/td\u003e\u003c/tr\u003e\n  \u003ctr\u003e\u003ctd\u003e{@link GHtmlCheckBox}\u003c/td\u003e\u003ctd\u003e\u003c/td\u003e\u003ctd\u003eYES\u003c/td\u003e\u003ctd\u003eHtml checkbox\u003c/td\u003e\u003c/tr\u003e\n \u003c/table\u003e",
  "static": false,
  "implements": [
    "docking.widgets.GComponent"
  ],
  "extends": "javax.swing.JLabel",
  "fields": [],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Creates a label with no image and no text, with SwingConstants#LEADING horizontal\n alignment, with HTML rendering allowed.\n \n See JLabel#JLabel().\n ",
      "javadoc": "Creates a label with no image and no text, with {@link SwingConstants#LEADING} horizontal\n alignment, with HTML rendering allowed.\n \u003cp\u003e\n See {@link JLabel#JLabel()}.\n \u003cp\u003e",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Creates a label with the specified text, with SwingConstants#LEADING horizontal\n alignment, with HTML rendering allowed.\n \n See JLabel#JLabel(String).\n ",
      "javadoc": "Creates a label with the specified text, with {@link SwingConstants#LEADING} horizontal\n alignment, with HTML rendering allowed.\n \u003cp\u003e\n See {@link JLabel#JLabel(String)}.\n \u003cp\u003e\n@param text string to be displayed by the label",
      "static": false,
      "params": [
        {
          "name": "text",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "string to be displayed by the label"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Creates a label with the specified text and horizontal alignment, \n with HTML rendering allowed.\n \n See JLabel#JLabel(String, int).\n ",
      "javadoc": "Creates a label with the specified text and horizontal alignment, \n with HTML rendering allowed.\n \u003cp\u003e\n See {@link JLabel#JLabel(String, int)}.\n \u003cp\u003e\n@param text string to be displayed by the label\n@param horizontalAlignment One of\n           {@link SwingConstants#LEFT},\n           {@link SwingConstants#CENTER},\n           {@link SwingConstants#RIGHT},\n           {@link SwingConstants#LEADING},\n           {@link SwingConstants#TRAILING}",
      "static": false,
      "params": [
        {
          "name": "text",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "string to be displayed by the label"
        },
        {
          "name": "horizontalAlignment",
          "type_long": "int",
          "type_short": "int",
          "comment": "One of\n           SwingConstants#LEFT,\n           SwingConstants#CENTER,\n           SwingConstants#RIGHT,\n           SwingConstants#LEADING,\n           SwingConstants#TRAILING"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Creates a label with the specified text, image and horizontal alignment, \n with HTML rendering allowed.\n \n See JLabel#JLabel(String, Icon, int).\n ",
      "javadoc": "Creates a label with the specified text, image and horizontal alignment, \n with HTML rendering allowed.\n \u003cp\u003e\n See {@link JLabel#JLabel(String, Icon, int)}.\n \u003cp\u003e\n@param text string to be displayed by the label\n@param icon image to be displayed by the label\n@param horizontalAlignment One of\n           {@link SwingConstants#LEFT},\n           {@link SwingConstants#CENTER},\n           {@link SwingConstants#RIGHT},\n           {@link SwingConstants#LEADING},\n           {@link SwingConstants#TRAILING}",
      "static": false,
      "params": [
        {
          "name": "text",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "string to be displayed by the label"
        },
        {
          "name": "icon",
          "type_long": "javax.swing.Icon",
          "type_short": "Icon",
          "comment": "image to be displayed by the label"
        },
        {
          "name": "horizontalAlignment",
          "type_long": "int",
          "type_short": "int",
          "comment": "One of\n           SwingConstants#LEFT,\n           SwingConstants#CENTER,\n           SwingConstants#RIGHT,\n           SwingConstants#LEADING,\n           SwingConstants#TRAILING"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
