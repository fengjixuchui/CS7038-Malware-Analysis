{
  "name": "ConfigurableColumnTableModel",
  "comment": "A model that provides access to table columns that are \"configurable,\" whether by way of \n Settings object, or by the implementations and how they were written (like supplying \n custom renderers and such).",
  "javadoc": "A model that provides access to table columns that are \"configurable,\" whether by way of \n {@link Settings} object, or by the implementations and how they were written (like supplying \n custom renderers and such).",
  "static": false,
  "implements": [
    "javax.swing.table.TableModel"
  ],
  "fields": [],
  "methods": [
    {
      "name": "getColumnSettings",
      "comment": "Returns settings for the specified column index",
      "javadoc": "Returns settings for the specified column index\n@param index column index\n@return column settings.",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "int",
          "type_short": "int",
          "comment": "column index"
        }
      ],
      "return": {
        "type_long": "ghidra.docking.settings.Settings",
        "type_short": "Settings",
        "comment": "column settings."
      },
      "throws": []
    },
    {
      "name": "getColumnSettingsDefinitions",
      "comment": "Returns settings definitions for the specified column index",
      "javadoc": "Returns settings definitions for the specified column index\n@param index column index\n@return column settings definitions.",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "int",
          "type_short": "int",
          "comment": "column index"
        }
      ],
      "return": {
        "type_long": "ghidra.docking.settings.SettingsDefinition[]",
        "type_short": "ghidra.docking.settings.SettingsDefinition[]",
        "comment": "column settings definitions."
      },
      "throws": []
    },
    {
      "name": "setAllColumnSettings",
      "comment": "Allows for the bulk setting of Settings.  This prevents excessive event \n notification when all settings need to be changed.",
      "javadoc": "Allows for the bulk setting of Settings.  This prevents excessive event \n notification when all settings need to be changed.\n@param settings An array of Settings that contains Settings for each column  \n        where the index of the Settings in the array is the index of the column\n        in the model",
      "static": false,
      "params": [
        {
          "name": "settings",
          "type_long": "ghidra.docking.settings.Settings[]",
          "type_short": "ghidra.docking.settings.Settings[]",
          "comment": "An array of Settings that contains Settings for each column  \n        where the index of the Settings in the array is the index of the column\n        in the model"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getMaxLines",
      "comment": "Gets the maximum number of text display lines needed for any given cell within the \n specified column",
      "javadoc": "Gets the maximum number of text display lines needed for any given cell within the \n specified column\n@param index column field index\n@return maximum number of lines needed for specified column",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "int",
          "type_short": "int",
          "comment": "column field index"
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "maximum number of lines needed for specified column"
      },
      "throws": []
    },
    {
      "name": "getRenderer",
      "comment": "Returns the table cell renderer for the given column",
      "javadoc": "Returns the table cell renderer for the given column\n@param columnIndex the index of the column\n@return the renderer",
      "static": false,
      "params": [
        {
          "name": "columnIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": "the index of the column"
        }
      ],
      "return": {
        "type_long": "javax.swing.table.TableCellRenderer",
        "type_short": "TableCellRenderer",
        "comment": "the renderer"
      },
      "throws": []
    }
  ]
}
