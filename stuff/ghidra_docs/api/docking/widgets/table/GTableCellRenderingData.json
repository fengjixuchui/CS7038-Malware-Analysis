{
  "name": "GTableCellRenderingData",
  "comment": "A state object to provide a table cell renderer with data beyond the standard Java \n javax.swing.table.TableCellRenderer interface.\n \n Additional data about the context of a rendering operation -- like the columns\u0027 Settings \n or the row-object -- are easily passed to the renderer without refactor of each client.",
  "javadoc": "A state object to provide a table cell renderer with data beyond the standard Java \n {@link javax.swing.table.TableCellRenderer} interface.\n \u003cp\u003e\n Additional data about the context of a rendering operation -- like the columns\u0027 Settings \n or the row-object -- are easily passed to the renderer without refactor of each client.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "jTableRef",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.ref.WeakReference\u003cjavax.swing.JTable\u003e",
      "type_short": "WeakReference",
      "constant_value": null
    },
    {
      "name": "columnViewIndex",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "rowViewIndex",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "value",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.Object",
      "type_short": "Object",
      "constant_value": null
    },
    {
      "name": "isSelected",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "hasFocus",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "columnSettingsRef",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.ref.WeakReference\u003cghidra.docking.settings.Settings\u003e",
      "type_short": "WeakReference",
      "constant_value": null
    },
    {
      "name": "rowObjectRef",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.ref.WeakReference\u003cjava.lang.Object\u003e",
      "type_short": "WeakReference",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Create a data object for a specific column in a table",
      "javadoc": "Create a data object for a specific column in a table\n@param jTable Reference to the associated JTable\n@param column View index of this column\n@param columnSettings Settings state provided and used by this column",
      "static": false,
      "params": [
        {
          "name": "jTable",
          "type_long": "javax.swing.JTable",
          "type_short": "JTable",
          "comment": "Reference to the associated JTable"
        },
        {
          "name": "column",
          "type_long": "int",
          "type_short": "int",
          "comment": "View index of this column"
        },
        {
          "name": "columnSettings",
          "type_long": "ghidra.docking.settings.Settings",
          "type_short": "Settings",
          "comment": "Settings state provided and used by this column"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "copyWithNewValue",
      "comment": "Create a new data object from this data, changing only the cells\u0027 value object.\n \n This method is a convenience for use by renderers that wish to change the value \n passed to them.",
      "javadoc": "Create a new data object from this data, changing only the cells\u0027 value object.\n \n \u003cp\u003eThis method is a convenience for use by renderers that wish to change the value \n passed to them.\n@param newValue New cell value object\n@return A new data object with the same state as this object",
      "static": false,
      "params": [
        {
          "name": "newValue",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": "New cell value object"
        }
      ],
      "return": {
        "type_long": "docking.widgets.table.GTableCellRenderingData",
        "type_short": "GTableCellRenderingData",
        "comment": "A new data object with the same state as this object"
      },
      "throws": []
    },
    {
      "name": "setRowData",
      "comment": "Set data specific to a row, as used during the rendering phase",
      "javadoc": "Set data specific to a row, as used during the rendering phase\n@param row View row index\n@param rowObject Object for which this table row is generated",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "View row index"
        },
        {
          "name": "rowObject",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": "Object for which this table row is generated"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setCellData",
      "comment": "Set data specific to a cell, as used during the rendering phase",
      "javadoc": "Set data specific to a cell, as used during the rendering phase\n@param value The models\u0027 value at row-column\n@param column the view column index\n@param isSelected True if the cell is to be rendered with the \n selection highlighted; otherwise false\n@param hasFocus This cell has the users\u0027 focus",
      "static": false,
      "params": [
        {
          "name": "value",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": "The models\u0027 value at row-column"
        },
        {
          "name": "column",
          "type_long": "int",
          "type_short": "int",
          "comment": "the view column index"
        },
        {
          "name": "isSelected",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "True if the cell is to be rendered with the \n selection highlighted; otherwise false"
        },
        {
          "name": "hasFocus",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "This cell has the users\u0027 focus"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "resetRowData",
      "comment": "Clear the row state",
      "javadoc": "Clear the row state\n@see #setRowData(int, Object)",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getTable",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "javax.swing.JTable",
        "type_short": "JTable",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getColumnViewIndex",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getColumnModelIndex",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getColumnSettings",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.docking.settings.Settings",
        "type_short": "Settings",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getRowViewIndex",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getRowModelIndex",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getValue",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.Object",
        "type_short": "Object",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getRowObject",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.Object",
        "type_short": "Object",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isSelected",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hasFocus",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    }
  ]
}
