{
  "name": "FilterTypeConverter",
  "comment": "An interface that is meant to take the column type of of a DynamicTableColumn\n and convert it to the specified type.   This class is meant to be used when the dynamic \n filtering mechanism is not correctly filtering a column, usually because the default filter\n for the column type does not match what the renderer is displaying in the table.",
  "javadoc": "An interface that is meant to take the column type of of a {@link DynamicTableColumn}\n and convert it to the specified type.   This class is meant to be used when the dynamic \n filtering mechanism is not correctly filtering a column, usually because the default filter\n for the column type does not match what the renderer is displaying in the table.\n@param \u003cCOLUMN_TYPE\u003e the column type\n@param \u003cFILTER_TYPE\u003e the new type to be used during filter operations",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "getFilterType",
      "comment": "Returns the destination class of the conversion",
      "javadoc": "Returns the destination class of the conversion\n@return the destination class",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.Class\u003cFILTER_TYPE\u003e",
        "type_short": "Class",
        "comment": "the destination class"
      },
      "throws": []
    },
    {
      "name": "convert",
      "comment": "Converts in instance of the column type to an instance of the destination type",
      "javadoc": "Converts in instance of the column type to an instance of the destination type\n@param t the column type instance\n@param settings any settings the converter may need to convert the type\n@return the new object",
      "static": false,
      "params": [
        {
          "name": "t",
          "type_long": "COLUMN_TYPE",
          "type_short": "COLUMN_TYPE",
          "comment": "the column type instance"
        },
        {
          "name": "settings",
          "type_long": "ghidra.docking.settings.Settings",
          "type_short": "Settings",
          "comment": "any settings the converter may need to convert the type"
        }
      ],
      "return": {
        "type_long": "FILTER_TYPE",
        "type_short": "FILTER_TYPE",
        "comment": "the new object"
      },
      "throws": []
    }
  ]
}
