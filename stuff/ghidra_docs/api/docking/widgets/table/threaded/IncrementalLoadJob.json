{
  "name": "IncrementalLoadJob",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [
    "docking.widgets.table.threaded.ThreadedTableModelListener"
  ],
  "extends": "ghidra.util.worker.Job",
  "fields": [
    {
      "name": "listener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.widgets.table.threaded.IncrementalJobListener",
      "type_short": "IncrementalJobListener",
      "constant_value": null
    },
    {
      "name": "threadedModel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.widgets.table.threaded.ThreadedTableModel\u003cROW_OBJECT,?\u003e",
      "type_short": "ThreadedTableModel",
      "constant_value": null
    },
    {
      "name": "updateManager",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.widgets.table.threaded.ThreadedTableModelUpdateMgr\u003cROW_OBJECT\u003e",
      "type_short": "ThreadedTableModelUpdateMgr",
      "constant_value": null
    },
    {
      "name": "completedCallbackLatch",
      "comment": "Used to signal that the updateManager has finished loading the final contents gathered\n by this job.",
      "javadoc": "Used to signal that the updateManager has finished loading the final contents gathered\n by this job.",
      "static": false,
      "type_long": "java.util.concurrent.CountDownLatch",
      "type_short": "CountDownLatch",
      "constant_value": null
    },
    {
      "name": "incrementalAccumulator",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.widgets.table.threaded.IncrementalLoadJob\u003cROW_OBJECT\u003e.IncrementalUpdatingAccumulator",
      "type_short": "IncrementalUpdatingAccumulator",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "threadedModel",
          "type_long": "docking.widgets.table.threaded.ThreadedTableModel\u003cROW_OBJECT,?\u003e",
          "type_short": "ThreadedTableModel",
          "comment": ""
        },
        {
          "name": "listener",
          "type_long": "docking.widgets.table.threaded.IncrementalJobListener",
          "type_short": "IncrementalJobListener",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "run",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "doExecute",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "waitForThreadedTableUpdateManager",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "flush",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "accumulator",
          "type_long": "docking.widgets.table.threaded.IncrementalLoadJob\u003cROW_OBJECT\u003e.IncrementalUpdatingAccumulator",
          "type_short": "IncrementalUpdatingAccumulator",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "notifyStarted",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "notifyCompleted",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "wasCancelled",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "cancel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "loadPending",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "loadingStarted",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "loadingFinished",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "wasCancelled",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
