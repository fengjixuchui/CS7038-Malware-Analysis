{
  "name": "StringColumnConstraint",
  "comment": "Base class for various String constraints.",
  "javadoc": "Base class for various String constraints.",
  "static": false,
  "implements": [
    "docking.widgets.table.constraint.ColumnConstraint"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "MAX_AUTO_COMPLETE",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "patternString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "findsPattern",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.regex.Pattern",
      "type_short": "Pattern",
      "constant_value": null
    },
    {
      "name": "errorMessage",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "matchesPattern",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.regex.Pattern",
      "type_short": "Pattern",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new StringColumnConstraint using the given pattern and patternString.",
      "javadoc": "Constructs a new StringColumnConstraint using the given pattern and patternString.\n@param patternString the user entered string to form the pattern used to accept column values.\n@param errorMessage the text to display in an empty editor textfield.",
      "static": false,
      "params": [
        {
          "name": "patternString",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the user entered string to form the pattern used to accept column values."
        },
        {
          "name": "errorMessage",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the text to display in an empty editor textfield."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new StringColumnConstraint using the given pattern and patternString, using\n the default hint text that explains that you can use globbing characters.",
      "javadoc": "Constructs a new StringColumnConstraint using the given pattern and patternString, using\n the default hint text that explains that you can use globbing characters.\n@param patternString the user entered string to form the pattern used to accept column values.",
      "static": false,
      "params": [
        {
          "name": "patternString",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the user entered string to form the pattern used to accept column values."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getGroup",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "accepts",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "value",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "context",
          "type_long": "docking.widgets.table.constraint.TableFilterContext",
          "type_short": "TableFilterContext",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "generateMatchesPattern",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "value",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.regex.Pattern",
        "type_short": "Pattern",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "generateFindsPattern",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.regex.Pattern",
        "type_short": "Pattern",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getEditor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "columnDataSource",
          "type_long": "docking.widgets.table.constraint.ColumnData\u003cjava.lang.String\u003e",
          "type_short": "ColumnData",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.widgets.table.constrainteditor.ColumnConstraintEditor\u003cjava.lang.String\u003e",
        "type_short": "ColumnConstraintEditor",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "copy",
      "comment": "subclasses must override to generate new versions of themselves but with a new pattern string.",
      "javadoc": "subclasses must override to generate new versions of themselves but with a new pattern string.\n@param newPatternString the new string to use for creating the match pattern.\n@return a new ColumnConstraint that is the same type as this constraint but with a new range defined.",
      "static": false,
      "params": [
        {
          "name": "newPatternString",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the new string to use for creating the match pattern."
        }
      ],
      "return": {
        "type_long": "docking.widgets.table.constraint.ColumnConstraint\u003cjava.lang.String\u003e",
        "type_short": "ColumnConstraint",
        "comment": "a new ColumnConstraint that is the same type as this constraint but with a new range defined."
      },
      "throws": []
    },
    {
      "name": "getPatternString",
      "comment": "Returns the pattern string for this constraint.",
      "javadoc": "Returns the pattern string for this constraint.\n@return the pattern string for this constraint.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the pattern string for this constraint."
      },
      "throws": []
    },
    {
      "name": "getColumnType",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.Class\u003cjava.lang.String\u003e",
        "type_short": "Class",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getConstraintValueTooltip",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getConstraintValueString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "parseConstraintValue",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "newValue",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "dataSource",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.widgets.table.constraint.ColumnConstraint\u003cjava.lang.String\u003e",
        "type_short": "ColumnConstraint",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hashCode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "equals",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "o",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getHighlightMatcher",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "value",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.regex.Matcher",
        "type_short": "Matcher",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isValidPatternString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "value",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    }
  ]
}
