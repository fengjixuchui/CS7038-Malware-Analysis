{
  "name": "RangeColumnConstraint",
  "comment": "Abstract base class for range constraints.",
  "javadoc": "Abstract base class for range constraints.\n@param \u003cT\u003e the column type",
  "static": false,
  "implements": [
    "docking.widgets.table.constraint.ColumnConstraint"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "RANGE_SPEC_PATTERN",
      "comment": "This pattern is used to extract the minimum and maximum values from a range specification.\n\n  A range specification adheres to this format:\n \u0027[\u0027 (whitespace)? (minimum value) (whitespace)? \u0027,\u0027 (whitespace)? (maximum value) (whitespace)? \u0027]\u0027\n\n  For example, matching values would be [ 10 , 20 ],  [10,20]\n \n \n The minimum and maximum value-strings must not contain commas or closing square brackets.\n Leading and trailing whitespace is removed from the value-string.\n ",
      "javadoc": "This pattern is used to extract the minimum and maximum values from a range specification.\n\n \u003cP\u003e A range specification adheres to this format:\n \u003ccode\u003e\u0027[\u0027 (whitespace)? (minimum value) (whitespace)? \u0027,\u0027 (whitespace)? (maximum value) (whitespace)? \u0027]\u0027\u003c/code\u003e\n\n \u003cP\u003e For example, matching values would be [ 10 , 20 ],  [10,20]\n \u003cp\u003e\n \u003cul\u003e\n \u003cli\u003eThe minimum and maximum value-strings must not contain commas or closing square brackets.\u003c/li\u003e\n \u003cli\u003eLeading and trailing whitespace is removed from the value-string.\u003c/li\u003e\n \u003c/ul\u003e",
      "static": true,
      "type_long": "java.util.regex.Pattern",
      "type_short": "Pattern",
      "constant_value": null
    },
    {
      "name": "name",
      "comment": "This constraints\u0027 name\n \n It sometimes makes grammatical sense to set a more useful name than the default;\n while \u0027at least\u0027 makes sense for a number-based constraint, \u0027after\u0027 reads better for\n date-based constraints.",
      "javadoc": "This constraints\u0027 name\n \u003cp\u003e\n It sometimes makes grammatical sense to set a more useful name than the default;\n while \u0027at least\u0027 makes sense for a number-based constraint, \u0027after\u0027 reads better for\n date-based constraints.",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "minValue",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "T",
      "type_short": "T",
      "constant_value": null
    },
    {
      "name": "maxValue",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "T",
      "type_short": "T",
      "constant_value": null
    },
    {
      "name": "editorProvider",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.widgets.table.constraint.provider.EditorProvider\u003cT\u003e",
      "type_short": "EditorProvider",
      "constant_value": null
    },
    {
      "name": "group",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor",
      "javadoc": "Constructor\n@param name the name of the constraint.\n@param minValue the min value of the range.\n@param maxValue the max value of the range.\n@param editorProvider the editor provider that generates the appropriate editors for\n constraints of this type.\n@param group the group of the constraint for visual grouping when presenting to the user.",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of the constraint."
        },
        {
          "name": "minValue",
          "type_long": "T",
          "type_short": "T",
          "comment": "the min value of the range."
        },
        {
          "name": "maxValue",
          "type_long": "T",
          "type_short": "T",
          "comment": "the max value of the range."
        },
        {
          "name": "editorProvider",
          "type_long": "docking.widgets.table.constraint.provider.EditorProvider\u003cT\u003e",
          "type_short": "EditorProvider",
          "comment": "the editor provider that generates the appropriate editors for\n constraints of this type."
        },
        {
          "name": "group",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the group of the constraint for visual grouping when presenting to the user."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getGroup",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getMinValue",
      "comment": "Returns the min value of the range used by this constraint.",
      "javadoc": "Returns the min value of the range used by this constraint.\n@return the min value of the range used by this constraint.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "T",
        "type_short": "T",
        "comment": "the min value of the range used by this constraint."
      },
      "throws": []
    },
    {
      "name": "getMaxValue",
      "comment": "Returns the max value of the range used by this constraint.",
      "javadoc": "Returns the max value of the range used by this constraint.\n@return the max value of the range used by this constraint.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "T",
        "type_short": "T",
        "comment": "the max value of the range used by this constraint."
      },
      "throws": []
    },
    {
      "name": "getColumnType",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.Class\u003cT\u003e",
        "type_short": "Class",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getEditor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "columnDataSource",
          "type_long": "docking.widgets.table.constraint.ColumnData\u003cT\u003e",
          "type_short": "ColumnData",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.widgets.table.constrainteditor.ColumnConstraintEditor\u003cT\u003e",
        "type_short": "ColumnConstraintEditor",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getConstraintValueString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "parseConstraintValue",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "newValue",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "dataSource",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.widgets.table.constraint.ColumnConstraint\u003cT\u003e",
        "type_short": "ColumnConstraint",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "copy",
      "comment": "subclasses must override to generate new versions of themselves but with new range values.",
      "javadoc": "subclasses must override to generate new versions of themselves but with new range values.\n@param min the min value of the range.\n@param max the max value of the range.\n@return a new ColumnConstraint that is the same type as this constraint but with a new range defined.",
      "static": false,
      "params": [
        {
          "name": "min",
          "type_long": "T",
          "type_short": "T",
          "comment": "the min value of the range."
        },
        {
          "name": "max",
          "type_long": "T",
          "type_short": "T",
          "comment": "the max value of the range."
        }
      ],
      "return": {
        "type_long": "docking.widgets.table.constraint.RangeColumnConstraint\u003cT\u003e",
        "type_short": "RangeColumnConstraint",
        "comment": "a new ColumnConstraint that is the same type as this constraint but with a new range defined."
      },
      "throws": []
    },
    {
      "name": "hashCode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "equals",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "o",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    }
  ]
}
