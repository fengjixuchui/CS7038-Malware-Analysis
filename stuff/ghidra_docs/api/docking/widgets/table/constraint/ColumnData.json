{
  "name": "ColumnData",
  "comment": "Interface for providing column data and a table\u0027s DataSource to a constraint editor.  Some editors\n require access to the table column data.  One example is a String \"Starts With\" column might\n pre-process the data to provide an autocompletion feature in the editor.",
  "javadoc": "Interface for providing column data and a table\u0027s DataSource to a constraint editor.  Some editors\n require access to the table column data.  One example is a String \"Starts With\" column might\n pre-process the data to provide an autocompletion feature in the editor.\n@param \u003cT\u003e the column data type.",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "getColumnName",
      "comment": "Returns the name of the column being filtered.",
      "javadoc": "Returns the name of the column being filtered.\n@return the name of the column being filtered.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the name of the column being filtered."
      },
      "throws": []
    },
    {
      "name": "getCount",
      "comment": "Returns the number of column values (unfiltered table row count)",
      "javadoc": "Returns the number of column values (unfiltered table row count)\n@return the number of column values (unfiltered table row count)",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the number of column values (unfiltered table row count)"
      },
      "throws": []
    },
    {
      "name": "getColumnValue",
      "comment": "Returns the column value for the given row.",
      "javadoc": "Returns the column value for the given row.\n@param row the row for which to get the column value.\n@return the column value for the given row.",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "the row for which to get the column value."
        }
      ],
      "return": {
        "type_long": "T",
        "type_short": "T",
        "comment": "the column value for the given row."
      },
      "throws": []
    },
    {
      "name": "getTableDataSource",
      "comment": "Returns the table\u0027s DataSource.",
      "javadoc": "Returns the table\u0027s DataSource.\n@return the table\u0027s DataSource.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.Object",
        "type_short": "Object",
        "comment": "the table\u0027s DataSource."
      },
      "throws": []
    }
  ]
}
