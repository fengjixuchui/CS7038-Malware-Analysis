{
  "name": "MappedColumnConstraint",
  "comment": "Class that maps one type of column constraint into another.  Typically, these are created\n automatically based on ColumnTypeMapper that are discovered by the system.  For example,\n  string constraints would now be available that column.",
  "javadoc": "Class that maps one type of column constraint into another.  Typically, these are created\n automatically based on {@link ColumnTypeMapper} that are discovered by the system.  For example,\n {@literal if you have a column type of \"Foo\", and you create a ColumnTypeMapper\u003cFoo, String\u003e, \n then all the} string constraints would now be available that column.\n@param \u003cT\u003e The column type\n@param \u003cM\u003e the converted (mapped) type",
  "static": false,
  "implements": [
    "docking.widgets.table.constraint.ColumnConstraint"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "mapper",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.widgets.table.constraint.ColumnTypeMapper\u003cT,M\u003e",
      "type_short": "ColumnTypeMapper",
      "constant_value": null
    },
    {
      "name": "delegate",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.widgets.table.constraint.ColumnConstraint\u003cM\u003e",
      "type_short": "ColumnConstraint",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new Mapped ColumnConstraint",
      "javadoc": "Constructs a new Mapped ColumnConstraint\n@param mapper a mapper from from the column type to a mapped type.\n@param delegate the column constraint of the mapped type.",
      "static": false,
      "params": [
        {
          "name": "mapper",
          "type_long": "docking.widgets.table.constraint.ColumnTypeMapper\u003cT,M\u003e",
          "type_short": "ColumnTypeMapper",
          "comment": "a mapper from from the column type to a mapped type."
        },
        {
          "name": "delegate",
          "type_long": "docking.widgets.table.constraint.ColumnConstraint\u003cM\u003e",
          "type_short": "ColumnConstraint",
          "comment": "the column constraint of the mapped type."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "accepts",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "value",
          "type_long": "T",
          "type_short": "T",
          "comment": ""
        },
        {
          "name": "context",
          "type_long": "docking.widgets.table.constraint.TableFilterContext",
          "type_short": "TableFilterContext",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getColumnType",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.Class\u003cT\u003e",
        "type_short": "Class",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getEditor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "columnDataSource",
          "type_long": "docking.widgets.table.constraint.ColumnData\u003cT\u003e",
          "type_short": "ColumnData",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.widgets.table.constrainteditor.ColumnConstraintEditor\u003cT\u003e",
        "type_short": "ColumnConstraintEditor",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getGroup",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getConstraintValueString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "parseConstraintValue",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "valueString",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "dataSource",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.widgets.table.constraint.ColumnConstraint\u003cT\u003e",
        "type_short": "ColumnConstraint",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "copy",
      "comment": "Creates a copy of this class using the same mapper but with a different mapped delegate.",
      "javadoc": "Creates a copy of this class using the same mapper but with a different mapped delegate.\n@param newDelegate the new M type delegate column constraint.\n@return a copy of this class using the same mapper but with a different mapped delegate.",
      "static": false,
      "params": [
        {
          "name": "newDelegate",
          "type_long": "docking.widgets.table.constraint.ColumnConstraint\u003cM\u003e",
          "type_short": "ColumnConstraint",
          "comment": "the new M type delegate column constraint."
        }
      ],
      "return": {
        "type_long": "docking.widgets.table.constraint.ColumnConstraint\u003cT\u003e",
        "type_short": "ColumnConstraint",
        "comment": "a copy of this class using the same mapper but with a different mapped delegate."
      },
      "throws": []
    },
    {
      "name": "getDelegate",
      "comment": "Returns the delegate constraint (current value for this mapped constraint)",
      "javadoc": "Returns the delegate constraint (current value for this mapped constraint)\n@return the delegate constraint.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.widgets.table.constraint.ColumnConstraint\u003cM\u003e",
        "type_short": "ColumnConstraint",
        "comment": "the delegate constraint."
      },
      "throws": []
    },
    {
      "name": "hashCode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "equals",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "obj",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    }
  ]
}
