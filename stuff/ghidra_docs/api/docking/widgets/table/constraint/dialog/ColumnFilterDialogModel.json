{
  "name": "ColumnFilterDialogModel",
  "comment": "This class is for constructing and editing ColumnBasedTableFilter. It is used by the\n ColumnFilterDialog and exists primarily to make testing easier.",
  "javadoc": "This class is for constructing and editing {@link ColumnBasedTableFilter}. It is used by the\n {@link ColumnFilterDialog} and exists primarily to make testing easier.\n@param \u003cR\u003e the row type for the table",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "tableModel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.widgets.table.RowObjectFilterModel\u003cR\u003e",
      "type_short": "RowObjectFilterModel",
      "constant_value": null
    },
    {
      "name": "allFilters",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cdocking.widgets.table.constraint.dialog.ColumnFilterData\u003c?\u003e\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "filterRows",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cdocking.widgets.table.constraint.dialog.DialogFilterRow\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "listeners",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.datastruct.WeakSet\u003cdocking.widgets.table.constraint.dialog.TableFilterDialogModelListener\u003e",
      "type_short": "WeakSet",
      "constant_value": null
    },
    {
      "name": "columnModel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.table.TableColumnModel",
      "type_short": "TableColumnModel",
      "constant_value": null
    },
    {
      "name": "columnModelListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.event.TableColumnModelListener",
      "type_short": "TableColumnModelListener",
      "constant_value": null
    },
    {
      "name": "currentFilter",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.widgets.table.columnfilter.ColumnBasedTableFilter\u003cR\u003e",
      "type_short": "ColumnBasedTableFilter",
      "constant_value": null
    },
    {
      "name": "defaultFilter",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.widgets.table.columnfilter.ColumnBasedTableFilter\u003cR\u003e",
      "type_short": "ColumnBasedTableFilter",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new ColumnFilterModel",
      "javadoc": "Constructs a new ColumnFilterModel\n@param model the RowObjectFilterModel of the table being filtered.\n@param columnModel the TableColumnModel of the table being filtered.\n@param currentColumnTableFilter the currently applied TableColumnFilter or null if there is\n no current TableColumnFilter applied.",
      "static": false,
      "params": [
        {
          "name": "model",
          "type_long": "docking.widgets.table.RowObjectFilterModel\u003cR\u003e",
          "type_short": "RowObjectFilterModel",
          "comment": "the RowObjectFilterModel of the table being filtered."
        },
        {
          "name": "columnModel",
          "type_long": "javax.swing.table.TableColumnModel",
          "type_short": "TableColumnModel",
          "comment": "the TableColumnModel of the table being filtered."
        },
        {
          "name": "currentColumnTableFilter",
          "type_long": "docking.widgets.table.columnfilter.ColumnBasedTableFilter\u003cR\u003e",
          "type_short": "ColumnBasedTableFilter",
          "comment": "the currently applied TableColumnFilter or null if there is\n no current TableColumnFilter applied."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getAllColumnFilterData",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "model",
          "type_long": "docking.widgets.table.RowObjectFilterModel\u003cR\u003e",
          "type_short": "RowObjectFilterModel",
          "comment": ""
        },
        {
          "name": "columnModel",
          "type_long": "javax.swing.table.TableColumnModel",
          "type_short": "TableColumnModel",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.List\u003cdocking.widgets.table.constraint.dialog.ColumnFilterData\u003c?\u003e\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "dispose",
      "comment": "clean up.",
      "javadoc": "clean up.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createFilterRow",
      "comment": "Creates a new filter row (a new major row in the dialog filter panel)",
      "javadoc": "Creates a new filter row (a new major row in the dialog filter panel)\n@param logicOperation the logical operation for how this row interacts with preceding rows\n@return the new filter row that represents a major row in the dialog filter panel",
      "static": false,
      "params": [
        {
          "name": "logicOperation",
          "type_long": "docking.widgets.table.columnfilter.LogicOperation",
          "type_short": "LogicOperation",
          "comment": "the logical operation for how this row interacts with preceding rows"
        }
      ],
      "return": {
        "type_long": "docking.widgets.table.constraint.dialog.DialogFilterRow",
        "type_short": "DialogFilterRow",
        "comment": "the new filter row that represents a major row in the dialog filter panel"
      },
      "throws": []
    },
    {
      "name": "deleteFilterRow",
      "comment": "Deletes a filter row (a major row in the dialog filter panel)",
      "javadoc": "Deletes a filter row (a major row in the dialog filter panel)\n@param filterRow the row to delete.",
      "static": false,
      "params": [
        {
          "name": "filterRow",
          "type_long": "docking.widgets.table.constraint.dialog.DialogFilterRow",
          "type_short": "DialogFilterRow",
          "comment": "the row to delete."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFilterRows",
      "comment": "Returns a list of all filter rows in this model.",
      "javadoc": "Returns a list of all filter rows in this model.\n@return a list of all filter rows in this model.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cdocking.widgets.table.constraint.dialog.DialogFilterRow\u003e",
        "type_short": "List",
        "comment": "a list of all filter rows in this model."
      },
      "throws": []
    },
    {
      "name": "addListener",
      "comment": "Adds a listener to be notified for various changes that occur in this filter model.",
      "javadoc": "Adds a listener to be notified for various changes that occur in this filter model.\n@param listener the listener to add.",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "docking.widgets.table.constraint.dialog.TableFilterDialogModelListener",
          "type_short": "TableFilterDialogModelListener",
          "comment": "the listener to add."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeListener",
      "comment": "Removes the given listener.",
      "javadoc": "Removes the given listener.\n@param listener the listener to remove.",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "docking.widgets.table.constraint.dialog.TableFilterDialogModelListener",
          "type_short": "TableFilterDialogModelListener",
          "comment": "the listener to remove."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isValid",
      "comment": "Checks if this model represents a valid filter. While editing, some elements of the filter\n may be incomplete or invalid and if so, then this method will return false.",
      "javadoc": "Checks if this model represents a valid filter. While editing, some elements of the filter\n may be incomplete or invalid and if so, then this method will return false.\n@return true if the model represents a valid filter.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the model represents a valid filter."
      },
      "throws": []
    },
    {
      "name": "dialogFilterRowChanged",
      "comment": "Callback from a DialogFilterRow to indicate that the structure of the filter row changed.  This includes\n changing the column, or adding, deleting, changing filter conditions.",
      "javadoc": "Callback from a DialogFilterRow to indicate that the structure of the filter row changed.  This includes\n changing the column, or adding, deleting, changing filter conditions.\n@param filterRow the DialogFilterRow that changed.",
      "static": false,
      "params": [
        {
          "name": "filterRow",
          "type_long": "docking.widgets.table.constraint.dialog.DialogFilterRow",
          "type_short": "DialogFilterRow",
          "comment": "the DialogFilterRow that changed."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "editorValueChanged",
      "comment": "Callback from a FilterRow to indicate that the user has change a value in one of the editors\n which may change the validity state of the model.",
      "javadoc": "Callback from a FilterRow to indicate that the user has change a value in one of the editors\n which may change the validity state of the model.\n@param editor the editor whose value has been changed.",
      "static": false,
      "params": [
        {
          "name": "editor",
          "type_long": "docking.widgets.table.constrainteditor.ColumnConstraintEditor\u003c?\u003e",
          "type_short": "ColumnConstraintEditor",
          "comment": "the editor whose value has been changed."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDataSource",
      "comment": "Gets the table\u0027s DataSource (if it has one. Only table models that extends \n GDynamicColumnTableModel can have a data source",
      "javadoc": "Gets the table\u0027s DataSource (if it has one. Only table models that extends \n {@link GDynamicColumnTableModel} can have a data source\n@return the data source",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.Object",
        "type_short": "Object",
        "comment": "the data source"
      },
      "throws": []
    },
    {
      "name": "getTableColumnFilter",
      "comment": "Builds a ColumnTableFilter from this model if the model is valid.",
      "javadoc": "Builds a ColumnTableFilter from this model if the model is valid.\n@return a new ColumnTableFilter based on the configuration of this model or null if the model\n is invalid.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.widgets.table.columnfilter.ColumnBasedTableFilter\u003cR\u003e",
        "type_short": "ColumnBasedTableFilter",
        "comment": "a new ColumnTableFilter based on the configuration of this model or null if the model\n is invalid."
      },
      "throws": []
    },
    {
      "name": "setFilter",
      "comment": "Changes the configuration of this model to match the given ColumnTableFilter.  Any exiting\n filter configurations will be cleared.",
      "javadoc": "Changes the configuration of this model to match the given ColumnTableFilter.  Any exiting\n filter configurations will be cleared.\n@param filter the ColumnTableFilter for which to model.",
      "static": false,
      "params": [
        {
          "name": "filter",
          "type_long": "docking.widgets.table.columnfilter.ColumnBasedTableFilter\u003cR\u003e",
          "type_short": "ColumnBasedTableFilter",
          "comment": "the ColumnTableFilter for which to model."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "clear",
      "comment": "Clears the model of all filters.",
      "javadoc": "Clears the model of all filters.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getAllColumnFilterData",
      "comment": "Returns a list of the columnFilterData for all filterable columns in the table",
      "javadoc": "Returns a list of the columnFilterData for all filterable columns in the table\n@return a list of the columnFilterData for all filterable columns in the table",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cdocking.widgets.table.constraint.dialog.ColumnFilterData\u003c?\u003e\u003e",
        "type_short": "List",
        "comment": "a list of the columnFilterData for all filterable columns in the table"
      },
      "throws": []
    },
    {
      "name": "isEmpty",
      "comment": "Return true if there are no conditions (valid or invalid) defined for this filter model.",
      "javadoc": "Return true if there are no conditions (valid or invalid) defined for this filter model.\n@return true if there are no conditions (valid or invalid) defined for this filter model.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if there are no conditions (valid or invalid) defined for this filter model."
      },
      "throws": []
    },
    {
      "name": "hasUnappliedChanges",
      "comment": "Returns true if this model has changes that make the filter different from the currently\n applied filter.",
      "javadoc": "Returns true if this model has changes that make the filter different from the currently\n applied filter.\n@return if there are unapplied user changes to the filter.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "if there are unapplied user changes to the filter."
      },
      "throws": []
    },
    {
      "name": "getTableModel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.widgets.table.RowObjectFilterModel\u003c?\u003e",
        "type_short": "RowObjectFilterModel",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createColumnFilterData",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "tableModel",
          "type_long": "docking.widgets.table.RowObjectFilterModel\u003cR\u003e",
          "type_short": "RowObjectFilterModel",
          "comment": ""
        },
        {
          "name": "modelIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "viewIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "columnClass",
          "type_long": "java.lang.Class\u003c?\u003e",
          "type_short": "Class",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.widgets.table.constraint.dialog.ColumnFilterData\u003c?\u003e",
        "type_short": "ColumnFilterData",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addEntriesFromCurrentTableFilter",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "columnTableFilter",
          "type_long": "docking.widgets.table.columnfilter.ColumnBasedTableFilter\u003cR\u003e",
          "type_short": "ColumnBasedTableFilter",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hasColumnFilterData",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "columnFilter",
          "type_long": "docking.widgets.table.columnfilter.ColumnConstraintSet\u003cR,?\u003e",
          "type_short": "ColumnConstraintSet",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getColumnFilterDataByModelIndex",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "columnModelIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.widgets.table.constraint.dialog.ColumnFilterData\u003c?\u003e",
        "type_short": "ColumnFilterData",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getColumnFilterDataByViewIndex",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "viewIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.widgets.table.constraint.dialog.ColumnFilterData\u003c?\u003e",
        "type_short": "ColumnFilterData",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFilterRowForColumnData",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "columnFilterData",
          "type_long": "docking.widgets.table.constraint.dialog.ColumnFilterData\u003c?\u003e",
          "type_short": "ColumnFilterData",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.widgets.table.constraint.dialog.DialogFilterRow",
        "type_short": "DialogFilterRow",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "notifyFilterChanged",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "updateColumnViewIndices",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setCurrentlyAppliedFilter",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "tableColumnFilter",
          "type_long": "docking.widgets.table.columnfilter.ColumnBasedTableFilter\u003cR\u003e",
          "type_short": "ColumnBasedTableFilter",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
