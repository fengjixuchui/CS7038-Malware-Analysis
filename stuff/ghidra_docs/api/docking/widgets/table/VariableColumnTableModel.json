{
  "name": "VariableColumnTableModel",
  "comment": "An interface for marking table models whose supported columns are discovered at runtime",
  "javadoc": "An interface for marking table models whose supported columns are discovered at runtime",
  "static": false,
  "implements": [
    "javax.swing.table.TableModel"
  ],
  "fields": [],
  "methods": [
    {
      "name": "from",
      "comment": "Returns a VariableColumnTableModel if the given model is an instance of this\n type or is wraps another table model that is an instance of this type.  If the given \n model is not such an instance, then null is returned.",
      "javadoc": "Returns a {@link VariableColumnTableModel} if the given model is an instance of this\n type or is wraps another table model that is an instance of this type.  If the given \n model is not such an instance, then null is returned.\n@return the variable column model",
      "static": true,
      "params": [
        {
          "name": "m",
          "type_long": "javax.swing.table.TableModel",
          "type_short": "TableModel",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.widgets.table.VariableColumnTableModel",
        "type_short": "VariableColumnTableModel",
        "comment": "the variable column model"
      },
      "throws": []
    },
    {
      "name": "getColumnDisplayName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "column",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getColumnDescription",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "column",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getUniqueIdentifier",
      "comment": "Returns a value that is unique for a given table column.  This is different than getting\n the display name, which may be shared by different columns.",
      "javadoc": "Returns a value that is unique for a given table column.  This is different than getting\n the display name, which may be shared by different columns.\n@param column the index (in the model space) of the column for which to get the identifier",
      "static": false,
      "params": [
        {
          "name": "column",
          "type_long": "int",
          "type_short": "int",
          "comment": "the index (in the model space) of the column for which to get the identifier"
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDefaultColumnCount",
      "comment": "Gets the count of the default columns for this model.  This model may have non-default\n columns added.  This method will return the count of columns that have been setup \n specifically by the table model.  This method can be used to iterate of the first \n n columns of this model in order to get information for the default columns by\n calling methods like #getColumnName(int).",
      "javadoc": "Gets the count of the default columns for this model.  This model may have non-default\n columns added.  This method will return the count of columns that have been setup \n specifically by the table model.  This method can be used to iterate of the first \n \u003ccode\u003en\u003c/code\u003e columns of this model in order to get information for the default columns by\n calling methods like {@link #getColumnName(int)}.\n@return Gets the count of the default columns for this model.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "Gets the count of the default columns for this model."
      },
      "throws": []
    },
    {
      "name": "isDefaultColumn",
      "comment": "Returns true if the column denoted by the given model index is default (specified \n initially by the table model).",
      "javadoc": "Returns true if the column denoted by the given model index is default (specified \n initially by the table model).\n@param modelIndex The index in the column in the column model.\n@return true if the column denoted by the given model index is default.",
      "static": false,
      "params": [
        {
          "name": "modelIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": "The index in the column in the column model."
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the column denoted by the given model index is default."
      },
      "throws": []
    },
    {
      "name": "isVisibleByDefault",
      "comment": "Returns true if the column denoted by the given model index is specified by the table \n model as being visible when the table is loaded for the first time.",
      "javadoc": "Returns true if the column denoted by the given model index is specified by the table \n model as being visible when the table is loaded for the first time.\n@param modelIndex The index in the column in the column model.\n@return true if the column denoted by the given model index is visible default.",
      "static": false,
      "params": [
        {
          "name": "modelIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": "The index in the column in the column model."
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the column denoted by the given model index is visible default."
      },
      "throws": []
    }
  ]
}
