{
  "name": "EnumConstraintEditor",
  "comment": "A constraint editor for enumerated-type values;",
  "javadoc": "A constraint editor for enumerated-type values;",
  "static": false,
  "implements": [],
  "extends": "docking.widgets.table.constrainteditor.AbstractColumnConstraintEditor",
  "fields": [
    {
      "name": "allValues",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.Set\u003cT\u003e",
      "type_short": "Set",
      "constant_value": null
    },
    {
      "name": "selectedValues",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.Set\u003cT\u003e",
      "type_short": "Set",
      "constant_value": null
    },
    {
      "name": "enumCheckboxMap",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.Map\u003cT,javax.swing.JCheckBox\u003e",
      "type_short": "Map",
      "constant_value": null
    },
    {
      "name": "CHECKBOX_NAME_PREFIX",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"enumCheckbox_\""
    },
    {
      "name": "infoLabel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.JLabel",
      "type_short": "JLabel",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor.",
      "javadoc": "Constructor.\n@param constraint Enum-type constraint for which this component is an editor.",
      "static": false,
      "params": [
        {
          "name": "constraint",
          "type_long": "docking.widgets.table.constraint.EnumColumnConstraint\u003cT\u003e",
          "type_short": "EnumColumnConstraint",
          "comment": "Enum-type constraint for which this component is an editor."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "buildInlineEditorComponent",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Component",
        "type_short": "Component",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getElementDisplayName",
      "comment": "Resolves and returns a more friendly display name for a given Enum value.\n \n Several Ghidra enumerated types provide functions for retrieving formatted\n name for a value; this attempts to locate one such function within the Enum class.\n \n This searches the enum class for a zero-argument, String-returning method called\n getName(), getDisplayName(), or getDisplayString()\n before falling back to toString().",
      "javadoc": "Resolves and returns a more friendly display name for a given Enum value.\n \u003cp\u003e\n Several Ghidra enumerated types provide functions for retrieving formatted\n name for a value; this attempts to locate one such function within the Enum class.\n \u003cp\u003e\n This searches the enum class for a zero-argument, String-returning method called\n \u003ccode\u003egetName()\u003c/code\u003e, \u003ccode\u003egetDisplayName()\u003c/code\u003e, or \u003ccode\u003egetDisplayString()\u003c/code\u003e\n before falling back to \u003ccode\u003etoString()\u003c/code\u003e.\n@return a more user-friendly name for the value",
      "static": false,
      "params": [
        {
          "name": "value",
          "type_long": "T",
          "type_short": "T",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "a more user-friendly name for the value"
      },
      "throws": []
    },
    {
      "name": "getDisplayNameUsingMethodNamed",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "methodName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "value",
          "type_long": "T",
          "type_short": "T",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getValueFromComponent",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.widgets.table.constraint.ColumnConstraint\u003cT\u003e",
        "type_short": "ColumnConstraint",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getConstraint",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.widgets.table.constraint.EnumColumnConstraint\u003cT\u003e",
        "type_short": "EnumColumnConstraint",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "updateEditorComponent",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "reset",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "checkEditorValueValidity",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "updateInfoMessage",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "isValid",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getErrorMessage",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    }
  ]
}
