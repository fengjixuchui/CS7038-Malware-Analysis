{
  "name": "DoubleValueConstraintEditor",
  "comment": "A constraint editor for specifying comparison with a single floating-point value (Float and Double).",
  "javadoc": "A constraint editor for specifying comparison with a single floating-point value (Float and Double).",
  "static": false,
  "implements": [],
  "extends": "docking.widgets.table.constrainteditor.AbstractColumnConstraintEditor",
  "fields": [
    {
      "name": "FLOATING_POINT_FORMAT",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"0.##########;-0.##########\""
    },
    {
      "name": "spinner",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.JSpinner",
      "type_short": "JSpinner",
      "constant_value": null
    },
    {
      "name": "spinnerModel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.SpinnerNumberModel",
      "type_short": "SpinnerNumberModel",
      "constant_value": null
    },
    {
      "name": "errorMessage",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "constraint",
          "type_long": "docking.widgets.table.constraint.ColumnConstraint\u003cjava.lang.Double\u003e",
          "type_short": "ColumnConstraint",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "buildInlineEditorComponent",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Component",
        "type_short": "Component",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "textChanged",
      "comment": "This method updates the spinner model as the user types. (We are called from inside a\n document listener).  Unfortunately, that causes the textfield to get updated from the\n spinner model, which resets the cursor, so we have to save it and then restore it\n after doing the commitEdit.",
      "javadoc": "This method updates the spinner model as the user types. (We are called from inside a\n document listener).  Unfortunately, that causes the textfield to get updated from the\n spinner model, which resets the cursor, so we have to save it and then restore it\n after doing the commitEdit.\n@param textField the text field that changed.s",
      "static": false,
      "params": [
        {
          "name": "textField",
          "type_long": "javax.swing.JTextField",
          "type_short": "JTextField",
          "comment": "the text field that changed.s"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "increment",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "base",
          "type_long": "java.lang.Number",
          "type_short": "Number",
          "comment": ""
        },
        {
          "name": "by",
          "type_long": "java.lang.Number",
          "type_short": "Number",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.Number",
        "type_short": "Number",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "decrement",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "base",
          "type_long": "java.lang.Number",
          "type_short": "Number",
          "comment": ""
        },
        {
          "name": "by",
          "type_long": "java.lang.Number",
          "type_short": "Number",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.Number",
        "type_short": "Number",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getValueFromComponent",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.widgets.table.constraint.ColumnConstraint\u003cjava.lang.Double\u003e",
        "type_short": "ColumnConstraint",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "updateEditorComponent",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "reset",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "checkEditorValueValidity",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "updateInfoMessage",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "isValid",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "checkEditorValue",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getErrorMessage",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getConstraint",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.widgets.table.constraint.SingleValueColumnConstraint\u003cjava.lang.Double\u003e",
        "type_short": "SingleValueColumnConstraint",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSpinner",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "javax.swing.JSpinner",
        "type_short": "JSpinner",
        "comment": ""
      },
      "throws": []
    }
  ]
}
