{
  "name": "BoundedSpinnerNumberModel",
  "comment": "SpinnerNumberModel that adds checking to make sure setValue is in the allowed range.  Strangely,\n the default SpinnerNumberModel has min and max values, but does not check except during the\n increment/decrement using the spinner widget.",
  "javadoc": "{@link SpinnerNumberModel} that adds checking to make sure setValue is in the allowed range.  Strangely,\n the default SpinnerNumberModel has min and max values, but does not check except during the\n increment/decrement using the spinner widget.",
  "static": false,
  "implements": [],
  "extends": "javax.swing.SpinnerNumberModel",
  "fields": [],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "value",
          "type_long": "java.lang.Number",
          "type_short": "Number",
          "comment": ""
        },
        {
          "name": "minimum",
          "type_long": "java.lang.Comparable\u003c? extends java.lang.Number\u003e",
          "type_short": "Comparable",
          "comment": ""
        },
        {
          "name": "maximum",
          "type_long": "java.lang.Comparable\u003c? extends java.lang.Number\u003e",
          "type_short": "Comparable",
          "comment": ""
        },
        {
          "name": "stepSize",
          "type_long": "java.lang.Number",
          "type_short": "Number",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "value",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "minimum",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "maximum",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "stepSize",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "value",
          "type_long": "double",
          "type_short": "double",
          "comment": ""
        },
        {
          "name": "minimum",
          "type_long": "double",
          "type_short": "double",
          "comment": ""
        },
        {
          "name": "maximum",
          "type_long": "double",
          "type_short": "double",
          "comment": ""
        },
        {
          "name": "stepSize",
          "type_long": "double",
          "type_short": "double",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setValue",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "value",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
