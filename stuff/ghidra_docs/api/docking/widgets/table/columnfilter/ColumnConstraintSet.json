{
  "name": "ColumnConstraintSet",
  "comment": "This class maintains a collection of ColumnConstraint that are applied to a specific table column\n for filtering purposes. In order for this ColumnConstraintSet to \"pass\", (i.e. accept the table\n row) the column value for that row must pass at least one of the constraints in this set, thus\n effectively OR\u0027ing the constraints.\n\n  Instances of this class are used by the ColumnBasedTableFilter to filter rows of table.",
  "javadoc": "This class maintains a collection of {@link ColumnConstraint} that are applied to a specific table column\n for filtering purposes. In order for this ColumnConstraintSet to \"pass\", (i.e. accept the table\n row) the column value for that row must pass at least one of the constraints in this set, thus\n effectively OR\u0027ing the constraints.\n\n \u003cP\u003e Instances of this class are used by the {@link ColumnBasedTableFilter} to filter rows of table.\n@param \u003cR\u003e the row type of the table being filtered.\n@param \u003cT\u003e the column type of column whose values are being tested by this filter.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "constraints",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cdocking.widgets.table.constraint.ColumnConstraint\u003cT\u003e\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "columnIndex",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "model",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.widgets.table.RowObjectTableModel\u003cR\u003e",
      "type_short": "RowObjectTableModel",
      "constant_value": null
    },
    {
      "name": "logicOperation",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.widgets.table.columnfilter.LogicOperation",
      "type_short": "LogicOperation",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor",
      "javadoc": "Constructor\n@param model the table model being filtered.\n@param columnIndex the index of the column whose values are tested by this filter.\n@param constraints the list of ColumnConstraints whose results are or\u0027ed together.\n@param logicOperation the logical operation for how this constraintSet relates to other contraint sets.",
      "static": false,
      "params": [
        {
          "name": "model",
          "type_long": "docking.widgets.table.RowObjectTableModel\u003cR\u003e",
          "type_short": "RowObjectTableModel",
          "comment": "the table model being filtered."
        },
        {
          "name": "columnIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": "the index of the column whose values are tested by this filter."
        },
        {
          "name": "constraints",
          "type_long": "java.util.List\u003cdocking.widgets.table.constraint.ColumnConstraint\u003cT\u003e\u003e",
          "type_short": "List",
          "comment": "the list of ColumnConstraints whose results are or\u0027ed together."
        },
        {
          "name": "logicOperation",
          "type_long": "docking.widgets.table.columnfilter.LogicOperation",
          "type_short": "LogicOperation",
          "comment": "the logical operation for how this constraintSet relates to other contraint sets."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor when deserializing from a SaveState",
      "javadoc": "Constructor when deserializing from a SaveState\n@param model the table model being filtered\n@param saveState the SaveState which contains the configuration for this filter.\n@param dataSource the table\u0027s DataSource.",
      "static": false,
      "params": [
        {
          "name": "model",
          "type_long": "docking.widgets.table.RowObjectTableModel\u003cR\u003e",
          "type_short": "RowObjectTableModel",
          "comment": "the table model being filtered"
        },
        {
          "name": "saveState",
          "type_long": "ghidra.framework.options.SaveState",
          "type_short": "SaveState",
          "comment": "the SaveState which contains the configuration for this filter."
        },
        {
          "name": "dataSource",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": "the table\u0027s DataSource."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "findColumnConstraint",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "constraintName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "value",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "dataSource",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.widgets.table.constraint.ColumnConstraint\u003cT\u003e",
        "type_short": "ColumnConstraint",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getColumnName",
      "comment": "Return the name of the column whose values will be tested by this filter.",
      "javadoc": "Return the name of the column whose values will be tested by this filter.\n@return the name of the column whose values will be tested by this filter.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the name of the column whose values will be tested by this filter."
      },
      "throws": []
    },
    {
      "name": "getColumnModelIndex",
      "comment": "Returns the model index of the column whose values will be tested by this filter.",
      "javadoc": "Returns the model index of the column whose values will be tested by this filter.\n@return the model index of the column whose values will be tested by this filter.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the model index of the column whose values will be tested by this filter."
      },
      "throws": []
    },
    {
      "name": "accepts",
      "comment": "Return true if the given table row object passes this filter.",
      "javadoc": "Return true if the given table row object passes this filter.\n@param rowObject the table row object.\n@param context the {@link TableFilterContext} for this table\u0027s filter.\n@return true if the given table row object passes this filter.",
      "static": false,
      "params": [
        {
          "name": "rowObject",
          "type_long": "R",
          "type_short": "R",
          "comment": "the table row object."
        },
        {
          "name": "context",
          "type_long": "docking.widgets.table.constraint.TableFilterContext",
          "type_short": "TableFilterContext",
          "comment": "the TableFilterContext for this table\u0027s filter."
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the given table row object passes this filter."
      },
      "throws": []
    },
    {
      "name": "getConstraints",
      "comment": "Returns a list of ColumnConstraints in this ColumnFilter",
      "javadoc": "Returns a list of ColumnConstraints in this ColumnFilter\n@return a list of ColumnConstraints in this ColumnFilter",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cdocking.widgets.table.constraint.ColumnConstraint\u003cT\u003e\u003e",
        "type_short": "List",
        "comment": "a list of ColumnConstraints in this ColumnFilter"
      },
      "throws": []
    },
    {
      "name": "getLogicOperation",
      "comment": "Returns the logical operation (AND or OR) for how to combine this object\u0027s #accepts(Object, TableFilterContext)\n results with the results of previous constraintSet results in the overall filter.",
      "javadoc": "Returns the logical operation (AND or OR) for how to combine this object\u0027s {@link #accepts(Object, TableFilterContext)}\n results with the results of previous constraintSet results in the overall filter.\n@return the logical operation (AND or OR)",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.widgets.table.columnfilter.LogicOperation",
        "type_short": "LogicOperation",
        "comment": "the logical operation (AND or OR)"
      },
      "throws": []
    },
    {
      "name": "save",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.framework.options.SaveState",
        "type_short": "SaveState",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getHtmlRepresentation",
      "comment": "Returns an HTML representation of this constraint set in a tabular form. It will be used\n inside the HTML representation of the entire filter. See ColumnBasedTableFilter#getHtmlRepresentation()\n for a description of the table format.",
      "javadoc": "Returns an HTML representation of this constraint set in a tabular form. It will be used\n inside the HTML representation of the entire filter. See {@link ColumnBasedTableFilter#getHtmlRepresentation()}\n for a description of the table format.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getHtmlRepresentation",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "columnConstraint",
          "type_long": "docking.widgets.table.constraint.ColumnConstraint\u003c?\u003e",
          "type_short": "ColumnConstraint",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isStringBasedConstraint",
      "comment": "Returns true if this is a String constraint or a type converting constraint where the type\n is converted to a string constraint. (i.e. uses a String editor)",
      "javadoc": "Returns true if this is a String constraint or a type converting constraint where the type\n is converted to a string constraint. (i.e. uses a String editor)\n@param constraint the constraint to check.\n@return true if this is a String constraint or something that is converted to a string constraint.",
      "static": true,
      "params": [
        {
          "name": "constraint",
          "type_long": "docking.widgets.table.constraint.ColumnConstraint\u003c?\u003e",
          "type_short": "ColumnConstraint",
          "comment": "the constraint to check."
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if this is a String constraint or something that is converted to a string constraint."
      },
      "throws": []
    },
    {
      "name": "hashCode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "equals",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "obj",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    }
  ]
}
