{
  "name": "DropDownMultiSelectionTextField",
  "comment": "Extension of the DropDownSelectionTextField that allows multiple items to\n be selected. \n \n Note that multiple selection introduces some display complications that are not an \n issue with single selection. Namely:\n \n how do you display multiple selected items in the preview pane\n how do you display those same items in the drop down text field\n \n The solution here is to:\n \n let the preview panel operate normally; it will simply display the preview text for whatever was last selected\n display all selected items in the drop down text field as a comma-delimited list\n ",
  "javadoc": "Extension of the {@link DropDownSelectionTextField} that allows multiple items to\n be selected. \n \u003cp\u003e\n Note that multiple selection introduces some display complications that are not an \n issue with single selection. Namely:\n \u003cul\u003e\n \u003cli\u003ehow do you display multiple selected items in the preview pane\u003c/li\u003e\n \u003cli\u003ehow do you display those same items in the drop down text field\u003c/li\u003e\n \u003c/ul\u003e\n The solution here is to:\n \u003cul\u003e\n \u003cli\u003elet the preview panel operate normally; it will simply display the preview text for whatever was last selected\u003c/li\u003e\n \u003cli\u003edisplay all selected items in the drop down text field as a comma-delimited list\u003c/li\u003e\n \u003c/ul\u003e\n@param \u003cT\u003e the type of data stored in the drop down",
  "static": false,
  "implements": [],
  "extends": "docking.widgets.DropDownSelectionTextField",
  "fields": [
    {
      "name": "previewList",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.JList\u003cjava.lang.String\u003e",
      "type_short": "JList",
      "constant_value": null
    },
    {
      "name": "selectedValues",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cT\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "choiceListeners",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.datastruct.WeakSet\u003cdocking.widgets.DropDownMultiSelectionChoiceListener\u003cT\u003e\u003e",
      "type_short": "WeakSet",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor.",
      "javadoc": "Constructor.\n@param dataModel the model for the drop down widget",
      "static": false,
      "params": [
        {
          "name": "dataModel",
          "type_long": "docking.widgets.DropDownTextFieldDataModel\u003cT\u003e",
          "type_short": "DropDownTextFieldDataModel",
          "comment": "the model for the drop down widget"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addDropDownSelectionChoiceListener",
      "comment": "Adds the caller to a list of subscribers who will be notified when selection changes.",
      "javadoc": "Adds the caller to a list of subscribers who will be notified when selection changes.\n@param listener the subscriber to be added",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "docking.widgets.DropDownMultiSelectionChoiceListener\u003cT\u003e",
          "type_short": "DropDownMultiSelectionChoiceListener",
          "comment": "the subscriber to be added"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addDropDownSelectionChoiceListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "docking.widgets.DropDownSelectionChoiceListener\u003cT\u003e",
          "type_short": "DropDownSelectionChoiceListener",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSelectedValues",
      "comment": "Returns a list of all selected items in the list.",
      "javadoc": "Returns a list of all selected items in the list.\n@return the selected items",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cT\u003e",
        "type_short": "List",
        "comment": "the selected items"
      },
      "throws": []
    },
    {
      "name": "createListSelectionModel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "javax.swing.ListSelectionModel",
        "type_short": "ListSelectionModel",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setPreviewPaneAttributes",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hasPreview",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPreviewListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "javax.swing.event.ListSelectionListener",
        "type_short": "ListSelectionListener",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPreviewPaneComponent",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "javax.swing.JComponent",
        "type_short": "JComponent",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setTextFromList",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setSelectedValue",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "value",
          "type_long": "T",
          "type_short": "T",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setTextFromSelectedListItemAndKeepMatchingWindowOpen",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSelectionText",
      "comment": "Returns a string representing all items selected in the pulldown. If multiple\n items are selected, they will be comma-delimited.",
      "javadoc": "Returns a string representing all items selected in the pulldown. If multiple\n items are selected, they will be comma-delimited.\n@return the comma-delimited selection",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the comma-delimited selection"
      },
      "throws": []
    },
    {
      "name": "fireUserChoiceMade",
      "comment": "Notifies subscribers when the list selection has changed.",
      "javadoc": "Notifies subscribers when the list selection has changed.\n@param selectedItems the list of selected items",
      "static": false,
      "params": [
        {
          "name": "selectedItems",
          "type_long": "java.util.List\u003cT\u003e",
          "type_short": "List",
          "comment": "the list of selected items"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "storeSelectedValues",
      "comment": "Saves the selected list items.",
      "javadoc": "Saves the selected list items.\n@param newValues the new selected items",
      "static": false,
      "params": [
        {
          "name": "newValues",
          "type_long": "java.util.List\u003cT\u003e",
          "type_short": "List",
          "comment": "the new selected items"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
