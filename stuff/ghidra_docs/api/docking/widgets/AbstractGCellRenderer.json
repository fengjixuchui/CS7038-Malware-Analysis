{
  "name": "AbstractGCellRenderer",
  "comment": "A common base class for list and table renderer objects, unifying the Ghidra look and feel.\n \n It allows (but default-disables) HTML content, automatically paints alternating row\n background colors, and highlights the drop target in a drag-n-drop operation.",
  "javadoc": "A common base class for list and table renderer objects, unifying the Ghidra look and feel.\n \u003cp\u003e\n It allows (but default-disables) HTML content, automatically paints alternating row\n background colors, and highlights the drop target in a drag-n-drop operation.",
  "static": false,
  "implements": [],
  "extends": "docking.widgets.label.GDHtmlLabel",
  "fields": [
    {
      "name": "ALTERNATE_BACKGROUND_COLOR",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.awt.Color",
      "type_short": "Color",
      "constant_value": null
    },
    {
      "name": "DISABLE_ALTERNATING_ROW_COLORS_PROPERTY",
      "comment": "Allows the user to disable alternating row colors on JLists and JTables",
      "javadoc": "Allows the user to disable alternating row colors on JLists and JTables",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"disable.alternating.row.colors\""
    },
    {
      "name": "systemAlternateRowColors",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "focusBorder",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.border.Border",
      "type_short": "Border",
      "constant_value": null
    },
    {
      "name": "noFocusBorder",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.border.Border",
      "type_short": "Border",
      "constant_value": null
    },
    {
      "name": "defaultFont",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.awt.Font",
      "type_short": "Font",
      "constant_value": null
    },
    {
      "name": "fixedWidthFont",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.awt.Font",
      "type_short": "Font",
      "constant_value": null
    },
    {
      "name": "boldFont",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.awt.Font",
      "type_short": "Font",
      "constant_value": null
    },
    {
      "name": "dropRow",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "instanceAlternateRowColors",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "getAlternateRowColors",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setShouldAlternateRowBackgroundColors",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "alternate",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "shouldAlternateRowBackgroundColor",
      "comment": "Return whether or not the renderer should alternate row background colors.\n \n A renderer is unable to override an enforcing DISABLE_ALTERNATING_ROW_COLORS_PROPERTY\n system property -- if the property has disabled alternating colors (i.e., set to\n \u0027true\u0027), this method returns false. If the property is false, individual renderers\n may assert control over alternating row colors.",
      "javadoc": "Return whether or not the renderer should alternate row background colors.\n \u003cp\u003e\n A renderer is unable to override an enforcing DISABLE_ALTERNATING_ROW_COLORS_PROPERTY\n system property -- if the property has disabled alternating colors (i.e., set to\n \u0027true\u0027), this method returns false. If the property is false, individual renderers\n may assert control over alternating row colors.\n@return True if the rows may be painted in alternate background colors, false otherwise\n@see #DISABLE_ALTERNATING_ROW_COLORS_PROPERTY",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "True if the rows may be painted in alternate background colors, false otherwise"
      },
      "throws": []
    },
    {
      "name": "getOSDependentBackgroundColor",
      "comment": "Returns the background color appropriate for the given component.  This may vary depending\n upon the current OS.",
      "javadoc": "Returns the background color appropriate for the given component.  This may vary depending\n upon the current OS.\n@param parent The parent being rendered -- likely a list or table.\n@param row The row being rendered.\n@return the color",
      "static": false,
      "params": [
        {
          "name": "parent",
          "type_long": "javax.swing.JComponent",
          "type_short": "JComponent",
          "comment": "The parent being rendered -- likely a list or table."
        },
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "The row being rendered."
        }
      ],
      "return": {
        "type_long": "java.awt.Color",
        "type_short": "Color",
        "comment": "the color"
      },
      "throws": []
    },
    {
      "name": "setFont",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "f",
          "type_long": "java.awt.Font",
          "type_short": "Font",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "superSetFont",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "font",
          "type_long": "java.awt.Font",
          "type_short": "Font",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setBold",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setDropRow",
      "comment": "Sets the row where DnD would perform drop operation.",
      "javadoc": "Sets the row where DnD would perform drop operation.\n@param dropRow the drop row",
      "static": false,
      "params": [
        {
          "name": "dropRow",
          "type_long": "int",
          "type_short": "int",
          "comment": "the drop row"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getNoFocusBorder",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "javax.swing.border.Border",
        "type_short": "Border",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDefaultFont",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Font",
        "type_short": "Font",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFixedWidthFont",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Font",
        "type_short": "Font",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getBoldFont",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Font",
        "type_short": "Font",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDefaultBackgroundColor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Color",
        "type_short": "Color",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getBackgroundColorForRow",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.awt.Color",
        "type_short": "Color",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "invalidate",
      "comment": "Overridden for performance reasons.\n See the Implementation Note\n for more information.",
      "javadoc": "Overridden for performance reasons.\n See the \u003ca href\u003d\"#override\"\u003eImplementation Note\u003c/a\u003e\n for more information.\n@since 1.5",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "superValidate",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "validate",
      "comment": "Overridden for performance reasons.\n See the Implementation Note\n for more information.",
      "javadoc": "Overridden for performance reasons.\n See the \u003ca href\u003d\"#override\"\u003eImplementation Note\u003c/a\u003e\n for more information.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "revalidate",
      "comment": "Overridden for performance reasons.\n See the Implementation Note\n for more information.",
      "javadoc": "Overridden for performance reasons.\n See the \u003ca href\u003d\"#override\"\u003eImplementation Note\u003c/a\u003e\n for more information.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "repaint",
      "comment": "Overridden for performance reasons.\n See the Implementation Note\n for more information.",
      "javadoc": "Overridden for performance reasons.\n See the \u003ca href\u003d\"#override\"\u003eImplementation Note\u003c/a\u003e\n for more information.",
      "static": false,
      "params": [
        {
          "name": "tm",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        },
        {
          "name": "x",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "y",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "width",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "height",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "repaint",
      "comment": "Overridden for performance reasons.\n See the Implementation Note\n for more information.",
      "javadoc": "Overridden for performance reasons.\n See the \u003ca href\u003d\"#override\"\u003eImplementation Note\u003c/a\u003e\n for more information.",
      "static": false,
      "params": [
        {
          "name": "r",
          "type_long": "java.awt.Rectangle",
          "type_short": "Rectangle",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "repaint",
      "comment": "Overridden for performance reasons.\n See the Implementation Note\n for more information.",
      "javadoc": "Overridden for performance reasons.\n See the \u003ca href\u003d\"#override\"\u003eImplementation Note\u003c/a\u003e\n for more information.\n@since 1.5",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "firePropertyChange",
      "comment": "Overridden for performance reasons.\n See the Implementation Note\n for more information.",
      "javadoc": "Overridden for performance reasons.\n See the \u003ca href\u003d\"#override\"\u003eImplementation Note\u003c/a\u003e\n for more information.",
      "static": false,
      "params": [
        {
          "name": "propertyName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "oldValue",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        },
        {
          "name": "newValue",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "firePropertyChange",
      "comment": "Overridden for performance reasons.\n See the Implementation Note\n for more information.",
      "javadoc": "Overridden for performance reasons.\n See the \u003ca href\u003d\"#override\"\u003eImplementation Note\u003c/a\u003e\n for more information.",
      "static": false,
      "params": [
        {
          "name": "propertyName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "oldValue",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        },
        {
          "name": "newValue",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
