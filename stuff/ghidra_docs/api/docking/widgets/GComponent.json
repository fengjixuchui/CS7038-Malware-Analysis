{
  "name": "GComponent",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "fields": [
    {
      "name": "HTML_DISABLE_STRING",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"html.disable\""
    }
  ],
  "methods": [
    {
      "name": "setHTMLRenderingEnabled",
      "comment": "Enables and disables the rendering of HTML content in this component.  If enabled, this\n component will interpret HTML content when the text this component is showing begins with\n ",
      "javadoc": "Enables and disables the rendering of HTML content in this component.  If enabled, this\n component will interpret HTML content when the text this component is showing begins with\n {@code \u003chtml\u003e}\n@param enabled true to enable HTML rendering; false to disable it",
      "static": false,
      "params": [
        {
          "name": "enabled",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true to enable HTML rendering; false to disable it"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getHTMLRenderingEnabled",
      "comment": "Returns the current HTML rendering \u0027enable-ment\u0027 of this component.",
      "javadoc": "Returns the current HTML rendering \u0027enable-ment\u0027 of this component.\n@return boolean, true if HTML rendering is allowed",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "boolean, true if HTML rendering is allowed"
      },
      "throws": []
    },
    {
      "name": "warnAboutHtmlText",
      "comment": "Helper function that logs a warning about a string text that looks like it has HTML text.\n \n Use this when working with a string in a label that has already disabled HTML rendering.\n ",
      "javadoc": "Helper function that logs a warning about a string text that looks like it has HTML text.\n \u003cp\u003e\n Use this when working with a string in a label that has already disabled HTML rendering.\n \u003cp\u003e\n@param text string to test for HTML and warn about",
      "static": true,
      "params": [
        {
          "name": "text",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "string to test for HTML and warn about"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setHTMLRenderingFlag",
      "comment": "Sets the HTML rendering flag for the specified component.",
      "javadoc": "Sets the HTML rendering flag for the specified component.\n@param comp the thing\n@param enabled boolean, if true html rendering will be allowed",
      "static": true,
      "params": [
        {
          "name": "comp",
          "type_long": "javax.swing.JComponent",
          "type_short": "JComponent",
          "comment": "the thing"
        },
        {
          "name": "enabled",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "boolean, if true html rendering will be allowed"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
