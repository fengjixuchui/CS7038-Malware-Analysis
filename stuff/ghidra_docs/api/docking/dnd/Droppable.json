{
  "name": "Droppable",
  "comment": "Methods called by the DropTargetAdapter that implements the DropTargetListener interface",
  "javadoc": "Methods called by the DropTargetAdapter that implements the DropTargetListener interface",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "isDropOk",
      "comment": "Return true if is OK to drop the transferable at the location specified the event",
      "javadoc": "Return true if is OK to drop the transferable at the location specified the event\n@param e event that has current state of drag and drop operation\n@return true if OK",
      "static": false,
      "params": [
        {
          "name": "e",
          "type_long": "java.awt.dnd.DropTargetDragEvent",
          "type_short": "DropTargetDragEvent",
          "comment": "event that has current state of drag and drop operation"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if OK"
      },
      "throws": []
    },
    {
      "name": "dragUnderFeedback",
      "comment": "Set drag feedback according to the ok parameter",
      "javadoc": "Set drag feedback according to the ok parameter\n@param ok true means the drop action is OK\n@param e event that has current state of drag and drop operation",
      "static": false,
      "params": [
        {
          "name": "ok",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true means the drop action is OK"
        },
        {
          "name": "e",
          "type_long": "java.awt.dnd.DropTargetDragEvent",
          "type_short": "DropTargetDragEvent",
          "comment": "event that has current state of drag and drop operation"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "undoDragUnderFeedback",
      "comment": "Revert back to normal if any drag feedback was set",
      "javadoc": "Revert back to normal if any drag feedback was set",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "add",
      "comment": "Add the object to the droppable component. The DropTargetAdapter\n calls this method from its drop() method.",
      "javadoc": "Add the object to the droppable component. The DropTargetAdapter\n calls this method from its drop() method.\n@param obj Transferable object that is to be dropped.\n@param e has current state of drop operation\n@param f represents the opaque concept of a data format as \n would appear on a clipboard, during drag and drop.",
      "static": false,
      "params": [
        {
          "name": "obj",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": "Transferable object that is to be dropped."
        },
        {
          "name": "e",
          "type_long": "java.awt.dnd.DropTargetDropEvent",
          "type_short": "DropTargetDropEvent",
          "comment": "has current state of drop operation"
        },
        {
          "name": "f",
          "type_long": "java.awt.datatransfer.DataFlavor",
          "type_short": "DataFlavor",
          "comment": "represents the opaque concept of a data format as \n would appear on a clipboard, during drag and drop."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
