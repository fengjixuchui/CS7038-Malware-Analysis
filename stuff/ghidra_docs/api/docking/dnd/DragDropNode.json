{
  "name": "DragDropNode",
  "comment": "Defines a node that is in the DragDropTree.",
  "javadoc": "Defines a node that is in the DragDropTree.",
  "static": false,
  "implements": [],
  "extends": "javax.swing.tree.DefaultMutableTreeNode",
  "fields": [
    {
      "name": "treePath",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.tree.TreePath",
      "type_short": "TreePath",
      "constant_value": null
    },
    {
      "name": "name",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new DragDropNode with the given name.",
      "javadoc": "Constructs a new DragDropNode with the given name.\n@param name the name to associate with this node.",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name to associate with this node."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getIcon",
      "comment": "Get the appropriate icon for this node\u0027s state; called\n by the tree cell renderer.",
      "javadoc": "Get the appropriate icon for this node\u0027s state; called\n by the tree cell renderer.\n@param expanded true if the node is expanded\n@param leaf true if the node is a leaf node",
      "static": false,
      "params": [
        {
          "name": "expanded",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true if the node is expanded"
        },
        {
          "name": "leaf",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true if the node is a leaf node"
        }
      ],
      "return": {
        "type_long": "javax.swing.Icon",
        "type_short": "Icon",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isDropAllowed",
      "comment": "Return true if this node can be a drop target.",
      "javadoc": "Return true if this node can be a drop target.\n@param dropNode node being dragged and dropped;\n could be null if the drag was initiated outside of the tree\n@param dropAction DnDConstants value for copy or move",
      "static": false,
      "params": [
        {
          "name": "dropNode",
          "type_long": "docking.dnd.DragDropNode",
          "type_short": "DragDropNode",
          "comment": "node being dragged and dropped;\n could be null if the drag was initiated outside of the tree"
        },
        {
          "name": "dropAction",
          "type_long": "int",
          "type_short": "int",
          "comment": "DnDConstants value for copy or move"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getToolTipText",
      "comment": "Get the tool tip for this node.",
      "javadoc": "Get the tool tip for this node.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getTreePath",
      "comment": "Get the tree path for this node.",
      "javadoc": "Get the tree path for this node.\n@return TreePath",
      "static": false,
      "params": [],
      "return": {
        "type_long": "javax.swing.tree.TreePath",
        "type_short": "TreePath",
        "comment": "TreePath"
      },
      "throws": []
    },
    {
      "name": "setName",
      "comment": "Set the name for this node.",
      "javadoc": "Set the name for this node.\n@param name the name to set on this node.",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name to set on this node."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getName",
      "comment": "Get the name of this node.",
      "javadoc": "Get the name of this node.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    }
  ]
}
