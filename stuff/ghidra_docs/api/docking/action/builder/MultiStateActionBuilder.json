{
  "name": "MultiStateActionBuilder",
  "comment": "Builder for MultiStateDockingAction",
  "javadoc": "Builder for {@link MultiStateDockingAction}\n@param \u003cT\u003e The action state type",
  "static": false,
  "implements": [],
  "extends": "docking.action.builder.AbstractActionBuilder",
  "fields": [
    {
      "name": "actionStateChangedCallback",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.function.BiConsumer\u003cdocking.menu.ActionState\u003cT\u003e,docking.widgets.EventTrigger\u003e",
      "type_short": "BiConsumer",
      "constant_value": null
    },
    {
      "name": "useCheckboxForIcons",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "performActionOnButtonClick",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "states",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cdocking.menu.ActionState\u003cT\u003e\u003e",
      "type_short": "List",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Builder constructor",
      "javadoc": "Builder constructor\n@param name the name of the action to be built\n@param owner the owner of the action to be build",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of the action to be built"
        },
        {
          "name": "owner",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the owner of the action to be build"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "self",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.action.builder.MultiStateActionBuilder\u003cT\u003e",
        "type_short": "MultiStateActionBuilder",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "onActionStateChanged",
      "comment": "Sets the primary callback to be executed when this action changes its action state.\n This builder will throw an IllegalStateException if one of the build methods is \n called without providing this callback",
      "javadoc": "Sets the primary callback to be executed when this action changes its action state.\n This builder will throw an {@link IllegalStateException} if one of the build methods is \n called without providing this callback\n@param biConsumer the callback to execute when the selected action state is changed.\n@return this builder (for chaining)",
      "static": false,
      "params": [
        {
          "name": "biConsumer",
          "type_long": "java.util.function.BiConsumer\u003cdocking.menu.ActionState\u003cT\u003e,docking.widgets.EventTrigger\u003e",
          "type_short": "BiConsumer",
          "comment": "the callback to execute when the selected action state is changed."
        }
      ],
      "return": {
        "type_long": "docking.action.builder.MultiStateActionBuilder\u003cT\u003e",
        "type_short": "MultiStateActionBuilder",
        "comment": "this builder (for chaining)"
      },
      "throws": []
    },
    {
      "name": "performActionOnButtonClick",
      "comment": "Configure whether to perform actions on a button click. \n See MultiActionDockingAction#setPerformActionOnButtonClick(boolean)",
      "javadoc": "Configure whether to perform actions on a button click. \n See {@link MultiActionDockingAction#setPerformActionOnButtonClick(boolean)}\n@param b true if the main action is invokable\n@return this MultiActionDockingActionBuilder (for chaining)",
      "static": false,
      "params": [
        {
          "name": "b",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true if the main action is invokable"
        }
      ],
      "return": {
        "type_long": "docking.action.builder.MultiStateActionBuilder\u003cT\u003e",
        "type_short": "MultiStateActionBuilder",
        "comment": "this MultiActionDockingActionBuilder (for chaining)"
      },
      "throws": []
    },
    {
      "name": "useCheckboxForIcons",
      "comment": "Overrides the default icons for actions shown in popup menu of the multi-state action.  By\n default, the popup menu items will use the icons as provided by the ActionState.\n By passing true to this method, icons will not be used in the popup menu.  Instead, a \n checkbox icon will be used to show the active action state.",
      "javadoc": "Overrides the default icons for actions shown in popup menu of the multi-state action.  By\n default, the popup menu items will use the icons as provided by the {@link ActionState}.\n By passing true to this method, icons will not be used in the popup menu.  Instead, a \n checkbox icon will be used to show the active action state.\n@param b true to use a checkbox\n@return this MultiActionDockingActionBuilder (for chaining)",
      "static": false,
      "params": [
        {
          "name": "b",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true to use a checkbox"
        }
      ],
      "return": {
        "type_long": "docking.action.builder.MultiStateActionBuilder\u003cT\u003e",
        "type_short": "MultiStateActionBuilder",
        "comment": "this MultiActionDockingActionBuilder (for chaining)"
      },
      "throws": []
    },
    {
      "name": "addState",
      "comment": "Add an action state",
      "javadoc": "Add an action state\n@param displayName the name to appear in the action menu\n@param icon the icon to appear in the action menu\n@param userData the data associated with this state\n@return this MultiActionDockingActionBuilder (for chaining)",
      "static": false,
      "params": [
        {
          "name": "displayName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name to appear in the action menu"
        },
        {
          "name": "icon",
          "type_long": "javax.swing.Icon",
          "type_short": "Icon",
          "comment": "the icon to appear in the action menu"
        },
        {
          "name": "userData",
          "type_long": "T",
          "type_short": "T",
          "comment": "the data associated with this state"
        }
      ],
      "return": {
        "type_long": "docking.action.builder.MultiStateActionBuilder\u003cT\u003e",
        "type_short": "MultiStateActionBuilder",
        "comment": "this MultiActionDockingActionBuilder (for chaining)"
      },
      "throws": []
    },
    {
      "name": "addState",
      "comment": "Add an action state",
      "javadoc": "Add an action state\n@param actionState the action state to add\n@return this MultiActionDockingActionBuilder (for chaining)",
      "static": false,
      "params": [
        {
          "name": "actionState",
          "type_long": "docking.menu.ActionState\u003cT\u003e",
          "type_short": "ActionState",
          "comment": "the action state to add"
        }
      ],
      "return": {
        "type_long": "docking.action.builder.MultiStateActionBuilder\u003cT\u003e",
        "type_short": "MultiStateActionBuilder",
        "comment": "this MultiActionDockingActionBuilder (for chaining)"
      },
      "throws": []
    },
    {
      "name": "addStates",
      "comment": "Add a list of action states",
      "javadoc": "Add a list of action states\n@param list a list of ActionStates;\n@return this MultiActionDockingActionBuilder (for chaining)",
      "static": false,
      "params": [
        {
          "name": "list",
          "type_long": "java.util.List\u003cdocking.menu.ActionState\u003cT\u003e\u003e",
          "type_short": "List",
          "comment": "a list of ActionStates;"
        }
      ],
      "return": {
        "type_long": "docking.action.builder.MultiStateActionBuilder\u003cT\u003e",
        "type_short": "MultiStateActionBuilder",
        "comment": "this MultiActionDockingActionBuilder (for chaining)"
      },
      "throws": []
    },
    {
      "name": "build",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.menu.MultiStateDockingAction\u003cT\u003e",
        "type_short": "MultiStateDockingAction",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "validate",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
