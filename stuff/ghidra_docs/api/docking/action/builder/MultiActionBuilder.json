{
  "name": "MultiActionBuilder",
  "comment": "Builder for MultiActionDockingAction",
  "javadoc": "Builder for {@link MultiActionDockingAction}",
  "static": false,
  "implements": [],
  "extends": "docking.action.builder.AbstractActionBuilder",
  "fields": [
    {
      "name": "actionList",
      "comment": "List of actions for the the MultActionDockingAction",
      "javadoc": "List of actions for the the MultActionDockingAction",
      "static": false,
      "type_long": "java.util.List\u003cdocking.action.DockingActionIf\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "performActionOnButtonClick",
      "comment": "determines if the the main action is invokable",
      "javadoc": "determines if the the main action is invokable",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Builder constructor",
      "javadoc": "Builder constructor\n@param name the name of the action to be built\n@param owner the owner of the action to be build",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of the action to be built"
        },
        {
          "name": "owner",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the owner of the action to be build"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "self",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.action.builder.MultiActionBuilder",
        "type_short": "MultiActionBuilder",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "build",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.menu.MultiActionDockingAction",
        "type_short": "MultiActionDockingAction",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "withActions",
      "comment": "Configure a List of DockingActionIf to provide to the MultiActionDockingAction",
      "javadoc": "Configure a {@link List} of {@link DockingActionIf} to provide to the {@link MultiActionDockingAction}\n@param list a {@link List} of {@link DockingActionIf} to provide to the {@link MultiActionDockingAction}\n@return this MultiActionDockingActionBuilder (for chaining)",
      "static": false,
      "params": [
        {
          "name": "list",
          "type_long": "java.util.List\u003cdocking.action.DockingActionIf\u003e",
          "type_short": "List",
          "comment": "a List of DockingActionIf to provide to the MultiActionDockingAction"
        }
      ],
      "return": {
        "type_long": "docking.action.builder.MultiActionBuilder",
        "type_short": "MultiActionBuilder",
        "comment": "this MultiActionDockingActionBuilder (for chaining)"
      },
      "throws": []
    },
    {
      "name": "performActionOnButtonClick",
      "comment": "Configure whether to perform actions on a button click. \n See MultiActionDockingAction#setPerformActionOnButtonClick(boolean)",
      "javadoc": "Configure whether to perform actions on a button click. \n See {@link MultiActionDockingAction#setPerformActionOnButtonClick(boolean)}\n@param b true if the main action is invokable\n@return this MultiActionDockingActionBuilder (for chaining)",
      "static": false,
      "params": [
        {
          "name": "b",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true if the main action is invokable"
        }
      ],
      "return": {
        "type_long": "docking.action.builder.MultiActionBuilder",
        "type_short": "MultiActionBuilder",
        "comment": "this MultiActionDockingActionBuilder (for chaining)"
      },
      "throws": []
    },
    {
      "name": "validate",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
