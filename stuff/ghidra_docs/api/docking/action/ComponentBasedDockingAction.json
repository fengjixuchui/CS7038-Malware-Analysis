{
  "name": "ComponentBasedDockingAction",
  "comment": "An interface to signal that the implementing action works with an individual Java \n Component.   Standard Docking Actions are either global tool-based actions or local \n ComponentProvider actions.   This interface allows us to have the concept of an \n action that is effectively local to a specific Java component.",
  "javadoc": "An interface to signal that the implementing action works with an individual Java \n {@link Component}.   Standard Docking Actions are either global tool-based actions or local \n {@link ComponentProvider} actions.   This interface allows us to have the concept of an \n action that is effectively local to a specific Java component.",
  "static": false,
  "implements": [
    "docking.action.DockingActionIf"
  ],
  "fields": [],
  "methods": [
    {
      "name": "isValidComponentContext",
      "comment": "Returns true if the given context contains this action\u0027s component",
      "javadoc": "Returns true if the given context contains this action\u0027s component\n@param context the context\n@return true if the given context contains this action\u0027s component",
      "static": false,
      "params": [
        {
          "name": "context",
          "type_long": "docking.ActionContext",
          "type_short": "ActionContext",
          "comment": "the context"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the given context contains this action\u0027s component"
      },
      "throws": []
    }
  ]
}
