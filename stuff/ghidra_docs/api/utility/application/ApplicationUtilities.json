{
  "name": "ApplicationUtilities",
  "comment": "Utility class for default application things.",
  "javadoc": "Utility class for default application things.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "findDefaultApplicationRootDirs",
      "comment": "Searches for default application root directories.",
      "javadoc": "Searches for default application root directories.\n@return A collection of discovered application root directories (could be empty).",
      "static": true,
      "params": [],
      "return": {
        "type_long": "java.util.Collection\u003cgeneric.jar.ResourceFile\u003e",
        "type_short": "Collection",
        "comment": "A collection of discovered application root directories (could be empty)."
      },
      "throws": []
    },
    {
      "name": "findPrimaryApplicationRootDir",
      "comment": "Finds the primary application root directory from the classpath.  The primary application\n root directory must contain an application.properties file.  No other application root\n directories may contain an application.properties file.",
      "javadoc": "Finds the primary application root directory from the classpath.  The primary application\n root directory must contain an application.properties file.  No other application root\n directories may contain an application.properties file.\n@return The primary application root directory, or null if it could not be found.",
      "static": true,
      "params": [],
      "return": {
        "type_long": "generic.jar.ResourceFile",
        "type_short": "ResourceFile",
        "comment": "The primary application root directory, or null if it could not be found."
      },
      "throws": []
    },
    {
      "name": "validateApplicationPropertiesFile",
      "comment": "Checks to make sure the given application properties file exists and is a valid format",
      "javadoc": "Checks to make sure the given application properties file exists and is a valid format\n@param applicationPropertiesFile The application properties file to validate\n@return true if the given application properties file exists and is a valid format;\n   otherwise, false",
      "static": true,
      "params": [
        {
          "name": "applicationPropertiesFile",
          "type_long": "generic.jar.ResourceFile",
          "type_short": "ResourceFile",
          "comment": "The application properties file to validate"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the given application properties file exists and is a valid format;\n   otherwise, false"
      },
      "throws": []
    },
    {
      "name": "findApplicationRootDirsFromRepoConfig",
      "comment": "Finds all application root directories defined in the repository config file.",
      "javadoc": "Finds all application root directories defined in the repository config file.\n@param primaryApplicationRootDir The primary application root directory that may contain the\n   repository config file one directory up.\n@return A collection of defined application repository root directories.",
      "static": true,
      "params": [
        {
          "name": "primaryApplicationRootDir",
          "type_long": "generic.jar.ResourceFile",
          "type_short": "ResourceFile",
          "comment": "The primary application root directory that may contain the\n   repository config file one directory up."
        }
      ],
      "return": {
        "type_long": "java.util.Collection\u003cgeneric.jar.ResourceFile\u003e",
        "type_short": "Collection",
        "comment": "A collection of defined application repository root directories."
      },
      "throws": []
    },
    {
      "name": "getDefaultUserTempDir",
      "comment": "Gets the default application\u0027s user temp directory.",
      "javadoc": "Gets the default application\u0027s user temp directory.\n@param applicationProperties The application properties.\n@return The default application\u0027s user temp directory.\n@throws FileNotFoundException if the user temp directory could not be determined.",
      "static": true,
      "params": [
        {
          "name": "applicationProperties",
          "type_long": "ghidra.framework.ApplicationProperties",
          "type_short": "ApplicationProperties",
          "comment": "The application properties."
        }
      ],
      "return": {
        "type_long": "java.io.File",
        "type_short": "File",
        "comment": "The default application\u0027s user temp directory."
      },
      "throws": [
        {
          "type_long": "java.io.FileNotFoundException",
          "type_short": "FileNotFoundException",
          "comment": "if the user temp directory could not be determined."
        }
      ]
    },
    {
      "name": "getDefaultUserCacheDir",
      "comment": "Gets the default application\u0027s user cache directory.",
      "javadoc": "Gets the default application\u0027s user cache directory.\n@param applicationProperties The application properties.\n@return The default application\u0027s user cache directory.\n@throws FileNotFoundException if the user cache directory could not be determined.",
      "static": true,
      "params": [
        {
          "name": "applicationProperties",
          "type_long": "ghidra.framework.ApplicationProperties",
          "type_short": "ApplicationProperties",
          "comment": "The application properties."
        }
      ],
      "return": {
        "type_long": "java.io.File",
        "type_short": "File",
        "comment": "The default application\u0027s user cache directory."
      },
      "throws": [
        {
          "type_long": "java.io.FileNotFoundException",
          "type_short": "FileNotFoundException",
          "comment": "if the user cache directory could not be determined."
        }
      ]
    },
    {
      "name": "getDefaultUserSettingsDir",
      "comment": "Gets the default application\u0027s user settings directory.",
      "javadoc": "Gets the default application\u0027s user settings directory.\n@param applicationProperties The application properties.\n@param installationDirectory The application installation directory.\n@return The application\u0027s user settings directory.\n@throws FileNotFoundException if the user settings directory could not be determined.",
      "static": true,
      "params": [
        {
          "name": "applicationProperties",
          "type_long": "ghidra.framework.ApplicationProperties",
          "type_short": "ApplicationProperties",
          "comment": "The application properties."
        },
        {
          "name": "installationDirectory",
          "type_long": "generic.jar.ResourceFile",
          "type_short": "ResourceFile",
          "comment": "The application installation directory."
        }
      ],
      "return": {
        "type_long": "java.io.File",
        "type_short": "File",
        "comment": "The application\u0027s user settings directory."
      },
      "throws": [
        {
          "type_long": "java.io.FileNotFoundException",
          "type_short": "FileNotFoundException",
          "comment": "if the user settings directory could not be determined."
        }
      ]
    }
  ]
}
