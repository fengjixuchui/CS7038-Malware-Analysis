{
  "name": "ApplicationLayout",
  "comment": "The Application Layout base class defines the customizable elements of the application\u0027s \n directory structure.  Create a subclass to define a custom layout.\n \n If a layout changes in a significant way, the \n ApplicationProperties#APPLICATION_LAYOUT_VERSION_PROPERTY should be incremented so \n external things like Eclipse GhidraDev know to look in different places for things.",
  "javadoc": "The Application Layout base class defines the customizable elements of the application\u0027s \n directory structure.  Create a subclass to define a custom layout.\n \u003cp\u003e\n If a layout changes in a significant way, the \n {@link ApplicationProperties#APPLICATION_LAYOUT_VERSION_PROPERTY} should be incremented so \n external things like Eclipse GhidraDev know to look in different places for things.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "applicationProperties",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.ApplicationProperties",
      "type_short": "ApplicationProperties",
      "constant_value": null
    },
    {
      "name": "applicationRootDirs",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.Collection\u003cgeneric.jar.ResourceFile\u003e",
      "type_short": "Collection",
      "constant_value": null
    },
    {
      "name": "applicationInstallationDir",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "generic.jar.ResourceFile",
      "type_short": "ResourceFile",
      "constant_value": null
    },
    {
      "name": "modules",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.Map\u003cjava.lang.String,ghidra.framework.GModule\u003e",
      "type_short": "Map",
      "constant_value": null
    },
    {
      "name": "userTempDir",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.io.File",
      "type_short": "File",
      "constant_value": null
    },
    {
      "name": "userCacheDir",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.io.File",
      "type_short": "File",
      "constant_value": null
    },
    {
      "name": "userSettingsDir",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.io.File",
      "type_short": "File",
      "constant_value": null
    },
    {
      "name": "patchDir",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "generic.jar.ResourceFile",
      "type_short": "ResourceFile",
      "constant_value": null
    },
    {
      "name": "extensionArchiveDir",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "generic.jar.ResourceFile",
      "type_short": "ResourceFile",
      "constant_value": null
    },
    {
      "name": "extensionInstallationDirs",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cgeneric.jar.ResourceFile\u003e",
      "type_short": "List",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getApplicationProperties",
      "comment": "Gets the application properties from the application layout",
      "javadoc": "Gets the application properties from the application layout\n@return The application properties.  Should never be null.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.framework.ApplicationProperties",
        "type_short": "ApplicationProperties",
        "comment": "The application properties.  Should never be null."
      },
      "throws": []
    },
    {
      "name": "getApplicationRootDirs",
      "comment": "Gets the application root directories from the application layout.",
      "javadoc": "Gets the application root directories from the application layout.\n@return A collection of application root directories (or null if not set).",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Collection\u003cgeneric.jar.ResourceFile\u003e",
        "type_short": "Collection",
        "comment": "A collection of application root directories (or null if not set)."
      },
      "throws": []
    },
    {
      "name": "getApplicationInstallationDir",
      "comment": "Gets the application installation directory from the application layout.",
      "javadoc": "Gets the application installation directory from the application layout.\n@return The application installation directory (or null if not set).",
      "static": false,
      "params": [],
      "return": {
        "type_long": "generic.jar.ResourceFile",
        "type_short": "ResourceFile",
        "comment": "The application installation directory (or null if not set)."
      },
      "throws": []
    },
    {
      "name": "getModules",
      "comment": "Gets the application\u0027s modules from the application layout.",
      "javadoc": "Gets the application\u0027s modules from the application layout.\n@return The application\u0027s modules as a map (mapping module name to module for convenience).",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Map\u003cjava.lang.String,ghidra.framework.GModule\u003e",
        "type_short": "Map",
        "comment": "The application\u0027s modules as a map (mapping module name to module for convenience)."
      },
      "throws": []
    },
    {
      "name": "getUserTempDir",
      "comment": "Gets the user temp directory from the application layout.",
      "javadoc": "Gets the user temp directory from the application layout.\n@return The user temp directory (or null if not set).",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.io.File",
        "type_short": "File",
        "comment": "The user temp directory (or null if not set)."
      },
      "throws": []
    },
    {
      "name": "getUserCacheDir",
      "comment": "Gets the user cache directory from the application layout.",
      "javadoc": "Gets the user cache directory from the application layout.\n@return The user cache directory (or null if not set).",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.io.File",
        "type_short": "File",
        "comment": "The user cache directory (or null if not set)."
      },
      "throws": []
    },
    {
      "name": "getUserSettingsDir",
      "comment": "Gets the user settings directory from the application layout.",
      "javadoc": "Gets the user settings directory from the application layout.\n@return The user settings directory (or null if not set).",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.io.File",
        "type_short": "File",
        "comment": "The user settings directory (or null if not set)."
      },
      "throws": []
    },
    {
      "name": "getExtensionArchiveDir",
      "comment": "Returns the directory where archived application Extensions are stored.",
      "javadoc": "Returns the directory where archived application Extensions are stored.\n@return the application Extensions archive directory.  Could be null if the \n   {@link ApplicationLayout} does not support application Extensions.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "generic.jar.ResourceFile",
        "type_short": "ResourceFile",
        "comment": "the application Extensions archive directory.  Could be null if the \n   ApplicationLayout does not support application Extensions."
      },
      "throws": []
    },
    {
      "name": "getExtensionInstallationDirs",
      "comment": "Returns an List of the application Extensions installation directories.",
      "javadoc": "Returns an {@link List ordered list} of the application Extensions installation directories.\n@return an {@link List ordered list} of the application Extensions installation directories.\n   Could be empty if the {@link ApplicationLayout} does not support application Extensions.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cgeneric.jar.ResourceFile\u003e",
        "type_short": "List",
        "comment": "an List of the application Extensions installation directories.\n   Could be empty if the ApplicationLayout does not support application Extensions."
      },
      "throws": []
    },
    {
      "name": "getPatchDir",
      "comment": "Returns the location of the application patch directory.  The patch directory can be\n used to modify existing code within a distribution.",
      "javadoc": "Returns the location of the application patch directory.  The patch directory can be\n used to modify existing code within a distribution.\n@return the patch directory; may be null",
      "static": false,
      "params": [],
      "return": {
        "type_long": "generic.jar.ResourceFile",
        "type_short": "ResourceFile",
        "comment": "the patch directory; may be null"
      },
      "throws": []
    },
    {
      "name": "createUserDirs",
      "comment": "Creates the application\u0027s user directories (or ensures they already exist).",
      "javadoc": "Creates the application\u0027s user directories (or ensures they already exist).\n@throws IOException if there was a problem creating the application\u0027s user directories.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if there was a problem creating the application\u0027s user directories."
        }
      ]
    },
    {
      "name": "inSingleJarMode",
      "comment": "Checks whether or not the application is using a \"single jar\" layout.  Custom application \n layouts that extend this class can override this method once they determine they are in \n single jar mode.",
      "javadoc": "Checks whether or not the application is using a \"single jar\" layout.  Custom application \n layouts that extend this class can override this method once they determine they are in \n single jar mode.\n@return true if the application is using a \"single jar\" layout; otherwise, false.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the application is using a \"single jar\" layout; otherwise, false."
      },
      "throws": []
    }
  ]
}
