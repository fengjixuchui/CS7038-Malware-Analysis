{
  "name": "ExceptionalFunction",
  "comment": "A generic functional interface that allows you to consume an item, return a result, \n and potentially throw an exception.",
  "javadoc": "A generic functional interface that allows you to consume an item, return a result, \n and potentially throw an exception.\n@param \u003cI\u003e the input type\n@param \u003cR\u003e the result type\n@param \u003cE\u003e the exception of your choice",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "apply",
      "comment": "The method that will be called",
      "javadoc": "The method that will be called\n@param i the input\n@return the result of the call\n@throws E if the call throws an exception",
      "static": false,
      "params": [
        {
          "name": "i",
          "type_long": "I",
          "type_short": "I",
          "comment": "the input"
        }
      ],
      "return": {
        "type_long": "R",
        "type_short": "R",
        "comment": "the result of the call"
      },
      "throws": [
        {
          "type_long": "E",
          "type_short": "E",
          "comment": "if the call throws an exception"
        }
      ]
    }
  ]
}
