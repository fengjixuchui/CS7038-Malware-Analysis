{
  "name": "ExceptionalConsumer",
  "comment": "A generic functional interface that allows you to consume an item and potentially throw\n an exception.",
  "javadoc": "A generic functional interface that allows you to consume an item and potentially throw\n an exception.\n@param \u003cT\u003e the input type\n@param \u003cE\u003e the exception of your choice",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "accept",
      "comment": "The method that will be called",
      "javadoc": "The method that will be called\n@param t the input\n@throws E if the call throws an exception",
      "static": false,
      "params": [
        {
          "name": "t",
          "type_long": "T",
          "type_short": "T",
          "comment": "the input"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "E",
          "type_short": "E",
          "comment": "if the call throws an exception"
        }
      ]
    }
  ]
}
