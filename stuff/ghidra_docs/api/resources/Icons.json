{
  "name": "Icons",
  "comment": "A class to get generic icons for standard actions.  All methods in this class return an \n icon that is 16x16 unless the method name ends in another size.\u0027",
  "javadoc": "A class to get generic icons for standard actions.  All methods in this class return an \n icon that is 16x16 unless the method name ends in another size.\u0027",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "EMPTY_ICON",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "javax.swing.ImageIcon",
      "type_short": "ImageIcon",
      "constant_value": null
    },
    {
      "name": "HELP_ICON",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "javax.swing.ImageIcon",
      "type_short": "ImageIcon",
      "constant_value": null
    },
    {
      "name": "ADD_ICON",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "javax.swing.ImageIcon",
      "type_short": "ImageIcon",
      "constant_value": null
    },
    {
      "name": "COLLAPSE_ALL_ICON",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "javax.swing.ImageIcon",
      "type_short": "ImageIcon",
      "constant_value": null
    },
    {
      "name": "EXPAND_ALL_ICON",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "javax.swing.ImageIcon",
      "type_short": "ImageIcon",
      "constant_value": null
    },
    {
      "name": "CONFIGURE_FILTER_ICON",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "javax.swing.ImageIcon",
      "type_short": "ImageIcon",
      "constant_value": null
    },
    {
      "name": "DELETE_ICON",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "javax.swing.ImageIcon",
      "type_short": "ImageIcon",
      "constant_value": null
    },
    {
      "name": "ERROR_ICON",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "javax.swing.ImageIcon",
      "type_short": "ImageIcon",
      "constant_value": null
    },
    {
      "name": "NAVIGATE_ON_INCOMING_EVENT_ICON",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "javax.swing.ImageIcon",
      "type_short": "ImageIcon",
      "constant_value": null
    },
    {
      "name": "NAVIGATE_ON_OUTGOING_EVENT_ICON",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "javax.swing.ImageIcon",
      "type_short": "ImageIcon",
      "constant_value": null
    },
    {
      "name": "NOT_ALLOWED_ICON",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "javax.swing.ImageIcon",
      "type_short": "ImageIcon",
      "constant_value": null
    },
    {
      "name": "OPEN_FOLDER_ICON",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "javax.swing.ImageIcon",
      "type_short": "ImageIcon",
      "constant_value": null
    },
    {
      "name": "REFRESH_ICON",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "javax.swing.ImageIcon",
      "type_short": "ImageIcon",
      "constant_value": null
    },
    {
      "name": "SORT_ASCENDING_ICON",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "javax.swing.ImageIcon",
      "type_short": "ImageIcon",
      "constant_value": null
    },
    {
      "name": "SORT_DESCENDING_ICON",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "javax.swing.ImageIcon",
      "type_short": "ImageIcon",
      "constant_value": null
    },
    {
      "name": "STOP_ICON",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "javax.swing.ImageIcon",
      "type_short": "ImageIcon",
      "constant_value": null
    },
    {
      "name": "STRONG_WARNING_ICON",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "javax.swing.ImageIcon",
      "type_short": "ImageIcon",
      "constant_value": null
    },
    {
      "name": "LEFT_ICON",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "javax.swing.ImageIcon",
      "type_short": "ImageIcon",
      "constant_value": null
    },
    {
      "name": "RIGHT_ICON",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "javax.swing.ImageIcon",
      "type_short": "ImageIcon",
      "constant_value": null
    },
    {
      "name": "LEFT_ALTERNATE_ICON",
      "comment": "An version of the LEFT_ICON with a different color",
      "javadoc": "An version of the LEFT_ICON with a different color",
      "static": true,
      "type_long": "javax.swing.ImageIcon",
      "type_short": "ImageIcon",
      "constant_value": null
    },
    {
      "name": "RIGHT_ALTERNATE_ICON",
      "comment": "An version of the RIGHT_ICON with a different color",
      "javadoc": "An version of the RIGHT_ICON with a different color",
      "static": true,
      "type_long": "javax.swing.ImageIcon",
      "type_short": "ImageIcon",
      "constant_value": null
    },
    {
      "name": "SAVE_AS",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "javax.swing.ImageIcon",
      "type_short": "ImageIcon",
      "constant_value": null
    },
    {
      "name": "MAKE_SELECTION_ICON",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "javax.swing.ImageIcon",
      "type_short": "ImageIcon",
      "constant_value": null
    },
    {
      "name": "ARROW_DOWN_RIGHT_ICON",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "javax.swing.ImageIcon",
      "type_short": "ImageIcon",
      "constant_value": null
    },
    {
      "name": "ARROW_UP_LEFT_ICON",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "javax.swing.ImageIcon",
      "type_short": "ImageIcon",
      "constant_value": null
    },
    {
      "name": "FILTER_NOT_ACCEPTED_ICON",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "javax.swing.ImageIcon",
      "type_short": "ImageIcon",
      "constant_value": null
    },
    {
      "name": "APPLY_BLOCKED_MATCH_ICON",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "javax.swing.ImageIcon",
      "type_short": "ImageIcon",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "isIconsReference",
      "comment": "Returns true if the given string is a Java code snippet that references this class",
      "javadoc": "Returns true if the given string is a Java code snippet that references this class\n@param snippet the string to check\n@return true if the given string is a Java code snippet that references this class",
      "static": true,
      "params": [
        {
          "name": "snippet",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the string to check"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the given string is a Java code snippet that references this class"
      },
      "throws": []
    },
    {
      "name": "getIconForIconsReference",
      "comment": "Returns an IconProvider for the given string value, which is usually the \u0027src\u0027 \n attribute of an IMG tag",
      "javadoc": "Returns an {@link IconProvider} for the given string value, which is usually the \u0027src\u0027 \n attribute of an IMG tag\n@param snippet the snippet\n@return the icon provider",
      "static": true,
      "params": [
        {
          "name": "snippet",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the snippet"
        }
      ],
      "return": {
        "type_long": "resources.IconProvider",
        "type_short": "IconProvider",
        "comment": "the icon provider"
      },
      "throws": []
    },
    {
      "name": "get",
      "comment": "Gets the icon for the given icon path. The given path should be relative to the classpath.\n If an icon by that name can\u0027t be found, the default \"bomb\" icon is returned instead.\n \n For example, an icon named foo.png would typically be stored in the module at \n \"{modulePath}/src/main/resources/image/foo.png\".  To reference that icon, use the path\n \"images/foo.png\", since \"{modulePath}/src/main/resources\" is in the classpath.",
      "javadoc": "Gets the icon for the given icon path. The given path should be relative to the classpath.\n If an icon by that name can\u0027t be found, the default \"bomb\" icon is returned instead.\n \u003cP\u003e\n For example, an icon named foo.png would typically be stored in the module at \n \"{modulePath}/src/main/resources/image/foo.png\".  To reference that icon, use the path\n \"images/foo.png\", since \"{modulePath}/src/main/resources\" is in the classpath.\n@param iconPath the icon path (relative to the classpath)\n@return The icon referenced by that path.",
      "static": true,
      "params": [
        {
          "name": "iconPath",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the icon path (relative to the classpath)"
        }
      ],
      "return": {
        "type_long": "javax.swing.ImageIcon",
        "type_short": "ImageIcon",
        "comment": "The icon referenced by that path."
      },
      "throws": []
    },
    {
      "name": "get",
      "comment": "Gets the icon for the given icon path and scale it to the specifed width and height.\n The given path should be relative to the classpath.\n If an icon by that name can\u0027t be found, the default \"bomb\" icon is returned instead.\n \n For example, an icon named foo.png would typically be stored in the module at \n \"{modulePath}/src/main/resources/image/foo.png\".  To reference that icon, use the path\n \"images/foo.png\", since \"{modulePath}/src/main/resources\" is in the classpath.",
      "javadoc": "Gets the icon for the given icon path and scale it to the specifed width and height.\n The given path should be relative to the classpath.\n If an icon by that name can\u0027t be found, the default \"bomb\" icon is returned instead.\n \u003cP\u003e\n For example, an icon named foo.png would typically be stored in the module at \n \"{modulePath}/src/main/resources/image/foo.png\".  To reference that icon, use the path\n \"images/foo.png\", since \"{modulePath}/src/main/resources\" is in the classpath.\n@param iconPath the icon path (relative to the classpath)\n@param width the desired width after scaling\n@param height the desired height after scaling\n@return The icon referenced by that path.",
      "static": true,
      "params": [
        {
          "name": "iconPath",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the icon path (relative to the classpath)"
        },
        {
          "name": "width",
          "type_long": "int",
          "type_short": "int",
          "comment": "the desired width after scaling"
        },
        {
          "name": "height",
          "type_long": "int",
          "type_short": "int",
          "comment": "the desired height after scaling"
        }
      ],
      "return": {
        "type_long": "javax.swing.ImageIcon",
        "type_short": "ImageIcon",
        "comment": "The icon referenced by that path."
      },
      "throws": []
    },
    {
      "name": "getIconName",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "snippet",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getIconByFieldName",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "fieldName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "javax.swing.ImageIcon",
        "type_short": "ImageIcon",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getUrlFromIcon",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "icon",
          "type_long": "javax.swing.ImageIcon",
          "type_short": "ImageIcon",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.net.URL",
        "type_short": "URL",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
