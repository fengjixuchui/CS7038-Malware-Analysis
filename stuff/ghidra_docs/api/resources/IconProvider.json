{
  "name": "IconProvider",
  "comment": "A class that knows how to provide an icon and the URL for that icon.  If #getUrl()\n returns a non-null value, then that is the URL used to originally load the icon in this class.\n \n If #getUrl() returns null, then #getOrCreateUrl() can be used to create a\n value URL by writing out the image for this class\u0027s icon.",
  "javadoc": "A class that knows how to provide an icon and the URL for that icon.  If {@link #getUrl()}\n returns a non-null value, then that is the URL used to originally load the icon in this class.\n \n \u003cp\u003eIf {@link #getUrl()} returns null, then {@link #getOrCreateUrl()} can be used to create a\n value URL by writing out the image for this class\u0027s icon.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "icon",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.ImageIcon",
      "type_short": "ImageIcon",
      "constant_value": null
    },
    {
      "name": "url",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.net.URL",
      "type_short": "URL",
      "constant_value": null
    },
    {
      "name": "tempUrl",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.net.URL",
      "type_short": "URL",
      "constant_value": null
    },
    {
      "name": "tempFileFailed",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "icon",
          "type_long": "javax.swing.ImageIcon",
          "type_short": "ImageIcon",
          "comment": ""
        },
        {
          "name": "url",
          "type_long": "java.net.URL",
          "type_short": "URL",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getIcon",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "javax.swing.ImageIcon",
        "type_short": "ImageIcon",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isInvalid",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getUrl",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.net.URL",
        "type_short": "URL",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getOrCreateUrl",
      "comment": "Returns the value of #getUrl() if it is non-null.  Otherwise, this class will\n attempt to create a temporary file containing the image of this class in order to return\n a URL for that temp file.  If a temporary file could not be created, then the URL \n returned from this class will point to the \n ResourceManager#getDefaultIcon().",
      "javadoc": "Returns the value of {@link #getUrl()} if it is non-null.  Otherwise, this class will\n attempt to create a temporary file containing the image of this class in order to return\n a URL for that temp file.  If a temporary file could not be created, then the URL \n returned from this class will point to the \n {@link ResourceManager#getDefaultIcon() default icon}.\n@return the URL",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.net.URL",
        "type_short": "URL",
        "comment": "the URL"
      },
      "throws": []
    },
    {
      "name": "createTempUrlAsNeeded",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createTempUrl",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.net.URL",
        "type_short": "URL",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "testUrl",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "testUrl",
          "type_long": "java.net.URL",
          "type_short": "URL",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDefaultUrl",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.net.URL",
        "type_short": "URL",
        "comment": ""
      },
      "throws": []
    }
  ]
}
