{
  "name": "UnsignedDataUtils",
  "comment": "A class for performing unsigned comparisons\n of java primitives.",
  "javadoc": "A class for performing unsigned comparisons\n of java primitives.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "LESS_THAN",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "0"
    },
    {
      "name": "LESS_THAN_OR_EQUAL",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "1"
    },
    {
      "name": "GREATER_THAN",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "2"
    },
    {
      "name": "GREATER_THAN_OR_EQUAL",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "3"
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "main",
      "comment": "Simple test for the Comp class.",
      "javadoc": "Simple test for the Comp class.\n@param args not used",
      "static": true,
      "params": [
        {
          "name": "args",
          "type_long": "java.lang.String[]",
          "type_short": "java.lang.String[]",
          "comment": "not used"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "comp",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "type",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "i",
          "type_long": "byte",
          "type_short": "byte",
          "comment": ""
        },
        {
          "name": "j",
          "type_long": "byte",
          "type_short": "byte",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "comp",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "type",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "i",
          "type_long": "short",
          "type_short": "short",
          "comment": ""
        },
        {
          "name": "j",
          "type_long": "short",
          "type_short": "short",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "comp",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "type",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "i",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "j",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "comp",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "type",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "i",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        },
        {
          "name": "j",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "unsignedLessThan",
      "comment": "Returns true if i is LESS THAN j.",
      "javadoc": "Returns true if \u003ccode\u003ei\u003c/code\u003e is LESS THAN \u003ccode\u003ej\u003c/code\u003e.\n@param i an argument\n@param j another argument\n@return true if \u003ccode\u003ei\u003c/code\u003e is less than \u003ccode\u003ej\u003c/code\u003e",
      "static": true,
      "params": [
        {
          "name": "i",
          "type_long": "byte",
          "type_short": "byte",
          "comment": "an argument"
        },
        {
          "name": "j",
          "type_long": "byte",
          "type_short": "byte",
          "comment": "another argument"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if i is less than j"
      },
      "throws": []
    },
    {
      "name": "unsignedLessThanOrEqual",
      "comment": "Returns true if i is LESS THAN or EQUAL TO j.",
      "javadoc": "Returns true if \u003ccode\u003ei\u003c/code\u003e is LESS THAN or EQUAL TO \u003ccode\u003ej\u003c/code\u003e.\n@param i an argument\n@param j another argument\n@return true if \u003ccode\u003ei\u003c/code\u003e is less than or equal to \u003ccode\u003ej\u003c/code\u003e",
      "static": true,
      "params": [
        {
          "name": "i",
          "type_long": "byte",
          "type_short": "byte",
          "comment": "an argument"
        },
        {
          "name": "j",
          "type_long": "byte",
          "type_short": "byte",
          "comment": "another argument"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if i is less than or equal to j"
      },
      "throws": []
    },
    {
      "name": "unsignedGreaterThan",
      "comment": "Returns true if i is GREATER THAN j.",
      "javadoc": "Returns true if \u003ccode\u003ei\u003c/code\u003e is GREATER THAN \u003ccode\u003ej\u003c/code\u003e.\n@param i an argument\n@param j another argument\n@return true if \u003ccode\u003ei\u003c/code\u003e is greater than \u003ccode\u003ej\u003c/code\u003e",
      "static": true,
      "params": [
        {
          "name": "i",
          "type_long": "byte",
          "type_short": "byte",
          "comment": "an argument"
        },
        {
          "name": "j",
          "type_long": "byte",
          "type_short": "byte",
          "comment": "another argument"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if i is greater than j"
      },
      "throws": []
    },
    {
      "name": "unsignedGreaterThanOrEqual",
      "comment": "Returns true if i is GREATER THAN or EQUAL TO j.",
      "javadoc": "Returns true if \u003ccode\u003ei\u003c/code\u003e is GREATER THAN or EQUAL TO \u003ccode\u003ej\u003c/code\u003e.\n@param i an argument\n@param j another argument\n@return true if \u003ccode\u003ei\u003c/code\u003e is greater than or equal to \u003ccode\u003ej\u003c/code\u003e",
      "static": true,
      "params": [
        {
          "name": "i",
          "type_long": "byte",
          "type_short": "byte",
          "comment": "an argument"
        },
        {
          "name": "j",
          "type_long": "byte",
          "type_short": "byte",
          "comment": "another argument"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if i is greater than or equal to j"
      },
      "throws": []
    },
    {
      "name": "unsignedLessThan",
      "comment": "Returns true if i is LESS THAN j.",
      "javadoc": "Returns true if \u003ccode\u003ei\u003c/code\u003e is LESS THAN \u003ccode\u003ej\u003c/code\u003e.\n@param i an argument\n@param j another argument\n@return true if \u003ccode\u003ei\u003c/code\u003e is less than \u003ccode\u003ej\u003c/code\u003e",
      "static": true,
      "params": [
        {
          "name": "i",
          "type_long": "short",
          "type_short": "short",
          "comment": "an argument"
        },
        {
          "name": "j",
          "type_long": "short",
          "type_short": "short",
          "comment": "another argument"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if i is less than j"
      },
      "throws": []
    },
    {
      "name": "unsignedLessThanOrEqual",
      "comment": "Returns true if i is LESS THAN or EQUAL TO j.",
      "javadoc": "Returns true if \u003ccode\u003ei\u003c/code\u003e is LESS THAN or EQUAL TO \u003ccode\u003ej\u003c/code\u003e.\n@param i an argument\n@param j another argument\n@return true if \u003ccode\u003ei\u003c/code\u003e is less than or equal to \u003ccode\u003ej\u003c/code\u003e",
      "static": true,
      "params": [
        {
          "name": "i",
          "type_long": "short",
          "type_short": "short",
          "comment": "an argument"
        },
        {
          "name": "j",
          "type_long": "short",
          "type_short": "short",
          "comment": "another argument"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if i is less than or equal to j"
      },
      "throws": []
    },
    {
      "name": "unsignedGreaterThan",
      "comment": "Returns true if i is GREATER THAN j.",
      "javadoc": "Returns true if \u003ccode\u003ei\u003c/code\u003e is GREATER THAN \u003ccode\u003ej\u003c/code\u003e.\n@param i an argument\n@param j another argument\n@return true if \u003ccode\u003ei\u003c/code\u003e is greater than \u003ccode\u003ej\u003c/code\u003e",
      "static": true,
      "params": [
        {
          "name": "i",
          "type_long": "short",
          "type_short": "short",
          "comment": "an argument"
        },
        {
          "name": "j",
          "type_long": "short",
          "type_short": "short",
          "comment": "another argument"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if i is greater than j"
      },
      "throws": []
    },
    {
      "name": "unsignedGreaterThanOrEqual",
      "comment": "Returns true if i is GREATER THAN or EQUAL TO j.",
      "javadoc": "Returns true if \u003ccode\u003ei\u003c/code\u003e is GREATER THAN or EQUAL TO \u003ccode\u003ej\u003c/code\u003e.\n@param i an argument\n@param j another argument\n@return true if \u003ccode\u003ei\u003c/code\u003e is greater than or equal to \u003ccode\u003ej\u003c/code\u003e",
      "static": true,
      "params": [
        {
          "name": "i",
          "type_long": "short",
          "type_short": "short",
          "comment": "an argument"
        },
        {
          "name": "j",
          "type_long": "short",
          "type_short": "short",
          "comment": "another argument"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if i is greater than or equal to j"
      },
      "throws": []
    },
    {
      "name": "unsignedLessThan",
      "comment": "Returns true if i is LESS THAN j.",
      "javadoc": "Returns true if \u003ccode\u003ei\u003c/code\u003e is LESS THAN \u003ccode\u003ej\u003c/code\u003e.\n@param i an argument\n@param j another argument\n@return true if \u003ccode\u003ei\u003c/code\u003e is less than \u003ccode\u003ej\u003c/code\u003e",
      "static": true,
      "params": [
        {
          "name": "i",
          "type_long": "int",
          "type_short": "int",
          "comment": "an argument"
        },
        {
          "name": "j",
          "type_long": "int",
          "type_short": "int",
          "comment": "another argument"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if i is less than j"
      },
      "throws": []
    },
    {
      "name": "unsignedLessThanOrEqual",
      "comment": "Returns true if i is LESS THAN or EQUAL TO j.",
      "javadoc": "Returns true if \u003ccode\u003ei\u003c/code\u003e is LESS THAN or EQUAL TO \u003ccode\u003ej\u003c/code\u003e.\n@param i an argument\n@param j another argument\n@return true if \u003ccode\u003ei\u003c/code\u003e is less than or equal to \u003ccode\u003ej\u003c/code\u003e",
      "static": true,
      "params": [
        {
          "name": "i",
          "type_long": "int",
          "type_short": "int",
          "comment": "an argument"
        },
        {
          "name": "j",
          "type_long": "int",
          "type_short": "int",
          "comment": "another argument"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if i is less than or equal to j"
      },
      "throws": []
    },
    {
      "name": "unsignedGreaterThan",
      "comment": "Returns true if i is GREATER THAN j.",
      "javadoc": "Returns true if \u003ccode\u003ei\u003c/code\u003e is GREATER THAN \u003ccode\u003ej\u003c/code\u003e.\n@param i an argument\n@param j another argument\n@return true if \u003ccode\u003ei\u003c/code\u003e is greater than \u003ccode\u003ej\u003c/code\u003e",
      "static": true,
      "params": [
        {
          "name": "i",
          "type_long": "int",
          "type_short": "int",
          "comment": "an argument"
        },
        {
          "name": "j",
          "type_long": "int",
          "type_short": "int",
          "comment": "another argument"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if i is greater than j"
      },
      "throws": []
    },
    {
      "name": "unsignedGreaterThanOrEqual",
      "comment": "Returns true if i is GREATER THAN or EQUAL TO j.",
      "javadoc": "Returns true if \u003ccode\u003ei\u003c/code\u003e is GREATER THAN or EQUAL TO \u003ccode\u003ej\u003c/code\u003e.\n@param i an argument\n@param j another argument\n@return true if \u003ccode\u003ei\u003c/code\u003e is greater than or equal to \u003ccode\u003ej\u003c/code\u003e",
      "static": true,
      "params": [
        {
          "name": "i",
          "type_long": "int",
          "type_short": "int",
          "comment": "an argument"
        },
        {
          "name": "j",
          "type_long": "int",
          "type_short": "int",
          "comment": "another argument"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if i is greater than or equal to j"
      },
      "throws": []
    },
    {
      "name": "unsignedLessThan",
      "comment": "Returns true if i is LESS THAN j.",
      "javadoc": "Returns true if \u003ccode\u003ei\u003c/code\u003e is LESS THAN \u003ccode\u003ej\u003c/code\u003e.\n@param i an argument\n@param j another argument\n@return true if \u003ccode\u003ei\u003c/code\u003e is less than \u003ccode\u003ej\u003c/code\u003e",
      "static": true,
      "params": [
        {
          "name": "i",
          "type_long": "long",
          "type_short": "long",
          "comment": "an argument"
        },
        {
          "name": "j",
          "type_long": "long",
          "type_short": "long",
          "comment": "another argument"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if i is less than j"
      },
      "throws": []
    },
    {
      "name": "unsignedLessThanOrEqual",
      "comment": "Returns true if i is LESS THAN or EQUAL TO j.",
      "javadoc": "Returns true if \u003ccode\u003ei\u003c/code\u003e is LESS THAN or EQUAL TO \u003ccode\u003ej\u003c/code\u003e.\n@param i an argument\n@param j another argument\n@return true if \u003ccode\u003ei\u003c/code\u003e is less than or equal to \u003ccode\u003ej\u003c/code\u003e",
      "static": true,
      "params": [
        {
          "name": "i",
          "type_long": "long",
          "type_short": "long",
          "comment": "an argument"
        },
        {
          "name": "j",
          "type_long": "long",
          "type_short": "long",
          "comment": "another argument"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if i is less than or equal to j"
      },
      "throws": []
    },
    {
      "name": "unsignedGreaterThan",
      "comment": "Returns true if i is GREATER THAN j.",
      "javadoc": "Returns true if \u003ccode\u003ei\u003c/code\u003e is GREATER THAN \u003ccode\u003ej\u003c/code\u003e.\n@param i an argument\n@param j another argument\n@return return true if \u003ccode\u003ei\u003c/code\u003e is greater than \u003ccode\u003ej\u003c/code\u003e",
      "static": true,
      "params": [
        {
          "name": "i",
          "type_long": "long",
          "type_short": "long",
          "comment": "an argument"
        },
        {
          "name": "j",
          "type_long": "long",
          "type_short": "long",
          "comment": "another argument"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "return true if i is greater than j"
      },
      "throws": []
    },
    {
      "name": "unsignedGreaterThanOrEqual",
      "comment": "Returns true if i is GREATER THAN or EQUAL TO j.",
      "javadoc": "Returns true if \u003ccode\u003ei\u003c/code\u003e is GREATER THAN or EQUAL TO \u003ccode\u003ej\u003c/code\u003e.\n@param i an argument\n@param j another argument\n@return return true if \u003ccode\u003ei\u003c/code\u003e is greater than or equal to \u003ccode\u003ej\u003c/code\u003e",
      "static": true,
      "params": [
        {
          "name": "i",
          "type_long": "long",
          "type_short": "long",
          "comment": "an argument"
        },
        {
          "name": "j",
          "type_long": "long",
          "type_short": "long",
          "comment": "another argument"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "return true if i is greater than or equal to j"
      },
      "throws": []
    }
  ]
}
