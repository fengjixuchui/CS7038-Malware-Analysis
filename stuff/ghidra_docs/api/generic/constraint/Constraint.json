{
  "name": "Constraint",
  "comment": "Constraints are used to make decisions to traverse a decision tree where each node in the\n tree has a constraint that is used to decide if that node is part of the successful decision path.",
  "javadoc": "Constraints are used to make decisions to traverse a decision tree where each node in the\n tree has a constraint that is used to decide if that node is part of the successful decision path.\n@param \u003cT\u003e The type of object that decisions will be made.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "name",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor takes the name of the constraint.  This name will be tag used in the XML\n specification file.",
      "javadoc": "Constructor takes the name of the constraint.  This name will be tag used in the XML\n specification file.\n@param name the name of the constraint",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of the constraint"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getName",
      "comment": "Returns the name of the constraint.  Note: this name is also the XML tag used in the \n constraints specification files.",
      "javadoc": "Returns the name of the constraint.  Note: this name is also the XML tag used in the \n constraints specification files.\n@return the name of the constraint",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the name of the constraint"
      },
      "throws": []
    },
    {
      "name": "isSatisfied",
      "comment": "Returns true if the given object satisfies this constraint.",
      "javadoc": "Returns true if the given object satisfies this constraint.\n@param t the object to test this constraint on.\n@return true if the given object satisfies this constraint.",
      "static": false,
      "params": [
        {
          "name": "t",
          "type_long": "T",
          "type_short": "T",
          "comment": "the object to test this constraint on."
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the given object satisfies this constraint."
      },
      "throws": []
    },
    {
      "name": "loadConstraintData",
      "comment": "Initialized this constraint state.  Attributes in the xml element with this constaints\n tag name will be extracted into the ConstraintData object for easy retrieval.",
      "javadoc": "Initialized this constraint state.  Attributes in the xml element with this constaints\n tag name will be extracted into the ConstraintData object for easy retrieval.\n@param data the ConstraintData object used to initialize this constraint.",
      "static": false,
      "params": [
        {
          "name": "data",
          "type_long": "generic.constraint.ConstraintData",
          "type_short": "ConstraintData",
          "comment": "the ConstraintData object used to initialize this constraint."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "equals",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "obj",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDescription",
      "comment": "Returns a description of this constraint (with its configuration data) to be used\n to journal the decision path that was taken.",
      "javadoc": "Returns a description of this constraint (with its configuration data) to be used\n to journal the decision path that was taken.\n@return a description of this constraint with its configuration data.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "a description of this constraint with its configuration data."
      },
      "throws": []
    }
  ]
}
