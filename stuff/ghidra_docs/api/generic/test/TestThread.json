{
  "name": "TestThread",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "extends": "java.lang.Thread",
  "fields": [
    {
      "name": "SUN_PACKAGE",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"sun.\""
    },
    {
      "name": "JAVA_LANG_PACKAGE",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"java.lang\""
    },
    {
      "name": "JAVA_AWT_EVENT_PACKAGE",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"java.awt.EventQueue\""
    },
    {
      "name": "JUNIT_FRAMEWORK_PACKAGE",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"junit.framework\""
    },
    {
      "name": "JUNIT_ORG_PACKAGE",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"org.junit\""
    },
    {
      "name": "MOCKIT_JUNIT_PACKAGE",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"mockit.integration.junit\""
    },
    {
      "name": "GHIDRA_SWING_RUNNER",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"ExceptionHandlingRunner\""
    },
    {
      "name": "NAME_PREFIX",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Test-\""
    },
    {
      "name": "statement",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "org.junit.runners.model.Statement",
      "type_short": "Statement",
      "constant_value": null
    },
    {
      "name": "finished",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "exceptionFromTest",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.Throwable",
      "type_short": "Throwable",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "isTestThread",
      "comment": "Returns true if the current thread is the test thread",
      "javadoc": "Returns true if the current thread is the test thread\n@return true if the current thread is the test thread",
      "static": true,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the current thread is the test thread"
      },
      "throws": []
    },
    {
      "name": "isTestThread",
      "comment": "Returns true if the given thread is the test thread",
      "javadoc": "Returns true if the given thread is the test thread\n@param t the thread to check\n@return true if the given thread is the test thread",
      "static": true,
      "params": [
        {
          "name": "t",
          "type_long": "java.lang.Thread",
          "type_short": "Thread",
          "comment": "the thread to check"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the given thread is the test thread"
      },
      "throws": []
    },
    {
      "name": "isTestThreadName",
      "comment": "Returns true if the given thread name is the test thread name",
      "javadoc": "Returns true if the given thread name is the test thread name\n@param name the thread name to check\n@return true if the given thread name is the test thread name",
      "static": true,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the thread name to check"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the given thread name is the test thread name"
      },
      "throws": []
    },
    {
      "name": "filterTrace",
      "comment": "Filters the given stack trace to remove entries known to be present in the test \n thread that offer little forensic value",
      "javadoc": "Filters the given stack trace to remove entries known to be present in the test \n thread that offer little forensic value\n@param trace the trace to filter\n@return the filtered trace",
      "static": true,
      "params": [
        {
          "name": "trace",
          "type_long": "java.lang.StackTraceElement[]",
          "type_short": "java.lang.StackTraceElement[]",
          "comment": "the trace to filter"
        }
      ],
      "return": {
        "type_long": "java.lang.StackTraceElement[]",
        "type_short": "java.lang.StackTraceElement[]",
        "comment": "the filtered trace"
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "statement",
          "type_long": "org.junit.runners.model.Statement",
          "type_short": "Statement",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "run",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
