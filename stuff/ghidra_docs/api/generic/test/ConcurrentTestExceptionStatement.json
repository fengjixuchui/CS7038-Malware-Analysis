{
  "name": "ConcurrentTestExceptionStatement",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "extends": "org.junit.runners.model.Statement",
  "fields": [
    {
      "name": "DISABLE_TEST_TIMEOUT_PROPERTY",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"ghidra.test.property.timeout.disable\""
    },
    {
      "name": "TEST_TIMEOUT_MILLIS_PROPERTY",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"ghidra.test.property.timeout.milliseconds\""
    },
    {
      "name": "TIMEOUT_MILLIS",
      "comment": "The time period after which a test will be forcibly terminated",
      "javadoc": "The time period after which a test will be forcibly terminated",
      "static": true,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "lastTestThread",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.Thread",
      "type_short": "Thread",
      "constant_value": null
    },
    {
      "name": "testStatement",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "org.junit.runners.model.Statement",
      "type_short": "Statement",
      "constant_value": null
    },
    {
      "name": "timoutMonitor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.timer.GTimerMonitor",
      "type_short": "GTimerMonitor",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "originalStatement",
          "type_long": "org.junit.runners.model.Statement",
          "type_short": "Statement",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getTestTimeout",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isTestTimeoutDisabled",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "ignoreTimeout",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isRunningFromEclipse",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "evaluate",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.lang.Throwable",
          "type_short": "Throwable",
          "comment": ""
        }
      ]
    },
    {
      "name": "maybePrintConsoleTestThreadExceptionMessage",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFirstNonTestThreadExceptionTracker",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "generic.test.TestExceptionTracker",
        "type_short": "TestExceptionTracker",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "printNonTestThreadExceptions",
      "comment": "Prints all exceptions found that did not occur on the test thread.  This is useful \n for debugging.",
      "javadoc": "Prints all exceptions found that did not occur on the test thread.  This is useful \n for debugging.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "waitForTestUnlessExceptions",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "testThread",
          "type_long": "generic.test.TestThread",
          "type_short": "TestThread",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "checkForTestTimeout",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "testThread",
          "type_long": "generic.test.TestThread",
          "type_short": "TestThread",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "interruptTestThread",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "testThread",
          "type_long": "generic.test.TestThread",
          "type_short": "TestThread",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "waitForPreviousTestToFinish",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
