{
  "name": "QRunnable",
  "comment": "Interface that defines the Runnable to work on the items given to the \n ConcurrentQ#add(Object) methods.  Each item that is processed will be handed to the\n #run(Object, TaskMonitor) method of the implementing class.",
  "javadoc": "Interface that defines the Runnable to work on the items given to the \n {@link ConcurrentQ#add(Object) ConcurrentQ.add(I)} methods.  Each item that is processed will be handed to the\n {@link #run(Object, TaskMonitor) run(I, TaskMonitor)} method of the implementing class.\n@param \u003cI\u003e The type of the items to be processed.",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "run",
      "comment": "Processes the given item in background thread provided by a GThreadPool.",
      "javadoc": "Processes the given item in background thread provided by a GThreadPool.\n@param item the item to process.\n@param monitor a monitor that can be used to check for cancellation and to report progress and\n transient messages.",
      "static": false,
      "params": [
        {
          "name": "item",
          "type_long": "I",
          "type_short": "I",
          "comment": "the item to process."
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": "a monitor that can be used to check for cancellation and to report progress and\n transient messages."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.lang.Exception",
          "type_short": "Exception",
          "comment": ""
        }
      ]
    }
  ]
}
