{
  "name": "LSHCosineVectorAccum",
  "comment": "A cosine vector where we can accumulate the (feature,weight) pairs over time\n  using the addHash method.   Once either the getLength or compare methods is\n  called the vector becomes \"finalized\" and acts as an ordinary LSHCosineVector",
  "javadoc": "A cosine vector where we can accumulate the (feature,weight) pairs over time\n  using the addHash method.   Once either the getLength or compare methods is\n  called the vector becomes \"finalized\" and acts as an ordinary LSHCosineVector",
  "static": false,
  "implements": [],
  "extends": "generic.lsh.vector.LSHCosineVector",
  "fields": [
    {
      "name": "treehash",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.TreeSet\u003cgeneric.lsh.vector.LSHCosineVectorAccum.Entry\u003e",
      "type_short": "TreeSet",
      "constant_value": null
    },
    {
      "name": "finalized",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addHash",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "h",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "w",
          "type_long": "double",
          "type_short": "double",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "doFinalize",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLength",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "double",
        "type_short": "double",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "compare",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "op2",
          "type_long": "generic.lsh.vector.LSHVector",
          "type_short": "LSHVector",
          "comment": ""
        },
        {
          "name": "data",
          "type_long": "generic.lsh.vector.VectorCompare",
          "type_short": "VectorCompare",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "double",
        "type_short": "double",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "numEntries",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    }
  ]
}
