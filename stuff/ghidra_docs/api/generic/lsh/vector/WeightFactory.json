{
  "name": "WeightFactory",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "idfweight",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "double[]",
      "type_short": "double[]",
      "constant_value": null
    },
    {
      "name": "tfweight",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "double[]",
      "type_short": "double[]",
      "constant_value": null
    },
    {
      "name": "weightnorm",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "double",
      "type_short": "double",
      "constant_value": null
    },
    {
      "name": "probflip0",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "double",
      "type_short": "double",
      "constant_value": null
    },
    {
      "name": "probflip1",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "double",
      "type_short": "double",
      "constant_value": null
    },
    {
      "name": "probdiff0",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "double",
      "type_short": "double",
      "constant_value": null
    },
    {
      "name": "probdiff1",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "double",
      "type_short": "double",
      "constant_value": null
    },
    {
      "name": "scale",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "double",
      "type_short": "double",
      "constant_value": null
    },
    {
      "name": "addend",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "double",
      "type_short": "double",
      "constant_value": null
    },
    {
      "name": "probflip0_norm",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "double",
      "type_short": "double",
      "constant_value": null
    },
    {
      "name": "probflip1_norm",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "double",
      "type_short": "double",
      "constant_value": null
    },
    {
      "name": "probdiff0_norm",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "double",
      "type_short": "double",
      "constant_value": null
    },
    {
      "name": "probdiff1_norm",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "double",
      "type_short": "double",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "updateNorms",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getIDFSize",
      "comment": "",
      "javadoc": "@return number of weights in the IDF portion of the table",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "number of weights in the IDF portion of the table"
      },
      "throws": []
    },
    {
      "name": "getTFSize",
      "comment": "",
      "javadoc": "@return number of weights in the TF portion of the table",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "number of weights in the TF portion of the table"
      },
      "throws": []
    },
    {
      "name": "getSize",
      "comment": "",
      "javadoc": "@return number of floating-point entries needed to serialize the factory",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "number of floating-point entries needed to serialize the factory"
      },
      "throws": []
    },
    {
      "name": "getIDFWeight",
      "comment": "",
      "javadoc": "@param val\n@return the IDF weight at the given position",
      "static": false,
      "params": [
        {
          "name": "val",
          "type_long": "short",
          "type_short": "short",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "double",
        "type_short": "double",
        "comment": "the IDF weight at the given position"
      },
      "throws": []
    },
    {
      "name": "getTFWeight",
      "comment": "",
      "javadoc": "@param val is the term count (-1)\n@return the TF weight for the given count",
      "static": false,
      "params": [
        {
          "name": "val",
          "type_long": "short",
          "type_short": "short",
          "comment": "is the term count (-1)"
        }
      ],
      "return": {
        "type_long": "double",
        "type_short": "double",
        "comment": "the TF weight for the given count"
      },
      "throws": []
    },
    {
      "name": "getCoeff",
      "comment": "Given an IDF position and a TF count, build the feature coefficient",
      "javadoc": "Given an IDF position and a TF count, build the feature coefficient\n@param i is the IDF position\n@param t is the TF count\n@return the feature coefficient",
      "static": false,
      "params": [
        {
          "name": "i",
          "type_long": "short",
          "type_short": "short",
          "comment": "is the IDF position"
        },
        {
          "name": "t",
          "type_long": "short",
          "type_short": "short",
          "comment": "is the TF count"
        }
      ],
      "return": {
        "type_long": "double",
        "type_short": "double",
        "comment": "the feature coefficient"
      },
      "throws": []
    },
    {
      "name": "getWeightNorm",
      "comment": "",
      "javadoc": "@return the weight normalization factor",
      "static": false,
      "params": [],
      "return": {
        "type_long": "double",
        "type_short": "double",
        "comment": "the weight normalization factor"
      },
      "throws": []
    },
    {
      "name": "getFlipNorm0",
      "comment": "",
      "javadoc": "@return the first feature flip penalty parameter",
      "static": false,
      "params": [],
      "return": {
        "type_long": "double",
        "type_short": "double",
        "comment": "the first feature flip penalty parameter"
      },
      "throws": []
    },
    {
      "name": "getDiffNorm0",
      "comment": "",
      "javadoc": "@return the first feature drop penalty parameter",
      "static": false,
      "params": [],
      "return": {
        "type_long": "double",
        "type_short": "double",
        "comment": "the first feature drop penalty parameter"
      },
      "throws": []
    },
    {
      "name": "getFlipNorm1",
      "comment": "",
      "javadoc": "@return the second feature flip penalty parameter",
      "static": false,
      "params": [],
      "return": {
        "type_long": "double",
        "type_short": "double",
        "comment": "the second feature flip penalty parameter"
      },
      "throws": []
    },
    {
      "name": "getDiffNorm1",
      "comment": "",
      "javadoc": "@return the second feature drop penalty parameter",
      "static": false,
      "params": [],
      "return": {
        "type_long": "double",
        "type_short": "double",
        "comment": "the second feature drop penalty parameter"
      },
      "throws": []
    },
    {
      "name": "getScale",
      "comment": "",
      "javadoc": "@return the final score scaling factor",
      "static": false,
      "params": [],
      "return": {
        "type_long": "double",
        "type_short": "double",
        "comment": "the final score scaling factor"
      },
      "throws": []
    },
    {
      "name": "getAddend",
      "comment": "",
      "javadoc": "@return the final score addend",
      "static": false,
      "params": [],
      "return": {
        "type_long": "double",
        "type_short": "double",
        "comment": "the final score addend"
      },
      "throws": []
    },
    {
      "name": "setLogarithmicTFWeights",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "saveXml",
      "comment": "Serialize this object as XML to a Writer",
      "javadoc": "Serialize this object as XML to a Writer\n@param fwrite is the Writer\n@throws IOException",
      "static": false,
      "params": [
        {
          "name": "fwrite",
          "type_long": "java.io.Writer",
          "type_short": "Writer",
          "comment": "is the Writer"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "toArray",
      "comment": "Condense weight table down to array of doubles",
      "javadoc": "Condense weight table down to array of doubles\n@return array of doubles",
      "static": false,
      "params": [],
      "return": {
        "type_long": "double[]",
        "type_short": "double[]",
        "comment": "array of doubles"
      },
      "throws": []
    },
    {
      "name": "set",
      "comment": "Initialize the WeightTable from an array of doubles",
      "javadoc": "Initialize the WeightTable from an array of doubles\n@param weightArray",
      "static": false,
      "params": [
        {
          "name": "weightArray",
          "type_long": "double[]",
          "type_short": "double[]",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "restoreXml",
      "comment": "Build (deserialize) this object from an XML stream",
      "javadoc": "Build (deserialize) this object from an XML stream\n@param parser is the XML parser",
      "static": false,
      "params": [
        {
          "name": "parser",
          "type_long": "ghidra.xml.XmlPullParser",
          "type_short": "XmlPullParser",
          "comment": "is the XML parser"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
