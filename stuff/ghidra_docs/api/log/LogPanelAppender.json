{
  "name": "LogPanelAppender",
  "comment": "Log4j appender that writes messages to the log panel in the main Ghidra window. \n This is configured in the various log4j configuration files \n (generic.log4j.xml, generic.logjdev.xml, etc...).\n \n Note: This appender is created when the log4j configuration is processed and will \n start receiving log messages immediately. These messages will be dropped on the \n floor however, until an implementation of LogListener is instantiated and \n the #setLogListener(LogListener) method is invoked.",
  "javadoc": "Log4j appender that writes messages to the log panel in the main Ghidra window. \n This is configured in the various log4j configuration files \n (generic.log4j.xml, generic.logjdev.xml, etc...).\n \u003cp\u003e\n Note: This appender is created when the log4j configuration is processed and will \n start receiving log messages immediately. These messages will be dropped on the \n floor however, until an implementation of {@link LogListener} is instantiated and \n the {@link #setLogListener(LogListener)} method is invoked.",
  "static": false,
  "implements": [],
  "extends": "org.apache.logging.log4j.core.appender.AbstractAppender",
  "fields": [
    {
      "name": "logListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "log.LogListener",
      "type_short": "LogListener",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "filter",
          "type_long": "org.apache.logging.log4j.core.Filter",
          "type_short": "Filter",
          "comment": ""
        },
        {
          "name": "layout",
          "type_long": "org.apache.logging.log4j.core.Layout\u003c? extends java.io.Serializable\u003e",
          "type_short": "Layout",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "append",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "event",
          "type_long": "org.apache.logging.log4j.core.LogEvent",
          "type_short": "LogEvent",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createAppender",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "layout",
          "type_long": "org.apache.logging.log4j.core.Layout\u003c? extends java.io.Serializable\u003e",
          "type_short": "Layout",
          "comment": ""
        },
        {
          "name": "filter",
          "type_long": "org.apache.logging.log4j.core.Filter",
          "type_short": "Filter",
          "comment": ""
        },
        {
          "name": "otherAttribute",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "log.LogPanelAppender",
        "type_short": "LogPanelAppender",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setLogListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "log.LogListener",
          "type_short": "LogListener",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
