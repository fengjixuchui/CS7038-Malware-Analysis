{
  "name": "AttributedGraph",
  "comment": "Basic graph implementation for a directed graph whose vertices and edges support attributes.\n \n The graph can be configured as to how to handle multiple edges with the same source and destination\n vertices. One option is to simply allow multiple edges.  The second option is to collapse \n duplicate edges such that there is only ever one edge with the same\n source and destination.  In this case, each additional duplicate edge added will cause the\n edge to have a \"Weight\" attribute that will be the total number of edges that were added\n to the same source/destination vertex pair.",
  "javadoc": "Basic graph implementation for a directed graph whose vertices and edges support attributes.\n \u003cP\u003e\n The graph can be configured as to how to handle multiple edges with the same source and destination\n vertices. One option is to simply allow multiple edges.  The second option is to collapse \n duplicate edges such that there is only ever one edge with the same\n source and destination.  In this case, each additional duplicate edge added will cause the\n edge to have a \"Weight\" attribute that will be the total number of edges that were added\n to the same source/destination vertex pair.",
  "static": false,
  "implements": [],
  "extends": "org.jgrapht.graph.AbstractBaseGraph",
  "fields": [
    {
      "name": "WEIGHT",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Weight\""
    },
    {
      "name": "vertexMap",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.Map\u003cjava.lang.String,ghidra.service.graph.AttributedVertex\u003e",
      "type_short": "Map",
      "constant_value": null
    },
    {
      "name": "collapseDuplicateEdges",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "name",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "type",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.service.graph.GraphType",
      "type_short": "GraphType",
      "constant_value": null
    },
    {
      "name": "description",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Create a new empty AttributedGraph that automatically collapses duplicate edges",
      "javadoc": "Create a new empty AttributedGraph that automatically collapses duplicate edges\n@param name the name of the graph\n@param type the {@link GraphType} which defines valid vertex and edge types.",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of the graph"
        },
        {
          "name": "type",
          "type_long": "ghidra.service.graph.GraphType",
          "type_short": "GraphType",
          "comment": "the GraphType which defines valid vertex and edge types."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Create a new empty AttributedGraph that automatically collapses duplicate edges",
      "javadoc": "Create a new empty AttributedGraph that automatically collapses duplicate edges\n@param name the name of the graph\n@param type the {@link GraphType} which defines valid vertex and edge types.\n@param description a description of the graph",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of the graph"
        },
        {
          "name": "type",
          "type_long": "ghidra.service.graph.GraphType",
          "type_short": "GraphType",
          "comment": "the GraphType which defines valid vertex and edge types."
        },
        {
          "name": "description",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "a description of the graph"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Create a new empty AttributedGraph.",
      "javadoc": "Create a new empty AttributedGraph.\n@param name the name of the graph\n@param type the {@link GraphType} which defines valid vertex and edge types.\n@param description a description of the graph\n@param collapseDuplicateEdges if true, duplicate edges will be collapsed into a single\n edge with a \"Weight\" attribute whose value is the number of edges between those vertices.",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of the graph"
        },
        {
          "name": "type",
          "type_long": "ghidra.service.graph.GraphType",
          "type_short": "GraphType",
          "comment": "the GraphType which defines valid vertex and edge types."
        },
        {
          "name": "description",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "a description of the graph"
        },
        {
          "name": "collapseDuplicateEdges",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "if true, duplicate edges will be collapsed into a single\n edge with a \"Weight\" attribute whose value is the number of edges between those vertices."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getName",
      "comment": "Returns the name of the graph",
      "javadoc": "Returns the name of the graph\n@return the name of the graph",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the name of the graph"
      },
      "throws": []
    },
    {
      "name": "getDescription",
      "comment": "Returns a description of the graph",
      "javadoc": "Returns a description of the graph\n@return a description of the graph",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "a description of the graph"
      },
      "throws": []
    },
    {
      "name": "getGraphType",
      "comment": "Returns the GraphType for this graph",
      "javadoc": "Returns the {@link GraphType} for this graph\n@return the {@link GraphType} for this graph",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.service.graph.GraphType",
        "type_short": "GraphType",
        "comment": "the GraphType for this graph"
      },
      "throws": []
    },
    {
      "name": "addVertex",
      "comment": "Adds a new vertex with the given id.  The vertex\u0027s name will be the same as the id.\n If a vertex already exists with that id,\n then that vertex will be returned.",
      "javadoc": "Adds a new vertex with the given id.  The vertex\u0027s name will be the same as the id.\n If a vertex already exists with that id,\n then that vertex will be returned.\n@param id the unique vertex id that the graph should have a vertex for.\n@return either an existing vertex with that id, or a newly added vertex with that id",
      "static": false,
      "params": [
        {
          "name": "id",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the unique vertex id that the graph should have a vertex for."
        }
      ],
      "return": {
        "type_long": "ghidra.service.graph.AttributedVertex",
        "type_short": "AttributedVertex",
        "comment": "either an existing vertex with that id, or a newly added vertex with that id"
      },
      "throws": []
    },
    {
      "name": "addVertex",
      "comment": "Adds a new vertex with the given id and name.  If a vertex already exists with that id,\n then that vertex will be returned, but with its name changed to the given name.",
      "javadoc": "Adds a new vertex with the given id and name.  If a vertex already exists with that id,\n then that vertex will be returned, but with its name changed to the given name.\n@param id the unique vertex id that the graph should have a vertex for.\n@param name the name to associate with this vertex\n@return either an existing vertex with that id, or a newly added vertex with that id",
      "static": false,
      "params": [
        {
          "name": "id",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the unique vertex id that the graph should have a vertex for."
        },
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name to associate with this vertex"
        }
      ],
      "return": {
        "type_long": "ghidra.service.graph.AttributedVertex",
        "type_short": "AttributedVertex",
        "comment": "either an existing vertex with that id, or a newly added vertex with that id"
      },
      "throws": []
    },
    {
      "name": "addVertex",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.service.graph.AttributedVertex",
        "type_short": "AttributedVertex",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addVertex",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "vertex",
          "type_long": "ghidra.service.graph.AttributedVertex",
          "type_short": "AttributedVertex",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addEdge",
      "comment": "Creates and adds a new directed edge with the given id between the given source and\n target vertices. If the graph is set to collapse duplicate edges and an edge for that\n source and target exists, then the existing edge will be return with its \"Weight\" attribute\n set to the total number of edges that have been added between the source and target vertices.",
      "javadoc": "Creates and adds a new directed edge with the given id between the given source and\n target vertices. If the graph is set to collapse duplicate edges and an edge for that\n source and target exists, then the existing edge will be return with its \"Weight\" attribute\n set to the total number of edges that have been added between the source and target vertices.\n@param source the source vertex of the directed edge to be created.\n@param target the target vertex of the directed edge to be created.\n@param edgeId the id to use for the new edge.  Note: if this is a duplicate and edges\n are being collapsed, then this edgeId will not be used.\n@return a new edge between the source and target if it is the first one or the graph is\n not collapsing edges.  Otherwise, an existing edge with its \"Weight\" attribute set accordingly.",
      "static": false,
      "params": [
        {
          "name": "source",
          "type_long": "ghidra.service.graph.AttributedVertex",
          "type_short": "AttributedVertex",
          "comment": "the source vertex of the directed edge to be created."
        },
        {
          "name": "target",
          "type_long": "ghidra.service.graph.AttributedVertex",
          "type_short": "AttributedVertex",
          "comment": "the target vertex of the directed edge to be created."
        },
        {
          "name": "edgeId",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the id to use for the new edge.  Note: if this is a duplicate and edges\n are being collapsed, then this edgeId will not be used."
        }
      ],
      "return": {
        "type_long": "ghidra.service.graph.AttributedEdge",
        "type_short": "AttributedEdge",
        "comment": "a new edge between the source and target if it is the first one or the graph is\n not collapsing edges.  Otherwise, an existing edge with its \"Weight\" attribute set accordingly."
      },
      "throws": []
    },
    {
      "name": "addEdge",
      "comment": "Creates and adds a new directed edge with the given edge object. If the graph is set to\n collapse duplicate edges and an edge for that\n source and target exists, then the existing edge will be return with its \"Weight\" attribute\n set to the total number of edges that have been added between the source and target vertices.",
      "javadoc": "Creates and adds a new directed edge with the given edge object. If the graph is set to\n collapse duplicate edges and an edge for that\n source and target exists, then the existing edge will be return with its \"Weight\" attribute\n set to the total number of edges that have been added between the source and target vertices.\n@param source the source vertex of the directed edge to be created.\n@param target the target vertex of the directed edge to be created.\n@param edge the BasicEdge object to use for the new edge.  Note: if this is a duplicate and\n edges are being collapsed, then this edge object will not be used.\n@return true if the edge was added. Note that if this graph is collapsing duplicate edges, then\n it will always return true.",
      "static": false,
      "params": [
        {
          "name": "source",
          "type_long": "ghidra.service.graph.AttributedVertex",
          "type_short": "AttributedVertex",
          "comment": "the source vertex of the directed edge to be created."
        },
        {
          "name": "target",
          "type_long": "ghidra.service.graph.AttributedVertex",
          "type_short": "AttributedVertex",
          "comment": "the target vertex of the directed edge to be created."
        },
        {
          "name": "edge",
          "type_long": "ghidra.service.graph.AttributedEdge",
          "type_short": "AttributedEdge",
          "comment": "the BasicEdge object to use for the new edge.  Note: if this is a duplicate and\n edges are being collapsed, then this edge object will not be used."
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the edge was added. Note that if this graph is collapsing duplicate edges, then\n it will always return true."
      },
      "throws": []
    },
    {
      "name": "addEdge",
      "comment": "Creates and adds a new directed edge between the given source and\n target vertices. If the graph is set to collapse duplicate edges and an edge for that\n source and target exists, then the existing edge will be return with its \"Weight\" attribute\n set to the total number of edges that have been added between the source and target vertices.",
      "javadoc": "Creates and adds a new directed edge between the given source and\n target vertices. If the graph is set to collapse duplicate edges and an edge for that\n source and target exists, then the existing edge will be return with its \"Weight\" attribute\n set to the total number of edges that have been added between the source and target vertices.\n@param source the source vertex of the directed edge to be created.\n@param target the target vertex of the directed edge to be created.\n@return a new edge between the source and target if it is the first one or the graph is\n not collapsing edges.  Otherwise, an existing edge with its \"Weight\" attribute set accordingly.",
      "static": false,
      "params": [
        {
          "name": "source",
          "type_long": "ghidra.service.graph.AttributedVertex",
          "type_short": "AttributedVertex",
          "comment": "the source vertex of the directed edge to be created."
        },
        {
          "name": "target",
          "type_long": "ghidra.service.graph.AttributedVertex",
          "type_short": "AttributedVertex",
          "comment": "the target vertex of the directed edge to be created."
        }
      ],
      "return": {
        "type_long": "ghidra.service.graph.AttributedEdge",
        "type_short": "AttributedEdge",
        "comment": "a new edge between the source and target if it is the first one or the graph is\n not collapsing edges.  Otherwise, an existing edge with its \"Weight\" attribute set accordingly."
      },
      "throws": []
    },
    {
      "name": "getEdgeCount",
      "comment": "Returns the total number of edges in the graph",
      "javadoc": "Returns the total number of edges in the graph\n@return the total number of edges in the graph",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the total number of edges in the graph"
      },
      "throws": []
    },
    {
      "name": "getVertexCount",
      "comment": "Returns the total number of vertices in the graph",
      "javadoc": "Returns the total number of vertices in the graph\n@return the total number of vertices in the graph",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the total number of vertices in the graph"
      },
      "throws": []
    },
    {
      "name": "getVertex",
      "comment": "Returns the vertex with the given vertex id",
      "javadoc": "Returns the vertex with the given vertex id\n@param vertexId the id of the vertex to retrieve\n@return the vertex with the given vertex id or null if none found",
      "static": false,
      "params": [
        {
          "name": "vertexId",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the id of the vertex to retrieve"
        }
      ],
      "return": {
        "type_long": "ghidra.service.graph.AttributedVertex",
        "type_short": "AttributedVertex",
        "comment": "the vertex with the given vertex id or null if none found"
      },
      "throws": []
    },
    {
      "name": "ensureInGraph",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "vertex",
          "type_long": "ghidra.service.graph.AttributedVertex",
          "type_short": "AttributedVertex",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "incrementWeightProperty",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "edge",
          "type_long": "ghidra.service.graph.AttributedEdge",
          "type_short": "AttributedEdge",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "incrementWeightStringValue",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "value",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    }
  ]
}
