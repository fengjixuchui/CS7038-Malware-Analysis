{
  "name": "GraphDisplayOptionsBuilder",
  "comment": "Builder for building GraphDisplayOptions",
  "javadoc": "Builder for building {@link GraphDisplayOptions}",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "displayOptions",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.service.graph.GraphDisplayOptions",
      "type_short": "GraphDisplayOptions",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Create a new GraphDisplayOptionsBuilder",
      "javadoc": "Create a new GraphDisplayOptionsBuilder\n@param graphType the {@link GraphType} of graphs that this instance configures.",
      "static": false,
      "params": [
        {
          "name": "graphType",
          "type_long": "ghidra.service.graph.GraphType",
          "type_short": "GraphType",
          "comment": "the GraphType of graphs that this instance configures."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "defaultVertexColor",
      "comment": "Sets the default vertex color for vertexes that don\u0027t have a registered vertex type",
      "javadoc": "Sets the default vertex color for vertexes that don\u0027t have a registered vertex type\n@param c the default vertex color\n@return this GraphDisplayOptionsBuilder",
      "static": false,
      "params": [
        {
          "name": "c",
          "type_long": "java.awt.Color",
          "type_short": "Color",
          "comment": "the default vertex color"
        }
      ],
      "return": {
        "type_long": "ghidra.service.graph.GraphDisplayOptionsBuilder",
        "type_short": "GraphDisplayOptionsBuilder",
        "comment": "this GraphDisplayOptionsBuilder"
      },
      "throws": []
    },
    {
      "name": "defaultEdgeColor",
      "comment": "Sets the default edge color for edges that don\u0027t have a registered edge type",
      "javadoc": "Sets the default edge color for edges that don\u0027t have a registered edge type\n@param c the default edge color\n@return this GraphDisplayOptionsBuilder",
      "static": false,
      "params": [
        {
          "name": "c",
          "type_long": "java.awt.Color",
          "type_short": "Color",
          "comment": "the default edge color"
        }
      ],
      "return": {
        "type_long": "ghidra.service.graph.GraphDisplayOptionsBuilder",
        "type_short": "GraphDisplayOptionsBuilder",
        "comment": "this GraphDisplayOptionsBuilder"
      },
      "throws": []
    },
    {
      "name": "vertexSelectionColor",
      "comment": "Sets the vertex selection color",
      "javadoc": "Sets the vertex selection color\n@param color the vertex selection color\n@return this GraphDisplayOptionsBuilder",
      "static": false,
      "params": [
        {
          "name": "color",
          "type_long": "java.awt.Color",
          "type_short": "Color",
          "comment": "the vertex selection color"
        }
      ],
      "return": {
        "type_long": "ghidra.service.graph.GraphDisplayOptionsBuilder",
        "type_short": "GraphDisplayOptionsBuilder",
        "comment": "this GraphDisplayOptionsBuilder"
      },
      "throws": []
    },
    {
      "name": "edgeSelectionColor",
      "comment": "Sets the edge selection color",
      "javadoc": "Sets the edge selection color\n@param color the edge selection color\n@return this GraphDisplayOptionsBuilder",
      "static": false,
      "params": [
        {
          "name": "color",
          "type_long": "java.awt.Color",
          "type_short": "Color",
          "comment": "the edge selection color"
        }
      ],
      "return": {
        "type_long": "ghidra.service.graph.GraphDisplayOptionsBuilder",
        "type_short": "GraphDisplayOptionsBuilder",
        "comment": "this GraphDisplayOptionsBuilder"
      },
      "throws": []
    },
    {
      "name": "defaultVertexShape",
      "comment": "Sets the default vertex shape for vertices that don\u0027t have a registered vertex type",
      "javadoc": "Sets the default vertex shape for vertices that don\u0027t have a registered vertex type\n@param vertexShape the {@link VertexShape} to use as a default\n@return this GraphDisplayOptionsBuilder",
      "static": false,
      "params": [
        {
          "name": "vertexShape",
          "type_long": "ghidra.service.graph.VertexShape",
          "type_short": "VertexShape",
          "comment": "the VertexShape to use as a default"
        }
      ],
      "return": {
        "type_long": "ghidra.service.graph.GraphDisplayOptionsBuilder",
        "type_short": "GraphDisplayOptionsBuilder",
        "comment": "this GraphDisplayOptionsBuilder"
      },
      "throws": []
    },
    {
      "name": "vertex",
      "comment": "Sets the shape and color for vertices of the given type",
      "javadoc": "Sets the shape and color for vertices of the given type\n@param vertexType the vertex type to assign shape and color\n@param vertexShape the shape to use for the named vertex type\n@param color the color to use for the named vertex type\n@return this GraphDisplayOptionsBuilder",
      "static": false,
      "params": [
        {
          "name": "vertexType",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the vertex type to assign shape and color"
        },
        {
          "name": "vertexShape",
          "type_long": "ghidra.service.graph.VertexShape",
          "type_short": "VertexShape",
          "comment": "the shape to use for the named vertex type"
        },
        {
          "name": "color",
          "type_long": "java.awt.Color",
          "type_short": "Color",
          "comment": "the color to use for the named vertex type"
        }
      ],
      "return": {
        "type_long": "ghidra.service.graph.GraphDisplayOptionsBuilder",
        "type_short": "GraphDisplayOptionsBuilder",
        "comment": "this GraphDisplayOptionsBuilder"
      },
      "throws": []
    },
    {
      "name": "edge",
      "comment": "Sets the color for edges of the given type",
      "javadoc": "Sets the color for edges of the given type\n@param edgeType the edge type to assign color\n@param color the color to use for the named edge type\n@return this GraphDisplayOptionsBuilder",
      "static": false,
      "params": [
        {
          "name": "edgeType",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the edge type to assign color"
        },
        {
          "name": "color",
          "type_long": "java.awt.Color",
          "type_short": "Color",
          "comment": "the color to use for the named edge type"
        }
      ],
      "return": {
        "type_long": "ghidra.service.graph.GraphDisplayOptionsBuilder",
        "type_short": "GraphDisplayOptionsBuilder",
        "comment": "this GraphDisplayOptionsBuilder"
      },
      "throws": []
    },
    {
      "name": "vertexColorOverrideAttribute",
      "comment": "Sets the attribute used to override the color for a vertex",
      "javadoc": "Sets the attribute used to override the color for a vertex\n@param colorAttributeKey the attribute key to use for overriding a vertex color\n@return this GraphDisplayOptionsBuilder",
      "static": false,
      "params": [
        {
          "name": "colorAttributeKey",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the attribute key to use for overriding a vertex color"
        }
      ],
      "return": {
        "type_long": "ghidra.service.graph.GraphDisplayOptionsBuilder",
        "type_short": "GraphDisplayOptionsBuilder",
        "comment": "this GraphDisplayOptionsBuilder"
      },
      "throws": []
    },
    {
      "name": "edgeColorOverrideAttribute",
      "comment": "Sets the attribute used to override the color for a edge",
      "javadoc": "Sets the attribute used to override the color for a edge\n@param colorAttributeKey the attribute key to use for overriding an edge color\n@return this GraphDisplayOptionsBuilder",
      "static": false,
      "params": [
        {
          "name": "colorAttributeKey",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the attribute key to use for overriding an edge color"
        }
      ],
      "return": {
        "type_long": "ghidra.service.graph.GraphDisplayOptionsBuilder",
        "type_short": "GraphDisplayOptionsBuilder",
        "comment": "this GraphDisplayOptionsBuilder"
      },
      "throws": []
    },
    {
      "name": "shapeOverrideAttribute",
      "comment": "Sets the attribute used to override the shape for a vertex",
      "javadoc": "Sets the attribute used to override the shape for a vertex\n@param shapeAttributeKey the attribute key to use of shape override\n@return this GraphDisplayOptionsBuilder",
      "static": false,
      "params": [
        {
          "name": "shapeAttributeKey",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the attribute key to use of shape override"
        }
      ],
      "return": {
        "type_long": "ghidra.service.graph.GraphDisplayOptionsBuilder",
        "type_short": "GraphDisplayOptionsBuilder",
        "comment": "this GraphDisplayOptionsBuilder"
      },
      "throws": []
    },
    {
      "name": "defaultLayoutAlgorithm",
      "comment": "Sets the name of the layout algorithm that will be used to initially layout the graph",
      "javadoc": "Sets the name of the layout algorithm that will be used to initially layout the graph\n@param string the name of the layout algoritm to use to initially layout the graph\n@return this GraphDisplayOptionsBuilder",
      "static": false,
      "params": [
        {
          "name": "string",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of the layout algoritm to use to initially layout the graph"
        }
      ],
      "return": {
        "type_long": "ghidra.service.graph.GraphDisplayOptionsBuilder",
        "type_short": "GraphDisplayOptionsBuilder",
        "comment": "this GraphDisplayOptionsBuilder"
      },
      "throws": []
    },
    {
      "name": "useIcons",
      "comment": "Sets drawing \"mode\" for the graph display. If true, vertices are drawn as scaled\n cached images with the label inside the shapes. If false, vertices are drawn as smaller\n shapes with labels drawn near the shapes.",
      "javadoc": "Sets drawing \"mode\" for the graph display. If true, vertices are drawn as scaled\n cached images with the label inside the shapes. If false, vertices are drawn as smaller\n shapes with labels drawn near the shapes.\n@param b true to use pre-rendered icon images\n@return this GraphDisplayOptionsBuilder",
      "static": false,
      "params": [
        {
          "name": "b",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true to use pre-rendered icon images"
        }
      ],
      "return": {
        "type_long": "ghidra.service.graph.GraphDisplayOptionsBuilder",
        "type_short": "GraphDisplayOptionsBuilder",
        "comment": "this GraphDisplayOptionsBuilder"
      },
      "throws": []
    },
    {
      "name": "arrowLength",
      "comment": "Sets the length of the arrows to display in the graph. The width will be sized proportionately.",
      "javadoc": "Sets the length of the arrows to display in the graph. The width will be sized proportionately.\n@param length the length the arrows to display in the graph\n@return this GraphDisplayOptionsBuilder",
      "static": false,
      "params": [
        {
          "name": "length",
          "type_long": "int",
          "type_short": "int",
          "comment": "the length the arrows to display in the graph"
        }
      ],
      "return": {
        "type_long": "ghidra.service.graph.GraphDisplayOptionsBuilder",
        "type_short": "GraphDisplayOptionsBuilder",
        "comment": "this GraphDisplayOptionsBuilder"
      },
      "throws": []
    },
    {
      "name": "maxNodeCount",
      "comment": "Sets the maximum number of nodes a graph can have and still be displayed.",
      "javadoc": "Sets the maximum number of nodes a graph can have and still be displayed.\n@param maxNodeCount the maximum number of nodes\n@return this GraphDisplayOptionsBuilder",
      "static": false,
      "params": [
        {
          "name": "maxNodeCount",
          "type_long": "int",
          "type_short": "int",
          "comment": "the maximum number of nodes"
        }
      ],
      "return": {
        "type_long": "ghidra.service.graph.GraphDisplayOptionsBuilder",
        "type_short": "GraphDisplayOptionsBuilder",
        "comment": "this GraphDisplayOptionsBuilder"
      },
      "throws": []
    },
    {
      "name": "labelPosition",
      "comment": "Sets the vertex label position relative to vertex shape. This is only applicable if the\n #useIcons(boolean) is set to false.",
      "javadoc": "Sets the vertex label position relative to vertex shape. This is only applicable if the\n {@link #useIcons(boolean)} is set to false.\n@param labelPosition the relative position to place the vertex label\n@return this GraphDisplayOptionsBuilder",
      "static": false,
      "params": [
        {
          "name": "labelPosition",
          "type_long": "ghidra.service.graph.GraphLabelPosition",
          "type_short": "GraphLabelPosition",
          "comment": "the relative position to place the vertex label"
        }
      ],
      "return": {
        "type_long": "ghidra.service.graph.GraphDisplayOptionsBuilder",
        "type_short": "GraphDisplayOptionsBuilder",
        "comment": "this GraphDisplayOptionsBuilder"
      },
      "throws": []
    },
    {
      "name": "build",
      "comment": "Returns a GraphTypeDisplayOptions as configured by this builder",
      "javadoc": "Returns a GraphTypeDisplayOptions as configured by this builder\n@return a GraphTypeDisplayOptions as configured by this builder",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.service.graph.GraphDisplayOptions",
        "type_short": "GraphDisplayOptions",
        "comment": "a GraphTypeDisplayOptions as configured by this builder"
      },
      "throws": []
    }
  ]
}
