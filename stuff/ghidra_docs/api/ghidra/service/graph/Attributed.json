{
  "name": "Attributed",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "DESCRIPTION",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Description\""
    },
    {
      "name": "attributes",
      "comment": "the HashMap to contain attribute mappings",
      "javadoc": "the {@link HashMap} to contain attribute mappings",
      "static": false,
      "type_long": "java.util.Map\u003cjava.lang.String,java.lang.String\u003e",
      "type_short": "Map",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getAttributes",
      "comment": "Returns an unmodifiable view of the attribute map",
      "javadoc": "Returns an unmodifiable view of the attribute map\n@return an unmodifiable view of the attribute map",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Map\u003cjava.lang.String,java.lang.String\u003e",
        "type_short": "Map",
        "comment": "an unmodifiable view of the attribute map"
      },
      "throws": []
    },
    {
      "name": "setAttribute",
      "comment": "Sets the attribute with the given key and value",
      "javadoc": "Sets the attribute with the given key and value\n@param key attribute key\n@param value attribute value\n@return the previous value of the attribute",
      "static": false,
      "params": [
        {
          "name": "key",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "attribute key"
        },
        {
          "name": "value",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "attribute value"
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the previous value of the attribute"
      },
      "throws": []
    },
    {
      "name": "getAttribute",
      "comment": "gets the value of the given attribute name",
      "javadoc": "gets the value of the given attribute name\n@param key attribute name\n@return the mapped value for the supplied key",
      "static": false,
      "params": [
        {
          "name": "key",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "attribute name"
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the mapped value for the supplied key"
      },
      "throws": []
    },
    {
      "name": "removeAttribute",
      "comment": "Removes the attribute with the given key",
      "javadoc": "Removes the attribute with the given key\n@param key attribute key\n@return the value of the removed attribute",
      "static": false,
      "params": [
        {
          "name": "key",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "attribute key"
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the value of the removed attribute"
      },
      "throws": []
    },
    {
      "name": "hasAttribute",
      "comment": "Returns true if there is an attribute with that name",
      "javadoc": "Returns true if there is an attribute with that name\n@param key attribute key\n@return true if there is an attribute with that name",
      "static": false,
      "params": [
        {
          "name": "key",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "attribute key"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if there is an attribute with that name"
      },
      "throws": []
    },
    {
      "name": "size",
      "comment": "Returns the number of attributes defined",
      "javadoc": "Returns the number of attributes defined\n@return the number of attributes defined",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the number of attributes defined"
      },
      "throws": []
    },
    {
      "name": "isEmpty",
      "comment": "Return true if there are no attributes",
      "javadoc": "Return true if there are no attributes\n@return true if there are no mapped attributes",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if there are no mapped attributes"
      },
      "throws": []
    },
    {
      "name": "putAttributes",
      "comment": "Adds all the key/value pairs from the given map as attributes",
      "javadoc": "Adds all the key/value pairs from the given map as attributes\n@param map a map of key/values to add as attributes",
      "static": false,
      "params": [
        {
          "name": "map",
          "type_long": "java.util.Map\u003cjava.lang.String,java.lang.String\u003e",
          "type_short": "Map",
          "comment": "a map of key/values to add as attributes"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "clear",
      "comment": "removes all key/value mappings",
      "javadoc": "removes all key/value mappings",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "keys",
      "comment": "Returns the keys for the attributes",
      "javadoc": "Returns the keys for the attributes\n@return the keys for the attributes",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Set\u003cjava.lang.String\u003e",
        "type_short": "Set",
        "comment": "the keys for the attributes"
      },
      "throws": []
    },
    {
      "name": "values",
      "comment": "Returns the attribute values",
      "javadoc": "Returns the attribute values\n@return the attribute values",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Collection\u003cjava.lang.String\u003e",
        "type_short": "Collection",
        "comment": "the attribute values"
      },
      "throws": []
    },
    {
      "name": "entrySet",
      "comment": "Returns a Set containing the key/value entry associations",
      "javadoc": "Returns a {@link Set} containing the key/value entry associations\n@return a {@link Set} containing the key/value entry associations",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Set\u003cjava.util.Map.Entry\u003cjava.lang.String,java.lang.String\u003e\u003e",
        "type_short": "Set",
        "comment": "a Set containing the key/value entry associations"
      },
      "throws": []
    },
    {
      "name": "setDescription",
      "comment": "Sets a description for this Attributed object",
      "javadoc": "Sets a description for this Attributed object\n@param value text that provides a description for this Attributed object. \n The text can be either a plain string or an HTML string.\n@return the previously set description",
      "static": false,
      "params": [
        {
          "name": "value",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "text that provides a description for this Attributed object. \n The text can be either a plain string or an HTML string."
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the previously set description"
      },
      "throws": []
    },
    {
      "name": "getDescription",
      "comment": "gets the description of this Attributed object.",
      "javadoc": "gets the description of this Attributed object.\n@return the description of this Attributed object.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the description of this Attributed object."
      },
      "throws": []
    }
  ]
}
