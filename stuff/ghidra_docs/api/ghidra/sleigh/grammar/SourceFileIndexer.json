{
  "name": "SourceFileIndexer",
  "comment": "This class is used to index source files in a SLEIGH language module.\n The SLEIGH compiler records the index of the source file for a constructor rather\n than the file name.  This is an optimization to avoid repeating the file name in\n the .sla files.",
  "javadoc": "This class is used to index source files in a SLEIGH language module.\n The SLEIGH compiler records the index of the source file for a constructor rather\n than the file name.  This is an optimization to avoid repeating the file name in\n the .sla files.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "filenameToIndex",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "com.google.common.collect.BiMap\u003cjava.lang.String,java.lang.Integer\u003e",
      "type_short": "BiMap",
      "constant_value": null
    },
    {
      "name": "leastUnusedIndex",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Creates a {code SourceFileIndexer} object with an empty index.",
      "javadoc": "Creates a {code SourceFileIndexer} object with an empty index.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "index",
      "comment": "Adds the filename of a location to the index if it is not already present.",
      "javadoc": "Adds the filename of a location to the index if it is not already present.\n@param loc location containing filename to add\n@return index associated with filename, or {@code null} if a {@code null} {@link Location}\n or a {@link Location} with a {@code null} filename was provided as input.",
      "static": false,
      "params": [
        {
          "name": "loc",
          "type_long": "ghidra.sleigh.grammar.Location",
          "type_short": "Location",
          "comment": "location containing filename to add"
        }
      ],
      "return": {
        "type_long": "java.lang.Integer",
        "type_short": "Integer",
        "comment": "index associated with filename, or  if a  Location\n or a Location with a  filename was provided as input."
      },
      "throws": []
    },
    {
      "name": "getIndex",
      "comment": "Returns the index for a filename",
      "javadoc": "Returns the index for a filename\n@param filename file\n@return index or {@code null} if {@code filename} is not in the index.",
      "static": false,
      "params": [
        {
          "name": "filename",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "file"
        }
      ],
      "return": {
        "type_long": "java.lang.Integer",
        "type_short": "Integer",
        "comment": "index or  if  is not in the index."
      },
      "throws": []
    },
    {
      "name": "getFileName",
      "comment": "Returns the file name at a given index",
      "javadoc": "Returns the file name at a given index\n@param index index\n@return file name or {@code null} if there is no file with that index",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "java.lang.Integer",
          "type_short": "Integer",
          "comment": "index"
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "file name or  if there is no file with that index"
      },
      "throws": []
    },
    {
      "name": "saveXml",
      "comment": "Save the index as XML",
      "javadoc": "Save the index as XML\n@param s stream to write to",
      "static": false,
      "params": [
        {
          "name": "s",
          "type_long": "java.io.PrintStream",
          "type_short": "PrintStream",
          "comment": "stream to write to"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "restoreXml",
      "comment": "Restore an index saved as to XML",
      "javadoc": "Restore an index saved as to XML\n@param parser xml parser",
      "static": false,
      "params": [
        {
          "name": "parser",
          "type_long": "ghidra.xml.XmlPullParser",
          "type_short": "XmlPullParser",
          "comment": "xml parser"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
