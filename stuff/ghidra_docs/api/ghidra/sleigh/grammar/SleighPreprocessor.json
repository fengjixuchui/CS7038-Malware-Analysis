{
  "name": "SleighPreprocessor",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [
    "ghidra.sleigh.grammar.ExpressionEnvironment"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "log",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "org.apache.logging.log4j.Logger",
      "type_short": "Logger",
      "constant_value": null
    },
    {
      "name": "INCLUDE",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.util.regex.Pattern",
      "type_short": "Pattern",
      "constant_value": null
    },
    {
      "name": "DEFINE1",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.util.regex.Pattern",
      "type_short": "Pattern",
      "constant_value": null
    },
    {
      "name": "DEFINE2",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.util.regex.Pattern",
      "type_short": "Pattern",
      "constant_value": null
    },
    {
      "name": "DEFINE3",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.util.regex.Pattern",
      "type_short": "Pattern",
      "constant_value": null
    },
    {
      "name": "UNDEF",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.util.regex.Pattern",
      "type_short": "Pattern",
      "constant_value": null
    },
    {
      "name": "IFDEF",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.util.regex.Pattern",
      "type_short": "Pattern",
      "constant_value": null
    },
    {
      "name": "IFNDEF",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.util.regex.Pattern",
      "type_short": "Pattern",
      "constant_value": null
    },
    {
      "name": "IF",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.util.regex.Pattern",
      "type_short": "Pattern",
      "constant_value": null
    },
    {
      "name": "ELIF",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.util.regex.Pattern",
      "type_short": "Pattern",
      "constant_value": null
    },
    {
      "name": "ENDIF",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.util.regex.Pattern",
      "type_short": "Pattern",
      "constant_value": null
    },
    {
      "name": "ELSE",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.util.regex.Pattern",
      "type_short": "Pattern",
      "constant_value": null
    },
    {
      "name": "definitions",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.pcodeCPort.slgh_compile.PreprocessorDefinitions",
      "type_short": "PreprocessorDefinitions",
      "constant_value": null
    },
    {
      "name": "compatible",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "lexer",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.sleigh.grammar.BooleanExpressionLexer",
      "type_short": "BooleanExpressionLexer",
      "constant_value": null
    },
    {
      "name": "parser",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.sleigh.grammar.BooleanExpressionParser",
      "type_short": "BooleanExpressionParser",
      "constant_value": null
    },
    {
      "name": "ifstack",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.ArrayList\u003cghidra.sleigh.grammar.ConditionalHelper\u003e",
      "type_short": "ArrayList",
      "constant_value": null
    },
    {
      "name": "myParent",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.sleigh.grammar.SleighPreprocessor",
      "type_short": "SleighPreprocessor",
      "constant_value": null
    },
    {
      "name": "myLatestTimestamp",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "errorCount",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "file",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.io.File",
      "type_short": "File",
      "constant_value": null
    },
    {
      "name": "line",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "lineno",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "overallLineno",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "EXPANSION",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.util.regex.Pattern",
      "type_short": "Pattern",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "definitions",
          "type_long": "ghidra.pcodeCPort.slgh_compile.PreprocessorDefinitions",
          "type_short": "PreprocessorDefinitions",
          "comment": ""
        },
        {
          "name": "inputFile",
          "type_long": "java.io.File",
          "type_short": "File",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "parent",
          "type_long": "ghidra.sleigh.grammar.SleighPreprocessor",
          "type_short": "SleighPreprocessor",
          "comment": ""
        },
        {
          "name": "inputFile",
          "type_long": "java.io.File",
          "type_short": "File",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "process",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "writer",
          "type_long": "ghidra.sleigh.grammar.LineArrayListWriter",
          "type_short": "LineArrayListWriter",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        },
        {
          "type_long": "ghidra.sleigh.grammar.PreprocessorException",
          "type_short": "PreprocessorException",
          "comment": ""
        },
        {
          "type_long": "org.antlr.runtime.RecognitionException",
          "type_short": "RecognitionException",
          "comment": ""
        }
      ]
    },
    {
      "name": "scanForTimestamp",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        },
        {
          "type_long": "ghidra.sleigh.grammar.PreprocessorException",
          "type_short": "PreprocessorException",
          "comment": ""
        },
        {
          "type_long": "org.antlr.runtime.RecognitionException",
          "type_short": "RecognitionException",
          "comment": ""
        }
      ]
    },
    {
      "name": "setCompatible",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "compatible",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isCompatible",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "processInternal",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "writer",
          "type_long": "ghidra.sleigh.grammar.LineArrayListWriter",
          "type_short": "LineArrayListWriter",
          "comment": ""
        },
        {
          "name": "overallLine",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        },
        {
          "type_long": "ghidra.sleigh.grammar.PreprocessorException",
          "type_short": "PreprocessorException",
          "comment": ""
        },
        {
          "type_long": "org.antlr.runtime.RecognitionException",
          "type_short": "RecognitionException",
          "comment": ""
        }
      ]
    },
    {
      "name": "updateLatestDate",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "possibleNewDateFile",
          "type_long": "java.io.File",
          "type_short": "File",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "lineno",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "outputPosition",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "out",
          "type_long": "ghidra.sleigh.grammar.LineArrayListWriter",
          "type_short": "LineArrayListWriter",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "handleExpression",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "expression",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "org.antlr.runtime.RecognitionException",
          "type_short": "RecognitionException",
          "comment": ""
        },
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "initParser",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "reader",
          "type_long": "java.io.Reader",
          "type_short": "Reader",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "enterelse",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.sleigh.grammar.PreprocessorException",
          "type_short": "PreprocessorException",
          "comment": ""
        }
      ]
    },
    {
      "name": "enterelif",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.sleigh.grammar.PreprocessorException",
          "type_short": "PreprocessorException",
          "comment": ""
        }
      ]
    },
    {
      "name": "enterif",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "leaveif",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.sleigh.grammar.PreprocessorException",
          "type_short": "PreprocessorException",
          "comment": ""
        }
      ]
    },
    {
      "name": "undefine",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "key",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "define",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "key",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "value",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "handleVariables",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "input",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "beCompatible",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.sleigh.grammar.PreprocessorException",
          "type_short": "PreprocessorException",
          "comment": ""
        }
      ]
    },
    {
      "name": "equals",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "lhs",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "rhs",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "lookup",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "variable",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "reportError",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "msg",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "push",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "conditionalHelper",
          "type_long": "ghidra.sleigh.grammar.ConditionalHelper",
          "type_short": "ConditionalHelper",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "pop",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "top",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.sleigh.grammar.ConditionalHelper",
        "type_short": "ConditionalHelper",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isInif",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setSawelse",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "sawelse",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isSawelse",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setHandled",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "handled",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isHandled",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setCopy",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "copy",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isCopy",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    }
  ]
}
