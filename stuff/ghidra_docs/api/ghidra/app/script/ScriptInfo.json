{
  "name": "ScriptInfo",
  "comment": "This class parses the meta-data about a script.",
  "javadoc": "This class parses the meta-data about a script.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "DELIMITTER",
      "comment": "The delimiter used in categories and menu paths.",
      "javadoc": "The delimiter used in categories and menu paths.",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\".\""
    },
    {
      "name": "AT_AUTHOR",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"@author\""
    },
    {
      "name": "AT_CATEGORY",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"@category\""
    },
    {
      "name": "AT_KEYBINDING",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"@keybinding\""
    },
    {
      "name": "AT_MENUPATH",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"@menupath\""
    },
    {
      "name": "AT_TOOLBAR",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"@toolbar\""
    },
    {
      "name": "AT_IMPORTPACKAGE",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"@importpackage\""
    },
    {
      "name": "METADATA",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String[]",
      "type_short": "java.lang.String[]",
      "constant_value": null
    },
    {
      "name": "provider",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.script.GhidraScriptProvider",
      "type_short": "GhidraScriptProvider",
      "constant_value": null
    },
    {
      "name": "sourceFile",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "generic.jar.ResourceFile",
      "type_short": "ResourceFile",
      "constant_value": null
    },
    {
      "name": "isCompileErrors",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "isDuplicate",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "modified",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "description",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "author",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "category",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String[]",
      "type_short": "java.lang.String[]",
      "constant_value": null
    },
    {
      "name": "keyBinding",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.KeyStroke",
      "type_short": "KeyStroke",
      "constant_value": null
    },
    {
      "name": "keybindingErrorMessage",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "menupath",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String[]",
      "type_short": "java.lang.String[]",
      "constant_value": null
    },
    {
      "name": "toolbar",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "toolbarImage",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.ImageIcon",
      "type_short": "ImageIcon",
      "constant_value": null
    },
    {
      "name": "importpackage",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new script.",
      "javadoc": "Constructs a new script.\n@param provider the script provider (for example, java or python)\n@param sourceFile the script source file",
      "static": false,
      "params": [
        {
          "name": "provider",
          "type_long": "ghidra.app.script.GhidraScriptProvider",
          "type_short": "GhidraScriptProvider",
          "comment": "the script provider (for example, java or python)"
        },
        {
          "name": "sourceFile",
          "type_long": "generic.jar.ResourceFile",
          "type_short": "ResourceFile",
          "comment": "the script source file"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "init",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "refresh",
      "comment": "Setting the toolbar image to null forces it to be reloaded on the next request.",
      "javadoc": "Setting the toolbar image to null forces it to be reloaded on the next request.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getName",
      "comment": "Returns the name of the script.\n The name of the script is the file name.",
      "javadoc": "Returns the name of the script.\n The name of the script is the file name.\n@return the name of the script",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the name of the script"
      },
      "throws": []
    },
    {
      "name": "getSourceFile",
      "comment": "Returns the script source file.",
      "javadoc": "Returns the script source file.\n@return the script source file",
      "static": false,
      "params": [],
      "return": {
        "type_long": "generic.jar.ResourceFile",
        "type_short": "ResourceFile",
        "comment": "the script source file"
      },
      "throws": []
    },
    {
      "name": "getAuthor",
      "comment": "Returns the script author information.",
      "javadoc": "Returns the script author information.\n@return the script author information.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the script author information."
      },
      "throws": []
    },
    {
      "name": "isCompileErrors",
      "comment": "Returns true if the script has compile errors.",
      "javadoc": "Returns true if the script has compile errors.\n@return true if the script has compile errors",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the script has compile errors"
      },
      "throws": []
    },
    {
      "name": "setCompileErrors",
      "comment": "Sets whether the script has compile errors.",
      "javadoc": "Sets whether the script has compile errors.\n@param b true if the script has compile errors",
      "static": false,
      "params": [
        {
          "name": "b",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true if the script has compile errors"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isDuplicate",
      "comment": "Returns true if this script is a duplicate.\n When two or more scripts exists with the same name, this\n is considered a duplicate script.",
      "javadoc": "Returns true if this script is a duplicate.\n When two or more scripts exists with the same name, this\n is considered a duplicate script.\n@return true if this script is a duplicate",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if this script is a duplicate"
      },
      "throws": []
    },
    {
      "name": "setDuplicate",
      "comment": "Sets whether the script is a duplicate.",
      "javadoc": "Sets whether the script is a duplicate.\n@param isDuplicate true if the script is a duplicate",
      "static": false,
      "params": [
        {
          "name": "isDuplicate",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true if the script is a duplicate"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDescription",
      "comment": "Returns the script description.",
      "javadoc": "Returns the script description.\n@return the script description",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the script description"
      },
      "throws": []
    },
    {
      "name": "parseHeader",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "skipCertifyHeader",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "reader",
          "type_long": "java.io.BufferedReader",
          "type_short": "BufferedReader",
          "comment": ""
        },
        {
          "name": "line",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "parseBlockComment",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "reader",
          "type_long": "java.io.BufferedReader",
          "type_short": "BufferedReader",
          "comment": ""
        },
        {
          "name": "line",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "parseMetaDataLine",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "line",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getTagValue",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "tag",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "line",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "splitString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "string",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "delimiter",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String[]",
        "type_short": "java.lang.String[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setKeyBinding",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "line",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isCategory",
      "comment": "Returns true if \u0027cat\u0027 is a category.",
      "javadoc": "Returns true if \u0027cat\u0027 is a category.\n@param otherCategory the script category\n@return true if \u0027cat\u0027 is a category",
      "static": false,
      "params": [
        {
          "name": "otherCategory",
          "type_long": "java.lang.String[]",
          "type_short": "java.lang.String[]",
          "comment": "the script category"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if \u0027cat\u0027 is a category"
      },
      "throws": []
    },
    {
      "name": "getCategory",
      "comment": "Returns the script category path.",
      "javadoc": "Returns the script category path.\n@return the script category path",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String[]",
        "type_short": "java.lang.String[]",
        "comment": "the script category path"
      },
      "throws": []
    },
    {
      "name": "getMenuPath",
      "comment": "Returns the script menu path.",
      "javadoc": "Returns the script menu path.\n@return the script menu path",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String[]",
        "type_short": "java.lang.String[]",
        "comment": "the script menu path"
      },
      "throws": []
    },
    {
      "name": "getMenuPathAsString",
      "comment": "Returns the script menu path as a string.\n For example,.",
      "javadoc": "Returns the script menu path as a string.\n For example,{@literal \"Path1-\u003ePath2-\u003ePath3\"}.\n@return the script menu path as a string",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the script menu path as a string"
      },
      "throws": []
    },
    {
      "name": "getKeyBinding",
      "comment": "Returns the script key binding.",
      "javadoc": "Returns the script key binding.\n@return the script key binding",
      "static": false,
      "params": [],
      "return": {
        "type_long": "javax.swing.KeyStroke",
        "type_short": "KeyStroke",
        "comment": "the script key binding"
      },
      "throws": []
    },
    {
      "name": "getKeyBindingErrorMessage",
      "comment": "",
      "javadoc": "@return an error resulting from parsing keybinding metadata",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "an error resulting from parsing keybinding metadata"
      },
      "throws": []
    },
    {
      "name": "getToolBarImage",
      "comment": "Returns the script tool bar icon.",
      "javadoc": "Returns the script tool bar icon.\n@param scaled true if the icon should be scaled to 16x16.\n@return the script tool bar icon",
      "static": false,
      "params": [
        {
          "name": "scaled",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true if the icon should be scaled to 16x16."
        }
      ],
      "return": {
        "type_long": "javax.swing.ImageIcon",
        "type_short": "ImageIcon",
        "comment": "the script tool bar icon"
      },
      "throws": []
    },
    {
      "name": "getImportPackage",
      "comment": "Returns the script imports",
      "javadoc": "Returns the script imports\n@return the script imports",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the script imports"
      },
      "throws": []
    },
    {
      "name": "getToolTipText",
      "comment": "Returns a string designed to be used as a tool tip for describing this script",
      "javadoc": "Returns a string designed to be used as a tool tip for describing this script\n@return a string designed to be used as a tool tip",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "a string designed to be used as a tool tip"
      },
      "throws": []
    },
    {
      "name": "getKeybindingToolTip",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toToolTip",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "keyStroke",
          "type_long": "javax.swing.KeyStroke",
          "type_short": "KeyStroke",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "string",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "path",
          "type_long": "java.lang.String[]",
          "type_short": "java.lang.String[]",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hasErrors",
      "comment": "",
      "javadoc": "@return true if the script either has compiler errors, or is a duplicate",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the script either has compiler errors, or is a duplicate"
      },
      "throws": []
    },
    {
      "name": "getErrorMessage",
      "comment": "",
      "javadoc": "@return a generic error message",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "a generic error message"
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    }
  ]
}
