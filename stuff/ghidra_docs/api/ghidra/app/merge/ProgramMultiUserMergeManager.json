{
  "name": "ProgramMultiUserMergeManager",
  "comment": "Top level object that manages each step of the merge/resolve conflicts\n process.",
  "javadoc": "Top level object that manages each step of the merge/resolve conflicts\n process.",
  "static": false,
  "implements": [],
  "extends": "ghidra.app.merge.MergeManager",
  "fields": [
    {
      "name": "listingPlugin",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.merge.tool.ListingMergePanelPlugin",
      "type_short": "ListingMergePanelPlugin",
      "constant_value": null
    },
    {
      "name": "goToPlugin",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.plugin.core.navigation.GoToAddressLabelPlugin",
      "type_short": "GoToAddressLabelPlugin",
      "constant_value": null
    },
    {
      "name": "mergePanel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.merge.tool.ListingMergePanel",
      "type_short": "ListingMergePanel",
      "constant_value": null
    },
    {
      "name": "isShowingListingMergePanel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "showListingPanels",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "navigatable",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.merge.MergeNavigatable",
      "type_short": "MergeNavigatable",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "resultProgram",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "myProgram",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "originalProgram",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "latestProgram",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "latestChangeSet",
          "type_long": "ghidra.program.model.listing.ProgramChangeSet",
          "type_short": "ProgramChangeSet",
          "comment": ""
        },
        {
          "name": "myChangeSet",
          "type_long": "ghidra.program.model.listing.ProgramChangeSet",
          "type_short": "ProgramChangeSet",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "resultProgram",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "myProgram",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "originalProgram",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "latestProgram",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "latestChangeSet",
          "type_long": "ghidra.program.model.listing.ProgramChangeSet",
          "type_short": "ProgramChangeSet",
          "comment": ""
        },
        {
          "name": "myChangeSet",
          "type_long": "ghidra.program.model.listing.ProgramChangeSet",
          "type_short": "ProgramChangeSet",
          "comment": ""
        },
        {
          "name": "showListingPanels",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createMergeResolvers",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getProgram",
      "comment": "Returns one of the four programs involved in the merge as indicated by the version.",
      "javadoc": "Returns one of the four programs involved in the merge as indicated by the version.\n@param version the program version to return. (LATEST, MY, ORIGINAL, or RESULT).\n@return the indicated program version or null if a valid version isn\u0027t specified.\n@see MergeConstants",
      "static": false,
      "params": [
        {
          "name": "version",
          "type_long": "int",
          "type_short": "int",
          "comment": "the program version to return. (LATEST, MY, ORIGINAL, or RESULT)."
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.listing.Program",
        "type_short": "Program",
        "comment": "the indicated program version or null if a valid version isn\u0027t specified."
      },
      "throws": []
    },
    {
      "name": "createMergeManagerPlugin",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "mergePluginTool",
          "type_long": "ghidra.framework.plugintool.ModalPluginTool",
          "type_short": "ModalPluginTool",
          "comment": ""
        },
        {
          "name": "multiUserMergeManager",
          "type_long": "ghidra.app.merge.MergeManager",
          "type_short": "MergeManager",
          "comment": ""
        },
        {
          "name": "modifiableDomainObject",
          "type_long": "ghidra.framework.model.UndoableDomainObject",
          "type_short": "UndoableDomainObject",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.app.merge.MergeManagerPlugin",
        "type_short": "MergeManagerPlugin",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "initializeMerge",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "cleanupMerge",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "showDefaultMergePanel",
      "comment": "Show the default merge panel. The default merge panel now shows the status of each phase\n of the merge and also the progress in the current phase.",
      "javadoc": "Show the default merge panel. The default merge panel now shows the status of each phase\n of the merge and also the progress in the current phase.\n@param description description of current merge process near the top of the merge tool.",
      "static": false,
      "params": [
        {
          "name": "description",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "description of current merge process near the top of the merge tool."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "showComponent",
      "comment": "Show the component that is used to resolve conflicts. This method\n is called by the MergeResolvers when user input is required. If the\n component is not null, this method blocks until the user either \n cancels the merge process or resolves a conflict. If comp is null,\n then the default component is displayed, and the method does not\n wait for user input.",
      "javadoc": "Show the component that is used to resolve conflicts. This method\n is called by the MergeResolvers when user input is required. If the\n component is not null, this method blocks until the user either \n cancels the merge process or resolves a conflict. If comp is null,\n then the default component is displayed, and the method does not\n wait for user input.\n@param comp component to show; if component is null, show the \n default component and do not block\n@param componentID id or name for the component",
      "static": false,
      "params": [
        {
          "name": "comp",
          "type_long": "javax.swing.JComponent",
          "type_short": "JComponent",
          "comment": "component to show; if component is null, show the \n default component and do not block"
        },
        {
          "name": "componentID",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "id or name for the component"
        },
        {
          "name": "helpLoc",
          "type_long": "ghidra.util.HelpLocation",
          "type_short": "HelpLocation",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "showListingMergePanel",
      "comment": "Show the listing merge panel.",
      "javadoc": "Show the listing merge panel.\n@param goToAddress the address to goto.",
      "static": false,
      "params": [
        {
          "name": "goToAddress",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "the address to goto."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "refreshListingMergePanel",
      "comment": "Show the listing merge panel with each listing positioned to the indicated address.\n A null can be passed for any address to indicate that listing should be empty.",
      "javadoc": "Show the listing merge panel with each listing positioned to the indicated address.\n A null can be passed for any address to indicate that listing should be empty.\n@param resultAddress the address for positioning the Result program\u0027s listing.\n@param latestAddress the address for positioning the Latest program\u0027s listing.\n@param myAddress the address for positioning the My program\u0027s listing.\n@param originalAddress the address for positioning the Original program\u0027s listing.",
      "static": false,
      "params": [
        {
          "name": "resultAddress",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "the address for positioning the Result program\u0027s listing."
        },
        {
          "name": "latestAddress",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "the address for positioning the Latest program\u0027s listing."
        },
        {
          "name": "myAddress",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "the address for positioning the My program\u0027s listing."
        },
        {
          "name": "originalAddress",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "the address for positioning the Original program\u0027s listing."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "showListingMergePanel",
      "comment": "Show the listing merge panel with each listing positioned to the indicated address.\n A null can be passed for any address to indicate that listing should be empty.",
      "javadoc": "Show the listing merge panel with each listing positioned to the indicated address.\n A null can be passed for any address to indicate that listing should be empty.\n@param resultAddress the address for positioning the Result program\u0027s listing.\n@param latestAddress the address for positioning the Latest program\u0027s listing.\n@param myAddress the address for positioning the My program\u0027s listing.\n@param originalAddress the address for positioning the Original program\u0027s listing.",
      "static": false,
      "params": [
        {
          "name": "resultAddress",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "the address for positioning the Result program\u0027s listing."
        },
        {
          "name": "latestAddress",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "the address for positioning the Latest program\u0027s listing."
        },
        {
          "name": "myAddress",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "the address for positioning the My program\u0027s listing."
        },
        {
          "name": "originalAddress",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "the address for positioning the Original program\u0027s listing."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeListingMergePanel",
      "comment": "Remove the listing merge panel from the merge manager.",
      "javadoc": "Remove the listing merge panel from the merge manager.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getListingMergePanel",
      "comment": "Returns the listing merge panel. This is the panel containing the four\n listing windows: result, latest, my, and original. The four listings are\n the center component of JPanel with a BorderLayout.",
      "javadoc": "Returns the listing merge panel. This is the panel containing the four\n listing windows: result, latest, my, and original. The four listings are\n the center component of JPanel with a BorderLayout.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.merge.tool.ListingMergePanel",
        "type_short": "ListingMergePanel",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isMergeToolVisible",
      "comment": "Determines if the modal merge tool is currently displayed on the screen.",
      "javadoc": "Determines if the modal merge tool is currently displayed on the screen.\n@return true if the merge tool is displayed.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the merge tool is displayed."
      },
      "throws": []
    },
    {
      "name": "isShowingListingMergePanel",
      "comment": "Determines if the four program Listing merge panel is currently displayed in the merge tool.",
      "javadoc": "Determines if the four program Listing merge panel is currently displayed in the merge tool.\n@return true if the Listing merge panel is displayed.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the Listing merge panel is displayed."
      },
      "throws": []
    }
  ]
}
