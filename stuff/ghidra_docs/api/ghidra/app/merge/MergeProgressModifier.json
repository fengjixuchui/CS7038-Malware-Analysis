{
  "name": "MergeProgressModifier",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "updateProgress",
      "comment": "Updates the current phase progress area in the default merge panel.",
      "javadoc": "Updates the current phase progress area in the default merge panel.\n@param progressMessage a message indicating what is currently occurring in this phase.\n Null indicates to use the default message.",
      "static": false,
      "params": [
        {
          "name": "progressMessage",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "a message indicating what is currently occurring in this phase.\n Null indicates to use the default message."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "updateProgress",
      "comment": "Updates the current phase progress area in the default merge panel.",
      "javadoc": "Updates the current phase progress area in the default merge panel.\n@param currentProgressPercentage the progress percentage completed for the current phase.\n This should be a value from 0 to 100.",
      "static": false,
      "params": [
        {
          "name": "currentProgressPercentage",
          "type_long": "int",
          "type_short": "int",
          "comment": "the progress percentage completed for the current phase.\n This should be a value from 0 to 100."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "updateProgress",
      "comment": "Updates the current phase progress area in the default merge panel.",
      "javadoc": "Updates the current phase progress area in the default merge panel.\n@param currentProgressPercentage the progress percentage completed for the current phase.\n This should be a value from 0 to 100.\n@param progressMessage a message indicating what is currently occurring in this phase.",
      "static": false,
      "params": [
        {
          "name": "currentProgressPercentage",
          "type_long": "int",
          "type_short": "int",
          "comment": "the progress percentage completed for the current phase.\n This should be a value from 0 to 100."
        },
        {
          "name": "progressMessage",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "a message indicating what is currently occurring in this phase."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setInProgress",
      "comment": "The manager (MergeResolver) for a particular merge phase should call this when its phase or sub-phase begins.\n The string array should match one that the returned by MergeResolver.getPhases().",
      "javadoc": "The manager (MergeResolver) for a particular merge phase should call this when its phase or sub-phase begins.\n The string array should match one that the returned by MergeResolver.getPhases().\n@param mergePhase identifier for the merge phase to change to in progress status.\n@see MergeResolver",
      "static": false,
      "params": [
        {
          "name": "mergePhase",
          "type_long": "java.lang.String[]",
          "type_short": "java.lang.String[]",
          "comment": "identifier for the merge phase to change to in progress status."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setCompleted",
      "comment": "The manager (MergeResolver) for a particular merge phase should call this when its phase or sub-phase completes.\n The string array should match one that the returned by MergeResolver.getPhases().",
      "javadoc": "The manager (MergeResolver) for a particular merge phase should call this when its phase or sub-phase completes.\n The string array should match one that the returned by MergeResolver.getPhases().\n@param mergePhase identifier for the merge phase to change to completed status.\n@see MergeResolver",
      "static": false,
      "params": [
        {
          "name": "mergePhase",
          "type_long": "java.lang.String[]",
          "type_short": "java.lang.String[]",
          "comment": "identifier for the merge phase to change to completed status."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
