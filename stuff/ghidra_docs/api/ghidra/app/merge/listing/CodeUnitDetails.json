{
  "name": "CodeUnitDetails",
  "comment": "This is a class with static methods for obtaining information about a code unit and its \n references. The information is provided as a String.",
  "javadoc": "This is a class with static methods for obtaining information about a code unit and its \n references. The information is provided as a String.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "NEW_LINE",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"\n\""
    },
    {
      "name": "INDENT1",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"    \""
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getInstructionDetails",
      "comment": "Gets a string that indicates the code unit along with its overrides and its \"from\" references.\n This can contain new line characters.",
      "javadoc": "Gets a string that indicates the code unit along with its overrides and its \"from\" references.\n This can contain new line characters.\n@param cu the code unit\n@return info about the code unit and its references.",
      "static": true,
      "params": [
        {
          "name": "cu",
          "type_long": "ghidra.program.model.listing.CodeUnit",
          "type_short": "CodeUnit",
          "comment": "the code unit"
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "info about the code unit and its references."
      },
      "throws": []
    },
    {
      "name": "getCodeUnitDetails",
      "comment": "Gets a string that indicates the code unit along with its overrides.\n This can contain new line characters.",
      "javadoc": "Gets a string that indicates the code unit along with its overrides.\n This can contain new line characters.\n@param cu the code unit\n@return info about the code unit.",
      "static": true,
      "params": [
        {
          "name": "cu",
          "type_long": "ghidra.program.model.listing.CodeUnit",
          "type_short": "CodeUnit",
          "comment": "the code unit"
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "info about the code unit."
      },
      "throws": []
    },
    {
      "name": "getReferenceDetails",
      "comment": "Gets a string that indicates the references from a code unit.\n This can contain new line characters.\n Note: Data currently only indicates references on the minimum address.",
      "javadoc": "Gets a string that indicates the references from a code unit.\n This can contain new line characters.\n \u003cbr\u003eNote: Data currently only indicates references on the minimum address.\n@param cu the code unit\n@return info about the code unit\u0027s references.",
      "static": true,
      "params": [
        {
          "name": "cu",
          "type_long": "ghidra.program.model.listing.CodeUnit",
          "type_short": "CodeUnit",
          "comment": "the code unit"
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "info about the code unit\u0027s references."
      },
      "throws": []
    },
    {
      "name": "getRefInfo",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "pgm",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "ref",
          "type_long": "ghidra.program.model.symbol.Reference",
          "type_short": "Reference",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getProgramRefDetails",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "pgm",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "refs",
          "type_long": "ghidra.program.model.symbol.Reference[]",
          "type_short": "ghidra.program.model.symbol.Reference[]",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSpaces",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "numSpaces",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    }
  ]
}
