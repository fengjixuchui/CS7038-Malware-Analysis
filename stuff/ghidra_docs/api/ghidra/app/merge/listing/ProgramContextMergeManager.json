{
  "name": "ProgramContextMergeManager",
  "comment": "ProgramContextMergeManager merges register value changes \n for multi-user program versions. It merges changes for each named register\n in the program.\n Note: If a register gets changed that is part of another register that has been set, \n then each named register will get merged independently. This means that \n when in conflict with another version the conflict would arise for each \n instead of just the larger register.",
  "javadoc": "\u003ccode\u003eProgramContextMergeManager\u003c/code\u003e merges register value changes \n for multi-user program versions. It merges changes for each named register\n in the program.\n \u003cbr\u003eNote: If a register gets changed that is part of another register that has been set, \n then each named register will get merged independently. This means that \n when in conflict with another version the conflict would arise for each \n instead of just the larger register.",
  "static": false,
  "implements": [
    "ghidra.app.merge.MergeResolver",
    "ghidra.app.merge.listing.ListingMergeConstants"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "PROGRAM_CONTEXT_PHASE",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String[]",
      "type_short": "java.lang.String[]",
      "constant_value": null
    },
    {
      "name": "mergeManager",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.merge.ProgramMultiUserMergeManager",
      "type_short": "ProgramMultiUserMergeManager",
      "constant_value": null
    },
    {
      "name": "mergePanel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.merge.tool.ListingMergePanel",
      "type_short": "ListingMergePanel",
      "constant_value": null
    },
    {
      "name": "conflictInfoPanel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.merge.listing.ConflictInfoPanel",
      "type_short": "ConflictInfoPanel",
      "constant_value": null
    },
    {
      "name": "rmm",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.merge.listing.RegisterMergeManager",
      "type_short": "RegisterMergeManager",
      "constant_value": null
    },
    {
      "name": "resultPgm",
      "comment": "the program to be updated with the result of the merge.\n This is the program that will actually get checked in.",
      "javadoc": "the program to be updated with the result of the merge.\n This is the program that will actually get checked in.",
      "static": false,
      "type_long": "ghidra.program.model.listing.Program",
      "type_short": "Program",
      "constant_value": null
    },
    {
      "name": "originalPgm",
      "comment": "the program that was checked out.",
      "javadoc": "the program that was checked out.",
      "static": false,
      "type_long": "ghidra.program.model.listing.Program",
      "type_short": "Program",
      "constant_value": null
    },
    {
      "name": "latestPgm",
      "comment": "the latest checked-in version of the program.",
      "javadoc": "the latest checked-in version of the program.",
      "static": false,
      "type_long": "ghidra.program.model.listing.Program",
      "type_short": "Program",
      "constant_value": null
    },
    {
      "name": "myPgm",
      "comment": "the program requesting to be checked in.",
      "javadoc": "the program requesting to be checked in.",
      "static": false,
      "type_long": "ghidra.program.model.listing.Program",
      "type_short": "Program",
      "constant_value": null
    },
    {
      "name": "latestChanges",
      "comment": "program changes between the original and latest versioned program.",
      "javadoc": "program changes between the original and latest versioned program.",
      "static": false,
      "type_long": "ghidra.program.model.listing.ProgramChangeSet",
      "type_short": "ProgramChangeSet",
      "constant_value": null
    },
    {
      "name": "myChanges",
      "comment": "program changes between the original and my modified program.",
      "javadoc": "program changes between the original and my modified program.",
      "static": false,
      "type_long": "ghidra.program.model.listing.ProgramChangeSet",
      "type_short": "ProgramChangeSet",
      "constant_value": null
    },
    {
      "name": "latestSet",
      "comment": "addresses of listing changes between the original and latest versioned program.",
      "javadoc": "addresses of listing changes between the original and latest versioned program.",
      "static": false,
      "type_long": "ghidra.program.model.address.AddressSetView",
      "type_short": "AddressSetView",
      "constant_value": null
    },
    {
      "name": "mySet",
      "comment": "addresses of listing changes between the original and my modified program.",
      "javadoc": "addresses of listing changes between the original and my modified program.",
      "static": false,
      "type_long": "ghidra.program.model.address.AddressSetView",
      "type_short": "AddressSetView",
      "constant_value": null
    },
    {
      "name": "currentStatusMonitor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.task.TaskMonitor",
      "type_short": "TaskMonitor",
      "constant_value": null
    },
    {
      "name": "originalContext",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.listing.ProgramContext",
      "type_short": "ProgramContext",
      "constant_value": null
    },
    {
      "name": "latestContext",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.listing.ProgramContext",
      "type_short": "ProgramContext",
      "constant_value": null
    },
    {
      "name": "myContext",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.listing.ProgramContext",
      "type_short": "ProgramContext",
      "constant_value": null
    },
    {
      "name": "resultContext",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.listing.ProgramContext",
      "type_short": "ProgramContext",
      "constant_value": null
    },
    {
      "name": "registers",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cghidra.program.model.lang.Register\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "diffOriginalLatest",
      "comment": "Used to determine differences between the original program and latest program.",
      "javadoc": "Used to determine differences between the original program and latest program.",
      "static": false,
      "type_long": "ghidra.program.util.ProgramDiff",
      "type_short": "ProgramDiff",
      "constant_value": null
    },
    {
      "name": "diffOriginalMy",
      "comment": "Used to determine differences between the original program and my program.",
      "javadoc": "Used to determine differences between the original program and my program.",
      "static": false,
      "type_long": "ghidra.program.util.ProgramDiff",
      "type_short": "ProgramDiff",
      "constant_value": null
    },
    {
      "name": "diffFilter",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.util.ProgramDiffFilter",
      "type_short": "ProgramDiffFilter",
      "constant_value": null
    },
    {
      "name": "mergeFilter",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.util.ProgramMergeFilter",
      "type_short": "ProgramMergeFilter",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Creates a new ProgramContextMergeManager.",
      "javadoc": "Creates a new \u003ccode\u003eProgramContextMergeManager\u003c/code\u003e.\n@param resultPgm the program to be updated with the result of the merge.\n This is the program that will actually get checked in.\n@param originalPgm the program that was checked out.\n@param latestPgm the latest checked-in version of the program.\n@param myPgm the program requesting to be checked in.\n@param latestChanges the address set of changes between original and latest versioned program.\n@param myChanges the address set of changes between original and my modified program.",
      "static": false,
      "params": [
        {
          "name": "mergeManager",
          "type_long": "ghidra.app.merge.ProgramMultiUserMergeManager",
          "type_short": "ProgramMultiUserMergeManager",
          "comment": ""
        },
        {
          "name": "resultPgm",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "the program to be updated with the result of the merge.\n This is the program that will actually get checked in."
        },
        {
          "name": "originalPgm",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "the program that was checked out."
        },
        {
          "name": "latestPgm",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "the latest checked-in version of the program."
        },
        {
          "name": "myPgm",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "the program requesting to be checked in."
        },
        {
          "name": "latestChanges",
          "type_long": "ghidra.program.model.listing.ProgramChangeSet",
          "type_short": "ProgramChangeSet",
          "comment": "the address set of changes between original and latest versioned program."
        },
        {
          "name": "myChanges",
          "type_long": "ghidra.program.model.listing.ProgramChangeSet",
          "type_short": "ProgramChangeSet",
          "comment": "the address set of changes between original and my modified program."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "apply",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "cancel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDescription",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "initMergeInfo",
      "comment": "Sets up the change address sets, Diffs between the various program versions,\n and Merges from various versions to the resulting program.",
      "javadoc": "Sets up the change address sets, Diffs between the various program versions,\n and Merges from various versions to the resulting program.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "merge",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setConflictDecision",
      "comment": "For JUnit testing only, set the option for resolving a conflict.",
      "javadoc": "For JUnit testing only, set the option for resolving a conflict.\n@param decision ASK_USER, PICK_LATEST, PICK_MY, or PICK_ORIGINAL",
      "static": false,
      "params": [
        {
          "name": "decision",
          "type_long": "int",
          "type_short": "int",
          "comment": "ASK_USER, PICK_LATEST, PICK_MY, or PICK_ORIGINAL"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPhases",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String[][]",
        "type_short": "java.lang.String[][]",
        "comment": ""
      },
      "throws": []
    }
  ]
}
