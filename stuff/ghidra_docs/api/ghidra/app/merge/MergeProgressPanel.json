{
  "name": "MergeProgressPanel",
  "comment": "The MergeProgressPanel displays the name of each merge phase along with an icon indicating\n whether the phase is Pending, In Progress or Completed.",
  "javadoc": "The MergeProgressPanel displays the name of each merge phase along with an icon indicating\n whether the phase is Pending, In Progress or Completed.",
  "static": false,
  "implements": [],
  "extends": "javax.swing.JPanel",
  "fields": [
    {
      "name": "DEFINED_ICON",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "javax.swing.ImageIcon",
      "type_short": "ImageIcon",
      "constant_value": null
    },
    {
      "name": "IN_PROGRESS_ICON",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "javax.swing.ImageIcon",
      "type_short": "ImageIcon",
      "constant_value": null
    },
    {
      "name": "COMPLETED_ICON",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "javax.swing.ImageIcon",
      "type_short": "ImageIcon",
      "constant_value": null
    },
    {
      "name": "imageMap",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.HashMap\u003cjava.lang.String,javax.swing.JLabel\u003e",
      "type_short": "HashMap",
      "constant_value": null
    },
    {
      "name": "INDENT_IN_PIXELS",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor for a merge progress panel.",
      "javadoc": "Constructor for a merge progress panel.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getProgressTitlePanel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "javax.swing.JPanel",
        "type_short": "JPanel",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addInfo",
      "comment": "Adds a new phase name and its associated icon to the panel.\n The last string in the array will be the name displayed for this phase.",
      "javadoc": "Adds a new phase name and its associated icon to the panel.\n The last string in the array will be the name displayed for this phase.\n@param phase array of strings indicating this phase. \n The first string indicates the primary phase. EAch subsequent string indicates \n another sub-phase of the phase indicated by the previous string.\n The last string indicates this phase.\n@return the panel that was added which displays this phase\u0027s name and status",
      "static": false,
      "params": [
        {
          "name": "phase",
          "type_long": "java.lang.String[]",
          "type_short": "java.lang.String[]",
          "comment": "array of strings indicating this phase. \n The first string indicates the primary phase. EAch subsequent string indicates \n another sub-phase of the phase indicated by the previous string.\n The last string indicates this phase."
        }
      ],
      "return": {
        "type_long": "javax.swing.JPanel",
        "type_short": "JPanel",
        "comment": "the panel that was added which displays this phase\u0027s name and status"
      },
      "throws": []
    },
    {
      "name": "setInProgress",
      "comment": "Indicates a particular phase or sub-phase whose status icon is to be changed to \n indicate that it is in progress.",
      "javadoc": "Indicates a particular phase or sub-phase whose status icon is to be changed to \n indicate that it is in progress.\n@param phase array which indicates this phase or sub-phase.",
      "static": false,
      "params": [
        {
          "name": "phase",
          "type_long": "java.lang.String[]",
          "type_short": "java.lang.String[]",
          "comment": "array which indicates this phase or sub-phase."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setCompleted",
      "comment": "Indicates a particular phase or sub-phase whose status icon is to be changed to \n indicate that it is completed.",
      "javadoc": "Indicates a particular phase or sub-phase whose status icon is to be changed to \n indicate that it is completed.\n@param phase array which indicates this phase or sub-phase.",
      "static": false,
      "params": [
        {
          "name": "phase",
          "type_long": "java.lang.String[]",
          "type_short": "java.lang.String[]",
          "comment": "array which indicates this phase or sub-phase."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPhaseString",
      "comment": "Gets a string based on the array for a phase or sub-phase.\n This string can then be used to identify the particular phase.",
      "javadoc": "Gets a string based on the array for a phase or sub-phase.\n This string can then be used to identify the particular phase.\n@param phase array which indicates the phase or sub-phase.\n@return a string representation for the phase.",
      "static": false,
      "params": [
        {
          "name": "phase",
          "type_long": "java.lang.String[]",
          "type_short": "java.lang.String[]",
          "comment": "array which indicates the phase or sub-phase."
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "a string representation for the phase."
      },
      "throws": []
    },
    {
      "name": "main",
      "comment": "",
      "javadoc": "@param args",
      "static": true,
      "params": [
        {
          "name": "args",
          "type_long": "java.lang.String[]",
          "type_short": "java.lang.String[]",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
