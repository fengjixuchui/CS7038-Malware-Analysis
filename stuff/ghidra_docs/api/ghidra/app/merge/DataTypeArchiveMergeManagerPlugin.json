{
  "name": "DataTypeArchiveMergeManagerPlugin",
  "comment": "Plugin that provides a merge component provider for data type archives.",
  "javadoc": "Plugin that provides a merge component provider for data type archives.",
  "static": false,
  "implements": [],
  "extends": "ghidra.app.merge.MergeManagerPlugin",
  "fields": [],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor for plugin that handles multi-user merge of data type archives.",
      "javadoc": "Constructor for plugin that handles multi-user merge of data type archives.\n@param tool the tool\n@param mergeManager the merge manager that will control the merge process\n@param dataTypeArchive the data type archive",
      "static": false,
      "params": [
        {
          "name": "tool",
          "type_long": "ghidra.framework.plugintool.PluginTool",
          "type_short": "PluginTool",
          "comment": "the tool"
        },
        {
          "name": "mergeManager",
          "type_long": "ghidra.app.merge.DataTypeArchiveMergeManager",
          "type_short": "DataTypeArchiveMergeManager",
          "comment": "the merge manager that will control the merge process"
        },
        {
          "name": "dataTypeArchive",
          "type_long": "ghidra.program.model.listing.DataTypeArchive",
          "type_short": "DataTypeArchive",
          "comment": "the data type archive"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createProvider",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.merge.MergeManagerProvider",
        "type_short": "MergeManagerProvider",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "processEvent",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "event",
          "type_long": "ghidra.framework.plugintool.PluginEvent",
          "type_short": "PluginEvent",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "dispose",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDescription",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDescriptiveName",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getCategory",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getMergeManager",
      "comment": "Gets the merge manager associated with this plug-in.",
      "javadoc": "Gets the merge manager associated with this plug-in.\n@return the merge manager",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.merge.DataTypeArchiveMergeManager",
        "type_short": "DataTypeArchiveMergeManager",
        "comment": "the merge manager"
      },
      "throws": []
    },
    {
      "name": "setMergeComponent",
      "comment": "Defines and displays a component for resolving merge conflicts.",
      "javadoc": "Defines and displays a component for resolving merge conflicts.\n@param component the component\n@param componentID the identifier for this component",
      "static": false,
      "params": [
        {
          "name": "component",
          "type_long": "javax.swing.JComponent",
          "type_short": "JComponent",
          "comment": "the component"
        },
        {
          "name": "componentID",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the identifier for this component"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "updateMergeDescription",
      "comment": "Sets the merge description at the top of the merge tool.",
      "javadoc": "Sets the merge description at the top of the merge tool.\n@param mergeDescription the new description",
      "static": false,
      "params": [
        {
          "name": "mergeDescription",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the new description"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "updateProgressDetails",
      "comment": "Sets the message below the progress meter in the current phase progress area.",
      "javadoc": "Sets the message below the progress meter in the current phase progress area.\n@param progressDescription the new text message to display. If null, then the default message is displayed.",
      "static": false,
      "params": [
        {
          "name": "progressDescription",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the new text message to display. If null, then the default message is displayed."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setCurrentProgress",
      "comment": "Sets the percentage of the progress meter that is filled in for the current phase progress area.",
      "javadoc": "Sets the percentage of the progress meter that is filled in for the current phase progress area.\n@param currentPercentProgress the percentage of the progress bar to fill in from 0 to 100.",
      "static": false,
      "params": [
        {
          "name": "currentPercentProgress",
          "type_long": "int",
          "type_short": "int",
          "comment": "the percentage of the progress bar to fill in from 0 to 100."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "showDefaultComponent",
      "comment": "Displays the default information in the merge tool.",
      "javadoc": "Displays the default information in the merge tool.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setApplyEnabled",
      "comment": "Enables/disables the Apply button at the bottom of the merge tool.\n The Apply button is for applying conflicts.",
      "javadoc": "Enables/disables the Apply button at the bottom of the merge tool.\n The Apply button is for applying conflicts.\n@param state true means enable the button. false means disable it.",
      "static": false,
      "params": [
        {
          "name": "state",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true means enable the button. false means disable it."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getProvider",
      "comment": "Gets the provider for the merge.",
      "javadoc": "Gets the provider for the merge.\n@return the provider",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.merge.MergeManagerProvider",
        "type_short": "MergeManagerProvider",
        "comment": "the provider"
      },
      "throws": []
    },
    {
      "name": "closeAllPrograms",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "ignoreChanges",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "closeProgram",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "closeProgram",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "ignoreChanges",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getAllOpenDataTypeArchives",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.listing.DataTypeArchive[]",
        "type_short": "ghidra.program.model.listing.DataTypeArchive[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getCurrentDataTypeArchive",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.listing.DataTypeArchive",
        "type_short": "DataTypeArchive",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getProgram",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.listing.Program",
        "type_short": "Program",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSearchPriority",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "p",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isVisible",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "openProgram",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "domainFile",
          "type_long": "ghidra.framework.model.DomainFile",
          "type_short": "DomainFile",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.listing.Program",
        "type_short": "Program",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "openProgram",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "df",
          "type_long": "ghidra.framework.model.DomainFile",
          "type_short": "DomainFile",
          "comment": ""
        },
        {
          "name": "version",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.listing.Program",
        "type_short": "Program",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "openProgram",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "domainFile",
          "type_long": "ghidra.framework.model.DomainFile",
          "type_short": "DomainFile",
          "comment": ""
        },
        {
          "name": "version",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "state",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.listing.Program",
        "type_short": "Program",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "openProgram",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "openProgram",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "current",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "openProgram",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "state",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "releaseProgram",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "persistentOwner",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setCurrentProgram",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "p",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setPersistentOwner",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "owner",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setSearchPriority",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "p",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "priority",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
