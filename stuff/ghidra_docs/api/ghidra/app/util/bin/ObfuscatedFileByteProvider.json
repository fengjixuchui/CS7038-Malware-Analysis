{
  "name": "ObfuscatedFileByteProvider",
  "comment": "A ByteProvider that reads from an on-disk file, but obfuscates / de-obfuscates the\n contents of the file when reading / writing.",
  "javadoc": "A {@link ByteProvider} that reads from an on-disk file, but obfuscates / de-obfuscates the\n contents of the file when reading / writing.",
  "static": false,
  "implements": [],
  "extends": "ghidra.app.util.bin.FileByteProvider",
  "fields": [
    {
      "name": "XOR_MASK_BYTES",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "byte[]",
      "type_short": "byte[]",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Creates an instance of ObfuscatedFileByteProvider.",
      "javadoc": "Creates an instance of {@link ObfuscatedFileByteProvider}.\n@param file {@link File} to read from / write to\n@param fsrl {@link FSRL} identity of this file\n@param accessMode {@link AccessMode#READ} or {@link AccessMode#WRITE}\n@throws IOException if error",
      "static": false,
      "params": [
        {
          "name": "file",
          "type_long": "java.io.File",
          "type_short": "File",
          "comment": "File to read from / write to"
        },
        {
          "name": "fsrl",
          "type_long": "ghidra.formats.gfilesystem.FSRL",
          "type_short": "FSRL",
          "comment": "FSRL identity of this file"
        },
        {
          "name": "accessMode",
          "type_long": "java.nio.file.AccessMode",
          "type_short": "AccessMode",
          "comment": "AccessMode#READ or AccessMode#WRITE"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if error"
        }
      ]
    },
    {
      "name": "getFile",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.io.File",
        "type_short": "File",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "doReadBytes",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        },
        {
          "name": "buffer",
          "type_long": "byte[]",
          "type_short": "byte[]",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "doWriteBytes",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        },
        {
          "name": "buffer",
          "type_long": "byte[]",
          "type_short": "byte[]",
          "comment": ""
        },
        {
          "name": "offset",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "length",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    }
  ]
}
