{
  "name": "StructConverterUtil",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toDataType",
      "comment": "This is a convenience method for converting a class into structure.\n The class is reflected to extract the field members.\n Only private non-static fields are considered.\n Any field names that start with underscore (\"_\") are ignored.",
      "javadoc": "This is a convenience method for converting a class into structure.\n The class is reflected to extract the field members.\n Only private non-static fields are considered.\n Any field names that start with underscore (\"_\") are ignored.\n@param object the object to reflect\n@return a structure representing the class fields.",
      "static": true,
      "params": [
        {
          "name": "object",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": "the object to reflect"
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.data.DataType",
        "type_short": "DataType",
        "comment": "a structure representing the class fields."
      },
      "throws": []
    },
    {
      "name": "toDataType",
      "comment": "This is a convenience method for converting a class into structure.\n The class is reflected to extract the field members.\n Only private non-static fields are considered.\n Any field names that start with underscore (\"_\") are ignored.",
      "javadoc": "This is a convenience method for converting a class into structure.\n The class is reflected to extract the field members.\n Only private non-static fields are considered.\n Any field names that start with underscore (\"_\") are ignored.\n@param clazz the class to reflect\n@return a structure representing the class fields.",
      "static": true,
      "params": [
        {
          "name": "clazz",
          "type_long": "java.lang.Class\u003c?\u003e",
          "type_short": "Class",
          "comment": "the class to reflect"
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.data.DataType",
        "type_short": "DataType",
        "comment": "a structure representing the class fields."
      },
      "throws": []
    },
    {
      "name": "toDataType",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "clazz",
          "type_long": "java.lang.Class\u003c?\u003e",
          "type_short": "Class",
          "comment": ""
        },
        {
          "name": "object",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.data.DataType",
        "type_short": "DataType",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFields",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "clazz",
          "type_long": "java.lang.Class\u003c?\u003e",
          "type_short": "Class",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.List\u003cjava.lang.reflect.Field\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isValidField",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "field",
          "type_long": "java.lang.reflect.Field",
          "type_short": "Field",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDataType",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "field",
          "type_long": "java.lang.reflect.Field",
          "type_short": "Field",
          "comment": ""
        },
        {
          "name": "object",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.data.DataType",
        "type_short": "DataType",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getArrayDataType",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "field",
          "type_long": "java.lang.reflect.Field",
          "type_short": "Field",
          "comment": ""
        },
        {
          "name": "object",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        },
        {
          "name": "clazz",
          "type_long": "java.lang.Class\u003c?\u003e",
          "type_short": "Class",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.data.DataType",
        "type_short": "DataType",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "parseName",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "clazz",
          "type_long": "java.lang.Class\u003c?\u003e",
          "type_short": "Class",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "main",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "args",
          "type_long": "java.lang.String[]",
          "type_short": "java.lang.String[]",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
