{
  "name": "MutableByteProvider",
  "comment": "An interface for a generic random-access byte provider, plus mutation methods.",
  "javadoc": "An interface for a generic random-access byte provider, plus mutation methods.",
  "static": false,
  "implements": [
    "ghidra.app.util.bin.ByteProvider"
  ],
  "fields": [],
  "methods": [
    {
      "name": "writeByte",
      "comment": "Writes a byte at the specified index.",
      "javadoc": "Writes a byte at the specified index.\n@param index the index to write the byte\n@param value the value to write at the specified index\n@throws IOException if an I/O error occurs",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "long",
          "type_short": "long",
          "comment": "the index to write the byte"
        },
        {
          "name": "value",
          "type_long": "byte",
          "type_short": "byte",
          "comment": "the value to write at the specified index"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if an I/O error occurs"
        }
      ]
    },
    {
      "name": "writeBytes",
      "comment": "Writes a byte array at the specified index.",
      "javadoc": "Writes a byte array at the specified index.\n@param index the index to write the byte array\n@param values the values to write at the specified index\n@throws IOException if an I/O error occurs",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "long",
          "type_short": "long",
          "comment": "the index to write the byte array"
        },
        {
          "name": "values",
          "type_long": "byte[]",
          "type_short": "byte[]",
          "comment": "the values to write at the specified index"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if an I/O error occurs"
        }
      ]
    }
  ]
}
