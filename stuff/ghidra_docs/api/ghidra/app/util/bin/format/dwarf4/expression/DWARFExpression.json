{
  "name": "DWARFExpression",
  "comment": "A DWARFExpression is an immutable list of DWARFExpressionOperation and some factory methods to read\n an expression from its binary representation.\n \n Use a DWARFExpressionEvaluator to execute a DWARFExpression.",
  "javadoc": "A {@link DWARFExpression} is an immutable list of {@link DWARFExpressionOperation operations} and some factory methods to read\n an expression from its binary representation.\n \u003cp\u003e\n Use a {@link DWARFExpressionEvaluator} to execute a {@link DWARFExpression}.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "EMPTY_OPERANDS_VALUE",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "long[]",
      "type_short": "long[]",
      "constant_value": null
    },
    {
      "name": "operations",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cghidra.app.util.bin.format.dwarf4.expression.DWARFExpressionOperation\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "lastActiveOpIndex",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "exprToString",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "exprBytes",
          "type_long": "byte[]",
          "type_short": "byte[]",
          "comment": ""
        },
        {
          "name": "diea",
          "type_long": "ghidra.app.util.bin.format.dwarf4.DIEAggregate",
          "type_short": "DIEAggregate",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "read",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "exprBytes",
          "type_long": "byte[]",
          "type_short": "byte[]",
          "comment": ""
        },
        {
          "name": "addrSize",
          "type_long": "byte",
          "type_short": "byte",
          "comment": ""
        },
        {
          "name": "isLittleEndian",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        },
        {
          "name": "dwarf_format",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.app.util.bin.format.dwarf4.expression.DWARFExpression",
        "type_short": "DWARFExpression",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.app.util.bin.format.dwarf4.expression.DWARFExpressionException",
          "type_short": "DWARFExpressionException",
          "comment": ""
        }
      ]
    },
    {
      "name": "read",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "reader",
          "type_long": "ghidra.app.util.bin.BinaryReader",
          "type_short": "BinaryReader",
          "comment": ""
        },
        {
          "name": "addrSize",
          "type_long": "byte",
          "type_short": "byte",
          "comment": ""
        },
        {
          "name": "dwarf_format",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.app.util.bin.format.dwarf4.expression.DWARFExpression",
        "type_short": "DWARFExpression",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.app.util.bin.format.dwarf4.expression.DWARFExpressionException",
          "type_short": "DWARFExpressionException",
          "comment": ""
        }
      ]
    },
    {
      "name": "readOperandValue",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "operandType",
          "type_long": "ghidra.app.util.bin.format.dwarf4.expression.DWARFExpressionOperandType",
          "type_short": "DWARFExpressionOperandType",
          "comment": ""
        },
        {
          "name": "reader",
          "type_long": "ghidra.app.util.bin.BinaryReader",
          "type_short": "BinaryReader",
          "comment": ""
        },
        {
          "name": "addrSize",
          "type_long": "byte",
          "type_short": "byte",
          "comment": ""
        },
        {
          "name": "dwarf_format",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "readSizedBlobOperand",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "reader",
          "type_long": "ghidra.app.util.bin.BinaryReader",
          "type_short": "BinaryReader",
          "comment": ""
        },
        {
          "name": "previousOperandValue",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "byte[]",
        "type_short": "byte[]",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "operations",
          "type_long": "java.util.List\u003cghidra.app.util.bin.format.dwarf4.expression.DWARFExpressionOperation\u003e",
          "type_short": "List",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getOp",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "i",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.app.util.bin.format.dwarf4.expression.DWARFExpressionOperation",
        "type_short": "DWARFExpressionOperation",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getOpCount",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLastActiveOpIndex",
      "comment": "Returns the index of the last operation that is not a NOP.",
      "javadoc": "Returns the index of the last operation that is not a NOP.\n@return ",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "findLastActiveOpIndex",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "findOpByOffset",
      "comment": "Finds the index of an DWARFExpressionOperation by its offset\n from the beginning of the expression.\n ",
      "javadoc": "Finds the index of an {@link DWARFExpressionOperation operation} by its offset\n from the beginning of the expression.\n \u003cp\u003e\n@param offset\n@return -1 if there is no op at the specified offset",
      "static": false,
      "params": [
        {
          "name": "offset",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "-1 if there is no op at the specified offset"
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "caretPosition",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "newlines",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        },
        {
          "name": "offsets",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    }
  ]
}
