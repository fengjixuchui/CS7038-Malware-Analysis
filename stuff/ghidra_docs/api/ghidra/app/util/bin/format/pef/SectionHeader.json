{
  "name": "SectionHeader",
  "comment": "See Apple\u0027s -- PEFBinaryFormat\n \n struct PEFSectionHeader {\n     SInt32   nameOffset;             // Offset of name within the section name table, -1 \u003d none.\n     UInt32   defaultAddress;         // Default address, affects relocations.\n     UInt32   totalLength;            // Fully expanded size in bytes of the section contents.\n     UInt32   unpackedLength;         // Size in bytes of the \"initialized\" part of the contents.\n     UInt32   containerLength;        // Size in bytes of the raw data in the container.\n     UInt32   containerOffset;        // Offset of section\u0027s raw data.\n     UInt8    sectionKind;            // Kind of section contents/usage.\n     UInt8    shareKind;              // Sharing level, if a writeable section.\n     UInt8    alignment;              // Preferred alignment, expressed as log 2.\n     UInt8    reservedA;              // Reserved, must be zero.\n };\n ",
  "javadoc": "See Apple\u0027s -- PEFBinaryFormat\n \u003cpre\u003e\n struct PEFSectionHeader {\n     SInt32   nameOffset;             // Offset of name within the section name table, -1 \u003d\u0026gt; none.\n     UInt32   defaultAddress;         // Default address, affects relocations.\n     UInt32   totalLength;            // Fully expanded size in bytes of the section contents.\n     UInt32   unpackedLength;         // Size in bytes of the \"initialized\" part of the contents.\n     UInt32   containerLength;        // Size in bytes of the raw data in the container.\n     UInt32   containerOffset;        // Offset of section\u0027s raw data.\n     UInt8    sectionKind;            // Kind of section contents/usage.\n     UInt8    shareKind;              // Sharing level, if a writeable section.\n     UInt8    alignment;              // Preferred alignment, expressed as log 2.\n     UInt8    reservedA;              // Reserved, must be zero.\n };\n \u003c/pre\u003e",
  "static": false,
  "implements": [
    "ghidra.app.util.bin.StructConverter"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "NO_NAME_OFFSET",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "-1"
    },
    {
      "name": "_reader",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.bin.BinaryReader",
      "type_short": "BinaryReader",
      "constant_value": null
    },
    {
      "name": "_name",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "nameOffset",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "defaultAddress",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "totalLength",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "unpackedLength",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "containerLength",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "containerOffset",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "sectionKind",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "byte",
      "type_short": "byte",
      "constant_value": null
    },
    {
      "name": "shareKind",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "byte",
      "type_short": "byte",
      "constant_value": null
    },
    {
      "name": "alignment",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "byte",
      "type_short": "byte",
      "constant_value": null
    },
    {
      "name": "reservedA",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "byte",
      "type_short": "byte",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "reader",
          "type_long": "ghidra.app.util.bin.BinaryReader",
          "type_short": "BinaryReader",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getNameOffset",
      "comment": "The offset from the start of the section name table\n to the name of this section.\n A value of -1 indicates an unnamed section.",
      "javadoc": "The offset from the start of the section name table\n to the name of this section.\n A value of -1 indicates an unnamed section.\n@return the offset from the start of the section name table",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the offset from the start of the section name table"
      },
      "throws": []
    },
    {
      "name": "getName",
      "comment": "Returns the name of this section.",
      "javadoc": "Returns the name of this section.\n@return the name of this section",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the name of this section"
      },
      "throws": []
    },
    {
      "name": "getData",
      "comment": "Returns an input stream to underlying bytes of this section.",
      "javadoc": "Returns an input stream to underlying bytes of this section.\n@return an input stream to underlying bytes of this section\n@throws IOException if an i/o error occurs.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.io.InputStream",
        "type_short": "InputStream",
        "comment": "an input stream to underlying bytes of this section"
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if an i/o error occurs."
        }
      ]
    },
    {
      "name": "getUnpackedData",
      "comment": "Unpack the data in a packed section.\n Calling this method is only valid on a packed section.",
      "javadoc": "Unpack the data in a packed section.\n Calling this method is only valid on a packed section.\n@param monitor the task monitor\n@return the unpacked data\n@throws IOException if an i/o error occurs or the section is not packed.",
      "static": false,
      "params": [
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": "the task monitor"
        }
      ],
      "return": {
        "type_long": "byte[]",
        "type_short": "byte[]",
        "comment": "the unpacked data"
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if an i/o error occurs or the section is not packed."
        }
      ]
    },
    {
      "name": "unpackNextValue",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "input",
          "type_long": "java.io.InputStream",
          "type_short": "InputStream",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getDefaultAddress",
      "comment": "Returns the preferred address of this section.",
      "javadoc": "Returns the preferred address of this section.\n@return the preferred address of this section",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the preferred address of this section"
      },
      "throws": []
    },
    {
      "name": "getTotalLength",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getUnpackedLength",
      "comment": "Returns the size in bytes of the \"initialized\" part of the contents.",
      "javadoc": "Returns the size in bytes of the \"initialized\" part of the contents.\n@return the size in bytes of the \"initialized\" part of the contents",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the size in bytes of the \"initialized\" part of the contents"
      },
      "throws": []
    },
    {
      "name": "getContainerLength",
      "comment": "Returns the size in bytes of the raw data in the container.",
      "javadoc": "Returns the size in bytes of the raw data in the container.\n@return the size in bytes of the raw data in the container",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the size in bytes of the raw data in the container"
      },
      "throws": []
    },
    {
      "name": "getContainerOffset",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSectionKind",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.util.bin.format.pef.SectionKind",
        "type_short": "SectionKind",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getShareKind",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.util.bin.format.pef.SectionShareKind",
        "type_short": "SectionShareKind",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getAlignment",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "byte",
        "type_short": "byte",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getReservedA",
      "comment": "Reserved!",
      "javadoc": "Reserved!\n@return Reserved!",
      "static": false,
      "params": [],
      "return": {
        "type_long": "byte",
        "type_short": "byte",
        "comment": "Reserved!"
      },
      "throws": []
    },
    {
      "name": "isRead",
      "comment": "Returns true if this section has read permissions.",
      "javadoc": "Returns true if this section has read permissions.\n@return true if this section has read permissions",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if this section has read permissions"
      },
      "throws": []
    },
    {
      "name": "isWrite",
      "comment": "Returns true if this section has write permissions.",
      "javadoc": "Returns true if this section has write permissions.\n@return true if this section has write permissions",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if this section has write permissions"
      },
      "throws": []
    },
    {
      "name": "isExecute",
      "comment": "Returns true if this section has execute permissions.",
      "javadoc": "Returns true if this section has execute permissions.\n@return true if this section has execute permissions",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if this section has execute permissions"
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toDataType",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.data.DataType",
        "type_short": "DataType",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.DuplicateNameException",
          "type_short": "DuplicateNameException",
          "comment": ""
        },
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    }
  ]
}
