{
  "name": "DebugFixup",
  "comment": "A possible implementation of the FIXUP debug directory. \n It may be inaccurate and/or incomplete.",
  "javadoc": "A possible implementation of the FIXUP debug directory. \n It may be inaccurate and/or incomplete.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "elements",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.bin.format.pe.debug.DebugFixupElement[]",
      "type_short": "ghidra.app.util.bin.format.pe.debug.DebugFixupElement[]",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "createDebugFixup",
      "comment": "Constructor",
      "javadoc": "Constructor\n@param reader the binary reader\n@param debugDir the debug directory associated to this FIXUP\n@param ntHeader",
      "static": true,
      "params": [
        {
          "name": "reader",
          "type_long": "ghidra.app.util.bin.format.FactoryBundledWithBinaryReader",
          "type_short": "FactoryBundledWithBinaryReader",
          "comment": "the binary reader"
        },
        {
          "name": "debugDir",
          "type_long": "ghidra.app.util.bin.format.pe.debug.DebugDirectory",
          "type_short": "DebugDirectory",
          "comment": "the debug directory associated to this FIXUP"
        },
        {
          "name": "validator",
          "type_long": "ghidra.app.util.bin.format.pe.OffsetValidator",
          "type_short": "OffsetValidator",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.app.util.bin.format.pe.debug.DebugFixup",
        "type_short": "DebugFixup",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.",
      "javadoc": "DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "initDebugFixup",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "reader",
          "type_long": "ghidra.app.util.bin.format.FactoryBundledWithBinaryReader",
          "type_short": "FactoryBundledWithBinaryReader",
          "comment": ""
        },
        {
          "name": "debugDir",
          "type_long": "ghidra.app.util.bin.format.pe.debug.DebugDirectory",
          "type_short": "DebugDirectory",
          "comment": ""
        },
        {
          "name": "validator",
          "type_long": "ghidra.app.util.bin.format.pe.OffsetValidator",
          "type_short": "OffsetValidator",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getDebugFixupElements",
      "comment": "Returns the array of FIXUP elements associated with this fixup debug directory.",
      "javadoc": "Returns the array of FIXUP elements associated with this fixup debug directory.\n@return the array of FIXUP elements associated with this fixup debug directory",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.util.bin.format.pe.debug.DebugFixupElement[]",
        "type_short": "ghidra.app.util.bin.format.pe.debug.DebugFixupElement[]",
        "comment": "the array of FIXUP elements associated with this fixup debug directory"
      },
      "throws": []
    }
  ]
}
