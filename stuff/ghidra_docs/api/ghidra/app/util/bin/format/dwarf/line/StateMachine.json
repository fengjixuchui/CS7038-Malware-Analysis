{
  "name": "StateMachine",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "address",
      "comment": "The program-counter value corresponding to a machine instruction\n generated by the compiler.",
      "javadoc": "The program-counter value corresponding to a machine instruction\n generated by the compiler.",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "file",
      "comment": "An unsigned integer indicating the identity of the source file\n corresponding to a machine instruction.",
      "javadoc": "An unsigned integer indicating the identity of the source file\n corresponding to a machine instruction.",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "line",
      "comment": "An unsigned integer indicating a source line number. Lines are\n numbered beginning at 1. The compiler may emit the value 0 in cases\n where an instruction cannot be attributed to any source line.",
      "javadoc": "An unsigned integer indicating a source line number. Lines are\n numbered beginning at 1. The compiler may emit the value 0 in cases\n where an instruction cannot be attributed to any source line.",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "column",
      "comment": "An unsigned integer indicating a column number within a source line.\n Columns are numbered beginning at 1. The value 0 is reserved to\n indicate that a statement begins at the ??left edge?? of the line.",
      "javadoc": "An unsigned integer indicating a column number within a source line.\n Columns are numbered beginning at 1. The value 0 is reserved to\n indicate that a statement begins at the ??left edge?? of the line.",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "isStatement",
      "comment": "A boolean indicating that the current instruction is the beginning of a\n statement.",
      "javadoc": "A boolean indicating that the current instruction is the beginning of a\n statement.",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "isBasicBlock",
      "comment": "A boolean indicating that the current instruction is the beginning of a\n basic block.",
      "javadoc": "A boolean indicating that the current instruction is the beginning of a\n basic block.",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "isEndSequence",
      "comment": "A boolean indicating that the current address is that of the first byte after\n the end of a sequence of target machine instructions.",
      "javadoc": "A boolean indicating that the current address is that of the first byte after\n the end of a sequence of target machine instructions.",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "reset",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "defaultIsStatement",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "print",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
