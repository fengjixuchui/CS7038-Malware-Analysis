{
  "name": "LoadConfigDirectory",
  "comment": "A class to represent the IMAGE_LOAD_CONFIG_DIRECTORY\n data structure which is defined in winnt.h.",
  "javadoc": "A class to represent the \u003ccode\u003eIMAGE_LOAD_CONFIG_DIRECTORY\u003c/code\u003e\n data structure which is defined in \u003cb\u003e\u003ccode\u003ewinnt.h\u003c/code\u003e\u003c/b\u003e.",
  "static": false,
  "implements": [
    "ghidra.app.util.bin.StructConverter"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "NAME32",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"IMAGE_LOAD_CONFIG_DIRECTORY32\""
    },
    {
      "name": "NAME64",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"IMAGE_LOAD_CONFIG_DIRECTORY64\""
    },
    {
      "name": "size",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "timeDateStamp",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "majorVersion",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "short",
      "type_short": "short",
      "constant_value": null
    },
    {
      "name": "minorVersion",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "short",
      "type_short": "short",
      "constant_value": null
    },
    {
      "name": "globalFlagsClear",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "globalFlagsSet",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "criticalSectionDefaultTimeout",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "deCommitFreeBlockThreshold",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "deCommitTotalFreeThreshold",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "lockPrefixTable",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "maximumAllocationSize",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "virtualMemoryThreshold",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "processAffinityMask",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "processHeapFlags",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "csdVersion",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "short",
      "type_short": "short",
      "constant_value": null
    },
    {
      "name": "dependentLoadFlags",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "short",
      "type_short": "short",
      "constant_value": null
    },
    {
      "name": "editList",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "securityCookie",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "seHandlerTable",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "seHandlerCount",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "guardCfcCheckFunctionPointer",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "guardCfDispatchFunctionPointer",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "guardCfFunctionTable",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "guardCfFunctionCount",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "guardFlags",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.bin.format.pe.LoadConfigDirectory.GuardFlags",
      "type_short": "GuardFlags",
      "constant_value": null
    },
    {
      "name": "codeIntegrity",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.bin.format.pe.LoadConfigDirectory.CodeIntegrity",
      "type_short": "CodeIntegrity",
      "constant_value": null
    },
    {
      "name": "guardAddressTakenIatEntryTable",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "guardAddressTakenIatEntryCount",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "guardLongJumpTargetTable",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "guardLongJumpTargetCount",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "dynamicValueRelocTable",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "chpeMetadataPointer",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "guardRfFailureRoutine",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "guardRfFailureRoutineFunctionPointer",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "dynamicValueRelocTableOffset",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "dynamicValueRelocTableSection",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "short",
      "type_short": "short",
      "constant_value": null
    },
    {
      "name": "reserved1",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "short",
      "type_short": "short",
      "constant_value": null
    },
    {
      "name": "guardRfVerifyStackPointerFunctionPointer",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "hotPatchTableOffset",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "reserved2",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "reserved3",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "is64bit",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "createLoadConfigDirectory",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "reader",
          "type_long": "ghidra.app.util.bin.format.FactoryBundledWithBinaryReader",
          "type_short": "FactoryBundledWithBinaryReader",
          "comment": ""
        },
        {
          "name": "index",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "oh",
          "type_long": "ghidra.app.util.bin.format.pe.OptionalHeader",
          "type_short": "OptionalHeader",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.app.util.bin.format.pe.LoadConfigDirectory",
        "type_short": "LoadConfigDirectory",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.",
      "javadoc": "DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "initLoadConfigDirectory",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "reader",
          "type_long": "ghidra.app.util.bin.format.FactoryBundledWithBinaryReader",
          "type_short": "FactoryBundledWithBinaryReader",
          "comment": ""
        },
        {
          "name": "index",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "oh",
          "type_long": "ghidra.app.util.bin.format.pe.OptionalHeader",
          "type_short": "OptionalHeader",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getSize",
      "comment": "Returns the size (in bytes) of this structure.",
      "javadoc": "Returns the size (in bytes) of this structure.\n@return the size (in bytes) of this structure",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the size (in bytes) of this structure"
      },
      "throws": []
    },
    {
      "name": "getCriticalSectionDefaultTimeout",
      "comment": "Returns the critical section default time-out value.",
      "javadoc": "Returns the critical section default time-out value.\n@return the critical section default time-out value",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the critical section default time-out value"
      },
      "throws": []
    },
    {
      "name": "getSeHandlerTable",
      "comment": "Gets the safe exception handler table.",
      "javadoc": "Gets the safe exception handler table.\n@return the safe exception handler table.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": "the safe exception handler table."
      },
      "throws": []
    },
    {
      "name": "getSeHandlerCount",
      "comment": "Gets the safe exception handler table count.",
      "javadoc": "Gets the safe exception handler table count.\n@return the safe exception handler table count.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": "the safe exception handler table count."
      },
      "throws": []
    },
    {
      "name": "getCfgGuardFlags",
      "comment": "Gets the ControlFlowGuard GuardFlags.",
      "javadoc": "Gets the ControlFlowGuard {@link GuardFlags}.\n@return The ControlFlowGuard {@link GuardFlags}.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.util.bin.format.pe.LoadConfigDirectory.GuardFlags",
        "type_short": "GuardFlags",
        "comment": "The ControlFlowGuard GuardFlags."
      },
      "throws": []
    },
    {
      "name": "getCfgCheckFunctionPointer",
      "comment": "Gets the ControlFlowGuard check function pointer address.",
      "javadoc": "Gets the ControlFlowGuard check function pointer address.\n@return The ControlFlowGuard check function pointer address.  \n   Could be 0 if ControlFlowGuard is not being used.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": "The ControlFlowGuard check function pointer address.  \n   Could be 0 if ControlFlowGuard is not being used."
      },
      "throws": []
    },
    {
      "name": "getCfgDispatchFunctionPointer",
      "comment": "Gets the ControlFlowGuard dispatch function pointer address.",
      "javadoc": "Gets the ControlFlowGuard dispatch function pointer address.\n@return The ControlFlowGuard dispatch function pointer address.  \n   Could be 0 if ControlFlowGuard is not being used.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": "The ControlFlowGuard dispatch function pointer address.  \n   Could be 0 if ControlFlowGuard is not being used."
      },
      "throws": []
    },
    {
      "name": "getCfgFunctionTablePointer",
      "comment": "Gets the ControlFlowGuard function table pointer address.",
      "javadoc": "Gets the ControlFlowGuard function table pointer address.\n@return The ControlFlowGuard function table function pointer address.  \n   Could be 0 if ControlFlowGuard is not being used.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": "The ControlFlowGuard function table function pointer address.  \n   Could be 0 if ControlFlowGuard is not being used."
      },
      "throws": []
    },
    {
      "name": "getCfgFunctionCount",
      "comment": "Gets the ControlFlowGuard function count.",
      "javadoc": "Gets the ControlFlowGuard function count.\n@return The ControlFlowGuard function count.  Could be 0 if ControlFlowGuard is \n   not being used.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": "The ControlFlowGuard function count.  Could be 0 if ControlFlowGuard is \n   not being used."
      },
      "throws": []
    },
    {
      "name": "getGuardAddressIatTableTablePointer",
      "comment": "Gets the ControlFlowGuard IAT table pointer address.",
      "javadoc": "Gets the ControlFlowGuard IAT table pointer address.\n@return The ControlFlowGuard IAT table function pointer address. Could be 0 if ControlFlowGuard is not being used",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": "The ControlFlowGuard IAT table function pointer address. Could be 0 if ControlFlowGuard is not being used"
      },
      "throws": []
    },
    {
      "name": "getGuardAddressIatTableCount",
      "comment": "Gets the ControlFlowGuard IAT entries count.",
      "javadoc": "Gets the ControlFlowGuard IAT entries count.\n@return The ControlFlowGuard IAT entries count.  Could be 0 if ControlFlowGuard is not being used",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": "The ControlFlowGuard IAT entries count.  Could be 0 if ControlFlowGuard is not being used"
      },
      "throws": []
    },
    {
      "name": "getRfgFailureRoutine",
      "comment": "Gets the ReturnFlowGuard failure routine address.",
      "javadoc": "Gets the ReturnFlowGuard failure routine address.\n@return The ReturnFlowGuard failure routine address.\n   Could be 0 if ReturnFlowGuard is not being used.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": "The ReturnFlowGuard failure routine address.\n   Could be 0 if ReturnFlowGuard is not being used."
      },
      "throws": []
    },
    {
      "name": "getRfgFailureRoutineFunctionPointer",
      "comment": "Gets the ReturnFlowGuard failure routine function pointer address.",
      "javadoc": "Gets the ReturnFlowGuard failure routine function pointer address.\n@return The ReturnFlowGuard failure routine function pointer address.\n   Could be 0 if ReturnFlowGuard is not being used.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": "The ReturnFlowGuard failure routine function pointer address.\n   Could be 0 if ReturnFlowGuard is not being used."
      },
      "throws": []
    },
    {
      "name": "getRfgVerifyStackPointerFunctionPointer",
      "comment": "Gets the ReturnFlowGuard verify stack pointer function pointer address.",
      "javadoc": "Gets the ReturnFlowGuard verify stack pointer function pointer address.\n@return The ReturnFlowGuard verify stack pointer function pointer address.\n   Could be 0 if ReturnFlowGuard is not being used.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": "The ReturnFlowGuard verify stack pointer function pointer address.\n   Could be 0 if ReturnFlowGuard is not being used."
      },
      "throws": []
    },
    {
      "name": "toDataType",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.data.DataType",
        "type_short": "DataType",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.DuplicateNameException",
          "type_short": "DuplicateNameException",
          "comment": ""
        }
      ]
    },
    {
      "name": "readPointer",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "reader",
          "type_long": "ghidra.app.util.bin.BinaryReader",
          "type_short": "BinaryReader",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    }
  ]
}
