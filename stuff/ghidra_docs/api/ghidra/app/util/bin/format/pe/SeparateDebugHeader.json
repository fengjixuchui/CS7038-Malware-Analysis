{
  "name": "SeparateDebugHeader",
  "comment": "\n typedef struct _IMAGE_SEPARATE_DEBUG_HEADER {\n     WORD        Signature;\n     WORD        Flags;\n     WORD        Machine;\n     WORD        Characteristics;\n     DWORD       TimeDateStamp;\n     DWORD       CheckSum;\n     DWORD       ImageBase;\n     DWORD       SizeOfImage;\n     DWORD       NumberOfSections;\n     DWORD       ExportedNamesSize;\n     DWORD       DebugDirectorySize;\n     DWORD       SectionAlignment;\n     DWORD       Reserved[2];\n } IMAGE_SEPARATE_DEBUG_HEADER, *PIMAGE_SEPARATE_DEBUG_HEADER;\n ",
  "javadoc": "\u003cpre\u003e\n typedef struct _IMAGE_SEPARATE_DEBUG_HEADER {\n     WORD        Signature;\n     WORD        Flags;\n     WORD        Machine;\n     WORD        Characteristics;\n     DWORD       TimeDateStamp;\n     DWORD       CheckSum;\n     DWORD       ImageBase;\n     DWORD       SizeOfImage;\n     DWORD       NumberOfSections;\n     DWORD       ExportedNamesSize;\n     DWORD       DebugDirectorySize;\n     DWORD       SectionAlignment;\n     DWORD       Reserved[2];\n } IMAGE_SEPARATE_DEBUG_HEADER, *PIMAGE_SEPARATE_DEBUG_HEADER;\n \u003c/pre\u003e",
  "static": false,
  "implements": [
    "ghidra.app.util.bin.format.pe.OffsetValidator"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "IMAGE_SEPARATE_DEBUG_SIGNATURE",
      "comment": "The magic number for separate debug files.",
      "javadoc": "The magic number for separate debug files.",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "18756"
    },
    {
      "name": "IMAGE_SEPARATE_DEBUG_SIGNATURE_MAC",
      "comment": "The magic number for separate debug files on MAC.",
      "javadoc": "The magic number for separate debug files on MAC.",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "17481"
    },
    {
      "name": "signature",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "short",
      "type_short": "short",
      "constant_value": null
    },
    {
      "name": "flags",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "short",
      "type_short": "short",
      "constant_value": null
    },
    {
      "name": "machine",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "short",
      "type_short": "short",
      "constant_value": null
    },
    {
      "name": "characteristics",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "short",
      "type_short": "short",
      "constant_value": null
    },
    {
      "name": "timeDateStamp",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "checkSum",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "imageBase",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "sizeOfImage",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "numberOfSections",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "exportedNamesSize",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "debugDirectorySize",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "sectionAlignment",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "reserved",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int[]",
      "type_short": "int[]",
      "constant_value": null
    },
    {
      "name": "sections",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.bin.format.pe.SectionHeader[]",
      "type_short": "ghidra.app.util.bin.format.pe.SectionHeader[]",
      "constant_value": null
    },
    {
      "name": "exportedNames",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String[]",
      "type_short": "java.lang.String[]",
      "constant_value": null
    },
    {
      "name": "parser",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.bin.format.pe.debug.DebugDirectoryParser",
      "type_short": "DebugDirectoryParser",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new separate debug header using the specified byte provider.",
      "javadoc": "Constructs a new separate debug header using the specified byte provider.\n@param bp the byte provider\n@throws IOException if an I/O error occurs.",
      "static": false,
      "params": [
        {
          "name": "factory",
          "type_long": "generic.continues.GenericFactory",
          "type_short": "GenericFactory",
          "comment": ""
        },
        {
          "name": "bp",
          "type_long": "ghidra.app.util.bin.ByteProvider",
          "type_short": "ByteProvider",
          "comment": "the byte provider"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if an I/O error occurs."
        }
      ]
    },
    {
      "name": "getCharacteristics",
      "comment": "Returns the characteristics.",
      "javadoc": "Returns the characteristics.\n@return the characteristics",
      "static": false,
      "params": [],
      "return": {
        "type_long": "short",
        "type_short": "short",
        "comment": "the characteristics"
      },
      "throws": []
    },
    {
      "name": "getCheckSum",
      "comment": "Returns the check sum.",
      "javadoc": "Returns the check sum.\n@return the check sum",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the check sum"
      },
      "throws": []
    },
    {
      "name": "getDebugDirectorySize",
      "comment": "Returns the debug directory size.",
      "javadoc": "Returns the debug directory size.\n@return the debug directory size",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the debug directory size"
      },
      "throws": []
    },
    {
      "name": "getExportedNamesSize",
      "comment": "Returns the exported names size.",
      "javadoc": "Returns the exported names size.\n@return the exported names size",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the exported names size"
      },
      "throws": []
    },
    {
      "name": "getFlags",
      "comment": "Returns the flags.",
      "javadoc": "Returns the flags.\n@return the flags",
      "static": false,
      "params": [],
      "return": {
        "type_long": "short",
        "type_short": "short",
        "comment": "the flags"
      },
      "throws": []
    },
    {
      "name": "getImageBase",
      "comment": "Returns the image base.",
      "javadoc": "Returns the image base.\n@return the image base",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the image base"
      },
      "throws": []
    },
    {
      "name": "getMachine",
      "comment": "Returns the machine type (or processor).",
      "javadoc": "Returns the machine type (or processor).\n@return the machine type",
      "static": false,
      "params": [],
      "return": {
        "type_long": "short",
        "type_short": "short",
        "comment": "the machine type"
      },
      "throws": []
    },
    {
      "name": "getMachineName",
      "comment": "Returns the machine name (or processor name).",
      "javadoc": "Returns the machine name (or processor name).\n@return the machine name",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the machine name"
      },
      "throws": []
    },
    {
      "name": "getNumberOfSections",
      "comment": "Returns the number of sections.",
      "javadoc": "Returns the number of sections.\n@return the number of sections",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the number of sections"
      },
      "throws": []
    },
    {
      "name": "getReserved",
      "comment": "Returns the reserved int array.",
      "javadoc": "Returns the reserved int array.\n@return the reserved int array",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int[]",
        "type_short": "int[]",
        "comment": "the reserved int array"
      },
      "throws": []
    },
    {
      "name": "getSectionAlignment",
      "comment": "Returns the section alignment value.",
      "javadoc": "Returns the section alignment value.\n@return the section alignment value",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the section alignment value"
      },
      "throws": []
    },
    {
      "name": "getSignature",
      "comment": "Returns the signature (or magic number).",
      "javadoc": "Returns the signature (or magic number).\n@return the signature",
      "static": false,
      "params": [],
      "return": {
        "type_long": "short",
        "type_short": "short",
        "comment": "the signature"
      },
      "throws": []
    },
    {
      "name": "getSizeOfImage",
      "comment": "Returns the size of the image.",
      "javadoc": "Returns the size of the image.\n@return the size of the image",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the size of the image"
      },
      "throws": []
    },
    {
      "name": "getTimeDateStamp",
      "comment": "Returns the time date stamp.",
      "javadoc": "Returns the time date stamp.\n@return the time date stamp",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the time date stamp"
      },
      "throws": []
    },
    {
      "name": "getParser",
      "comment": "Returns the debug directory parser.",
      "javadoc": "Returns the debug directory parser.\n@return the debug directory parser",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.util.bin.format.pe.debug.DebugDirectoryParser",
        "type_short": "DebugDirectoryParser",
        "comment": "the debug directory parser"
      },
      "throws": []
    },
    {
      "name": "checkPointer",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "ptr",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "checkRVA",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "rva",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    }
  ]
}
