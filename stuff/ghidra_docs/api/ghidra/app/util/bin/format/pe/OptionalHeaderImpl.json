{
  "name": "OptionalHeaderImpl",
  "comment": "\n typedef struct _IMAGE_OPTIONAL_HEADER {\n     WORD    Magic;\t\t\t\t\t\t\t\t\t// MANDATORY\n     BYTE    MajorLinkerVersion;\n     BYTE    MinorLinkerVersion;\n     DWORD   SizeOfCode;\n     DWORD   SizeOfInitializedData;\n     DWORD   SizeOfUninitializedData;\n     DWORD   AddressOfEntryPoint;\t\t\t\t\t\t// MANDATORY\n     DWORD   BaseOfCode;\n     DWORD   BaseOfData;\n     DWORD   ImageBase;\t\t\t\t\t\t\t\t// MANDATORY\n     DWORD   SectionAlignment;\t\t\t\t\t\t// MANDATORY\n     DWORD   FileAlignment;\t\t\t\t\t\t\t// MANDATORY\n     WORD    MajorOperatingSystemVersion;\t\t\t\t// MANDATORY\n     WORD    MinorOperatingSystemVersion;\n     WORD    MajorImageVersion;\n     WORD    MinorImageVersion;\n     WORD    MajorSubsystemVersion;\n     WORD    MinorSubsystemVersion;\n     DWORD   Win32VersionValue;\n     DWORD   SizeOfImage;\t\t\t\t\t\t\t\t// MANDATORY\n     DWORD   SizeOfHeaders;\t\t\t\t\t\t\t// MANDATORY\n     DWORD   CheckSum;\n     WORD    Subsystem;\t\t\t\t\t\t\t\t// MANDATORY\n     WORD    DllCharacteristics;\n     DWORD   SizeOfStackReserve;\n     DWORD   SizeOfStackCommit;\n     DWORD   SizeOfHeapReserve;\n     DWORD   SizeOfHeapCommit;\n     DWORD   LoaderFlags;\n     DWORD   NumberOfRvaAndSizes;\t\t\t\t\t\t// USED\n     IMAGE_DATA_DIRECTORY DataDirectory[IMAGE_NUMBEROF_DIRECTORY_ENTRIES];\n };\n \n \n \n typedef struct _IMAGE_OPTIONAL_HEADER64 {\n     WORD        Magic;\n     BYTE        MajorLinkerVersion;\n     BYTE        MinorLinkerVersion;\n     DWORD       SizeOfCode;\n     DWORD       SizeOfInitializedData;\n     DWORD       SizeOfUninitializedData;\n     DWORD       AddressOfEntryPoint;\n     DWORD       BaseOfCode;\n     ULONGLONG   ImageBase;\n     DWORD       SectionAlignment;\n     DWORD       FileAlignment;\n     WORD        MajorOperatingSystemVersion;\n     WORD        MinorOperatingSystemVersion;\n     WORD        MajorImageVersion;\n     WORD        MinorImageVersion;\n     WORD        MajorSubsystemVersion;\n     WORD        MinorSubsystemVersion;\n     DWORD       Win32VersionValue;\n     DWORD       SizeOfImage;\n     DWORD       SizeOfHeaders;\n     DWORD       CheckSum;\n     WORD        Subsystem;\n     WORD        DllCharacteristics;\n     ULONGLONG   SizeOfStackReserve;\n     ULONGLONG   SizeOfStackCommit;\n     ULONGLONG   SizeOfHeapReserve;\n     ULONGLONG   SizeOfHeapCommit;\n     DWORD       LoaderFlags;\n     DWORD       NumberOfRvaAndSizes;\n     IMAGE_DATA_DIRECTORY DataDirectory[IMAGE_NUMBEROF_DIRECTORY_ENTRIES];\n };\n ",
  "javadoc": "\u003cpre\u003e\n typedef struct _IMAGE_OPTIONAL_HEADER {\n     WORD    Magic;\t\t\t\t\t\t\t\t\t// MANDATORY\n     BYTE    MajorLinkerVersion;\n     BYTE    MinorLinkerVersion;\n     DWORD   SizeOfCode;\n     DWORD   SizeOfInitializedData;\n     DWORD   SizeOfUninitializedData;\n     DWORD   AddressOfEntryPoint;\t\t\t\t\t\t// MANDATORY\n     DWORD   BaseOfCode;\n     DWORD   BaseOfData;\n     DWORD   ImageBase;\t\t\t\t\t\t\t\t// MANDATORY\n     DWORD   SectionAlignment;\t\t\t\t\t\t// MANDATORY\n     DWORD   FileAlignment;\t\t\t\t\t\t\t// MANDATORY\n     WORD    MajorOperatingSystemVersion;\t\t\t\t// MANDATORY\n     WORD    MinorOperatingSystemVersion;\n     WORD    MajorImageVersion;\n     WORD    MinorImageVersion;\n     WORD    MajorSubsystemVersion;\n     WORD    MinorSubsystemVersion;\n     DWORD   Win32VersionValue;\n     DWORD   SizeOfImage;\t\t\t\t\t\t\t\t// MANDATORY\n     DWORD   SizeOfHeaders;\t\t\t\t\t\t\t// MANDATORY\n     DWORD   CheckSum;\n     WORD    Subsystem;\t\t\t\t\t\t\t\t// MANDATORY\n     WORD    DllCharacteristics;\n     DWORD   SizeOfStackReserve;\n     DWORD   SizeOfStackCommit;\n     DWORD   SizeOfHeapReserve;\n     DWORD   SizeOfHeapCommit;\n     DWORD   LoaderFlags;\n     DWORD   NumberOfRvaAndSizes;\t\t\t\t\t\t// USED\n     IMAGE_DATA_DIRECTORY DataDirectory[IMAGE_NUMBEROF_DIRECTORY_ENTRIES];\n };\n \u003c/pre\u003e\n \n \u003cpre\u003e\n typedef struct _IMAGE_OPTIONAL_HEADER64 {\n     WORD        Magic;\n     BYTE        MajorLinkerVersion;\n     BYTE        MinorLinkerVersion;\n     DWORD       SizeOfCode;\n     DWORD       SizeOfInitializedData;\n     DWORD       SizeOfUninitializedData;\n     DWORD       AddressOfEntryPoint;\n     DWORD       BaseOfCode;\n     ULONGLONG   ImageBase;\n     DWORD       SectionAlignment;\n     DWORD       FileAlignment;\n     WORD        MajorOperatingSystemVersion;\n     WORD        MinorOperatingSystemVersion;\n     WORD        MajorImageVersion;\n     WORD        MinorImageVersion;\n     WORD        MajorSubsystemVersion;\n     WORD        MinorSubsystemVersion;\n     DWORD       Win32VersionValue;\n     DWORD       SizeOfImage;\n     DWORD       SizeOfHeaders;\n     DWORD       CheckSum;\n     WORD        Subsystem;\n     WORD        DllCharacteristics;\n     ULONGLONG   SizeOfStackReserve;\n     ULONGLONG   SizeOfStackCommit;\n     ULONGLONG   SizeOfHeapReserve;\n     ULONGLONG   SizeOfHeapCommit;\n     DWORD       LoaderFlags;\n     DWORD       NumberOfRvaAndSizes;\n     IMAGE_DATA_DIRECTORY DataDirectory[IMAGE_NUMBEROF_DIRECTORY_ENTRIES];\n };\n \u003c/pre\u003e",
  "static": false,
  "implements": [
    "ghidra.app.util.bin.format.pe.OptionalHeader"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "magic",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "short",
      "type_short": "short",
      "constant_value": null
    },
    {
      "name": "majorLinkerVersion",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "byte",
      "type_short": "byte",
      "constant_value": null
    },
    {
      "name": "minorLinkerVersion",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "byte",
      "type_short": "byte",
      "constant_value": null
    },
    {
      "name": "sizeOfCode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "sizeOfInitializedData",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "sizeOfUninitializedData",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "addressOfEntryPoint",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "baseOfCode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "baseOfData",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "imageBase",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "sectionAlignment",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "fileAlignment",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "majorOperatingSystemVersion",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "short",
      "type_short": "short",
      "constant_value": null
    },
    {
      "name": "minorOperatingSystemVersion",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "short",
      "type_short": "short",
      "constant_value": null
    },
    {
      "name": "majorImageVersion",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "short",
      "type_short": "short",
      "constant_value": null
    },
    {
      "name": "minorImageVersion",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "short",
      "type_short": "short",
      "constant_value": null
    },
    {
      "name": "majorSubsystemVersion",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "short",
      "type_short": "short",
      "constant_value": null
    },
    {
      "name": "minorSubsystemVersion",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "short",
      "type_short": "short",
      "constant_value": null
    },
    {
      "name": "win32VersionValue",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "sizeOfImage",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "sizeOfHeaders",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "checkSum",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "subsystem",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "short",
      "type_short": "short",
      "constant_value": null
    },
    {
      "name": "dllCharacteristics",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "short",
      "type_short": "short",
      "constant_value": null
    },
    {
      "name": "sizeOfStackReserve",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "sizeOfStackCommit",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "sizeOfHeapReserve",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "sizeOfHeapCommit",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "loaderFlags",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "numberOfRvaAndSizes",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "dataDirectory",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.bin.format.pe.DataDirectory[]",
      "type_short": "ghidra.app.util.bin.format.pe.DataDirectory[]",
      "constant_value": null
    },
    {
      "name": "ntHeader",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.bin.format.pe.NTHeader",
      "type_short": "NTHeader",
      "constant_value": null
    },
    {
      "name": "reader",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.bin.format.FactoryBundledWithBinaryReader",
      "type_short": "FactoryBundledWithBinaryReader",
      "constant_value": null
    },
    {
      "name": "startIndex",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "startOfDataDirs",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "originalImageBase",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "wasRebased",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "createOptionalHeader",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "ntHeader",
          "type_long": "ghidra.app.util.bin.format.pe.NTHeader",
          "type_short": "NTHeader",
          "comment": ""
        },
        {
          "name": "reader",
          "type_long": "ghidra.app.util.bin.format.FactoryBundledWithBinaryReader",
          "type_short": "FactoryBundledWithBinaryReader",
          "comment": ""
        },
        {
          "name": "startIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.app.util.bin.format.pe.OptionalHeader",
        "type_short": "OptionalHeader",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.",
      "javadoc": "DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "initOptionalHeaderImpl",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "ntHeader",
          "type_long": "ghidra.app.util.bin.format.pe.NTHeader",
          "type_short": "NTHeader",
          "comment": ""
        },
        {
          "name": "reader",
          "type_long": "ghidra.app.util.bin.format.FactoryBundledWithBinaryReader",
          "type_short": "FactoryBundledWithBinaryReader",
          "comment": ""
        },
        {
          "name": "startIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "is64bit",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getImageBase",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getOriginalImageBase",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getAddressOfEntryPoint",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSizeOfCode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setSizeOfCode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "size",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSizeOfInitializedData",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setSizeOfInitializedData",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "size",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSizeOfUninitializedData",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setSizeOfUninitializedData",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "size",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getBaseOfCode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getBaseOfData",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSizeOfImage",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setSizeOfImage",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "size",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSizeOfHeaders",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setSizeOfHeaders",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "size",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getNumberOfRvaAndSizes",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getMajorOperatingSystemVersion",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "short",
        "type_short": "short",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getMinorOperatingSystemVersion",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "short",
        "type_short": "short",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "processDataDirectories",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getDataDirectories",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.util.bin.format.pe.DataDirectory[]",
        "type_short": "ghidra.app.util.bin.format.pe.DataDirectory[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSectionAlignment",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFileAlignment",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "parse",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "toDataType",
      "comment": "",
      "javadoc": "@see ghidra.app.util.bin.StructConverter#toDataType()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.data.DataType",
        "type_short": "DataType",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.DuplicateNameException",
          "type_short": "DuplicateNameException",
          "comment": ""
        }
      ]
    },
    {
      "name": "writeHeader",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "raf",
          "type_long": "java.io.RandomAccessFile",
          "type_short": "RandomAccessFile",
          "comment": ""
        },
        {
          "name": "dc",
          "type_long": "ghidra.util.DataConverter",
          "type_short": "DataConverter",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "validateDataDirectories",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "wasRebased",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isCLI",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getMajorLinkerVersion",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "byte",
        "type_short": "byte",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getMinorLinkerVersion",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "byte",
        "type_short": "byte",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getMajorImageVersion",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "short",
        "type_short": "short",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getMinorImageVersion",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "short",
        "type_short": "short",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getMajorSubsystemVersion",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "short",
        "type_short": "short",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getMinorSubsystemVersion",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "short",
        "type_short": "short",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getWin32VersionValue",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getChecksum",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSubsystem",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDllCharacteristics",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "short",
        "type_short": "short",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSizeOfStackReserve",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSizeOfStackCommit",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSizeOfHeapReserve",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSizeOfHeapCommit",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLoaderFlags",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    }
  ]
}
