{
  "name": "ResourceDataEntry",
  "comment": "\n typedef struct _IMAGE_RESOURCE_DATA_ENTRY {\n     DWORD   OffsetToData;\n     DWORD   Size;\n     DWORD   CodePage;\n     DWORD   Reserved;\n };\n ",
  "javadoc": "\u003cpre\u003e\n typedef struct _IMAGE_RESOURCE_DATA_ENTRY {\n     DWORD   OffsetToData;\n     DWORD   Size;\n     DWORD   CodePage;\n     DWORD   Reserved;\n };\n \u003c/pre\u003e",
  "static": false,
  "implements": [
    "ghidra.app.util.bin.StructConverter"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "NAME",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"IMAGE_RESOURCE_DATA_ENTRY\""
    },
    {
      "name": "SIZEOF",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "16"
    },
    {
      "name": "offsetToData",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "size",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "codePage",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "reserved",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor.",
      "javadoc": "Constructor.\n@param reader the binary reader\n@param index the index where this entry begins",
      "static": false,
      "params": [
        {
          "name": "reader",
          "type_long": "ghidra.app.util.bin.format.FactoryBundledWithBinaryReader",
          "type_short": "FactoryBundledWithBinaryReader",
          "comment": "the binary reader"
        },
        {
          "name": "index",
          "type_long": "int",
          "type_short": "int",
          "comment": "the index where this entry begins"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getOffsetToData",
      "comment": "Returns the offset, relative to the beginning of the resource\n directory of the data for the resource.",
      "javadoc": "Returns the offset, relative to the beginning of the resource\n directory of the data for the resource.\n@return the offset, relative to the beginning of the resource directory",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the offset, relative to the beginning of the resource directory"
      },
      "throws": []
    },
    {
      "name": "getSize",
      "comment": "Returns a size field that gives the number of bytes of data at that offset.",
      "javadoc": "Returns a size field that gives the number of bytes of data at that offset.\n@return a size field that gives the number of bytes of data at that offset,",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "a size field that gives the number of bytes of data at that offset,"
      },
      "throws": []
    },
    {
      "name": "getCodePage",
      "comment": "",
      "javadoc": "@return a CodePage that should be used when decoding the resource data",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "a CodePage that should be used when decoding the resource data"
      },
      "throws": []
    },
    {
      "name": "getReserved",
      "comment": "Reserved, use unknown.",
      "javadoc": "Reserved, use unknown.\n@return reserved, use unknown",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "reserved, use unknown"
      },
      "throws": []
    },
    {
      "name": "toDataType",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.data.DataType",
        "type_short": "DataType",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.DuplicateNameException",
          "type_short": "DuplicateNameException",
          "comment": ""
        },
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    }
  ]
}
