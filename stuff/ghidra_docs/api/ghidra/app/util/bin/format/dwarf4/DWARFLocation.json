{
  "name": "DWARFLocation",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "addressRange",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.bin.format.dwarf4.DWARFRange",
      "type_short": "DWARFRange",
      "constant_value": null
    },
    {
      "name": "location",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "byte[]",
      "type_short": "byte[]",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Create a Location given an address range and location expression.",
      "javadoc": "Create a Location given an address range and location expression.\n@param addressRange memory range of this location\n@param location byte array holding location expression",
      "static": false,
      "params": [
        {
          "name": "addressRange",
          "type_long": "ghidra.app.util.bin.format.dwarf4.DWARFRange",
          "type_short": "DWARFRange",
          "comment": "memory range of this location"
        },
        {
          "name": "location",
          "type_long": "byte[]",
          "type_short": "byte[]",
          "comment": "byte array holding location expression"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getRange",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.util.bin.format.dwarf4.DWARFRange",
        "type_short": "DWARFRange",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLocation",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "byte[]",
        "type_short": "byte[]",
        "comment": ""
      },
      "throws": []
    }
  ]
}
