{
  "name": "SameDirSearchLocation",
  "comment": "A SearchLocation that only looks in the program\u0027s original import directory.",
  "javadoc": "A {@link SearchLocation} that only looks in the program\u0027s original import directory.",
  "static": false,
  "implements": [
    "ghidra.app.util.bin.format.dwarf4.external.SearchLocation"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "progDir",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.io.File",
      "type_short": "File",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "isSameDirSearchLocation",
      "comment": "Returns true if the specified location string specifies a SameDirSearchLocation.",
      "javadoc": "Returns true if the specified location string specifies a SameDirSearchLocation.\n@param locString string to test\n@return boolean true if locString specifies a BuildId location",
      "static": true,
      "params": [
        {
          "name": "locString",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "string to test"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "boolean true if locString specifies a BuildId location"
      },
      "throws": []
    },
    {
      "name": "create",
      "comment": "Creates a new SameDirSearchLocation instance using the current program\u0027s\n import location.",
      "javadoc": "Creates a new {@link SameDirSearchLocation} instance using the current program\u0027s\n import location.\n@param locString unused\n@param context {@link SearchLocationCreatorContext}\n@return new {@link SameDirSearchLocation} instance",
      "static": true,
      "params": [
        {
          "name": "locString",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "unused"
        },
        {
          "name": "context",
          "type_long": "ghidra.app.util.bin.format.dwarf4.external.SearchLocationCreatorContext",
          "type_short": "SearchLocationCreatorContext",
          "comment": "SearchLocationCreatorContext"
        }
      ],
      "return": {
        "type_long": "ghidra.app.util.bin.format.dwarf4.external.SameDirSearchLocation",
        "type_short": "SameDirSearchLocation",
        "comment": "new SameDirSearchLocation instance"
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Creates a new SameDirSearchLocation at the specified location.",
      "javadoc": "Creates a new {@link SameDirSearchLocation} at the specified location.\n@param progDir path to the program\u0027s import directory",
      "static": false,
      "params": [
        {
          "name": "progDir",
          "type_long": "java.io.File",
          "type_short": "File",
          "comment": "path to the program\u0027s import directory"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDescriptiveName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "findDebugFile",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "debugInfo",
          "type_long": "ghidra.app.util.bin.format.dwarf4.external.ExternalDebugInfo",
          "type_short": "ExternalDebugInfo",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.formats.gfilesystem.FSRL",
        "type_short": "FSRL",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        },
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": ""
        }
      ]
    }
  ]
}
