{
  "name": "ExternalDebugFilesService",
  "comment": "A collection of SearchLocation that can be queried to find a\n DWARF external debug file, which is a second ELF binary that contains the debug information\n that was stripped from the original ELF binary.",
  "javadoc": "A collection of {@link SearchLocation search locations} that can be queried to find a\n DWARF external debug file, which is a second ELF binary that contains the debug information\n that was stripped from the original ELF binary.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "searchLocations",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cghidra.app.util.bin.format.dwarf4.external.SearchLocation\u003e",
      "type_short": "List",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Creates a new instance using the list of search locations.",
      "javadoc": "Creates a new instance using the list of search locations.\n@param searchLocations list of {@link SearchLocation search locations}",
      "static": false,
      "params": [
        {
          "name": "searchLocations",
          "type_long": "java.util.List\u003cghidra.app.util.bin.format.dwarf4.external.SearchLocation\u003e",
          "type_short": "List",
          "comment": "list of SearchLocation"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSearchLocations",
      "comment": "Returns the configured search locations.",
      "javadoc": "Returns the configured search locations.\n@return list of search locations",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cghidra.app.util.bin.format.dwarf4.external.SearchLocation\u003e",
        "type_short": "List",
        "comment": "list of search locations"
      },
      "throws": []
    },
    {
      "name": "findDebugFile",
      "comment": "Searches for the specified external debug file.\n \n Returns the FSRL of a matching file, or null if not found.",
      "javadoc": "Searches for the specified external debug file.\n \u003cp\u003e\n Returns the FSRL of a matching file, or null if not found.\n@param debugInfo information about the external debug file\n@param monitor {@link TaskMonitor}\n@return {@link FSRL} of found file, or {@code null} if not found\n@throws IOException if error",
      "static": false,
      "params": [
        {
          "name": "debugInfo",
          "type_long": "ghidra.app.util.bin.format.dwarf4.external.ExternalDebugInfo",
          "type_short": "ExternalDebugInfo",
          "comment": "information about the external debug file"
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": "TaskMonitor"
        }
      ],
      "return": {
        "type_long": "ghidra.formats.gfilesystem.FSRL",
        "type_short": "FSRL",
        "comment": "FSRL of found file, or  if not found"
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if error"
        }
      ]
    }
  ]
}
