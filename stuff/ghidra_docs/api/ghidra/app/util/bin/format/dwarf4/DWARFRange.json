{
  "name": "DWARFRange",
  "comment": "Holds the start (inclusive) and end (exclusive) addresses of a range.",
  "javadoc": "Holds the start (inclusive) and end (exclusive) addresses of a range.",
  "static": false,
  "implements": [
    "java.lang.Comparable"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "start",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "end",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new DWARFRange using start and end values.",
      "javadoc": "Constructs a new {@link DWARFRange} using start and end values.\n@param start long starting address, inclusive\n@param end long ending address, exclusive",
      "static": false,
      "params": [
        {
          "name": "start",
          "type_long": "long",
          "type_short": "long",
          "comment": "long starting address, inclusive"
        },
        {
          "name": "end",
          "type_long": "long",
          "type_short": "long",
          "comment": "long ending address, exclusive"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "compareTo",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "other",
          "type_long": "ghidra.app.util.bin.format.dwarf4.DWARFRange",
          "type_short": "DWARFRange",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFrom",
      "comment": "Returns starting address.",
      "javadoc": "Returns starting address.\n@return long starting address",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": "long starting address"
      },
      "throws": []
    },
    {
      "name": "getTo",
      "comment": "Returns ending address, exclusive.",
      "javadoc": "Returns ending address, exclusive.\n@return long ending address, exclusive.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": "long ending address, exclusive."
      },
      "throws": []
    }
  ]
}
