{
  "name": "CoffRelocationHandler",
  "comment": "An abstract class used to perform COFF relocations.  Classes should extend this class to\n provide relocations in a machine/processor specific way.",
  "javadoc": "An abstract class used to perform COFF relocations.  Classes should extend this class to\n provide relocations in a machine/processor specific way.",
  "static": false,
  "implements": [
    "ghidra.util.classfinder.ExtensionPoint"
  ],
  "extends": "java.lang.Object",
  "fields": [],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "canRelocate",
      "comment": "Checks to see whether or not an instance of this COFF relocation hander can handle \n relocating the COFF defined by the provided file header.",
      "javadoc": "Checks to see whether or not an instance of this COFF relocation hander can handle \n relocating the COFF defined by the provided file header.\n@param fileHeader The file header associated with the COFF to relocate.\n@return True if this relocation handler can do the relocation; otherwise, false.",
      "static": false,
      "params": [
        {
          "name": "fileHeader",
          "type_long": "ghidra.app.util.bin.format.coff.CoffFileHeader",
          "type_short": "CoffFileHeader",
          "comment": "The file header associated with the COFF to relocate."
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "True if this relocation handler can do the relocation; otherwise, false."
      },
      "throws": []
    },
    {
      "name": "relocate",
      "comment": "Performs a relocation.",
      "javadoc": "Performs a relocation.\n@param program The program to relocate.\n@param address The address at which to perform the relocation.\n@param symbol The symbol used during relocation.\n@param relocation The relocation information to use to perform the relocation.\n@throws MemoryAccessException If there is a problem accessing memory during the relocation.\n@throws NotFoundException If this handler didn\u0027t find a way to perform the relocation.",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "The program to relocate."
        },
        {
          "name": "address",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "The address at which to perform the relocation."
        },
        {
          "name": "symbol",
          "type_long": "ghidra.program.model.symbol.Symbol",
          "type_short": "Symbol",
          "comment": "The symbol used during relocation."
        },
        {
          "name": "relocation",
          "type_long": "ghidra.app.util.bin.format.coff.CoffRelocation",
          "type_short": "CoffRelocation",
          "comment": "The relocation information to use to perform the relocation."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.program.model.mem.MemoryAccessException",
          "type_short": "MemoryAccessException",
          "comment": "If there is a problem accessing memory during the relocation."
        },
        {
          "type_long": "ghidra.util.exception.NotFoundException",
          "type_short": "NotFoundException",
          "comment": "If this handler didn\u0027t find a way to perform the relocation."
        }
      ]
    }
  ]
}
