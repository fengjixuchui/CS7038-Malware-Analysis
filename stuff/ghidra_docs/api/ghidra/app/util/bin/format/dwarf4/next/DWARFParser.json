{
  "name": "DWARFParser",
  "comment": "Performs a DWARF datatype import and a DWARF function import, under the control of the\n DWARFImportOptions.",
  "javadoc": "Performs a DWARF datatype import and a DWARF function import, under the control of the\n {@link DWARFImportOptions}.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "prog",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.bin.format.dwarf4.next.DWARFProgram",
      "type_short": "DWARFProgram",
      "constant_value": null
    },
    {
      "name": "dwarfDTM",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.bin.format.dwarf4.next.DWARFDataTypeManager",
      "type_short": "DWARFDataTypeManager",
      "constant_value": null
    },
    {
      "name": "monitor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.task.TaskMonitor",
      "type_short": "TaskMonitor",
      "constant_value": null
    },
    {
      "name": "importOptions",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.bin.format.dwarf4.next.DWARFImportOptions",
      "type_short": "DWARFImportOptions",
      "constant_value": null
    },
    {
      "name": "importSummary",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.bin.format.dwarf4.next.DWARFImportSummary",
      "type_short": "DWARFImportSummary",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "prog",
          "type_long": "ghidra.app.util.bin.format.dwarf4.next.DWARFProgram",
          "type_short": "DWARFProgram",
          "comment": ""
        },
        {
          "name": "builtInDTM",
          "type_long": "ghidra.program.model.data.DataTypeManager",
          "type_short": "DataTypeManager",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getImportOptions",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.util.bin.format.dwarf4.next.DWARFImportOptions",
        "type_short": "DWARFImportOptions",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "moveTypesIntoSourceFolders",
      "comment": "Moves previously imported DataTypes from the /DWARF/_UNCATEGORIZED_ folder into\n folder /DWARF/source_code_filename.ext/...\n \n When moving / renaming DataTypes, you only need to worry about named DataTypes.\n Pointers and Arrays, which can only exist by referring to a named DataType, get\n moved / renamed automagically by the DataTypeManager.\n \n After moving each DataType, if the folder is empty, remove the folder.",
      "javadoc": "Moves previously imported DataTypes from the /DWARF/_UNCATEGORIZED_ folder into\n folder /DWARF/source_code_filename.ext/...\n \u003cp\u003e\n When moving / renaming DataTypes, you only need to worry about named DataTypes.\n Pointers and Arrays, which can only exist by referring to a named DataType, get\n moved / renamed automagically by the DataTypeManager.\n \u003cp\u003e\n After moving each DataType, if the folder is empty, remove the folder.\n@throws CancelledException",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": ""
        }
      ]
    },
    {
      "name": "fixupAnonStructMembers",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "compositeDataType",
          "type_long": "ghidra.program.model.data.Composite",
          "type_short": "Composite",
          "comment": ""
        },
        {
          "name": "origCategoryPath",
          "type_long": "ghidra.program.model.data.CategoryPath",
          "type_short": "CategoryPath",
          "comment": ""
        },
        {
          "name": "newCP",
          "type_long": "ghidra.program.model.data.CategoryPath",
          "type_short": "CategoryPath",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.DuplicateNameException",
          "type_short": "DuplicateNameException",
          "comment": ""
        }
      ]
    },
    {
      "name": "deleteEmptyCategoryPaths",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "cp",
          "type_long": "ghidra.program.model.data.CategoryPath",
          "type_short": "CategoryPath",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "rehomeCategoryPathSubTree",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "origRoot",
          "type_long": "ghidra.program.model.data.CategoryPath",
          "type_short": "CategoryPath",
          "comment": ""
        },
        {
          "name": "newRoot",
          "type_long": "ghidra.program.model.data.CategoryPath",
          "type_short": "CategoryPath",
          "comment": ""
        },
        {
          "name": "cp",
          "type_long": "ghidra.program.model.data.CategoryPath",
          "type_short": "CategoryPath",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.data.CategoryPath",
        "type_short": "CategoryPath",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "parse",
      "comment": "Imports DWARF information according to the DWARFImportOptions set.\n \n DWARFProgram#checkPreconditions(TaskMonitor) must be called before this.\n ",
      "javadoc": "Imports DWARF information according to the {@link DWARFImportOptions} set.\n \u003cp\u003e\n {@link DWARFProgram#checkPreconditions(TaskMonitor)} must be called before this.\n \u003cp\u003e\n@return \n@throws IOException\n@throws DWARFException\n@throws CancelledException",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.util.bin.format.dwarf4.next.DWARFImportSummary",
        "type_short": "DWARFImportSummary",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        },
        {
          "type_long": "ghidra.app.util.bin.format.dwarf4.DWARFException",
          "type_short": "DWARFException",
          "comment": ""
        },
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": ""
        }
      ]
    }
  ]
}
