{
  "name": "CoffFileHeader",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [
    "ghidra.app.util.bin.StructConverter"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "f_magic",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "short",
      "type_short": "short",
      "constant_value": null
    },
    {
      "name": "f_nscns",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "short",
      "type_short": "short",
      "constant_value": null
    },
    {
      "name": "f_timdat",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "f_symptr",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "f_nsyms",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "f_opthdr",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "short",
      "type_short": "short",
      "constant_value": null
    },
    {
      "name": "f_flags",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "short",
      "type_short": "short",
      "constant_value": null
    },
    {
      "name": "f_target_id",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "short",
      "type_short": "short",
      "constant_value": null
    },
    {
      "name": "_aoutHeader",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.bin.format.coff.AoutHeader",
      "type_short": "AoutHeader",
      "constant_value": null
    },
    {
      "name": "_sections",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cghidra.app.util.bin.format.coff.CoffSectionHeader\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "_symbols",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cghidra.app.util.bin.format.coff.CoffSymbol\u003e",
      "type_short": "List",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "provider",
          "type_long": "ghidra.app.util.bin.ByteProvider",
          "type_short": "ByteProvider",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getBinaryReader",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "provider",
          "type_long": "ghidra.app.util.bin.ByteProvider",
          "type_short": "ByteProvider",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.app.util.bin.BinaryReader",
        "type_short": "BinaryReader",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isCoffLevelOneOrTwo",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getMagic",
      "comment": "Returns the magic COFF file identifier.",
      "javadoc": "Returns the magic COFF file identifier.\n@return the magic COFF file identifier",
      "static": false,
      "params": [],
      "return": {
        "type_long": "short",
        "type_short": "short",
        "comment": "the magic COFF file identifier"
      },
      "throws": []
    },
    {
      "name": "getSectionCount",
      "comment": "Returns the number of sections in this COFF file.",
      "javadoc": "Returns the number of sections in this COFF file.\n@return the number of sections in this COFF file",
      "static": false,
      "params": [],
      "return": {
        "type_long": "short",
        "type_short": "short",
        "comment": "the number of sections in this COFF file"
      },
      "throws": []
    },
    {
      "name": "getTimestamp",
      "comment": "Returns the time stamp of when this file was created.",
      "javadoc": "Returns the time stamp of when this file was created.\n@return the time stamp of when this file was created",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the time stamp of when this file was created"
      },
      "throws": []
    },
    {
      "name": "getSymbolTablePointer",
      "comment": "Returns the file offset to the symbol table.",
      "javadoc": "Returns the file offset to the symbol table.\n@return the file offset to the symbol table",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the file offset to the symbol table"
      },
      "throws": []
    },
    {
      "name": "getSymbolTableEntries",
      "comment": "Returns the number of symbols in the symbol table.",
      "javadoc": "Returns the number of symbols in the symbol table.\n@return the number of symbols in the symbol table",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the number of symbols in the symbol table"
      },
      "throws": []
    },
    {
      "name": "getOptionalHeaderSize",
      "comment": "Returns the size in bytes of the optional header.\n The optional header immediately follows the file header\n and immediately proceeds the sections headers.",
      "javadoc": "Returns the size in bytes of the optional header.\n The optional header immediately follows the file header\n and immediately proceeds the sections headers.\n@return the size in bytes of the optional header",
      "static": false,
      "params": [],
      "return": {
        "type_long": "short",
        "type_short": "short",
        "comment": "the size in bytes of the optional header"
      },
      "throws": []
    },
    {
      "name": "getFlags",
      "comment": "Returns the flags about this COFF.",
      "javadoc": "Returns the flags about this COFF.\n@return the flags about this COFF",
      "static": false,
      "params": [],
      "return": {
        "type_long": "short",
        "type_short": "short",
        "comment": "the flags about this COFF"
      },
      "throws": []
    },
    {
      "name": "getTargetID",
      "comment": "Returns the specific target id",
      "javadoc": "Returns the specific target id\n@return the specific target id",
      "static": false,
      "params": [],
      "return": {
        "type_long": "short",
        "type_short": "short",
        "comment": "the specific target id"
      },
      "throws": [
        {
          "type_long": "ghidra.app.util.bin.format.coff.CoffException",
          "type_short": "CoffException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getImageBase",
      "comment": "Returns the image base.",
      "javadoc": "Returns the image base.\n@return the image base",
      "static": false,
      "params": [
        {
          "name": "isWindowsPlatform",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": "the image base"
      },
      "throws": []
    },
    {
      "name": "getMachineName",
      "comment": "Returns the machine name.",
      "javadoc": "Returns the machine name.\n@return the machine name",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the machine name"
      },
      "throws": []
    },
    {
      "name": "getMachine",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "short",
        "type_short": "short",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "parseSectionHeaders",
      "comment": "Read just the section headers, not including line numbers and relocations",
      "javadoc": "Read just the section headers, not including line numbers and relocations\n@param provider\n@throws IOException",
      "static": false,
      "params": [
        {
          "name": "provider",
          "type_long": "ghidra.app.util.bin.ByteProvider",
          "type_short": "ByteProvider",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "parse",
      "comment": "Finishes the parsing of this file header.",
      "javadoc": "Finishes the parsing of this file header.\n@param monitor the task monitor\n@throws IOException if an i/o error occurs",
      "static": false,
      "params": [
        {
          "name": "provider",
          "type_long": "ghidra.app.util.bin.ByteProvider",
          "type_short": "ByteProvider",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": "the task monitor"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if an i/o error occurs"
        }
      ]
    },
    {
      "name": "getSections",
      "comment": "Returns the sections in this COFF header.",
      "javadoc": "Returns the sections in this COFF header.\n@return the sections in this COFF header",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cghidra.app.util.bin.format.coff.CoffSectionHeader\u003e",
        "type_short": "List",
        "comment": "the sections in this COFF header"
      },
      "throws": []
    },
    {
      "name": "getSymbols",
      "comment": "Returns the symbols in this COFF header.",
      "javadoc": "Returns the symbols in this COFF header.\n@return the symbols in this COFF header",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cghidra.app.util.bin.format.coff.CoffSymbol\u003e",
        "type_short": "List",
        "comment": "the symbols in this COFF header"
      },
      "throws": []
    },
    {
      "name": "getSymbolAtIndex",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.app.util.bin.format.coff.CoffSymbol",
        "type_short": "CoffSymbol",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "sizeof",
      "comment": "Returns the size (in bytes) of this COFF file header.",
      "javadoc": "Returns the size (in bytes) of this COFF file header.\n@return the size (in bytes) of this COFF file header",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the size (in bytes) of this COFF file header"
      },
      "throws": []
    },
    {
      "name": "getOptionalHeader",
      "comment": "Returns the a.out optional header.\n This return value may be null.",
      "javadoc": "Returns the a.out optional header.\n This return value may be null.\n@return the a.out optional header",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.util.bin.format.coff.AoutHeader",
        "type_short": "AoutHeader",
        "comment": "the a.out optional header"
      },
      "throws": []
    },
    {
      "name": "toDataType",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.data.DataType",
        "type_short": "DataType",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.DuplicateNameException",
          "type_short": "DuplicateNameException",
          "comment": ""
        },
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    }
  ]
}
