{
  "name": "DebugCodeView",
  "comment": "A class to represent the code view debug information.",
  "javadoc": "A class to represent the code view debug information.",
  "static": false,
  "implements": [
    "ghidra.app.util.bin.StructConverter"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "debugDir",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.bin.format.pe.debug.DebugDirectory",
      "type_short": "DebugDirectory",
      "constant_value": null
    },
    {
      "name": "symbolTable",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.bin.format.pe.debug.DebugCodeViewSymbolTable",
      "type_short": "DebugCodeViewSymbolTable",
      "constant_value": null
    },
    {
      "name": "pdbInfo",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.bin.format.pdb.PdbInfoCodeView",
      "type_short": "PdbInfoCodeView",
      "constant_value": null
    },
    {
      "name": "dotNetPdbInfo",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.bin.format.pdb.PdbInfoDotNet",
      "type_short": "PdbInfoDotNet",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "createDebugCodeView",
      "comment": "Constructor.",
      "javadoc": "Constructor.\n@param reader the binary reader\n@param debugDir the code view debug directory\n@param ntHeader",
      "static": true,
      "params": [
        {
          "name": "reader",
          "type_long": "ghidra.app.util.bin.format.FactoryBundledWithBinaryReader",
          "type_short": "FactoryBundledWithBinaryReader",
          "comment": "the binary reader"
        },
        {
          "name": "debugDir",
          "type_long": "ghidra.app.util.bin.format.pe.debug.DebugDirectory",
          "type_short": "DebugDirectory",
          "comment": "the code view debug directory"
        },
        {
          "name": "validator",
          "type_long": "ghidra.app.util.bin.format.pe.OffsetValidator",
          "type_short": "OffsetValidator",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.app.util.bin.format.pe.debug.DebugCodeView",
        "type_short": "DebugCodeView",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.",
      "javadoc": "DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "initDebugCodeView",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "reader",
          "type_long": "ghidra.app.util.bin.format.FactoryBundledWithBinaryReader",
          "type_short": "FactoryBundledWithBinaryReader",
          "comment": ""
        },
        {
          "name": "debugDir",
          "type_long": "ghidra.app.util.bin.format.pe.debug.DebugDirectory",
          "type_short": "DebugDirectory",
          "comment": ""
        },
        {
          "name": "validator",
          "type_long": "ghidra.app.util.bin.format.pe.OffsetValidator",
          "type_short": "OffsetValidator",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getDebugDirectory",
      "comment": "Returns the code view debug directory.",
      "javadoc": "Returns the code view debug directory.\n@return the code view debug directory",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.util.bin.format.pe.debug.DebugDirectory",
        "type_short": "DebugDirectory",
        "comment": "the code view debug directory"
      },
      "throws": []
    },
    {
      "name": "getSymbolTable",
      "comment": "Returns the code view symbol table.",
      "javadoc": "Returns the code view symbol table.\n@return the code view symbol table",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.util.bin.format.pe.debug.DebugCodeViewSymbolTable",
        "type_short": "DebugCodeViewSymbolTable",
        "comment": "the code view symbol table"
      },
      "throws": []
    },
    {
      "name": "getPdbInfo",
      "comment": "Returns the code view .PDB info.",
      "javadoc": "Returns the code view .PDB info.\n@return the code view .PDB info",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.util.bin.format.pdb.PdbInfoCodeView",
        "type_short": "PdbInfoCodeView",
        "comment": "the code view .PDB info"
      },
      "throws": []
    },
    {
      "name": "getDotNetPdbInfo",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.util.bin.format.pdb.PdbInfoDotNet",
        "type_short": "PdbInfoDotNet",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toDataType",
      "comment": "",
      "javadoc": "@see ghidra.app.util.bin.StructConverter#toDataType()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.data.DataType",
        "type_short": "DataType",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.DuplicateNameException",
          "type_short": "DuplicateNameException",
          "comment": ""
        }
      ]
    }
  ]
}
