{
  "name": "CliStreamStrings",
  "comment": "The Strings stream contains null-terminated UTF8 strings.\n When the stream is present, the first entry is always the empty string.\n This stream may contain garbage in its unreachable parts.",
  "javadoc": "The Strings stream contains null-terminated UTF8 strings.\n When the stream is present, the first entry is always the empty string.\n This stream may contain garbage in its unreachable parts.",
  "static": false,
  "implements": [],
  "extends": "ghidra.app.util.bin.format.pe.cli.streams.CliAbstractStream",
  "fields": [
    {
      "name": "stringIndexes",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cjava.lang.Integer\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "stringSizes",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cjava.lang.Integer\u003e",
      "type_short": "List",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "getName",
      "comment": "Gets the name of this stream.",
      "javadoc": "Gets the name of this stream.\n@return The name of this stream.",
      "static": true,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "The name of this stream."
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Creates a new Strings stream.",
      "javadoc": "Creates a new Strings stream.\n@param header The stream header associated with this stream.\n@param offset The reader offset where this stream starts.\n@param rva The relative virtual address where this stream starts.\n@param reader A reader that is used to read the stream.\n@throws IOException if there is a problem reading the stream.",
      "static": false,
      "params": [
        {
          "name": "header",
          "type_long": "ghidra.app.util.bin.format.pe.cli.CliStreamHeader",
          "type_short": "CliStreamHeader",
          "comment": "The stream header associated with this stream."
        },
        {
          "name": "offset",
          "type_long": "long",
          "type_short": "long",
          "comment": "The reader offset where this stream starts."
        },
        {
          "name": "rva",
          "type_long": "int",
          "type_short": "int",
          "comment": "The relative virtual address where this stream starts."
        },
        {
          "name": "reader",
          "type_long": "ghidra.app.util.bin.BinaryReader",
          "type_short": "BinaryReader",
          "comment": "A reader that is used to read the stream."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if there is a problem reading the stream."
        }
      ]
    },
    {
      "name": "parse",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getString",
      "comment": "Gets the string at the given index.",
      "javadoc": "Gets the string at the given index.\n@param index The index of the string to get.\n@return The string at the given index.  Could be null if the index was invalid or there was\n   a problem reading the string.",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "int",
          "type_short": "int",
          "comment": "The index of the string to get."
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "The string at the given index.  Could be null if the index was invalid or there was\n   a problem reading the string."
      },
      "throws": []
    },
    {
      "name": "toDataType",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.data.DataType",
        "type_short": "DataType",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.DuplicateNameException",
          "type_short": "DuplicateNameException",
          "comment": ""
        },
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    }
  ]
}
