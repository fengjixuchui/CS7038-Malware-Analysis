{
  "name": "PdbInfo",
  "comment": "Bag of information about a Pdb symbol file, usually extracted from information present in a PE\n binary.",
  "javadoc": "Bag of information about a Pdb symbol file, usually extracted from information present in a PE\n binary.",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "read",
      "comment": "Read either a PdbInfoCodeView object or a PdbInfoDotNet object\n from the BinaryReader of a PE binary.",
      "javadoc": "Read either a {@link PdbInfoCodeView} object or a {@link PdbInfoDotNet} object\n from the BinaryReader of a PE binary.\n@param reader BinaryReader\n@param offset position of the debug info\n@return new PdbInfoCodeView or PdbInfoDotNet object\n@throws IOException if error",
      "static": true,
      "params": [
        {
          "name": "reader",
          "type_long": "ghidra.app.util.bin.BinaryReader",
          "type_short": "BinaryReader",
          "comment": "BinaryReader"
        },
        {
          "name": "offset",
          "type_long": "long",
          "type_short": "long",
          "comment": "position of the debug info"
        }
      ],
      "return": {
        "type_long": "ghidra.app.util.bin.format.pdb.PdbInfo",
        "type_short": "PdbInfo",
        "comment": "new PdbInfoCodeView or PdbInfoDotNet object"
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if error"
        }
      ]
    },
    {
      "name": "isValid",
      "comment": "Returns true if this instance is valid.",
      "javadoc": "Returns true if this instance is valid.\n@return boolean true if valid (magic signature matches and fields have valid data)",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "boolean true if valid (magic signature matches and fields have valid data)"
      },
      "throws": []
    },
    {
      "name": "serializeToOptions",
      "comment": "Writes the various PDB info fields to a program\u0027s options.",
      "javadoc": "Writes the various PDB info fields to a program\u0027s options.\n@param options Options of a Program to write to",
      "static": false,
      "params": [
        {
          "name": "options",
          "type_long": "ghidra.framework.options.Options",
          "type_short": "Options",
          "comment": "Options of a Program to write to"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
