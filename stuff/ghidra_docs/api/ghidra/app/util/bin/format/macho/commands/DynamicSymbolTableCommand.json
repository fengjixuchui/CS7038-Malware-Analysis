{
  "name": "DynamicSymbolTableCommand",
  "comment": "Represents a dysymtab_command structure.",
  "javadoc": "Represents a dysymtab_command structure.\n@see \u003ca href\u003d\"https://opensource.apple.com/source/xnu/xnu-4570.71.2/EXTERNAL_HEADERS/mach-o/loader.h.auto.html\"\u003emach-o/loader.h\u003c/a\u003e",
  "static": false,
  "implements": [],
  "extends": "ghidra.app.util.bin.format.macho.commands.LoadCommand",
  "fields": [
    {
      "name": "ilocalsym",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "nlocalsym",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "iextdefsym",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "nextdefsym",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "iundefsym",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "nundefsym",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "tocoff",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "ntoc",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "modtaboff",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "nmodtab",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "extrefsymoff",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "nextrefsyms",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "indirectsymoff",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "nindirectsyms",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "extreloff",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "nextrel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "locreloff",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "nlocrel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "tocList",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cghidra.app.util.bin.format.macho.commands.TableOfContents\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "moduleList",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cghidra.app.util.bin.format.macho.commands.DynamicLibraryModule\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "referencedList",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cghidra.app.util.bin.format.macho.commands.DynamicLibraryReference\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "indirectSymbols",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int[]",
      "type_short": "int[]",
      "constant_value": null
    },
    {
      "name": "externalRelocations",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cghidra.app.util.bin.format.macho.RelocationInfo\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "localRelocations",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cghidra.app.util.bin.format.macho.RelocationInfo\u003e",
      "type_short": "List",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "createDynamicSymbolTableCommand",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "reader",
          "type_long": "ghidra.app.util.bin.format.FactoryBundledWithBinaryReader",
          "type_short": "FactoryBundledWithBinaryReader",
          "comment": ""
        },
        {
          "name": "header",
          "type_long": "ghidra.app.util.bin.format.macho.MachHeader",
          "type_short": "MachHeader",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.app.util.bin.format.macho.commands.DynamicSymbolTableCommand",
        "type_short": "DynamicSymbolTableCommand",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.",
      "javadoc": "DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "initDynamicSymbolTableCommand",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "reader",
          "type_long": "ghidra.app.util.bin.format.FactoryBundledWithBinaryReader",
          "type_short": "FactoryBundledWithBinaryReader",
          "comment": ""
        },
        {
          "name": "header",
          "type_long": "ghidra.app.util.bin.format.macho.MachHeader",
          "type_short": "MachHeader",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getLocalSymbolIndex",
      "comment": "Returns the index of the first local symbol.",
      "javadoc": "Returns the index of the first local symbol.\n@return the index of the first local symbol",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the index of the first local symbol"
      },
      "throws": []
    },
    {
      "name": "getLocalSymbolCount",
      "comment": "Returns the total number of local symbols.",
      "javadoc": "Returns the total number of local symbols.\n@return the total number of local symbols",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the total number of local symbols"
      },
      "throws": []
    },
    {
      "name": "getExternalSymbolIndex",
      "comment": "Returns the index of the first external symbol.",
      "javadoc": "Returns the index of the first external symbol.\n@return the index of the first external symbol",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the index of the first external symbol"
      },
      "throws": []
    },
    {
      "name": "getExternalSymbolCount",
      "comment": "Returns the total number of external symbols.",
      "javadoc": "Returns the total number of external symbols.\n@return the total number of external symbols",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the total number of external symbols"
      },
      "throws": []
    },
    {
      "name": "getUndefinedSymbolIndex",
      "comment": "Returns the index of the first undefined symbol.",
      "javadoc": "Returns the index of the first undefined symbol.\n@return the index of the first undefined symbol",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the index of the first undefined symbol"
      },
      "throws": []
    },
    {
      "name": "getUndefinedSymbolCount",
      "comment": "Returns the total number of undefined symbols.",
      "javadoc": "Returns the total number of undefined symbols.\n@return the total number of undefined symbols",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the total number of undefined symbols"
      },
      "throws": []
    },
    {
      "name": "getTableOfContentsOffset",
      "comment": "Returns the byte index from the start of the file to the table of contents (TOC).",
      "javadoc": "Returns the byte index from the start of the file to the table of contents (TOC).\n@return the byte index of the TOC",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the byte index of the TOC"
      },
      "throws": []
    },
    {
      "name": "getTableOfContentsSize",
      "comment": "Returns the number of entries in the table of contents.",
      "javadoc": "Returns the number of entries in the table of contents.\n@return the number of entries in the table of contents",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the number of entries in the table of contents"
      },
      "throws": []
    },
    {
      "name": "getTableOfContentsList",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cghidra.app.util.bin.format.macho.commands.TableOfContents\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getModuleTableOffset",
      "comment": "Returns the byte index from the start of the file to the module table.",
      "javadoc": "Returns the byte index from the start of the file to the module table.\n@return the byte index of the module table",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the byte index of the module table"
      },
      "throws": []
    },
    {
      "name": "getModuleTableSize",
      "comment": "Returns the number of entries in the module table.",
      "javadoc": "Returns the number of entries in the module table.\n@return the number of entries in the module table",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the number of entries in the module table"
      },
      "throws": []
    },
    {
      "name": "getModuleList",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cghidra.app.util.bin.format.macho.commands.DynamicLibraryModule\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getReferencedSymbolTableOffset",
      "comment": "Returns the byte index from the start of the file to the external reference table.",
      "javadoc": "Returns the byte index from the start of the file to the external reference table.\n@return the byte index of the external reference table",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the byte index of the external reference table"
      },
      "throws": []
    },
    {
      "name": "getReferencedSymbolTableSize",
      "comment": "Returns the number of entries in the external reference table.",
      "javadoc": "Returns the number of entries in the external reference table.\n@return the number of entries in the external reference table",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the number of entries in the external reference table"
      },
      "throws": []
    },
    {
      "name": "getReferencedSymbolList",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cghidra.app.util.bin.format.macho.commands.DynamicLibraryReference\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getIndirectSymbolTableOffset",
      "comment": "Returns the byte index from the start of the file to the indirect symbol table.",
      "javadoc": "Returns the byte index from the start of the file to the indirect symbol table.\n@return the byte index of the indirect symbol table",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the byte index of the indirect symbol table"
      },
      "throws": []
    },
    {
      "name": "getIndirectSymbolTableSize",
      "comment": "Returns the number of entries in the indirect symbol table.",
      "javadoc": "Returns the number of entries in the indirect symbol table.\n@return the number of entries in the indirect symbol table",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the number of entries in the indirect symbol table"
      },
      "throws": []
    },
    {
      "name": "getIndirectSymbols",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int[]",
        "type_short": "int[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getExternalRelocationOffset",
      "comment": "Returns the byte index from the start of the file to the external relocation table.",
      "javadoc": "Returns the byte index from the start of the file to the external relocation table.\n@return the byte index of the external relocation table",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the byte index of the external relocation table"
      },
      "throws": []
    },
    {
      "name": "getExternalRelocationSize",
      "comment": "Returns the number of entries in the external relocation table.",
      "javadoc": "Returns the number of entries in the external relocation table.\n@return the number of entries in the external relocation table",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the number of entries in the external relocation table"
      },
      "throws": []
    },
    {
      "name": "getExternalRelocations",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cghidra.app.util.bin.format.macho.RelocationInfo\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLocalRelocationOffset",
      "comment": "Returns the byte index from the start of the file to the local relocation table.",
      "javadoc": "Returns the byte index from the start of the file to the local relocation table.\n@return the byte index of the local relocation table",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the byte index of the local relocation table"
      },
      "throws": []
    },
    {
      "name": "getLocalRelocationSize",
      "comment": "Returns the number of entries in the local relocation table.",
      "javadoc": "Returns the number of entries in the local relocation table.\n@return the number of entries in the local relocation table",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the number of entries in the local relocation table"
      },
      "throws": []
    },
    {
      "name": "getLocalRelocations",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cghidra.app.util.bin.format.macho.RelocationInfo\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toDataType",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.data.DataType",
        "type_short": "DataType",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.DuplicateNameException",
          "type_short": "DuplicateNameException",
          "comment": ""
        },
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getCommandName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "markup",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "header",
          "type_long": "ghidra.app.util.bin.format.macho.MachHeader",
          "type_short": "MachHeader",
          "comment": ""
        },
        {
          "name": "api",
          "type_long": "ghidra.program.flatapi.FlatProgramAPI",
          "type_short": "FlatProgramAPI",
          "comment": ""
        },
        {
          "name": "baseAddress",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "isBinary",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        },
        {
          "name": "parentModule",
          "type_long": "ghidra.program.model.listing.ProgramModule",
          "type_short": "ProgramModule",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        },
        {
          "name": "log",
          "type_long": "ghidra.app.util.importer.MessageLog",
          "type_short": "MessageLog",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "markupReferencedSymbolTable",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "header",
          "type_long": "ghidra.app.util.bin.format.macho.MachHeader",
          "type_short": "MachHeader",
          "comment": ""
        },
        {
          "name": "api",
          "type_long": "ghidra.program.flatapi.FlatProgramAPI",
          "type_short": "FlatProgramAPI",
          "comment": ""
        },
        {
          "name": "baseAddress",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "parentModule",
          "type_long": "ghidra.program.model.listing.ProgramModule",
          "type_short": "ProgramModule",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.DuplicateNameException",
          "type_short": "DuplicateNameException",
          "comment": ""
        },
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        },
        {
          "type_long": "ghidra.program.model.util.CodeUnitInsertionException",
          "type_short": "CodeUnitInsertionException",
          "comment": ""
        },
        {
          "type_long": "java.lang.Exception",
          "type_short": "Exception",
          "comment": ""
        }
      ]
    },
    {
      "name": "findModuleContaining",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "symbolIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.app.util.bin.format.macho.commands.DynamicLibraryModule",
        "type_short": "DynamicLibraryModule",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "makupIndirectSymbolTable",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "header",
          "type_long": "ghidra.app.util.bin.format.macho.MachHeader",
          "type_short": "MachHeader",
          "comment": ""
        },
        {
          "name": "api",
          "type_long": "ghidra.program.flatapi.FlatProgramAPI",
          "type_short": "FlatProgramAPI",
          "comment": ""
        },
        {
          "name": "baseAddress",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "parentModule",
          "type_long": "ghidra.program.model.listing.ProgramModule",
          "type_short": "ProgramModule",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.lang.Exception",
          "type_short": "Exception",
          "comment": ""
        }
      ]
    },
    {
      "name": "markupExternalRelocations",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "api",
          "type_long": "ghidra.program.flatapi.FlatProgramAPI",
          "type_short": "FlatProgramAPI",
          "comment": ""
        },
        {
          "name": "baseAddress",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "parentModule",
          "type_long": "ghidra.program.model.listing.ProgramModule",
          "type_short": "ProgramModule",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.lang.Exception",
          "type_short": "Exception",
          "comment": ""
        }
      ]
    },
    {
      "name": "markupLocalRelocations",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "api",
          "type_long": "ghidra.program.flatapi.FlatProgramAPI",
          "type_short": "FlatProgramAPI",
          "comment": ""
        },
        {
          "name": "baseAddress",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "parentModule",
          "type_long": "ghidra.program.model.listing.ProgramModule",
          "type_short": "ProgramModule",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.lang.Exception",
          "type_short": "Exception",
          "comment": ""
        }
      ]
    },
    {
      "name": "markupModules",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "header",
          "type_long": "ghidra.app.util.bin.format.macho.MachHeader",
          "type_short": "MachHeader",
          "comment": ""
        },
        {
          "name": "api",
          "type_long": "ghidra.program.flatapi.FlatProgramAPI",
          "type_short": "FlatProgramAPI",
          "comment": ""
        },
        {
          "name": "baseAddress",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "parentModule",
          "type_long": "ghidra.program.model.listing.ProgramModule",
          "type_short": "ProgramModule",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.lang.Exception",
          "type_short": "Exception",
          "comment": ""
        }
      ]
    },
    {
      "name": "markupTOC",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "header",
          "type_long": "ghidra.app.util.bin.format.macho.MachHeader",
          "type_short": "MachHeader",
          "comment": ""
        },
        {
          "name": "api",
          "type_long": "ghidra.program.flatapi.FlatProgramAPI",
          "type_short": "FlatProgramAPI",
          "comment": ""
        },
        {
          "name": "baseAddress",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "parentModule",
          "type_long": "ghidra.program.model.listing.ProgramModule",
          "type_short": "ProgramModule",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.lang.Exception",
          "type_short": "Exception",
          "comment": ""
        }
      ]
    }
  ]
}
