{
  "name": "CompressedSectionProvider",
  "comment": "Fetches DWARF section data that has been compressed from an underlying DWARFSectionProvider.\n \n Note, this code has not been tested against real data but is included here as it was in \n the original DWARF code base.  This section provider is not currently\n registered in the DWARFSectionProviderFactory and as such will not be\n used.\n \n TODO: the decompressed data should be stored in something other than in-memory byte arrays,\n probably should use tmp files.",
  "javadoc": "Fetches DWARF section data that has been compressed from an underlying {@link DWARFSectionProvider}.\n \u003cp\u003e\n Note, this code has not been tested against real data but is included here as it was in \n the original DWARF code base.  This section provider is not currently\n registered in the {@link DWARFSectionProviderFactory} and as such will not be\n used.\n \u003cp\u003e\n TODO: the decompressed data should be stored in something other than in-memory byte arrays,\n probably should use tmp files.",
  "static": false,
  "implements": [
    "ghidra.app.util.bin.format.dwarf4.next.sectionprovider.DWARFSectionProvider"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "sp",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.bin.format.dwarf4.next.sectionprovider.DWARFSectionProvider",
      "type_short": "DWARFSectionProvider",
      "constant_value": null
    },
    {
      "name": "sectionNameToDecompressedSectionDataMap",
      "comment": "Cache previously decompressed sections, indexed by their normal \u0027base\u0027 name with no\n \u0027z\u0027 prefix.",
      "javadoc": "Cache previously decompressed sections, indexed by their normal \u0027base\u0027 name with no\n \u0027z\u0027 prefix.",
      "static": false,
      "type_long": "java.util.Map\u003cjava.lang.String,ghidra.app.util.bin.ByteProvider\u003e",
      "type_short": "Map",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "sp",
          "type_long": "ghidra.app.util.bin.format.dwarf4.next.sectionprovider.DWARFSectionProvider",
          "type_short": "DWARFSectionProvider",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hasSection",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "sectionNames",
          "type_long": "java.lang.String[]",
          "type_short": "java.lang.String[]",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSectionAsByteProvider",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "sectionName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.app.util.bin.ByteProvider",
        "type_short": "ByteProvider",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "close",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
