{
  "name": "CliStreamHeader",
  "comment": "A structure used by a CliMetadataRoot describe a CliAbstractStream.\n \n Note that this type of \"header\" isn\u0027t found at the start of the stream, but as\n elements of a list of headers at the end of a CliMetadataRoot.  They \n are kind of like PE section headers.",
  "javadoc": "A structure used by a {@link CliMetadataRoot} describe a {@link CliAbstractStream}.\n \u003cp\u003e\n Note that this type of \"header\" isn\u0027t found at the start of the stream, but as\n elements of a list of headers at the end of a {@link CliMetadataRoot}.  They \n are kind of like PE section headers.",
  "static": false,
  "implements": [
    "ghidra.app.util.bin.StructConverter",
    "ghidra.app.util.bin.format.pe.PeMarkupable"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "NAME",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "PATH",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "metadataRoot",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.bin.format.pe.cli.CliMetadataRoot",
      "type_short": "CliMetadataRoot",
      "constant_value": null
    },
    {
      "name": "stream",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.bin.format.pe.cli.streams.CliAbstractStream",
      "type_short": "CliAbstractStream",
      "constant_value": null
    },
    {
      "name": "offset",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "size",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "name",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "nameLen",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new CLI Stream Header datatype.",
      "javadoc": "Constructs a new CLI Stream Header datatype.\n@param metadataRoot the metadata root.\n@param reader A binary reader set to start reading at the start of this header.\n@throws IOException if there is a problem reading the header.",
      "static": false,
      "params": [
        {
          "name": "metadataRoot",
          "type_long": "ghidra.app.util.bin.format.pe.cli.CliMetadataRoot",
          "type_short": "CliMetadataRoot",
          "comment": "the metadata root."
        },
        {
          "name": "reader",
          "type_long": "ghidra.app.util.bin.BinaryReader",
          "type_short": "BinaryReader",
          "comment": "A binary reader set to start reading at the start of this header."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if there is a problem reading the header."
        }
      ]
    },
    {
      "name": "markup",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "isBinary",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        },
        {
          "name": "log",
          "type_long": "ghidra.app.util.importer.MessageLog",
          "type_short": "MessageLog",
          "comment": ""
        },
        {
          "name": "ntHeader",
          "type_long": "ghidra.app.util.bin.format.pe.NTHeader",
          "type_short": "NTHeader",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.DuplicateNameException",
          "type_short": "DuplicateNameException",
          "comment": ""
        },
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        },
        {
          "type_long": "ghidra.program.model.mem.MemoryAccessException",
          "type_short": "MemoryAccessException",
          "comment": ""
        }
      ]
    },
    {
      "name": "toDataType",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.data.DataType",
        "type_short": "DataType",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.DuplicateNameException",
          "type_short": "DuplicateNameException",
          "comment": ""
        },
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getMetadataRoot",
      "comment": "Gets the CliMetadataRoot that contains us.",
      "javadoc": "Gets the {@link CliMetadataRoot} that contains us.\n@return The {@link CliMetadataRoot} that contains us.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.util.bin.format.pe.cli.CliMetadataRoot",
        "type_short": "CliMetadataRoot",
        "comment": "The CliMetadataRoot that contains us."
      },
      "throws": []
    },
    {
      "name": "getStream",
      "comment": "Gets the CliAbstractStream that this is a header for.",
      "javadoc": "Gets the {@link CliAbstractStream} that this is a header for.\n@return The {@link CliAbstractStream} that this is a header for.  Could be null if we\n   don\u0027t support the stream type.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.util.bin.format.pe.cli.streams.CliAbstractStream",
        "type_short": "CliAbstractStream",
        "comment": "The CliAbstractStream that this is a header for.  Could be null if we\n   don\u0027t support the stream type."
      },
      "throws": []
    },
    {
      "name": "getOffset",
      "comment": "Gets the offset.  This is not a file offset, but an offset that gets added to \n the metadata header\u0027s offset to obtain a file offset.",
      "javadoc": "Gets the offset.  This is not a file offset, but an offset that gets added to \n the metadata header\u0027s offset to obtain a file offset.\n@return The offset.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "The offset."
      },
      "throws": []
    },
    {
      "name": "getSize",
      "comment": "Gets the size of this header\u0027s stream.",
      "javadoc": "Gets the size of this header\u0027s stream.\n@return The size of this header\u0027s stream.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "The size of this header\u0027s stream."
      },
      "throws": []
    },
    {
      "name": "getName",
      "comment": "Gets the name of this header\u0027s stream.",
      "javadoc": "Gets the name of this header\u0027s stream.\n@return The name of this header\u0027s stream.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "The name of this header\u0027s stream."
      },
      "throws": []
    },
    {
      "name": "getNameLength",
      "comment": "Gets the name length.\n \n The name length may be larger than necessary because the name string is must\n be aligned to the next 4-byte boundary.",
      "javadoc": "Gets the name length.\n \u003cp\u003e\n The name length may be larger than necessary because the name string is must\n be aligned to the next 4-byte boundary.\n@return The name length.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "The name length."
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setStream",
      "comment": "Sets this header\u0027s stream.",
      "javadoc": "Sets this header\u0027s stream.\n@param stream The stream associated with this header.",
      "static": false,
      "params": [
        {
          "name": "stream",
          "type_long": "ghidra.app.util.bin.format.pe.cli.streams.CliAbstractStream",
          "type_short": "CliAbstractStream",
          "comment": "The stream associated with this header."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
