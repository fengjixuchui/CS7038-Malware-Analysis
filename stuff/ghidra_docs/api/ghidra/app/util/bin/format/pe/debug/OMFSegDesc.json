{
  "name": "OMFSegDesc",
  "comment": "A class to represent the Object Module Format (OMF) Segment Descriptor data structure.\n Information describing each segment in a module.\n \n \n typedef struct OMFSegDesc {\n     unsigned short  Seg;            // segment index\n     unsigned short  pad;            // pad to maintain alignment\n     unsigned long   Off;            // offset of code in segment\n     unsigned long   cbSeg;          // number of bytes in segment\n } OMFSegDesc;\n ",
  "javadoc": "A class to represent the Object Module Format (OMF) Segment Descriptor data structure.\n Information describing each segment in a module.\n \u003cbr\u003e\n \u003cpre\u003e\n typedef struct OMFSegDesc {\n     unsigned short  Seg;            // segment index\n     unsigned short  pad;            // pad to maintain alignment\n     unsigned long   Off;            // offset of code in segment\n     unsigned long   cbSeg;          // number of bytes in segment\n } OMFSegDesc;\n \u003c/pre\u003e",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "IMAGE_SIZEOF_OMF_SEG_DESC",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "12"
    },
    {
      "name": "seg",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "short",
      "type_short": "short",
      "constant_value": null
    },
    {
      "name": "pad",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "short",
      "type_short": "short",
      "constant_value": null
    },
    {
      "name": "offset",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "cbSeg",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "createOMFSegDesc",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "reader",
          "type_long": "ghidra.app.util.bin.format.FactoryBundledWithBinaryReader",
          "type_short": "FactoryBundledWithBinaryReader",
          "comment": ""
        },
        {
          "name": "index",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.app.util.bin.format.pe.debug.OMFSegDesc",
        "type_short": "OMFSegDesc",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.",
      "javadoc": "DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "initOMFSegDesc",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "reader",
          "type_long": "ghidra.app.util.bin.format.FactoryBundledWithBinaryReader",
          "type_short": "FactoryBundledWithBinaryReader",
          "comment": ""
        },
        {
          "name": "index",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getSegmentIndex",
      "comment": "Returns the segment index.",
      "javadoc": "Returns the segment index.\n@return the segment index",
      "static": false,
      "params": [],
      "return": {
        "type_long": "short",
        "type_short": "short",
        "comment": "the segment index"
      },
      "throws": []
    },
    {
      "name": "getAlignmentPad",
      "comment": "Returns the pad to maintain alignment.",
      "javadoc": "Returns the pad to maintain alignment.\n@return the pad to maintain alignment",
      "static": false,
      "params": [],
      "return": {
        "type_long": "short",
        "type_short": "short",
        "comment": "the pad to maintain alignment"
      },
      "throws": []
    },
    {
      "name": "getOffset",
      "comment": "Returns the offset of code in segment.",
      "javadoc": "Returns the offset of code in segment.\n@return the offset of code in segment",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the offset of code in segment"
      },
      "throws": []
    },
    {
      "name": "getNumberOfBytes",
      "comment": "Returns the number of bytes in segment.",
      "javadoc": "Returns the number of bytes in segment.\n@return the number of bytes in segment",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the number of bytes in segment"
      },
      "throws": []
    }
  ]
}
