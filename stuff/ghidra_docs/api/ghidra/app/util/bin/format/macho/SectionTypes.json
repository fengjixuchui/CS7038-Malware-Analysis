{
  "name": "SectionTypes",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "SECTION_TYPE_MASK",
      "comment": "256 section types",
      "javadoc": "256 section types",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "255"
    },
    {
      "name": "S_REGULAR",
      "comment": "Type: regular section",
      "javadoc": "Type: regular section",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "0"
    },
    {
      "name": "S_ZEROFILL",
      "comment": "Type: zero fill on demand section",
      "javadoc": "Type: zero fill on demand section",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "1"
    },
    {
      "name": "S_CSTRING_LITERALS",
      "comment": "Type: section with only literal C strings",
      "javadoc": "Type: section with only literal C strings",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "2"
    },
    {
      "name": "S_4BYTE_LITERALS",
      "comment": "Type: section with only 4 byte literals",
      "javadoc": "Type: section with only 4 byte literals",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "3"
    },
    {
      "name": "S_8BYTE_LITERALS",
      "comment": "Type: section with only 8 byte literals",
      "javadoc": "Type: section with only 8 byte literals",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "4"
    },
    {
      "name": "S_LITERAL_POINTERS",
      "comment": "Type: section with only pointers to literals",
      "javadoc": "Type: section with only pointers to literals",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "5"
    },
    {
      "name": "S_NON_LAZY_SYMBOL_POINTERS",
      "comment": "Type: section with only non-lazy symbol pointers",
      "javadoc": "Type: section with only non-lazy symbol pointers",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "6"
    },
    {
      "name": "S_LAZY_SYMBOL_POINTERS",
      "comment": "Type: section with only lazy symbol pointers",
      "javadoc": "Type: section with only lazy symbol pointers",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "7"
    },
    {
      "name": "S_SYMBOL_STUBS",
      "comment": "Type: section with only symbol stubs, byte size of stub in the reserved2 field",
      "javadoc": "Type: section with only symbol stubs, byte size of stub in the reserved2 field",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "8"
    },
    {
      "name": "S_MOD_INIT_FUNC_POINTERS",
      "comment": "Type: section with only function pointers for initialization",
      "javadoc": "Type: section with only function pointers for initialization",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "9"
    },
    {
      "name": "S_MOD_TERM_FUNC_POINTERS",
      "comment": "Type: section with only function pointers for termination",
      "javadoc": "Type: section with only function pointers for termination",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "10"
    },
    {
      "name": "S_COALESCED",
      "comment": "Type: section contains symbols that are to be coalesced",
      "javadoc": "Type: section contains symbols that are to be coalesced",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "11"
    },
    {
      "name": "S_GB_ZEROFILL",
      "comment": "Type: zero fill on demand section (that can be larger than 4 gigabytes)",
      "javadoc": "Type: zero fill on demand section (that can be larger than 4 gigabytes)",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "12"
    },
    {
      "name": "S_INTERPOSING",
      "comment": "Type: section with only pairs of function pointers for interposing",
      "javadoc": "Type: section with only pairs of function pointers for interposing",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "13"
    },
    {
      "name": "S_16BYTE_LITERALS",
      "comment": "section with only 16 byte literals",
      "javadoc": "section with only 16 byte literals",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "14"
    },
    {
      "name": "S_DTRACE_DOF",
      "comment": "section contains DTrace Object Format",
      "javadoc": "section contains DTrace Object Format",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "15"
    },
    {
      "name": "S_LAZY_DYLIB_SYMBOL_POINTERS",
      "comment": "section with only lazy symbol pointers to lazy loaded dylibs",
      "javadoc": "section with only lazy symbol pointers to lazy loaded dylibs",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "16"
    },
    {
      "name": "S_THREAD_LOCAL_REGULAR",
      "comment": "Section types to support thread local variables.\n Template of initial values to TLVs.",
      "javadoc": "Section types to support thread local variables.\n Template of initial values to TLVs.",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "17"
    },
    {
      "name": "S_THREAD_LOCAL_ZEROFILL",
      "comment": "Section types to support thread local variables.\n Template of initial values to TLVs.",
      "javadoc": "Section types to support thread local variables.\n Template of initial values to TLVs.",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "18"
    },
    {
      "name": "S_THREAD_LOCAL_VARIABLES",
      "comment": "Section types to support thread local variables.\n TLV descriptors.",
      "javadoc": "Section types to support thread local variables.\n TLV descriptors.",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "19"
    },
    {
      "name": "S_THREAD_LOCAL_VARIABLE_POINTERS",
      "comment": "Section types to support thread local variables.\n Pointers to TLV descriptors.",
      "javadoc": "Section types to support thread local variables.\n Pointers to TLV descriptors.",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "20"
    },
    {
      "name": "S_THREAD_LOCAL_INIT_FUNCTION_POINTERS",
      "comment": "Section types to support thread local variables.\n Functions to call to initialize TLV values.",
      "javadoc": "Section types to support thread local variables.\n Functions to call to initialize TLV values.",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "21"
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getTypeName",
      "comment": "Returns the string name for the constant define of the section type.",
      "javadoc": "Returns the string name for the constant define of the section type.\n@param type the section type\n@return string name for the constant define of the section type",
      "static": true,
      "params": [
        {
          "name": "type",
          "type_long": "int",
          "type_short": "int",
          "comment": "the section type"
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "string name for the constant define of the section type"
      },
      "throws": []
    }
  ]
}
