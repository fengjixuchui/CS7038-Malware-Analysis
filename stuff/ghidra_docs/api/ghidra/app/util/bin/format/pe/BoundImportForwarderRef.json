{
  "name": "BoundImportForwarderRef",
  "comment": "A class to represent the \n IMAGE_BOUND_FORWARDER_REF\n data structure defined in winnt.h.\n \n \n typedef struct _IMAGE_BOUND_FORWARDER_REF {\n     DWORD   TimeDateStamp;\n     WORD    OffsetModuleName;\n     WORD    Reserved;\n } IMAGE_BOUND_FORWARDER_REF, *PIMAGE_BOUND_FORWARDER_REF;\n ",
  "javadoc": "A class to represent the \n \u003ccode\u003eIMAGE_BOUND_FORWARDER_REF\u003c/code\u003e\n data structure defined in \u003cb\u003e\u003ccode\u003ewinnt.h\u003c/code\u003e\u003c/b\u003e.\n \u003cp\u003e\n \u003cpre\u003e\n typedef struct _IMAGE_BOUND_FORWARDER_REF {\n     DWORD   TimeDateStamp;\n     WORD    OffsetModuleName;\n     WORD    Reserved;\n } IMAGE_BOUND_FORWARDER_REF, *PIMAGE_BOUND_FORWARDER_REF;\n \u003c/pre\u003e",
  "static": false,
  "implements": [
    "ghidra.app.util.bin.StructConverter",
    "ghidra.app.util.bin.ByteArrayConverter"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "NAME",
      "comment": "The name to use when converting into a structure data type.",
      "javadoc": "The name to use when converting into a structure data type.",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"IMAGE_BOUND_FORWARDER_REF\""
    },
    {
      "name": "IMAGE_SIZEOF_BOUND_IMPORT_FORWARDER_REF",
      "comment": "The size of the IMAGE_BOUND_FORWARDER_REF in bytes.",
      "javadoc": "The size of the \u003ccode\u003eIMAGE_BOUND_FORWARDER_REF\u003c/code\u003e in bytes.",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "8"
    },
    {
      "name": "timeDateStamp",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "offsetModuleName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "short",
      "type_short": "short",
      "constant_value": null
    },
    {
      "name": "reserved",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "short",
      "type_short": "short",
      "constant_value": null
    },
    {
      "name": "moduleName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "createBoundImportForwarderRef",
      "comment": "",
      "javadoc": "@param reader the binary reader\n@param readerIndex the index into the binary reader\n@param biddIndex the index where the bound import data directory begins",
      "static": true,
      "params": [
        {
          "name": "reader",
          "type_long": "ghidra.app.util.bin.format.FactoryBundledWithBinaryReader",
          "type_short": "FactoryBundledWithBinaryReader",
          "comment": "the binary reader"
        },
        {
          "name": "readerIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": "the index into the binary reader"
        },
        {
          "name": "biddIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": "the index where the bound import data directory begins"
        }
      ],
      "return": {
        "type_long": "ghidra.app.util.bin.format.pe.BoundImportForwarderRef",
        "type_short": "BoundImportForwarderRef",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.",
      "javadoc": "DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "initBoundImportForwarderRef",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "reader",
          "type_long": "ghidra.app.util.bin.format.FactoryBundledWithBinaryReader",
          "type_short": "FactoryBundledWithBinaryReader",
          "comment": ""
        },
        {
          "name": "readerIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "biddIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "toBytes",
      "comment": "",
      "javadoc": "@see ghidra.app.util.bin.ByteArrayConverter#toBytes(ghidra.util.DataConverter)",
      "static": false,
      "params": [
        {
          "name": "dc",
          "type_long": "ghidra.util.DataConverter",
          "type_short": "DataConverter",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "byte[]",
        "type_short": "byte[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getTimeDateStamp",
      "comment": "Returns the time stamp.",
      "javadoc": "Returns the time stamp.\n@return the time stamp",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the time stamp"
      },
      "throws": []
    },
    {
      "name": "getOffsetModuleName",
      "comment": "Returns the offset, relative the beginning of the Bound Import Table,\n to the import name.",
      "javadoc": "Returns the offset, relative the beginning of the Bound Import Table,\n to the import name.\n@return the offset to the import name",
      "static": false,
      "params": [],
      "return": {
        "type_long": "short",
        "type_short": "short",
        "comment": "the offset to the import name"
      },
      "throws": []
    },
    {
      "name": "setOffsetModuleName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "offset",
          "type_long": "short",
          "type_short": "short",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getReserved",
      "comment": "Returns the reserved word (use unknown).",
      "javadoc": "Returns the reserved word (use unknown).\n@return the reserved word",
      "static": false,
      "params": [],
      "return": {
        "type_long": "short",
        "type_short": "short",
        "comment": "the reserved word"
      },
      "throws": []
    },
    {
      "name": "getModuleName",
      "comment": "Returns the imported module name.",
      "javadoc": "Returns the imported module name.\n@return the imported module name",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the imported module name"
      },
      "throws": []
    },
    {
      "name": "toDataType",
      "comment": "",
      "javadoc": "@see ghidra.app.util.bin.StructConverter#toDataType()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.data.DataType",
        "type_short": "DataType",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.DuplicateNameException",
          "type_short": "DuplicateNameException",
          "comment": ""
        }
      ]
    }
  ]
}
