{
  "name": "TLSDirectory",
  "comment": "A class to represent the IMAGE_TLS_DIRECTORY32 and\n IMAGE_TLS_DIRECTORY64 data structures.\n \n \n typedef struct _IMAGE_TLS_DIRECTORY32 {\n     DWORD   StartAddressOfRawData;\n     DWORD   EndAddressOfRawData;\n     DWORD   AddressOfIndex;             // PDWORD\n     DWORD   AddressOfCallBacks;         // PIMAGE_TLS_CALLBACK *\n     DWORD   SizeOfZeroFill;\n     DWORD   Characteristics;\n } IMAGE_TLS_DIRECTORY32;\n typedef IMAGE_TLS_DIRECTORY32 * PIMAGE_TLS_DIRECTORY32;\n \n \n \n typedef struct _IMAGE_TLS_DIRECTORY64 {\n     ULONGLONG   StartAddressOfRawData;\n     ULONGLONG   EndAddressOfRawData;\n     PDWORD      AddressOfIndex;\n     PIMAGE_TLS_CALLBACK * AddressOfCallBacks;\n     DWORD       SizeOfZeroFill;\n     DWORD       Characteristics;\n } IMAGE_TLS_DIRECTORY64;\n typedef IMAGE_TLS_DIRECTORY64 * PIMAGE_TLS_DIRECTORY64;\n \n ",
  "javadoc": "A class to represent the IMAGE_TLS_DIRECTORY32 and\n IMAGE_TLS_DIRECTORY64 data structures.\n \u003cbr\u003e\n \u003cpre\u003e\n typedef struct _IMAGE_TLS_DIRECTORY32 {\n     DWORD   StartAddressOfRawData;\n     DWORD   EndAddressOfRawData;\n     DWORD   AddressOfIndex;             // PDWORD\n     DWORD   AddressOfCallBacks;         // PIMAGE_TLS_CALLBACK *\n     DWORD   SizeOfZeroFill;\n     DWORD   Characteristics;\n } IMAGE_TLS_DIRECTORY32;\n typedef IMAGE_TLS_DIRECTORY32 * PIMAGE_TLS_DIRECTORY32;\n \u003c/pre\u003e\n \u003cbr\u003e\n \u003cpre\u003e\n typedef struct _IMAGE_TLS_DIRECTORY64 {\n     ULONGLONG   StartAddressOfRawData;\n     ULONGLONG   EndAddressOfRawData;\n     PDWORD      AddressOfIndex;\n     PIMAGE_TLS_CALLBACK * AddressOfCallBacks;\n     DWORD       SizeOfZeroFill;\n     DWORD       Characteristics;\n } IMAGE_TLS_DIRECTORY64;\n typedef IMAGE_TLS_DIRECTORY64 * PIMAGE_TLS_DIRECTORY64;\n \u003c/pre\u003e\n \u003cbr\u003e",
  "static": false,
  "implements": [
    "ghidra.app.util.bin.StructConverter"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "is64bit",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "startAddressOfRawData",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "endAddressOfRawData",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "addressOfIndex",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "addressOfCallBacks",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "sizeOfZeroFill",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "characteristics",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "createTLSDirectory",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "reader",
          "type_long": "ghidra.app.util.bin.format.FactoryBundledWithBinaryReader",
          "type_short": "FactoryBundledWithBinaryReader",
          "comment": ""
        },
        {
          "name": "index",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "is64bit",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.app.util.bin.format.pe.TLSDirectory",
        "type_short": "TLSDirectory",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.",
      "javadoc": "DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "initTLSDirectory",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "reader",
          "type_long": "ghidra.app.util.bin.format.FactoryBundledWithBinaryReader",
          "type_short": "FactoryBundledWithBinaryReader",
          "comment": ""
        },
        {
          "name": "index",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "is64bit",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getStartAddressOfRawData",
      "comment": "Returns the beginning address of a range of memory used to initialize a new thread\u0027s TLS data in memory.",
      "javadoc": "Returns the beginning address of a range of memory used to initialize a new thread\u0027s TLS data in memory.\n@return the beginning address of a range of memory used to initialize a new thread\u0027s TLS data in memory.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": "the beginning address of a range of memory used to initialize a new thread\u0027s TLS data in memory."
      },
      "throws": []
    },
    {
      "name": "getEndAddressOfRawData",
      "comment": "Returns the ending address of the range of memory used to initialize a new thread\u0027s TLS data in memory.",
      "javadoc": "Returns the ending address of the range of memory used to initialize a new thread\u0027s TLS data in memory.\n@return the ending address of the range of memory used to initialize a new thread\u0027s TLS data in memory.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": "the ending address of the range of memory used to initialize a new thread\u0027s TLS data in memory."
      },
      "throws": []
    },
    {
      "name": "getAddressOfIndex",
      "comment": "",
      "javadoc": "@return the index to locate the thread local data.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": "the index to locate the thread local data."
      },
      "throws": []
    },
    {
      "name": "getAddressOfCallBacks",
      "comment": "",
      "javadoc": "@return the address of an array of \u003ccode\u003ePIMAGE_TLS_CALLBACK\u003c/code\u003e function pointers",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": "the address of an array of PIMAGE_TLS_CALLBACK function pointers"
      },
      "throws": []
    },
    {
      "name": "getSizeOfZeroFill",
      "comment": "",
      "javadoc": "@return the size in bytes of the initialization data",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the size in bytes of the initialization data"
      },
      "throws": []
    },
    {
      "name": "getCharacteristics",
      "comment": "Reserved, currently set to 0.",
      "javadoc": "Reserved, currently set to 0.\n@return reserved, currently set to 0",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "reserved, currently set to 0"
      },
      "throws": []
    },
    {
      "name": "toDataType",
      "comment": "",
      "javadoc": "@see ghidra.app.util.bin.StructConverter#toDataType()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.data.DataType",
        "type_short": "DataType",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.DuplicateNameException",
          "type_short": "DuplicateNameException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getName",
      "comment": "Returns the name of the structure.",
      "javadoc": "Returns the name of the structure.\n@return the name of the structure",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the name of the structure"
      },
      "throws": []
    }
  ]
}
