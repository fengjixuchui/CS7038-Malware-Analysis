{
  "name": "ResourceTable",
  "comment": "A class for storing the new-executable resource table.\n A resource table contains all of the supported types\n of resources.",
  "javadoc": "A class for storing the new-executable resource table.\n A resource table contains all of the supported types\n of resources.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "index",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "short",
      "type_short": "short",
      "constant_value": null
    },
    {
      "name": "alignmentShiftCount",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "short",
      "type_short": "short",
      "constant_value": null
    },
    {
      "name": "types",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.bin.format.ne.ResourceType[]",
      "type_short": "ghidra.app.util.bin.format.ne.ResourceType[]",
      "constant_value": null
    },
    {
      "name": "names",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.bin.format.ne.ResourceName[]",
      "type_short": "ghidra.app.util.bin.format.ne.ResourceName[]",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new resource table.",
      "javadoc": "Constructs a new resource table.\n@param reader the binary reader\n@param index the byte index where the Resource Table begins,\n               (this is relative to the beginning of the file",
      "static": false,
      "params": [
        {
          "name": "reader",
          "type_long": "ghidra.app.util.bin.format.FactoryBundledWithBinaryReader",
          "type_short": "FactoryBundledWithBinaryReader",
          "comment": "the binary reader"
        },
        {
          "name": "index",
          "type_long": "short",
          "type_short": "short",
          "comment": "the byte index where the Resource Table begins,\n               (this is relative to the beginning of the file"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getAlignmentShiftCount",
      "comment": "Returns the alignment shift count. \n Some resources offsets and lengths are stored bit shifted.",
      "javadoc": "Returns the alignment shift count. \n Some resources offsets and lengths are stored bit shifted.\n@return the alignment shift count",
      "static": false,
      "params": [],
      "return": {
        "type_long": "short",
        "type_short": "short",
        "comment": "the alignment shift count"
      },
      "throws": []
    },
    {
      "name": "getResourceTypes",
      "comment": "Returns the array of resource types.",
      "javadoc": "Returns the array of resource types.\n@return the array of resource types",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.util.bin.format.ne.ResourceType[]",
        "type_short": "ghidra.app.util.bin.format.ne.ResourceType[]",
        "comment": "the array of resource types"
      },
      "throws": []
    },
    {
      "name": "getResourceNames",
      "comment": "Returns the array of resources names.",
      "javadoc": "Returns the array of resources names.\n@return the array of resources names",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.util.bin.format.ne.ResourceName[]",
        "type_short": "ghidra.app.util.bin.format.ne.ResourceName[]",
        "comment": "the array of resources names"
      },
      "throws": []
    },
    {
      "name": "getIndex",
      "comment": "Returns the byte index where the resource table begins,\n relative to the beginning of the file.",
      "javadoc": "Returns the byte index where the resource table begins,\n relative to the beginning of the file.\n@return the byte index where the resource table begins",
      "static": false,
      "params": [],
      "return": {
        "type_long": "short",
        "type_short": "short",
        "comment": "the byte index where the resource table begins"
      },
      "throws": []
    }
  ]
}
