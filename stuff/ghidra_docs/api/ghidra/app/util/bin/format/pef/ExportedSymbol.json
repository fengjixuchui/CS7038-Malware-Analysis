{
  "name": "ExportedSymbol",
  "comment": "See Apple\u0027s -- PEFBinaryFormat.h\n \n struct PEFExportedSymbol { //! This structure is 10 bytes long and arrays are packed.\n     UInt32  classAndName;  //A combination of class and name offset.\n     UInt32  symbolValue;   //Typically the symbol\u0027s offset within a section.\n     SInt16  sectionIndex;  //The index of the section, or pseudo-section, for the symbol.\n };\n ",
  "javadoc": "See Apple\u0027s -- PEFBinaryFormat.h\n \u003cpre\u003e\n struct PEFExportedSymbol { //! This structure is 10 bytes long and arrays are packed.\n     UInt32  classAndName;  //A combination of class and name offset.\n     UInt32  symbolValue;   //Typically the symbol\u0027s offset within a section.\n     SInt16  sectionIndex;  //The index of the section, or pseudo-section, for the symbol.\n };\n \u003c/pre\u003e",
  "static": false,
  "implements": [],
  "extends": "ghidra.app.util.bin.format.pef.AbstractSymbol",
  "fields": [
    {
      "name": "kPEFExpSymClassShift",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "24"
    },
    {
      "name": "kPEFAbsoluteExport",
      "comment": "The symbol value is an absolute address.",
      "javadoc": "The symbol value is an absolute address.",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "-2"
    },
    {
      "name": "kPEFReexportedImport",
      "comment": "The symbol value is the index of a reexported import.",
      "javadoc": "The symbol value is the index of a reexported import.",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "-3"
    },
    {
      "name": "classAndName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "symbolValue",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "sectionIndex",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "short",
      "type_short": "short",
      "constant_value": null
    },
    {
      "name": "_name",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "reader",
          "type_long": "ghidra.app.util.bin.BinaryReader",
          "type_short": "BinaryReader",
          "comment": ""
        },
        {
          "name": "loader",
          "type_long": "ghidra.app.util.bin.format.pef.LoaderInfoHeader",
          "type_short": "LoaderInfoHeader",
          "comment": ""
        },
        {
          "name": "key",
          "type_long": "ghidra.app.util.bin.format.pef.ExportedSymbolKey",
          "type_short": "ExportedSymbolKey",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSymbolClass",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.util.bin.format.pef.SymbolClass",
        "type_short": "SymbolClass",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getNameOffset",
      "comment": "Returns offset of symbol name in loader string table.",
      "javadoc": "Returns offset of symbol name in loader string table.\n@return offset of symbol name in loader string table",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "offset of symbol name in loader string table"
      },
      "throws": []
    },
    {
      "name": "getSymbolValue",
      "comment": "Typically the symbol\u0027s offset within a section.",
      "javadoc": "Typically the symbol\u0027s offset within a section.\n@return the symbol\u0027s offset within a section",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the symbol\u0027s offset within a section"
      },
      "throws": []
    },
    {
      "name": "getSectionIndex",
      "comment": "Returns the index of the section, or pseudo-section, for the symbol.",
      "javadoc": "Returns the index of the section, or pseudo-section, for the symbol.\n@return the index of the section, or pseudo-section, for the symbol",
      "static": false,
      "params": [],
      "return": {
        "type_long": "short",
        "type_short": "short",
        "comment": "the index of the section, or pseudo-section, for the symbol"
      },
      "throws": []
    },
    {
      "name": "toDataType",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.data.DataType",
        "type_short": "DataType",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.DuplicateNameException",
          "type_short": "DuplicateNameException",
          "comment": ""
        },
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    }
  ]
}
