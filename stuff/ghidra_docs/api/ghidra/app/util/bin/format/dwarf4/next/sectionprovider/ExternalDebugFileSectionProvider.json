{
  "name": "ExternalDebugFileSectionProvider",
  "comment": "A DWARFSectionProvider that reads .debug_info (and friends) sections from an external\n ELF file that is referenced in the original ELF file\u0027s build-id or debuglink sections.\n \n Creates a pinning reference from the temporary external ELF debug file to this SectionProvider\n instance using the program\u0027s Program#addConsumer(Object), and then releases the\n consumer when this instance is closed, allowing the temporary Program to be destroyed.",
  "javadoc": "A {@link DWARFSectionProvider} that reads .debug_info (and friends) sections from an external\n ELF file that is referenced in the original ELF file\u0027s build-id or debuglink sections.\n \u003cp\u003e\n Creates a pinning reference from the temporary external ELF debug file to this SectionProvider\n instance using the program\u0027s {@link Program#addConsumer(Object)}, and then releases the\n consumer when this instance is closed, allowing the temporary Program to be destroyed.",
  "static": false,
  "implements": [],
  "extends": "ghidra.app.util.bin.format.dwarf4.next.sectionprovider.BaseSectionProvider",
  "fields": [
    {
      "name": "PROGRAM_INFO_DWARF_EXTERNAL_DEBUG_FILE",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"DWARF External Debug File\""
    },
    {
      "name": "externalDebugFileLocation",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.formats.gfilesystem.FSRL",
      "type_short": "FSRL",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "createSectionProviderFor",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.app.util.bin.format.dwarf4.next.sectionprovider.DWARFSectionProvider",
        "type_short": "DWARFSectionProvider",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Creates a ExternalDebugFileSectionProvider",
      "javadoc": "Creates a {@link ExternalDebugFileSectionProvider}\n@param program the external ELF {@link Program}\n@param externalDebugFileLocation the location where the external ELF debug file is located",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "the external ELF Program"
        },
        {
          "name": "externalDebugFileLocation",
          "type_long": "ghidra.formats.gfilesystem.FSRL",
          "type_short": "FSRL",
          "comment": "the location where the external ELF debug file is located"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "close",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "updateProgramInfo",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getExternalDebugFileLocation",
      "comment": "Returns the previouly saved value of the external debug file location from the program\u0027s\n metadata.",
      "javadoc": "Returns the previouly saved value of the external debug file location from the program\u0027s\n metadata.\n@param program DWARF that previously was analyzed\n@return FSRL of external debug file, or null if missing or corrupted value",
      "static": true,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "DWARF that previously was analyzed"
        }
      ],
      "return": {
        "type_long": "ghidra.formats.gfilesystem.FSRL",
        "type_short": "FSRL",
        "comment": "FSRL of external debug file, or null if missing or corrupted value"
      },
      "throws": []
    }
  ]
}
