{
  "name": "OMFSegMap",
  "comment": "\n typedef struct OMFSegMap {\n     unsigned short  cSeg;        // total number of segment descriptors\n     unsigned short  cSegLog;     // number of logical segment descriptors\n     OMFSegMapDesc   rgDesc[0];   // array of segment descriptors\n };\n ",
  "javadoc": "\u003cpre\u003e\n typedef struct OMFSegMap {\n     unsigned short  cSeg;        // total number of segment descriptors\n     unsigned short  cSegLog;     // number of logical segment descriptors\n     OMFSegMapDesc   rgDesc[0];   // array of segment descriptors\n };\n \u003c/pre\u003e",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "cSeg",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "short",
      "type_short": "short",
      "constant_value": null
    },
    {
      "name": "cSegLog",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "short",
      "type_short": "short",
      "constant_value": null
    },
    {
      "name": "segmentMapDesc",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.bin.format.pe.debug.OMFSegMapDesc[]",
      "type_short": "ghidra.app.util.bin.format.pe.debug.OMFSegMapDesc[]",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "createOMFSegMap",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "reader",
          "type_long": "ghidra.app.util.bin.format.FactoryBundledWithBinaryReader",
          "type_short": "FactoryBundledWithBinaryReader",
          "comment": ""
        },
        {
          "name": "ptr",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.app.util.bin.format.pe.debug.OMFSegMap",
        "type_short": "OMFSegMap",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.",
      "javadoc": "DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "initOMFSegMap",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "reader",
          "type_long": "ghidra.app.util.bin.format.FactoryBundledWithBinaryReader",
          "type_short": "FactoryBundledWithBinaryReader",
          "comment": ""
        },
        {
          "name": "ptr",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getSegmentDescriptorCount",
      "comment": "Returns the total number of segment descriptors.",
      "javadoc": "Returns the total number of segment descriptors.\n@return the total number of segment descriptors",
      "static": false,
      "params": [],
      "return": {
        "type_long": "short",
        "type_short": "short",
        "comment": "the total number of segment descriptors"
      },
      "throws": []
    },
    {
      "name": "getLogicalSegmentDescriptorCount",
      "comment": "Returns the number of logical segment descriptors.",
      "javadoc": "Returns the number of logical segment descriptors.\n@return the number of logical segment descriptors",
      "static": false,
      "params": [],
      "return": {
        "type_long": "short",
        "type_short": "short",
        "comment": "the number of logical segment descriptors"
      },
      "throws": []
    },
    {
      "name": "getSegmentDescriptor",
      "comment": "Returns the array of segment descriptors.",
      "javadoc": "Returns the array of segment descriptors.\n@return the array of segment descriptors",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.util.bin.format.pe.debug.OMFSegMapDesc[]",
        "type_short": "ghidra.app.util.bin.format.pe.debug.OMFSegMapDesc[]",
        "comment": "the array of segment descriptors"
      },
      "throws": []
    }
  ]
}
