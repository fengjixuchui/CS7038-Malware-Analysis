{
  "name": "PdbInfoDotNet",
  "comment": "Newer style pdb information, using a GUID to link the pdb to its binary.",
  "javadoc": "Newer style pdb information, using a GUID to link the pdb to its binary.",
  "static": false,
  "implements": [
    "ghidra.app.util.bin.StructConverter",
    "ghidra.app.util.bin.format.pdb.PdbInfo"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "MAGIC",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "1381188691"
    },
    {
      "name": "magic",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "byte[]",
      "type_short": "byte[]",
      "constant_value": null
    },
    {
      "name": "guid",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.datatype.microsoft.GUID",
      "type_short": "GUID",
      "constant_value": null
    },
    {
      "name": "age",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "pdbName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "pdbPath",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "isMatch",
      "comment": "Returns true if the pdb information at the specified offset is a PdbInfoDotNet\n type (based on the signature at that offset).",
      "javadoc": "Returns true if the pdb information at the specified offset is a {@link PdbInfoDotNet}\n type (based on the signature at that offset).\n@param reader {@link BinaryReader}\n@param offset offset of the Pdb information\n@return boolean true if it is a {@link PdbInfoDotNet} type\n@throws IOException if error reading data",
      "static": true,
      "params": [
        {
          "name": "reader",
          "type_long": "ghidra.app.util.bin.BinaryReader",
          "type_short": "BinaryReader",
          "comment": "BinaryReader"
        },
        {
          "name": "offset",
          "type_long": "long",
          "type_short": "long",
          "comment": "offset of the Pdb information"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "boolean true if it is a PdbInfoDotNet type"
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if error reading data"
        }
      ]
    },
    {
      "name": "read",
      "comment": "Reads an instance from the stream.",
      "javadoc": "Reads an instance from the stream.\n@param reader {@link BinaryReader} to read from\n@param offset position of the pdb info\n@return new instance, never null\n@throws IOException if IO error or data format error",
      "static": true,
      "params": [
        {
          "name": "reader",
          "type_long": "ghidra.app.util.bin.BinaryReader",
          "type_short": "BinaryReader",
          "comment": "BinaryReader to read from"
        },
        {
          "name": "offset",
          "type_long": "long",
          "type_short": "long",
          "comment": "position of the pdb info"
        }
      ],
      "return": {
        "type_long": "ghidra.app.util.bin.format.pdb.PdbInfoDotNet",
        "type_short": "PdbInfoDotNet",
        "comment": "new instance, never null"
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if IO error or data format error"
        }
      ]
    },
    {
      "name": "fromValues",
      "comment": "Creates an instance from explicit values.",
      "javadoc": "Creates an instance from explicit values.\n@param pdbPath String path / filename of the pdb file\n@param age age\n@param guid {@link GUID}\n@return new instance, never null",
      "static": true,
      "params": [
        {
          "name": "pdbPath",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "String path / filename of the pdb file"
        },
        {
          "name": "age",
          "type_long": "int",
          "type_short": "int",
          "comment": "age"
        },
        {
          "name": "guid",
          "type_long": "ghidra.app.util.datatype.microsoft.GUID",
          "type_short": "GUID",
          "comment": "GUID"
        }
      ],
      "return": {
        "type_long": "ghidra.app.util.bin.format.pdb.PdbInfoDotNet",
        "type_short": "PdbInfoDotNet",
        "comment": "new instance, never null"
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isValid",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "serializeToOptions",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "options",
          "type_long": "ghidra.framework.options.Options",
          "type_short": "Options",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toDataType",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.data.DataType",
        "type_short": "DataType",
        "comment": ""
      },
      "throws": []
    }
  ]
}
