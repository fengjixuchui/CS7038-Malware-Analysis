{
  "name": "ElfRelrRelocationTableDataType",
  "comment": "ElfRelrRelocationTableDataType is a Factory datatype which defines a markup\n structure corresponding to a specified ELF REL relocation table.  The REL entry size and\n total length in bytes is required when interpreting a RELR table.",
  "javadoc": "\u003ccode\u003eElfRelrRelocationTableDataType\u003c/code\u003e is a Factory datatype which defines a markup\n structure corresponding to a specified ELF REL relocation table.  The REL entry size and\n total length in bytes is required when interpreting a RELR table.",
  "static": false,
  "implements": [],
  "extends": "ghidra.program.model.data.FactoryStructureDataType",
  "fields": [
    {
      "name": "length",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "entrySize",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor",
      "javadoc": "Constructor\n@param structName structure name for resulting structure\n@param length total length of RELR table in bytes\n@param entrySize RELR entry size.  This size also generally corresponds to the \n size if a stored pointer.",
      "static": false,
      "params": [
        {
          "name": "structName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "structure name for resulting structure"
        },
        {
          "name": "length",
          "type_long": "int",
          "type_short": "int",
          "comment": "total length of RELR table in bytes"
        },
        {
          "name": "entrySize",
          "type_long": "int",
          "type_short": "int",
          "comment": "RELR entry size.  This size also generally corresponds to the \n size if a stored pointer."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "structName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "length",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "entrySize",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "dtm",
          "type_long": "ghidra.program.model.data.DataTypeManager",
          "type_short": "DataTypeManager",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "clone",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "dtm",
          "type_long": "ghidra.program.model.data.DataTypeManager",
          "type_short": "DataTypeManager",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.data.DataType",
        "type_short": "DataType",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "readNextRelrEntry",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "buf",
          "type_long": "ghidra.program.model.mem.MemBuffer",
          "type_short": "MemBuffer",
          "comment": ""
        },
        {
          "name": "bufOffset",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.program.model.mem.MemoryAccessException",
          "type_short": "MemoryAccessException",
          "comment": ""
        }
      ]
    },
    {
      "name": "populateDynamicStructure",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "buf",
          "type_long": "ghidra.program.model.mem.MemBuffer",
          "type_short": "MemBuffer",
          "comment": ""
        },
        {
          "name": "struct",
          "type_long": "ghidra.program.model.data.Structure",
          "type_short": "Structure",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setCategoryPath",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "struct",
          "type_long": "ghidra.program.model.data.Structure",
          "type_short": "Structure",
          "comment": ""
        },
        {
          "name": "buf",
          "type_long": "ghidra.program.model.mem.MemBuffer",
          "type_short": "MemBuffer",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.data.Structure",
        "type_short": "Structure",
        "comment": ""
      },
      "throws": []
    }
  ]
}
