{
  "name": "NamespacePath",
  "comment": "Represents a hierarchical path of containers that hold names of objects.\n \n Each container of names (lets call them a namespace for short) can have a type that\n distinguishes it from other containers: classes, functions, c++ namespaces, etc.\n \n A NamespacePath does not correlate directly to a Ghidra Namespace, as a Ghidra Namespace\n is tied to a Program and has rules about what can be placed inside of it.\n \n NamespacePath instances can be created without referring to a Ghidra Program and without\n concern as to what will be valid or have collisions.\n \n Use a NamespacePath to represent and hold forward-engineering namespace nesting information (ie.\n namespace info recovered from debug info), and when a Ghidra Namespace is needed,\n convert to or lookup the live/\u0027real\u0027 Ghidra Namespace.",
  "javadoc": "Represents a hierarchical path of containers that hold names of objects.\n \u003cp\u003e\n Each container of names (lets call them a namespace for short) can have a type that\n distinguishes it from other containers: classes, functions, c++ namespaces, etc.\n \u003cp\u003e\n A NamespacePath does not correlate directly to a Ghidra {@link Namespace}, as a Ghidra Namespace\n is tied to a Program and has rules about what can be placed inside of it.\n \u003cp\u003e\n NamespacePath instances can be created without referring to a Ghidra Program and without\n concern as to what will be valid or have collisions.\n \u003cp\u003e\n Use a NamespacePath to represent and hold forward-engineering namespace nesting information (ie.\n namespace info recovered from debug info), and when a Ghidra Namespace is needed,\n convert to or lookup the live/\u0027real\u0027 Ghidra Namespace.",
  "static": false,
  "implements": [
    "java.lang.Comparable"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "ROOT",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.app.util.bin.format.dwarf4.next.NamespacePath",
      "type_short": "NamespacePath",
      "constant_value": null
    },
    {
      "name": "parent",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.bin.format.dwarf4.next.NamespacePath",
      "type_short": "NamespacePath",
      "constant_value": null
    },
    {
      "name": "name",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "type",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.symbol.SymbolType",
      "type_short": "SymbolType",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "create",
      "comment": "Creates a new NamespacePath instance.",
      "javadoc": "Creates a new {@link NamespacePath} instance.\n@param parent optional - parent {@link NamespacePath} instance, default to {@link #ROOT} if null.\n@param name string name of the new namespace.\n@param type {@link SymbolType} of the named space - ie. a \"namespace\", a class,\n@return new {@link NamespacePath}",
      "static": true,
      "params": [
        {
          "name": "parent",
          "type_long": "ghidra.app.util.bin.format.dwarf4.next.NamespacePath",
          "type_short": "NamespacePath",
          "comment": "optional - parent NamespacePath instance, default to #ROOT if null."
        },
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "string name of the new namespace."
        },
        {
          "name": "type",
          "type_long": "ghidra.program.model.symbol.SymbolType",
          "type_short": "SymbolType",
          "comment": "SymbolType of the named space - ie. a \"namespace\", a class,"
        }
      ],
      "return": {
        "type_long": "ghidra.app.util.bin.format.dwarf4.next.NamespacePath",
        "type_short": "NamespacePath",
        "comment": "new NamespacePath"
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "parent",
          "type_long": "ghidra.app.util.bin.format.dwarf4.next.NamespacePath",
          "type_short": "NamespacePath",
          "comment": ""
        },
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "type",
          "type_long": "ghidra.program.model.symbol.SymbolType",
          "type_short": "SymbolType",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isRoot",
      "comment": "Returns true if this namespace path points to the root of the namespace space.",
      "javadoc": "Returns true if this namespace path points to the root of the namespace space.\n@return boolean true if ROOT",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "boolean true if ROOT"
      },
      "throws": []
    },
    {
      "name": "getName",
      "comment": "Returns the name of this namespace element, ie. the last thing on the path.",
      "javadoc": "Returns the name of this namespace element, ie. the last thing on the path.\n@return string name.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "string name."
      },
      "throws": []
    },
    {
      "name": "getParent",
      "comment": "Returns a reference to the parent NamespacePath.",
      "javadoc": "Returns a reference to the parent NamespacePath.\n@return parent NamespacePath",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.util.bin.format.dwarf4.next.NamespacePath",
        "type_short": "NamespacePath",
        "comment": "parent NamespacePath"
      },
      "throws": []
    },
    {
      "name": "getType",
      "comment": "Returns the SymbolType of this namespace element (ie. the symbol type of the last\n thing on the path).",
      "javadoc": "Returns the {@link SymbolType} of this namespace element (ie. the symbol type of the last\n thing on the path).\n@return {@link SymbolType}",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.symbol.SymbolType",
        "type_short": "SymbolType",
        "comment": "SymbolType"
      },
      "throws": []
    },
    {
      "name": "flattenSymbolTypeForDNI",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "type",
          "type_long": "ghidra.program.model.symbol.SymbolType",
          "type_short": "SymbolType",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.symbol.SymbolType",
        "type_short": "SymbolType",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getNamespace",
      "comment": "Converts this NamespacePath into a Ghidra Namespace in the specified Program,\n creating missing elements on the path as necessary.",
      "javadoc": "Converts this NamespacePath into a Ghidra {@link Namespace} in the specified {@link Program},\n creating missing elements on the path as necessary.\n@param program Ghidra {@link Program} where the namespace should be retrieved from or created in.\n@return {@link Namespace} or fallback to the progam\u0027s Global root namespace if problem.",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "Ghidra Program where the namespace should be retrieved from or created in."
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.symbol.Namespace",
        "type_short": "Namespace",
        "comment": "Namespace or fallback to the progam\u0027s Global root namespace if problem."
      },
      "throws": []
    },
    {
      "name": "asNamespaceString",
      "comment": "Converts this namespace path into a Namespace style string.",
      "javadoc": "Converts this namespace path into a {@link Namespace} style string.\n@return string path \"ROOT::namespace1::namespace2\"",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "string path \"ROOT::namespace1::namespace2\""
      },
      "throws": []
    },
    {
      "name": "asFormattedString",
      "comment": "Converts this namespace path into a Namespace style string without the ROOT namespace\n included.",
      "javadoc": "Converts this namespace path into a {@link Namespace} style string without the ROOT namespace\n included.\n@return string path \"namespace1::namespace2\"",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "string path \"namespace1::namespace2\""
      },
      "throws": []
    },
    {
      "name": "getParts",
      "comment": "Returns the individual parts of the path as elements in a list.",
      "javadoc": "Returns the individual parts of the path as elements in a list.\n@return list of strings containing individual parts of the path",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cjava.lang.String\u003e",
        "type_short": "List",
        "comment": "list of strings containing individual parts of the path"
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "doInOrderTraversal",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "consumer",
          "type_long": "java.util.function.Consumer\u003cghidra.app.util.bin.format.dwarf4.next.NamespacePath\u003e",
          "type_short": "Consumer",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hashCode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "equals",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "obj",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "compareTo",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "otherPath",
          "type_long": "ghidra.app.util.bin.format.dwarf4.next.NamespacePath",
          "type_short": "NamespacePath",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    }
  ]
}
