{
  "name": "DebugCOFFSymbolsHeader",
  "comment": "A class to represent the COFF Symbols Header.\n \n \n typedef struct _IMAGE_COFF_SYMBOLS_HEADER {\n   DWORD   NumberOfSymbols;\n   DWORD   LvaToFirstSymbol;\n   DWORD   NumberOfLinenumbers;\n   DWORD   LvaToFirstLinenumber;\n   DWORD   RvaToFirstByteOfCode;\n   DWORD   RvaToLastByteOfCode;\n   DWORD   RvaToFirstByteOfData;\n   DWORD   RvaToLastByteOfData;\n } IMAGE_COFF_SYMBOLS_HEADER, *PIMAGE_COFF_SYMBOLS_HEADER;\n ",
  "javadoc": "A class to represent the COFF Symbols Header.\n \u003cbr\u003e\n \u003cpre\u003e\n typedef struct _IMAGE_COFF_SYMBOLS_HEADER {\n   DWORD   NumberOfSymbols;\n   DWORD   LvaToFirstSymbol;\n   DWORD   NumberOfLinenumbers;\n   DWORD   LvaToFirstLinenumber;\n   DWORD   RvaToFirstByteOfCode;\n   DWORD   RvaToLastByteOfCode;\n   DWORD   RvaToFirstByteOfData;\n   DWORD   RvaToLastByteOfData;\n } IMAGE_COFF_SYMBOLS_HEADER, *PIMAGE_COFF_SYMBOLS_HEADER;\n \u003c/pre\u003e",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "numberOfSymbols",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "lvaToFirstSymbol",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "numberOfLinenumbers",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "lvaToFirstLinenumber",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "rvaToFirstByteOfCode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "rvaToLastByteOfCode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "rvaToFirstByteOfData",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "rvaToLastByteOfData",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "symbolTable",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.bin.format.pe.debug.DebugCOFFSymbolTable",
      "type_short": "DebugCOFFSymbolTable",
      "constant_value": null
    },
    {
      "name": "lineNumbers",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.bin.format.pe.debug.DebugCOFFLineNumber[]",
      "type_short": "ghidra.app.util.bin.format.pe.debug.DebugCOFFLineNumber[]",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "createDebugCOFFSymbolsHeader",
      "comment": "Constructor",
      "javadoc": "Constructor\n@param reader the binary reader\n@param debugDir the debug directory associated to this COFF symbol header\n@param ntHeader",
      "static": true,
      "params": [
        {
          "name": "reader",
          "type_long": "ghidra.app.util.bin.format.FactoryBundledWithBinaryReader",
          "type_short": "FactoryBundledWithBinaryReader",
          "comment": "the binary reader"
        },
        {
          "name": "debugDir",
          "type_long": "ghidra.app.util.bin.format.pe.debug.DebugDirectory",
          "type_short": "DebugDirectory",
          "comment": "the debug directory associated to this COFF symbol header"
        },
        {
          "name": "validator",
          "type_long": "ghidra.app.util.bin.format.pe.OffsetValidator",
          "type_short": "OffsetValidator",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.app.util.bin.format.pe.debug.DebugCOFFSymbolsHeader",
        "type_short": "DebugCOFFSymbolsHeader",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.",
      "javadoc": "DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "initDebugCOFFSymbolsHeader",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "reader",
          "type_long": "ghidra.app.util.bin.format.FactoryBundledWithBinaryReader",
          "type_short": "FactoryBundledWithBinaryReader",
          "comment": ""
        },
        {
          "name": "debugDir",
          "type_long": "ghidra.app.util.bin.format.pe.debug.DebugDirectory",
          "type_short": "DebugDirectory",
          "comment": ""
        },
        {
          "name": "validator",
          "type_long": "ghidra.app.util.bin.format.pe.OffsetValidator",
          "type_short": "OffsetValidator",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getSymbolTable",
      "comment": "Returns the COFF symbol table.",
      "javadoc": "Returns the COFF symbol table.\n@return the COFF symbol table",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.util.bin.format.pe.debug.DebugCOFFSymbolTable",
        "type_short": "DebugCOFFSymbolTable",
        "comment": "the COFF symbol table"
      },
      "throws": []
    },
    {
      "name": "getLineNumbers",
      "comment": "Returns the COFF line numbers.",
      "javadoc": "Returns the COFF line numbers.\n@return the COFF line numbers",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.util.bin.format.pe.debug.DebugCOFFLineNumber[]",
        "type_short": "ghidra.app.util.bin.format.pe.debug.DebugCOFFLineNumber[]",
        "comment": "the COFF line numbers"
      },
      "throws": []
    },
    {
      "name": "getNumberOfSymbols",
      "comment": "Returns the number of symbols in this header.",
      "javadoc": "Returns the number of symbols in this header.\n@return the number of symbols in this header",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the number of symbols in this header"
      },
      "throws": []
    },
    {
      "name": "getFirstSymbolLVA",
      "comment": "Returns the LVA of the first symbol.",
      "javadoc": "Returns the LVA of the first symbol.\n@return the LVA of the first symbol",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the LVA of the first symbol"
      },
      "throws": []
    },
    {
      "name": "getNumberOfLinenumbers",
      "comment": "Returns the number of line numbers in this header.",
      "javadoc": "Returns the number of line numbers in this header.\n@return the number of line numbers in this header",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the number of line numbers in this header"
      },
      "throws": []
    },
    {
      "name": "getFirstLinenumberLVA",
      "comment": "Returns the LVA of the first line number.",
      "javadoc": "Returns the LVA of the first line number.\n@return the LVA of the first line number",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the LVA of the first line number"
      },
      "throws": []
    },
    {
      "name": "getFirstByteOfCodeRVA",
      "comment": "Returns the RVA of the first code byte.",
      "javadoc": "Returns the RVA of the first code byte.\n@return the RVA of the first code byte",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the RVA of the first code byte"
      },
      "throws": []
    },
    {
      "name": "getLastByteOfCodeRVA",
      "comment": "Returns the RVA of the last code byte.",
      "javadoc": "Returns the RVA of the last code byte.\n@return the RVA of the last code byte",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the RVA of the last code byte"
      },
      "throws": []
    },
    {
      "name": "getFirstByteOfDataRVA",
      "comment": "Returns the RVA of the first data byte.",
      "javadoc": "Returns the RVA of the first data byte.\n@return the RVA of the first data byte",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the RVA of the first data byte"
      },
      "throws": []
    },
    {
      "name": "getLastByteOfDataRVA",
      "comment": "Returns the RVA of the last data byte.",
      "javadoc": "Returns the RVA of the last data byte.\n@return the RVA of the last data byte",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the RVA of the last data byte"
      },
      "throws": []
    }
  ]
}
