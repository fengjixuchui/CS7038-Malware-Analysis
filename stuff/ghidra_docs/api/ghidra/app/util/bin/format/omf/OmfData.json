{
  "name": "OmfData",
  "comment": "Object representing data loaded directly into the final image.",
  "javadoc": "Object representing data loaded directly into the final image.",
  "static": false,
  "implements": [
    "java.lang.Comparable"
  ],
  "fields": [],
  "methods": [
    {
      "name": "getDataOffset",
      "comment": "",
      "javadoc": "@return the starting offset, within the loaded image, of this data",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": "the starting offset, within the loaded image, of this data"
      },
      "throws": []
    },
    {
      "name": "getLength",
      "comment": "",
      "javadoc": "@return the length of this data in bytes",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the length of this data in bytes"
      },
      "throws": []
    },
    {
      "name": "getByteArray",
      "comment": "Create a byte array holding the data represented by this object. The length\n of the byte array should exactly match the value returned by getLength()",
      "javadoc": "Create a byte array holding the data represented by this object. The length\n of the byte array should exactly match the value returned by getLength()\n@param reader is for pulling bytes directly from the binary image\n@return allocated and filled byte array\n@throws IOException for problems accessing data through the reader",
      "static": false,
      "params": [
        {
          "name": "reader",
          "type_long": "ghidra.app.util.bin.BinaryReader",
          "type_short": "BinaryReader",
          "comment": "is for pulling bytes directly from the binary image"
        }
      ],
      "return": {
        "type_long": "byte[]",
        "type_short": "byte[]",
        "comment": "allocated and filled byte array"
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "for problems accessing data through the reader"
        }
      ]
    },
    {
      "name": "isAllZeroes",
      "comment": "",
      "javadoc": "@return true if this is a block entirely of zeroes",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if this is a block entirely of zeroes"
      },
      "throws": []
    }
  ]
}
