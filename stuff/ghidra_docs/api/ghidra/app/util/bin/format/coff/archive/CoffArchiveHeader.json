{
  "name": "CoffArchiveHeader",
  "comment": "A class that represents a COFF archive file (ie. MS .lib files, Unix .ar files)\n \n COFF archives are very primitive compared to containers like ZIP or even TAR.\n \n The name of entries (ie. files) inside the archive is limited to 16 bytes, and to \n support longer names a couple of different schemes have been invented.  See the\n comments in CoffArchiveMemberHeader#read(BinaryReader, LongNamesMember) for\n decoding the name.",
  "javadoc": "A class that represents a COFF archive file (ie. MS .lib files, Unix .ar files)\n \u003cp\u003e\n COFF archives are very primitive compared to containers like ZIP or even TAR.\n \u003cp\u003e\n The name of entries (ie. files) inside the archive is limited to 16 bytes, and to \n support longer names a couple of different schemes have been invented.  See the\n comments in {@link CoffArchiveMemberHeader#read(BinaryReader, LongNamesMember)} for\n decoding the name.",
  "static": false,
  "implements": [
    "ghidra.app.util.bin.StructConverter"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "_firstLinkerMember",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.bin.format.coff.archive.FirstLinkerMember",
      "type_short": "FirstLinkerMember",
      "constant_value": null
    },
    {
      "name": "_secondLinkerMember",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.bin.format.coff.archive.SecondLinkerMember",
      "type_short": "SecondLinkerMember",
      "constant_value": null
    },
    {
      "name": "_longNameMember",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.bin.format.coff.archive.LongNamesMember",
      "type_short": "LongNamesMember",
      "constant_value": null
    },
    {
      "name": "_memberHeaders",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cghidra.app.util.bin.format.coff.archive.CoffArchiveMemberHeader\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "isMS",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "isMatch",
      "comment": "Returns true if the data contained in the ByteProvider contains\n a COFF Archive file.\n ",
      "javadoc": "Returns true if the data contained in the {@link ByteProvider provider} contains\n a COFF Archive file.\n \u003cp\u003e\n@param provider\n@return \n@throws IOException",
      "static": true,
      "params": [
        {
          "name": "provider",
          "type_long": "ghidra.app.util.bin.ByteProvider",
          "type_short": "ByteProvider",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "read",
      "comment": "Reads and parses the headers and meta-data in a COFF Archive file.\n \n Returns a CoffArchiveHeader that has a list of the \n CoffArchiveMemberHeader in the archive.\n ",
      "javadoc": "Reads and parses the headers and meta-data in a COFF Archive file.\n \u003cp\u003e\n Returns a {@link CoffArchiveHeader} that has a list of the \n {@link CoffArchiveMemberHeader members} in the archive.\n \u003cp\u003e\n@param provider\n@param monitor\n@return \n@throws CoffException\n@throws IOException",
      "static": true,
      "params": [
        {
          "name": "provider",
          "type_long": "ghidra.app.util.bin.ByteProvider",
          "type_short": "ByteProvider",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.app.util.bin.format.coff.archive.CoffArchiveHeader",
        "type_short": "CoffArchiveHeader",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.app.util.bin.format.coff.CoffException",
          "type_short": "CoffException",
          "comment": ""
        },
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toDataType",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.data.DataType",
        "type_short": "DataType",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.DuplicateNameException",
          "type_short": "DuplicateNameException",
          "comment": ""
        },
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getArchiveMemberHeaders",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cghidra.app.util.bin.format.coff.archive.CoffArchiveMemberHeader\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFirstLinkerMember",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.util.bin.format.coff.archive.FirstLinkerMember",
        "type_short": "FirstLinkerMember",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSecondLinkerMember",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.util.bin.format.coff.archive.SecondLinkerMember",
        "type_short": "SecondLinkerMember",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLongNameMember",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.util.bin.format.coff.archive.LongNamesMember",
        "type_short": "LongNamesMember",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isMSFormat",
      "comment": "Returns true if this COFF archive seems to be a Microsoft lib file (ie.\n has linker members and other features specific to MS)",
      "javadoc": "Returns true if this COFF archive seems to be a Microsoft lib file (ie.\n has linker members and other features specific to MS)\n@return ",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    }
  ]
}
