{
  "name": "GnuBuildIdSection",
  "comment": "Factory data type that marks up a Gnu Build-Id record from a \n ELF .note.gnu.build-id section",
  "javadoc": "Factory data type that marks up a Gnu Build-Id record from a \n ELF .note.gnu.build-id section",
  "static": false,
  "implements": [],
  "extends": "ghidra.program.model.data.FactoryStructureDataType",
  "fields": [
    {
      "name": "BUILD_ID_SECTION_NAME",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\".note.gnu.build-id\""
    },
    {
      "name": "MAX_SANE_STR_LENS",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "1024"
    },
    {
      "name": "sectionSize",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "fromProgram",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.app.util.bin.format.elf.GnuBuildIdSection.GnuBuildIdValues",
        "type_short": "GnuBuildIdValues",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Creates a new GnuBuildIdDataType instance.",
      "javadoc": "Creates a new GnuBuildIdDataType instance.\n@param dtm the {@link DataTypeManager} for the program\n@param sectionSize the size of the section (for bounds checking, assumes this\n is the only record in the section)",
      "static": false,
      "params": [
        {
          "name": "dtm",
          "type_long": "ghidra.program.model.data.DataTypeManager",
          "type_short": "DataTypeManager",
          "comment": "the DataTypeManager for the program"
        },
        {
          "name": "sectionSize",
          "type_long": "long",
          "type_short": "long",
          "comment": "the size of the section (for bounds checking, assumes this\n is the only record in the section)"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "clone",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "dtm",
          "type_long": "ghidra.program.model.data.DataTypeManager",
          "type_short": "DataTypeManager",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.data.DataType",
        "type_short": "DataType",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "populateDynamicStructure",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "buf",
          "type_long": "ghidra.program.model.mem.MemBuffer",
          "type_short": "MemBuffer",
          "comment": ""
        },
        {
          "name": "es",
          "type_long": "ghidra.program.model.data.Structure",
          "type_short": "Structure",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setCategoryPath",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "struct",
          "type_long": "ghidra.program.model.data.Structure",
          "type_short": "Structure",
          "comment": ""
        },
        {
          "name": "buf",
          "type_long": "ghidra.program.model.mem.MemBuffer",
          "type_short": "MemBuffer",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.data.Structure",
        "type_short": "Structure",
        "comment": ""
      },
      "throws": []
    }
  ]
}
