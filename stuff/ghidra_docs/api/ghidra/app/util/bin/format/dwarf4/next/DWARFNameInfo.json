{
  "name": "DWARFNameInfo",
  "comment": "A immutable hierarchical path based name implementation that can be viewed as either\n Namespace or CategoryPath.\n ",
  "javadoc": "A immutable hierarchical path based name implementation that can be viewed as either\n {@link Namespace namespaces} or {@link CategoryPath categorypaths}.\n \u003cp\u003e",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "parent",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.bin.format.dwarf4.next.DWARFNameInfo",
      "type_short": "DWARFNameInfo",
      "constant_value": null
    },
    {
      "name": "organizationalCategoryPath",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.data.CategoryPath",
      "type_short": "CategoryPath",
      "constant_value": null
    },
    {
      "name": "namespacePath",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.bin.format.dwarf4.next.NamespacePath",
      "type_short": "NamespacePath",
      "constant_value": null
    },
    {
      "name": "originalName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "createRoot",
      "comment": "Create a root name entry that will serve as the parent for all children.",
      "javadoc": "Create a root name entry that will serve as the parent for all children.\n@param rootCategory {@link CategoryPath} in the data type manager that will contain\n any sub-categories that represent namespaces\n@return a new {@link DWARFNameInfo} instance",
      "static": true,
      "params": [
        {
          "name": "rootCategory",
          "type_long": "ghidra.program.model.data.CategoryPath",
          "type_short": "CategoryPath",
          "comment": "CategoryPath in the data type manager that will contain\n any sub-categories that represent namespaces"
        }
      ],
      "return": {
        "type_long": "ghidra.app.util.bin.format.dwarf4.next.DWARFNameInfo",
        "type_short": "DWARFNameInfo",
        "comment": "a new DWARFNameInfo instance"
      },
      "throws": []
    },
    {
      "name": "fromDataType",
      "comment": "Create a DWARFNameInfo instance using the specified DataType\u0027s name.",
      "javadoc": "Create a {@link DWARFNameInfo} instance using the specified {@link DataType}\u0027s name.\n@param dataType {@link DataType}\n@return new {@link DWARFNameInfo} using the same name / CategoryPath as the data type",
      "static": true,
      "params": [
        {
          "name": "dataType",
          "type_long": "ghidra.program.model.data.DataType",
          "type_short": "DataType",
          "comment": "DataType"
        }
      ],
      "return": {
        "type_long": "ghidra.app.util.bin.format.dwarf4.next.DWARFNameInfo",
        "type_short": "DWARFNameInfo",
        "comment": "new DWARFNameInfo using the same name / CategoryPath as the data type"
      },
      "throws": []
    },
    {
      "name": "fromList",
      "comment": "Create a child DWARFNameInfo instance of the specified parent.\n \n Example:\n fromList(parent, List.of(\"name1\", \"name2\"))  parent_name/name1/name2",
      "javadoc": "Create a child {@link DWARFNameInfo} instance of the specified parent.\n \u003cp\u003e\n Example:\u003cbr\u003e\n \u003cpre\u003efromList(parent, List.of(\"name1\", \"name2\")) \u0026rarr; parent_name/name1/name2\u003c/pre\u003e\n@param parent {@link DWARFNameInfo} parent\n@param names list of names\n@return new {@link DWARFNameInfo} instance that is a child of the parent",
      "static": true,
      "params": [
        {
          "name": "parent",
          "type_long": "ghidra.app.util.bin.format.dwarf4.next.DWARFNameInfo",
          "type_short": "DWARFNameInfo",
          "comment": "DWARFNameInfo parent"
        },
        {
          "name": "names",
          "type_long": "java.util.List\u003cjava.lang.String\u003e",
          "type_short": "List",
          "comment": "list of names"
        }
      ],
      "return": {
        "type_long": "ghidra.app.util.bin.format.dwarf4.next.DWARFNameInfo",
        "type_short": "DWARFNameInfo",
        "comment": "new DWARFNameInfo instance that is a child of the parent"
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "parent",
          "type_long": "ghidra.app.util.bin.format.dwarf4.next.DWARFNameInfo",
          "type_short": "DWARFNameInfo",
          "comment": ""
        },
        {
          "name": "organizationalCategoryPath",
          "type_long": "ghidra.program.model.data.CategoryPath",
          "type_short": "CategoryPath",
          "comment": ""
        },
        {
          "name": "namespacePath",
          "type_long": "ghidra.app.util.bin.format.dwarf4.next.NamespacePath",
          "type_short": "NamespacePath",
          "comment": ""
        },
        {
          "name": "originalName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "parent",
          "type_long": "ghidra.app.util.bin.format.dwarf4.next.DWARFNameInfo",
          "type_short": "DWARFNameInfo",
          "comment": ""
        },
        {
          "name": "originalName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "type",
          "type_long": "ghidra.program.model.symbol.SymbolType",
          "type_short": "SymbolType",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getParent",
      "comment": "Returns the parent name",
      "javadoc": "Returns the parent name\n@return parent",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.util.bin.format.dwarf4.next.DWARFNameInfo",
        "type_short": "DWARFNameInfo",
        "comment": "parent"
      },
      "throws": []
    },
    {
      "name": "isRoot",
      "comment": "Returns true if this instance has no parent and is considered the root.",
      "javadoc": "Returns true if this instance has no parent and is considered the root.\n@return boolean true if root name, false if not root",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "boolean true if root name, false if not root"
      },
      "throws": []
    },
    {
      "name": "getOrganizationalCategoryPath",
      "comment": "Returns the organizational category path.",
      "javadoc": "Returns the organizational category path.\n@return organizational category path for dwarf names",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.data.CategoryPath",
        "type_short": "CategoryPath",
        "comment": "organizational category path for dwarf names"
      },
      "throws": []
    },
    {
      "name": "getNamespacePath",
      "comment": "Returns the NamespacePath of this instance.",
      "javadoc": "Returns the NamespacePath of this instance.\n@return {@link NamespacePath} of this instance",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.util.bin.format.dwarf4.next.NamespacePath",
        "type_short": "NamespacePath",
        "comment": "NamespacePath of this instance"
      },
      "throws": []
    },
    {
      "name": "getParentCP",
      "comment": "Returns the parent\u0027s CategoryPath.",
      "javadoc": "Returns the parent\u0027s CategoryPath.\n@return parent name\u0027s CategoryPath",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.data.CategoryPath",
        "type_short": "CategoryPath",
        "comment": "parent name\u0027s CategoryPath"
      },
      "throws": []
    },
    {
      "name": "getName",
      "comment": "Returns the name of this entry.",
      "javadoc": "Returns the name of this entry.\n@return string name of this entry, safe to use to name a Ghidra object (datatype, namespace,\n etc)",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "string name of this entry, safe to use to name a Ghidra object (datatype, namespace,\n etc)"
      },
      "throws": []
    },
    {
      "name": "replaceName",
      "comment": "Creates a new DWARFNameInfo instance, using this instance as the template, replacing\n the name with a new name.",
      "javadoc": "Creates a new DWARFNameInfo instance, using this instance as the template, replacing\n the name with a new name.\n@param newName name for the new instance\n@param newOriginalName originalName for the new instance\n@return new instance with new name",
      "static": false,
      "params": [
        {
          "name": "newName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "name for the new instance"
        },
        {
          "name": "newOriginalName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "originalName for the new instance"
        }
      ],
      "return": {
        "type_long": "ghidra.app.util.bin.format.dwarf4.next.DWARFNameInfo",
        "type_short": "DWARFNameInfo",
        "comment": "new instance with new name"
      },
      "throws": []
    },
    {
      "name": "replaceType",
      "comment": "Creates a new DWARFNameInfo instance, using this instance as the template, replacing\n the SymbolType with a new value.",
      "javadoc": "Creates a new DWARFNameInfo instance, using this instance as the template, replacing\n the SymbolType with a new value.\n@param newType new SymbolType value\n@return new instance with the specified SymbolType",
      "static": false,
      "params": [
        {
          "name": "newType",
          "type_long": "ghidra.program.model.symbol.SymbolType",
          "type_short": "SymbolType",
          "comment": "new SymbolType value"
        }
      ],
      "return": {
        "type_long": "ghidra.app.util.bin.format.dwarf4.next.DWARFNameInfo",
        "type_short": "DWARFNameInfo",
        "comment": "new instance with the specified SymbolType"
      },
      "throws": []
    },
    {
      "name": "getType",
      "comment": "Returns the SymbolType of this name.",
      "javadoc": "Returns the SymbolType of this name.\n@return {@link SymbolType} of this entry",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.symbol.SymbolType",
        "type_short": "SymbolType",
        "comment": "SymbolType of this entry"
      },
      "throws": []
    },
    {
      "name": "asCategoryPath",
      "comment": "Converts this object into an equiv CategoryPath.",
      "javadoc": "Converts this object into an equiv {@link CategoryPath}.\n@return {@link CategoryPath}: \"/organizational_cat_path/namespace1/namespace2/obj_name\"",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.data.CategoryPath",
        "type_short": "CategoryPath",
        "comment": "CategoryPath: \"/organizational_cat_path/namespace1/namespace2/obj_name\""
      },
      "throws": []
    },
    {
      "name": "asDataTypePath",
      "comment": "Converts this object into an equiv DataTypePath.",
      "javadoc": "Converts this object into an equiv {@link DataTypePath}.\n@return {@link DataTypePath}: { \"/organizational_cat_path/namespace1/namespace2\", \"obj_name\" }",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.data.DataTypePath",
        "type_short": "DataTypePath",
        "comment": "DataTypePath: { \"/organizational_cat_path/namespace1/namespace2\", \"obj_name\" }"
      },
      "throws": []
    },
    {
      "name": "getParentNamespace",
      "comment": "Returns the Ghidra Namespace that represents this entry\u0027s parent.",
      "javadoc": "Returns the Ghidra {@link Namespace} that represents this entry\u0027s parent.\n@param program the Ghidra program that contains the namespace\n@return {@link Namespace} representing this entry\u0027s parent",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "the Ghidra program that contains the namespace"
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.symbol.Namespace",
        "type_short": "Namespace",
        "comment": "Namespace representing this entry\u0027s parent"
      },
      "throws": []
    },
    {
      "name": "asNamespace",
      "comment": "Converts this object into an equiv Ghidra Namespace, omitting the organizational\n category path (which only applies to DataTypes).",
      "javadoc": "Converts this object into an equiv Ghidra {@link Namespace}, omitting the organizational\n category path (which only applies to DataTypes).\n@param program {@link Program} where the namespace lives.\n@return {@link Namespace}: \"ROOT::namespace1::namespace2::obj_name\"",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "Program where the namespace lives."
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.symbol.Namespace",
        "type_short": "Namespace",
        "comment": "Namespace: \"ROOT::namespace1::namespace2::obj_name\""
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isAnon",
      "comment": "Returns true if the original name of this entry was blank.",
      "javadoc": "Returns true if the original name of this entry was blank.\n@return boolean true if there was no original name",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "boolean true if there was no original name"
      },
      "throws": []
    },
    {
      "name": "getOriginalName",
      "comment": "Returns the original name (unmodified by Ghidra-isms) of this entry.",
      "javadoc": "Returns the original name (unmodified by Ghidra-isms) of this entry.\n@return original name",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "original name"
      },
      "throws": []
    },
    {
      "name": "isNameModified",
      "comment": "Returns true if this instance\u0027s #getName() value is different\n than its #getOriginalName() form.\n ",
      "javadoc": "Returns true if this instance\u0027s {@link #getName() name} value is different\n than its {@link #getOriginalName() original} form.\n \u003cp\u003e\n@return boolean true if the original name doesn\u0027t match the ghidra-ized name",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "boolean true if the original name doesn\u0027t match the ghidra-ized name"
      },
      "throws": []
    },
    {
      "name": "createChild",
      "comment": "Creates a DWARFNameInfo instance, which has a name that is contained with\n this instance\u0027s namespace, using the specified name and symbol type.",
      "javadoc": "Creates a {@link DWARFNameInfo} instance, which has a name that is contained with\n this instance\u0027s namespace, using the specified name and symbol type.\n@param childOriginalName the unmodified name\n@param childName the ghidra-ized name of the type/symbol/namespace/etc\n@param childType the type of the object being named\n@return new DWARFNameInfo instance",
      "static": false,
      "params": [
        {
          "name": "childOriginalName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the unmodified name"
        },
        {
          "name": "childName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the ghidra-ized name of the type/symbol/namespace/etc"
        },
        {
          "name": "childType",
          "type_long": "ghidra.program.model.symbol.SymbolType",
          "type_short": "SymbolType",
          "comment": "the type of the object being named"
        }
      ],
      "return": {
        "type_long": "ghidra.app.util.bin.format.dwarf4.next.DWARFNameInfo",
        "type_short": "DWARFNameInfo",
        "comment": "new DWARFNameInfo instance"
      },
      "throws": []
    },
    {
      "name": "hashCode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "equals",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "obj",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    }
  ]
}
