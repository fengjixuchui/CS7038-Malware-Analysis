{
  "name": "XReferenceUtils",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "ALL_REFS",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "-1"
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getXReferences",
      "comment": "Returns an array containing the first max\n direct xref references to the specified code unit.",
      "javadoc": "Returns an array containing the first \u003cb\u003e\u003ccode\u003emax\u003c/code\u003e\u003c/b\u003e\n direct xref references to the specified code unit.\n@param cu the code unit to generate the xrefs\n@param max max number of xrefs to get, or -1 to get all references\n@return array first \u003cb\u003e\u003ccode\u003emax\u003c/code\u003e\u003c/b\u003e xrefs to the code unit",
      "static": true,
      "params": [
        {
          "name": "cu",
          "type_long": "ghidra.program.model.listing.CodeUnit",
          "type_short": "CodeUnit",
          "comment": "the code unit to generate the xrefs"
        },
        {
          "name": "max",
          "type_long": "int",
          "type_short": "int",
          "comment": "max number of xrefs to get, or -1 to get all references"
        }
      ],
      "return": {
        "type_long": "java.util.List\u003cghidra.program.model.symbol.Reference\u003e",
        "type_short": "List",
        "comment": "array first max xrefs to the code unit"
      },
      "throws": []
    },
    {
      "name": "getOffcutXReferences",
      "comment": "Returns an array containing all offcut xref references to the specified code unit",
      "javadoc": "Returns an array containing all offcut xref references to the specified code unit\n@param cu the code unit to generate the offcut xrefs\n@param max max number of offcut xrefs to get, or -1 to get all offcut references\n@return array of all offcut xrefs to the code unit",
      "static": true,
      "params": [
        {
          "name": "cu",
          "type_long": "ghidra.program.model.listing.CodeUnit",
          "type_short": "CodeUnit",
          "comment": "the code unit to generate the offcut xrefs"
        },
        {
          "name": "max",
          "type_long": "int",
          "type_short": "int",
          "comment": "max number of offcut xrefs to get, or -1 to get all offcut references"
        }
      ],
      "return": {
        "type_long": "java.util.List\u003cghidra.program.model.symbol.Reference\u003e",
        "type_short": "List",
        "comment": "array of all offcut xrefs to the code unit"
      },
      "throws": []
    },
    {
      "name": "getVariableRefs",
      "comment": "Populates the provided lists with the direct and offcut xrefs to the specified variable",
      "javadoc": "Populates the provided lists with the direct and offcut xrefs to the specified variable\n@param var variable to get references\n@param xrefs list to put direct references in\n@param offcuts list to put offcut references in",
      "static": true,
      "params": [
        {
          "name": "var",
          "type_long": "ghidra.program.model.listing.Variable",
          "type_short": "Variable",
          "comment": "variable to get references"
        },
        {
          "name": "xrefs",
          "type_long": "java.util.List\u003cghidra.program.model.symbol.Reference\u003e",
          "type_short": "List",
          "comment": "list to put direct references in"
        },
        {
          "name": "offcuts",
          "type_long": "java.util.List\u003cghidra.program.model.symbol.Reference\u003e",
          "type_short": "List",
          "comment": "list to put offcut references in"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getVariableRefs",
      "comment": "Populates the provided lists with the direct and offcut xrefs to the specified variable",
      "javadoc": "Populates the provided lists with the direct and offcut xrefs to the specified variable\n@param var variable to get references\n@param xrefs list to put direct references in\n@param offcuts list to put offcut references in\n@param max max number of xrefs to get, or -1 to get all references",
      "static": true,
      "params": [
        {
          "name": "var",
          "type_long": "ghidra.program.model.listing.Variable",
          "type_short": "Variable",
          "comment": "variable to get references"
        },
        {
          "name": "xrefs",
          "type_long": "java.util.List\u003cghidra.program.model.symbol.Reference\u003e",
          "type_short": "List",
          "comment": "list to put direct references in"
        },
        {
          "name": "offcuts",
          "type_long": "java.util.List\u003cghidra.program.model.symbol.Reference\u003e",
          "type_short": "List",
          "comment": "list to put offcut references in"
        },
        {
          "name": "max",
          "type_long": "int",
          "type_short": "int",
          "comment": "max number of xrefs to get, or -1 to get all references"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getAllXrefs",
      "comment": "Returns all xrefs to the given location.  If in data, then xrefs to the specific data\n component will be returned.  Otherwise, the code unit containing the address of the\n given location will be used as the source of the xrefs.",
      "javadoc": "Returns all xrefs to the given location.  If in data, then xrefs to the specific data\n component will be returned.  Otherwise, the code unit containing the address of the\n given location will be used as the source of the xrefs.\n@param location the location for which to get xrefs\n@return the xrefs",
      "static": true,
      "params": [
        {
          "name": "location",
          "type_long": "ghidra.program.util.ProgramLocation",
          "type_short": "ProgramLocation",
          "comment": "the location for which to get xrefs"
        }
      ],
      "return": {
        "type_long": "java.util.Set\u003cghidra.program.model.symbol.Reference\u003e",
        "type_short": "Set",
        "comment": "the xrefs"
      },
      "throws": []
    },
    {
      "name": "showXrefs",
      "comment": "Shows all xrefs to the given location in a new table.",
      "javadoc": "Shows all xrefs to the given location in a new table.\n@param navigatable the navigatable used for navigation from the table\n@param serviceProvider the service provider needed to wire navigation\n@param service the service needed to show the table\n@param location the location for which to find references\n@param xrefs the xrefs to show",
      "static": true,
      "params": [
        {
          "name": "navigatable",
          "type_long": "ghidra.app.nav.Navigatable",
          "type_short": "Navigatable",
          "comment": "the navigatable used for navigation from the table"
        },
        {
          "name": "serviceProvider",
          "type_long": "ghidra.framework.plugintool.ServiceProvider",
          "type_short": "ServiceProvider",
          "comment": "the service provider needed to wire navigation"
        },
        {
          "name": "service",
          "type_long": "ghidra.app.util.query.TableService",
          "type_short": "TableService",
          "comment": "the service needed to show the table"
        },
        {
          "name": "location",
          "type_long": "ghidra.program.util.ProgramLocation",
          "type_short": "ProgramLocation",
          "comment": "the location for which to find references"
        },
        {
          "name": "xrefs",
          "type_long": "java.util.Collection\u003cghidra.program.model.symbol.Reference\u003e",
          "type_short": "Collection",
          "comment": "the xrefs to show"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
