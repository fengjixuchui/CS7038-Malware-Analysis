{
  "name": "CodeUnitInfo",
  "comment": "Container object to keep a relative index, label, and comments. Used\n in a list for copying/pasting labels and comments from one program to\n another.",
  "javadoc": "Container object to keep a relative index, label, and comments. Used\n in a list for copying/pasting labels and comments from one program to\n another.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "serialVersionUID",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "long",
      "type_short": "long",
      "constant_value": "1"
    },
    {
      "name": "emptyStringArray",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String[]",
      "type_short": "java.lang.String[]",
      "constant_value": null
    },
    {
      "name": "emptyIntArray",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int[]",
      "type_short": "int[]",
      "constant_value": null
    },
    {
      "name": "emptyAddrArray",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.program.model.address.Address[]",
      "type_short": "ghidra.program.model.address.Address[]",
      "constant_value": null
    },
    {
      "name": "emptySourceTypeArray",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.program.model.symbol.SourceType[]",
      "type_short": "ghidra.program.model.symbol.SourceType[]",
      "constant_value": null
    },
    {
      "name": "index",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "hasDynamicSymbol",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "primarySymbolName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "primarySymbolSource",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.symbol.SourceType",
      "type_short": "SourceType",
      "constant_value": null
    },
    {
      "name": "primarySymbolInFunctionScope",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "functionScopeSymbolNames",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String[]",
      "type_short": "java.lang.String[]",
      "constant_value": null
    },
    {
      "name": "functionScopeSymbolSources",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.symbol.SourceType[]",
      "type_short": "ghidra.program.model.symbol.SourceType[]",
      "constant_value": null
    },
    {
      "name": "otherSymbolNames",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String[]",
      "type_short": "java.lang.String[]",
      "constant_value": null
    },
    {
      "name": "otherSymbolSources",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.symbol.SourceType[]",
      "type_short": "ghidra.program.model.symbol.SourceType[]",
      "constant_value": null
    },
    {
      "name": "plateComment",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String[]",
      "type_short": "java.lang.String[]",
      "constant_value": null
    },
    {
      "name": "preComment",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String[]",
      "type_short": "java.lang.String[]",
      "constant_value": null
    },
    {
      "name": "postComment",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String[]",
      "type_short": "java.lang.String[]",
      "constant_value": null
    },
    {
      "name": "eolComment",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String[]",
      "type_short": "java.lang.String[]",
      "constant_value": null
    },
    {
      "name": "repeatableComment",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String[]",
      "type_short": "java.lang.String[]",
      "constant_value": null
    },
    {
      "name": "functionName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "functionComments",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String[]",
      "type_short": "java.lang.String[]",
      "constant_value": null
    },
    {
      "name": "stackVarNames",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String[]",
      "type_short": "java.lang.String[]",
      "constant_value": null
    },
    {
      "name": "stackVarSources",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.symbol.SourceType[]",
      "type_short": "ghidra.program.model.symbol.SourceType[]",
      "constant_value": null
    },
    {
      "name": "stackOffsets",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int[]",
      "type_short": "int[]",
      "constant_value": null
    },
    {
      "name": "stackVarFUOffsets",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int[]",
      "type_short": "int[]",
      "constant_value": null
    },
    {
      "name": "stackVarComments",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String[]",
      "type_short": "java.lang.String[]",
      "constant_value": null
    },
    {
      "name": "varNames",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String[]",
      "type_short": "java.lang.String[]",
      "constant_value": null
    },
    {
      "name": "varSources",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.symbol.SourceType[]",
      "type_short": "ghidra.program.model.symbol.SourceType[]",
      "constant_value": null
    },
    {
      "name": "varAddrs",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.address.Address[]",
      "type_short": "ghidra.program.model.address.Address[]",
      "constant_value": null
    },
    {
      "name": "varFUOffsets",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int[]",
      "type_short": "int[]",
      "constant_value": null
    },
    {
      "name": "varComments",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String[]",
      "type_short": "java.lang.String[]",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor a new CodeUnitInfo.",
      "javadoc": "Constructor a new CodeUnitInfo.\n@param index relative index added to a base address\n for where this information will be placed",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "int",
          "type_short": "int",
          "comment": "relative index added to a base address\n for where this information will be placed"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setSymbols",
      "comment": "Set the symbols to be transferred.",
      "javadoc": "Set the symbols to be transferred.",
      "static": false,
      "params": [
        {
          "name": "symbols",
          "type_long": "ghidra.program.model.symbol.Symbol[]",
          "type_short": "ghidra.program.model.symbol.Symbol[]",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setComment",
      "comment": "Set the comment to be transferred.",
      "javadoc": "Set the comment to be transferred.\n@param commentType CodeUnit.PRE_COMMENT, POST_COMMENT, \n PLATE_COMMENT, EOL_COMMENT, or REPEATABLE.\n@param comment comment",
      "static": false,
      "params": [
        {
          "name": "commentType",
          "type_long": "int",
          "type_short": "int",
          "comment": "CodeUnit.PRE_COMMENT, POST_COMMENT, \n PLATE_COMMENT, EOL_COMMENT, or REPEATABLE."
        },
        {
          "name": "comment",
          "type_long": "java.lang.String[]",
          "type_short": "java.lang.String[]",
          "comment": "comment"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setFunction",
      "comment": "Set the function info.",
      "javadoc": "Set the function info.\n@param function function used to get function info to transfer",
      "static": false,
      "params": [
        {
          "name": "function",
          "type_long": "ghidra.program.model.listing.Function",
          "type_short": "Function",
          "comment": "function used to get function info to transfer"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getIndex",
      "comment": "Get the relative index for this CodeUnitInfo to add to a base address.",
      "javadoc": "Get the relative index for this CodeUnitInfo to add to a base address.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hasSymbols",
      "comment": "Return whether this CodeUnitInfo has symbols to copy.",
      "javadoc": "Return whether this CodeUnitInfo has symbols to copy.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hasDynamicSymbol",
      "comment": "Return whether this CodeUnitInfo has a dynamic symbol.",
      "javadoc": "Return whether this CodeUnitInfo has a dynamic symbol.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPrimarySymbolName",
      "comment": "Get the label; may be null.",
      "javadoc": "Get the label; may be null.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPrimarySymbolSource",
      "comment": "Get the label source",
      "javadoc": "Get the label source",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.symbol.SourceType",
        "type_short": "SourceType",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isPrimarySymbolInFunctionScope",
      "comment": "Is primary symbol in a function scope",
      "javadoc": "Is primary symbol in a function scope",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFunctionScopeSymbolNames",
      "comment": "Get the names of the function scope symbols.",
      "javadoc": "Get the names of the function scope symbols.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String[]",
        "type_short": "java.lang.String[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFunctionScopeSymbolSources",
      "comment": "Get the sources of the function scope symbols.",
      "javadoc": "Get the sources of the function scope symbols.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.symbol.SourceType[]",
        "type_short": "ghidra.program.model.symbol.SourceType[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getOtherSymbolNames",
      "comment": "Get the names of the other symbols not in a function scope.",
      "javadoc": "Get the names of the other symbols not in a function scope.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String[]",
        "type_short": "java.lang.String[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getOtherSymbolSources",
      "comment": "Get the sources of the other symbols not in a function scope.",
      "javadoc": "Get the sources of the other symbols not in a function scope.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.symbol.SourceType[]",
        "type_short": "ghidra.program.model.symbol.SourceType[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPlateComment",
      "comment": "Get the plate comment.",
      "javadoc": "Get the plate comment.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String[]",
        "type_short": "java.lang.String[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPreComment",
      "comment": "Get the pre comment.",
      "javadoc": "Get the pre comment.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String[]",
        "type_short": "java.lang.String[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPostComment",
      "comment": "Get the post comment.",
      "javadoc": "Get the post comment.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String[]",
        "type_short": "java.lang.String[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getEOLComment",
      "comment": "Get the EOL comment.",
      "javadoc": "Get the EOL comment.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String[]",
        "type_short": "java.lang.String[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getRepeatableComment",
      "comment": "Get the repeatable comment.",
      "javadoc": "Get the repeatable comment.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String[]",
        "type_short": "java.lang.String[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFunctionName",
      "comment": "Get the function name.",
      "javadoc": "Get the function name.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFunctionComments",
      "comment": "Get the function comments.",
      "javadoc": "Get the function comments.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String[]",
        "type_short": "java.lang.String[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getStackVariableNames",
      "comment": "Get the stack variable names.",
      "javadoc": "Get the stack variable names.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String[]",
        "type_short": "java.lang.String[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getStackVariableSources",
      "comment": "Get the stack variable sources.",
      "javadoc": "Get the stack variable sources.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.symbol.SourceType[]",
        "type_short": "ghidra.program.model.symbol.SourceType[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getStackOffsets",
      "comment": "Get the stack offsets.",
      "javadoc": "Get the stack offsets.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int[]",
        "type_short": "int[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getStackVarFirstUseOffsets",
      "comment": "Get the stack variable \"First Use Offsets\"",
      "javadoc": "Get the stack variable \"First Use Offsets\"",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int[]",
        "type_short": "int[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getStackVariableComments",
      "comment": "Get the stack variable comments.",
      "javadoc": "Get the stack variable comments.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String[]",
        "type_short": "java.lang.String[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getVariableNames",
      "comment": "Get the non-stack variable names.",
      "javadoc": "Get the non-stack variable names.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String[]",
        "type_short": "java.lang.String[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getVariableSources",
      "comment": "Get the non-stack variable sources.",
      "javadoc": "Get the non-stack variable sources.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.symbol.SourceType[]",
        "type_short": "ghidra.program.model.symbol.SourceType[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getVarAddresses",
      "comment": "Get the storage addresses corresponding to each non-stack variable.",
      "javadoc": "Get the storage addresses corresponding to each non-stack variable.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.address.Address[]",
        "type_short": "ghidra.program.model.address.Address[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getVarFirstUseOffsets",
      "comment": "Get the non-stack variable \"First Use Offsets\"",
      "javadoc": "Get the non-stack variable \"First Use Offsets\"",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int[]",
        "type_short": "int[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getVariableComments",
      "comment": "Get the non-stack variable comments.",
      "javadoc": "Get the non-stack variable comments.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String[]",
        "type_short": "java.lang.String[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setStackVarInfo",
      "comment": "Set the stack variable info for the function",
      "javadoc": "Set the stack variable info for the function\n@param vars all function stack variables",
      "static": false,
      "params": [
        {
          "name": "vars",
          "type_long": "ghidra.program.model.listing.Variable[]",
          "type_short": "ghidra.program.model.listing.Variable[]",
          "comment": "all function stack variables"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setNonStackVarInfo",
      "comment": "Set the non-stack variable info for the function",
      "javadoc": "Set the non-stack variable info for the function\n@param vars all function variables",
      "static": false,
      "params": [
        {
          "name": "vars",
          "type_long": "ghidra.program.model.listing.Variable[]",
          "type_short": "ghidra.program.model.listing.Variable[]",
          "comment": "all function variables"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
