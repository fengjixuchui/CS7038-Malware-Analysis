{
  "name": "LibraryExportedSymbol",
  "comment": "A class to represent an exported symbol in a library (or DLL).",
  "javadoc": "A class to represent an exported symbol in a library (or DLL).",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "libName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "memsize",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "ordinal",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "symbolName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "fowardLibraryName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "fowardSymbolName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "purge",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "noReturn",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "comment",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "libName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "memsize",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "ordinal",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "symbolName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "fowardLibraryName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "fowardSymbolName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "purge",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "noReturn",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        },
        {
          "name": "comment",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLibraryName",
      "comment": "Returns the name of the library containing this\n exported symbol. For example \"user32.dll\" or \"libc.so\".",
      "javadoc": "Returns the name of the library containing this\n exported symbol. For example \"user32.dll\" or \"libc.so\".\n@return the library name",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the library name"
      },
      "throws": []
    },
    {
      "name": "getOrdinal",
      "comment": "Returns the ordinal value of this symbol.\n A value of -1 indicates that this symbol\n is only exported by name.",
      "javadoc": "Returns the ordinal value of this symbol.\n A value of -1 indicates that this symbol\n is only exported by name.\n@return the ordinal value of this symbol",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the ordinal value of this symbol"
      },
      "throws": []
    },
    {
      "name": "getName",
      "comment": "Returns the name of this symbol.\n This value could be null since some libraries\n only export by ordinal value.",
      "javadoc": "Returns the name of this symbol.\n This value could be null since some libraries\n only export by ordinal value.\n@return the name of this symbol",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the name of this symbol"
      },
      "throws": []
    },
    {
      "name": "getPurge",
      "comment": "Returns the purge value of the function related\n to this exported symbol. The purge value\n is the number of bytes purged from the stack\n when the function returns.\n \n -2 purge value is used to prevent infinite loops in recursion.",
      "javadoc": "Returns the purge value of the function related\n to this exported symbol. The purge value\n is the number of bytes purged from the stack\n when the function returns.\n \n -2 purge value is used to prevent infinite loops in recursion.\n@return the purge value of the function or -1 (if unable to resolve the purge value)",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the purge value of the function or -1 (if unable to resolve the purge value)"
      },
      "throws": []
    },
    {
      "name": "hasNoReturn",
      "comment": "Returns the No-Return value of the function related\n to this exported symbol.\n \n -2 purge value is used to prevent infinite loops in recursion.",
      "javadoc": "Returns the No-Return value of the function related\n to this exported symbol.\n \n -2 purge value is used to prevent infinite loops in recursion.\n@return the No-Return value of the function",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "the No-Return value of the function"
      },
      "throws": []
    },
    {
      "name": "processForwardedEntry",
      "comment": "Attempt to get purge value and noReturn from forwarded entry.\n If purge value is not -1, these values have already been retrieved.\n \n -2 purge value is used to prevent infinite loops in recursion.",
      "javadoc": "Attempt to get purge value and noReturn from forwarded entry.\n If purge value is not -1, these values have already been retrieved.\n \n -2 purge value is used to prevent infinite loops in recursion.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getComment",
      "comment": "Returns the comment from the symbol file.",
      "javadoc": "Returns the comment from the symbol file.\n@return the comment from the symbol file",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the comment from the symbol file"
      },
      "throws": []
    },
    {
      "name": "isFowardEntry",
      "comment": "",
      "javadoc": "@return true if this symbol is fowarded to another library",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if this symbol is fowarded to another library"
      },
      "throws": []
    },
    {
      "name": "getFowardLibraryName",
      "comment": "",
      "javadoc": "@return the fowarded library name",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the fowarded library name"
      },
      "throws": []
    },
    {
      "name": "getFowardSymbolName",
      "comment": "",
      "javadoc": "@return the fowarded symbol name",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the fowarded symbol name"
      },
      "throws": []
    },
    {
      "name": "setName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
