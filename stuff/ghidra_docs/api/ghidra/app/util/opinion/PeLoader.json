{
  "name": "PeLoader",
  "comment": "Microsoft Portable Executable (PE) loader.",
  "javadoc": "Microsoft Portable Executable (PE) loader.",
  "static": false,
  "implements": [],
  "extends": "ghidra.app.util.opinion.AbstractPeDebugLoader",
  "fields": [
    {
      "name": "PE_NAME",
      "comment": "The name of the PE loader",
      "javadoc": "The name of the PE loader",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Portable Executable (PE)\""
    },
    {
      "name": "HEADERS",
      "comment": "The name of the PE headers memory block.",
      "javadoc": "The name of the PE headers memory block.",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Headers\""
    },
    {
      "name": "MIN_BYTE_LENGTH",
      "comment": "The minimum length a file has to be for it to qualify as a possible PE.",
      "javadoc": "The minimum length a file has to be for it to qualify as a possible PE.",
      "static": true,
      "type_long": "long",
      "type_short": "long",
      "constant_value": "4"
    },
    {
      "name": "PARSE_CLI_HEADERS_OPTION_NAME",
      "comment": "PE loader option to control parsing CLI headers",
      "javadoc": "PE loader option to control parsing CLI headers",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Parse CLI headers (if present)\""
    },
    {
      "name": "PARSE_CLI_HEADERS_OPTION_DEFAULT",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": "true"
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "findSupportedLoadSpecs",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "provider",
          "type_long": "ghidra.app.util.bin.ByteProvider",
          "type_short": "ByteProvider",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.Collection\u003cghidra.app.util.opinion.LoadSpec\u003e",
        "type_short": "Collection",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "load",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "provider",
          "type_long": "ghidra.app.util.bin.ByteProvider",
          "type_short": "ByteProvider",
          "comment": ""
        },
        {
          "name": "loadSpec",
          "type_long": "ghidra.app.util.opinion.LoadSpec",
          "type_short": "LoadSpec",
          "comment": ""
        },
        {
          "name": "options",
          "type_long": "java.util.List\u003cghidra.app.util.Option\u003e",
          "type_short": "List",
          "comment": ""
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        },
        {
          "name": "log",
          "type_long": "ghidra.app.util.importer.MessageLog",
          "type_short": "MessageLog",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        },
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getDefaultOptions",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "provider",
          "type_long": "ghidra.app.util.bin.ByteProvider",
          "type_short": "ByteProvider",
          "comment": ""
        },
        {
          "name": "loadSpec",
          "type_long": "ghidra.app.util.opinion.LoadSpec",
          "type_short": "LoadSpec",
          "comment": ""
        },
        {
          "name": "domainObject",
          "type_long": "ghidra.framework.model.DomainObject",
          "type_short": "DomainObject",
          "comment": ""
        },
        {
          "name": "loadIntoProgram",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.List\u003cghidra.app.util.Option\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "validateOptions",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "provider",
          "type_long": "ghidra.app.util.bin.ByteProvider",
          "type_short": "ByteProvider",
          "comment": ""
        },
        {
          "name": "loadSpec",
          "type_long": "ghidra.app.util.opinion.LoadSpec",
          "type_short": "LoadSpec",
          "comment": ""
        },
        {
          "name": "options",
          "type_long": "java.util.List\u003cghidra.app.util.Option\u003e",
          "type_short": "List",
          "comment": ""
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isCaseInsensitiveLibraryFilenames",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "shouldParseCliHeaders",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "options",
          "type_long": "java.util.List\u003cghidra.app.util.Option\u003e",
          "type_short": "List",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "layoutHeaders",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "pe",
          "type_long": "ghidra.app.util.bin.format.pe.PortableExecutable",
          "type_short": "PortableExecutable",
          "comment": ""
        },
        {
          "name": "ntHeader",
          "type_long": "ghidra.app.util.bin.format.pe.NTHeader",
          "type_short": "NTHeader",
          "comment": ""
        },
        {
          "name": "datadirs",
          "type_long": "ghidra.app.util.bin.format.pe.DataDirectory[]",
          "type_short": "ghidra.app.util.bin.format.pe.DataDirectory[]",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "processImageRuntimeFunctionEntries",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "fileHeader",
          "type_long": "ghidra.app.util.bin.format.pe.FileHeader",
          "type_short": "FileHeader",
          "comment": ""
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        },
        {
          "name": "log",
          "type_long": "ghidra.app.util.importer.MessageLog",
          "type_short": "MessageLog",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "processSymbols",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "fileHeader",
          "type_long": "ghidra.app.util.bin.format.pe.FileHeader",
          "type_short": "FileHeader",
          "comment": ""
        },
        {
          "name": "sectionToAddress",
          "type_long": "java.util.Map\u003cghidra.app.util.bin.format.pe.SectionHeader,ghidra.program.model.address.Address\u003e",
          "type_short": "Map",
          "comment": ""
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        },
        {
          "name": "log",
          "type_long": "ghidra.app.util.importer.MessageLog",
          "type_short": "MessageLog",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "processProperties",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "optionalHeader",
          "type_long": "ghidra.app.util.bin.format.pe.OptionalHeader",
          "type_short": "OptionalHeader",
          "comment": ""
        },
        {
          "name": "prog",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "processRelocations",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "optionalHeader",
          "type_long": "ghidra.app.util.bin.format.pe.OptionalHeader",
          "type_short": "OptionalHeader",
          "comment": ""
        },
        {
          "name": "prog",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        },
        {
          "name": "log",
          "type_long": "ghidra.app.util.importer.MessageLog",
          "type_short": "MessageLog",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "processImports",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "optionalHeader",
          "type_long": "ghidra.app.util.bin.format.pe.OptionalHeader",
          "type_short": "OptionalHeader",
          "comment": ""
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        },
        {
          "name": "log",
          "type_long": "ghidra.app.util.importer.MessageLog",
          "type_short": "MessageLog",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "processDelayImports",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "optionalHeader",
          "type_long": "ghidra.app.util.bin.format.pe.OptionalHeader",
          "type_short": "OptionalHeader",
          "comment": ""
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        },
        {
          "name": "log",
          "type_long": "ghidra.app.util.importer.MessageLog",
          "type_short": "MessageLog",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "markAsCode",
      "comment": "Mark this location as code in the CodeMap.\n The analyzers will pick this up and disassemble the code.\n\n TODO: this should be in a common place, so all importers can communicate that something\n is code or data.",
      "javadoc": "Mark this location as code in the CodeMap.\n The analyzers will pick this up and disassemble the code.\n\n TODO: this should be in a common place, so all importers can communicate that something\n is code or data.\n@param program The program to mark up.\n@param address The location.",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "The program to mark up."
        },
        {
          "name": "address",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "The location."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setProcessorContext",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "fileHeader",
          "type_long": "ghidra.app.util.bin.format.pe.FileHeader",
          "type_short": "FileHeader",
          "comment": ""
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        },
        {
          "name": "log",
          "type_long": "ghidra.app.util.importer.MessageLog",
          "type_short": "MessageLog",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "processExports",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "optionalHeader",
          "type_long": "ghidra.app.util.bin.format.pe.OptionalHeader",
          "type_short": "OptionalHeader",
          "comment": ""
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        },
        {
          "name": "log",
          "type_long": "ghidra.app.util.importer.MessageLog",
          "type_short": "MessageLog",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "processMemoryBlocks",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "pe",
          "type_long": "ghidra.app.util.bin.format.pe.PortableExecutable",
          "type_short": "PortableExecutable",
          "comment": ""
        },
        {
          "name": "prog",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "fileBytes",
          "type_long": "ghidra.program.database.mem.FileBytes",
          "type_short": "FileBytes",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        },
        {
          "name": "log",
          "type_long": "ghidra.app.util.importer.MessageLog",
          "type_short": "MessageLog",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.Map\u003cghidra.app.util.bin.format.pe.SectionHeader,ghidra.program.model.address.Address\u003e",
        "type_short": "Map",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.program.model.address.AddressOverflowException",
          "type_short": "AddressOverflowException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getVirtualSize",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "pe",
          "type_long": "ghidra.app.util.bin.format.pe.PortableExecutable",
          "type_short": "PortableExecutable",
          "comment": ""
        },
        {
          "name": "sections",
          "type_long": "ghidra.app.util.bin.format.pe.SectionHeader[]",
          "type_short": "ghidra.app.util.bin.format.pe.SectionHeader[]",
          "comment": ""
        },
        {
          "name": "space",
          "type_long": "ghidra.program.model.address.AddressSpace",
          "type_short": "AddressSpace",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "processEntryPoints",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "ntHeader",
          "type_long": "ghidra.app.util.bin.format.pe.NTHeader",
          "type_short": "NTHeader",
          "comment": ""
        },
        {
          "name": "prog",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getILEntryPoint",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "optionalHeader",
          "type_long": "ghidra.app.util.bin.format.pe.OptionalHeader",
          "type_short": "OptionalHeader",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "processDebug",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "optionalHeader",
          "type_long": "ghidra.app.util.bin.format.pe.OptionalHeader",
          "type_short": "OptionalHeader",
          "comment": ""
        },
        {
          "name": "fileHeader",
          "type_long": "ghidra.app.util.bin.format.pe.FileHeader",
          "type_short": "FileHeader",
          "comment": ""
        },
        {
          "name": "sectionToAddress",
          "type_long": "java.util.Map\u003cghidra.app.util.bin.format.pe.SectionHeader,ghidra.program.model.address.Address\u003e",
          "type_short": "Map",
          "comment": ""
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    }
  ]
}
