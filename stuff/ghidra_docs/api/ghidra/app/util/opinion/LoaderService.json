{
  "name": "LoaderService",
  "comment": "Factory and utility methods for working with Loaders.",
  "javadoc": "Factory and utility methods for working with {@link Loader}s.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "ACCEPT_ALL",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.util.function.Predicate\u003cghidra.app.util.opinion.Loader\u003e",
      "type_short": "Predicate",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSupportedLoadSpecs",
      "comment": "Gets all supported LoadSpecs for loading the given ByteProvider.",
      "javadoc": "Gets all supported {@link LoadSpec}s for loading the given {@link ByteProvider}.\n@param provider The {@link ByteProvider} to load.\n@param loaderFilter A {@link Predicate} that will filter out undesired {@link Loader}s.\n@return All supported {@link LoadSpec}s in the form of a {@link LoaderMap}.",
      "static": true,
      "params": [
        {
          "name": "provider",
          "type_long": "ghidra.app.util.bin.ByteProvider",
          "type_short": "ByteProvider",
          "comment": "The ByteProvider to load."
        },
        {
          "name": "loaderFilter",
          "type_long": "java.util.function.Predicate\u003cghidra.app.util.opinion.Loader\u003e",
          "type_short": "Predicate",
          "comment": "A Predicate that will filter out undesired Loaders."
        }
      ],
      "return": {
        "type_long": "ghidra.app.util.opinion.LoaderMap",
        "type_short": "LoaderMap",
        "comment": "All supported LoadSpecs in the form of a LoaderMap."
      },
      "throws": []
    },
    {
      "name": "getAllSupportedLoadSpecs",
      "comment": "Gets all supported LoadSpecs for loading the given ByteProvider.",
      "javadoc": "Gets all supported {@link LoadSpec}s for loading the given {@link ByteProvider}.\n@param provider The {@link ByteProvider} to load.\n@return All supported {@link LoadSpec}s in the form of a {@link LoaderMap}.",
      "static": true,
      "params": [
        {
          "name": "provider",
          "type_long": "ghidra.app.util.bin.ByteProvider",
          "type_short": "ByteProvider",
          "comment": "The ByteProvider to load."
        }
      ],
      "return": {
        "type_long": "ghidra.app.util.opinion.LoaderMap",
        "type_short": "LoaderMap",
        "comment": "All supported LoadSpecs in the form of a LoaderMap."
      },
      "throws": []
    },
    {
      "name": "getAllLoaderNames",
      "comment": "Gets all known Loaders\u0027 names.",
      "javadoc": "Gets all known {@link Loader}s\u0027 names.\n@return All known {@link Loader}s\u0027 names.  The {@link Loader} names are sorted\n according to their corresponding {@link Loader}s {@link Loader#compareTo(Loader) natural \n ordering}.",
      "static": true,
      "params": [],
      "return": {
        "type_long": "java.util.Collection\u003cjava.lang.String\u003e",
        "type_short": "Collection",
        "comment": "All known Loaders\u0027 names.  The Loader names are sorted\n according to their corresponding Loaders Loader#compareTo(Loader)."
      },
      "throws": []
    },
    {
      "name": "getLoaderClassByName",
      "comment": "Gets the Loader Class that corresponds to the given simple Class\n name.",
      "javadoc": "Gets the {@link Loader} {@link Class} that corresponds to the given simple {@link Class}\n name.\n@param name The name of the {@link Loader} to get the {@link Class} of.\n@return The {@link Loader} {@link Class} that corresponds to the given simple {@link Class}\n   name.",
      "static": true,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "The name of the Loader to get the Class of."
        }
      ],
      "return": {
        "type_long": "java.lang.Class\u003c? extends ghidra.app.util.opinion.Loader\u003e",
        "type_short": "Class",
        "comment": "The Loader Class that corresponds to the given simple Class\n   name."
      },
      "throws": []
    },
    {
      "name": "getAllLoaders",
      "comment": "Gets an instance of every known Loader.",
      "javadoc": "Gets an instance of every known {@link Loader}.\n@return An instance of every known {@link Loader}.  The {@link Loader} instances are sorted\n   according to their {@link Loader#compareTo(Loader) natural ordering}.",
      "static": true,
      "params": [],
      "return": {
        "type_long": "java.util.Collection\u003cghidra.app.util.opinion.Loader\u003e",
        "type_short": "Collection",
        "comment": "An instance of every known Loader.  The Loader instances are sorted\n   according to their Loader#compareTo(Loader)."
      },
      "throws": []
    }
  ]
}
