{
  "name": "DiffLinesValidator",
  "comment": "A class that knows how to traverse a set a lines that are being used to generate a diff.",
  "javadoc": "A class that knows how to traverse a set a lines that are being used to generate a diff.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "myLines",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cghidra.app.util.html.ValidatableLine\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "marker",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "input",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.html.diff.DataTypeDiffInput",
      "type_short": "DataTypeDiffInput",
      "constant_value": null
    },
    {
      "name": "isLeft",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "input",
          "type_long": "ghidra.app.util.html.diff.DataTypeDiffInput",
          "type_short": "DataTypeDiffInput",
          "comment": ""
        },
        {
          "name": "isLeft",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getValidatedLines",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.util.html.diff.DiffLines",
        "type_short": "DiffLines",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "list",
          "type_long": "java.util.List\u003c?\u003e",
          "type_short": "List",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "markup",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "lineNumber",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "string",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "insertMismatchPlaceholder",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "oppositeLine",
          "type_long": "ghidra.app.util.html.ValidatableLine",
          "type_short": "ValidatableLine",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.app.util.html.PlaceHolderLine",
        "type_short": "PlaceHolderLine",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "insertLine",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "markerPosition",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "line",
          "type_long": "ghidra.app.util.html.ValidatableLine",
          "type_short": "ValidatableLine",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getMarkerPosition",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "increment",
      "comment": "Push forward the current marker position.  The marker starts at the beginning and \n only moves forward past validated lines.",
      "javadoc": "Push forward the current marker position.  The marker starts at the beginning and \n only moves forward past validated lines.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLine",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.util.html.ValidatableLine",
        "type_short": "ValidatableLine",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "findNextMatch",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "line",
          "type_long": "ghidra.app.util.html.ValidatableLine",
          "type_short": "ValidatableLine",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.Integer",
        "type_short": "Integer",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isDone",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLine",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.app.util.html.ValidatableLine",
        "type_short": "ValidatableLine",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "indexOf",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "sourceLine",
          "type_long": "ghidra.app.util.html.ValidatableLine",
          "type_short": "ValidatableLine",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "size",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    }
  ]
}
