{
  "name": "DisplayableEol",
  "comment": "Utility class with methods to get comment information that can be displayed in the\n end of line comment field. A DisplayableEol is associated with a code unit.\n The DisplayableEol gets information for the EOL comment field, which can show the\n End of Line comment for the code unit, the Repeatable comment for the code unit,\n any repeatable comments for the code units that this code unit has references to, and\n possibly a comment indicating the data at a code unit that is referenced by this code unit.",
  "javadoc": "Utility class with methods to get comment information that can be displayed in the\n end of line comment field. A DisplayableEol is associated with a code unit.\n The DisplayableEol gets information for the EOL comment field, which can show the\n End of Line comment for the code unit, the Repeatable comment for the code unit,\n any repeatable comments for the code units that this code unit has references to, and\n possibly a comment indicating the data at a code unit that is referenced by this code unit.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "POINTER_ARROW",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"-\u003e \""
    },
    {
      "name": "MY_EOLS",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "0"
    },
    {
      "name": "MY_REPEATABLES",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "1"
    },
    {
      "name": "REF_REPEATABLES",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "2"
    },
    {
      "name": "MY_AUTOMATIC",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "3"
    },
    {
      "name": "codeUnit",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.listing.CodeUnit",
      "type_short": "CodeUnit",
      "constant_value": null
    },
    {
      "name": "displayCommentArrays",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.Object[][]",
      "type_short": "java.lang.Object[][]",
      "constant_value": null
    },
    {
      "name": "alwaysShowRepeatable",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "alwaysShowRefRepeats",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "alwaysShowAutomatic",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "showAutomaticFunctions",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "operandsFollowPointerRefs",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "maxDisplayLines",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "totalCommentsFound",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "useAbbreviatedAutomatic",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "cu",
          "type_long": "ghidra.program.model.listing.CodeUnit",
          "type_short": "CodeUnit",
          "comment": ""
        },
        {
          "name": "alwaysShowRepeatable",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        },
        {
          "name": "alwaysShowRefRepeats",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        },
        {
          "name": "alwaysShowAutomatic",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        },
        {
          "name": "operandsFollowPointerRefs",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        },
        {
          "name": "maxDisplayLines",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "useAbbreviatedAutomatic",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        },
        {
          "name": "showAutomaticFunctions",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "initComments",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getReferencesFrom",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "cu",
          "type_long": "ghidra.program.model.listing.CodeUnit",
          "type_short": "CodeUnit",
          "comment": ""
        },
        {
          "name": "maxReferences",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.symbol.Reference[]",
        "type_short": "ghidra.program.model.symbol.Reference[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hasEOL",
      "comment": "Return whether the associated code unit has an end of line comment",
      "javadoc": "Return whether the associated code unit has an end of line comment\n@return whether the associated code unit has an end of line comment",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "whether the associated code unit has an end of line comment"
      },
      "throws": []
    },
    {
      "name": "hasRepeatable",
      "comment": "Return whether the associated code unit has a repeatable comment",
      "javadoc": "Return whether the associated code unit has a repeatable comment\n@return whether the associated code unit has a repeatable comment",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "whether the associated code unit has a repeatable comment"
      },
      "throws": []
    },
    {
      "name": "hasReferencedRepeatable",
      "comment": "Return whether any memory reference from this code unit has a repeatable\n comment at the reference\u0027s to address",
      "javadoc": "Return whether any memory reference from this code unit has a repeatable\n comment at the reference\u0027s to address\n@return whether any memory reference from this code unit has a repeatable\n comment at the reference\u0027s to address",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "whether any memory reference from this code unit has a repeatable\n comment at the reference\u0027s to address"
      },
      "throws": []
    },
    {
      "name": "hasAutomatic",
      "comment": "Return whether this code unit has an automatic comment.  For example, a memory reference\n from this code unit has a function defined at the reference\u0027s to address, or if the to\n address is a pointer.",
      "javadoc": "Return whether this code unit has an automatic comment.  For example, a memory reference\n from this code unit has a function defined at the reference\u0027s to address, or if the to\n address is a pointer.\n@return whether this code unit has an automatic comment",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "whether this code unit has an automatic comment"
      },
      "throws": []
    },
    {
      "name": "getReferencePreviews",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "refs",
          "type_long": "ghidra.program.model.symbol.Reference[]",
          "type_short": "ghidra.program.model.symbol.Reference[]",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String[]",
        "type_short": "java.lang.String[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPreviewForNoReferences",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String[]",
        "type_short": "java.lang.String[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isValidReference",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "reference",
          "type_long": "ghidra.program.model.symbol.Reference",
          "type_short": "Reference",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "reachedMaximumResults",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "newCount",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addReferencePreview",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "results",
          "type_long": "java.util.Set\u003cjava.lang.String\u003e",
          "type_short": "Set",
          "comment": ""
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "reference",
          "type_long": "ghidra.program.model.symbol.Reference",
          "type_short": "Reference",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getData",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "toAddr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.listing.Data",
        "type_short": "Data",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "handleDirectDataReference",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "set",
          "type_long": "java.util.Set\u003cjava.lang.String\u003e",
          "type_short": "Set",
          "comment": ""
        },
        {
          "name": "dataAccessAddress",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "data",
          "type_long": "ghidra.program.model.listing.Data",
          "type_short": "Data",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDataValueRepresentation",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "dataAccessAddress",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "data",
          "type_long": "ghidra.program.model.listing.Data",
          "type_short": "Data",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isOffcut",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "address",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "cu",
          "type_long": "ghidra.program.model.listing.CodeUnit",
          "type_short": "CodeUnit",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getOffcutDataString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "offcutAddress",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "data",
          "type_long": "ghidra.program.model.listing.Data",
          "type_short": "Data",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getOffcutForStringData",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "data",
          "type_long": "ghidra.program.model.listing.Data",
          "type_short": "Data",
          "comment": ""
        },
        {
          "name": "dataAddress",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "diff",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "dt",
          "type_long": "ghidra.program.model.data.DataType",
          "type_short": "DataType",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "handleIndirectDataReference",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "set",
          "type_long": "java.util.Set\u003cjava.lang.String\u003e",
          "type_short": "Set",
          "comment": ""
        },
        {
          "name": "reference",
          "type_long": "ghidra.program.model.symbol.Reference",
          "type_short": "Reference",
          "comment": ""
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "toAddress",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "data",
          "type_long": "ghidra.program.model.listing.Data",
          "type_short": "Data",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "handlePointer",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "set",
          "type_long": "java.util.Set\u003cjava.lang.String\u003e",
          "type_short": "Set",
          "comment": ""
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "reference",
          "type_long": "ghidra.program.model.symbol.Reference",
          "type_short": "Reference",
          "comment": ""
        },
        {
          "name": "data",
          "type_long": "ghidra.program.model.listing.Data",
          "type_short": "Data",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "handlePotentialPointer",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "list",
          "type_long": "java.util.Set\u003cjava.lang.String\u003e",
          "type_short": "Set",
          "comment": ""
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "toAddress",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "data",
          "type_long": "ghidra.program.model.listing.Data",
          "type_short": "Data",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "handleDirectFlow",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "set",
          "type_long": "java.util.Set\u003cjava.lang.String\u003e",
          "type_short": "Set",
          "comment": ""
        },
        {
          "name": "reference",
          "type_long": "ghidra.program.model.symbol.Reference",
          "type_short": "Reference",
          "comment": ""
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "toAddr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getUndefinedPointer",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "cu",
          "type_long": "ghidra.program.model.listing.CodeUnit",
          "type_short": "CodeUnit",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "programIsEntireMemorySpace",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFunctionSignature",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "funcAddr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "displayFuncName",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isGoodAddress",
      "comment": "Check if this address could really be a good address in the program.\n Never accept 0 as a valid address.",
      "javadoc": "Check if this address could really be a good address in the program.\n Never accept 0 as a valid address.\n@param program program to check if address is valid within.\n@param addr address in program to be checked\n@return true if this is a valid address",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "program to check if address is valid within."
        },
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "address in program to be checked"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if this is a valid address"
      },
      "throws": []
    },
    {
      "name": "getRepeatableComments",
      "comment": "Gets an array of objects that indicate the repeatable comments at the \"to addresses\" of the\n references.",
      "javadoc": "Gets an array of objects that indicate the repeatable comments at the \"to addresses\" of the\n references.\n@param listing the program listing\n@param memRefs the references whose repeatable comments we are interested in.\n@param showAll true indicates to show all referenced repeatable comments and not just the\n primary reference\u0027s repeatable comment.\n@return an array of objects, where each object is a RefRepeatComment containing an\n address and a String array of the repeatable comments for a reference.",
      "static": false,
      "params": [
        {
          "name": "listing",
          "type_long": "ghidra.program.model.listing.Listing",
          "type_short": "Listing",
          "comment": "the program listing"
        },
        {
          "name": "memRefs",
          "type_long": "ghidra.program.model.symbol.Reference[]",
          "type_short": "ghidra.program.model.symbol.Reference[]",
          "comment": "the references whose repeatable comments we are interested in."
        },
        {
          "name": "showAll",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true indicates to show all referenced repeatable comments and not just the\n primary reference\u0027s repeatable comment."
        }
      ],
      "return": {
        "type_long": "ghidra.app.util.RefRepeatComment[]",
        "type_short": "ghidra.app.util.RefRepeatComment[]",
        "comment": "an array of objects, where each object is a RefRepeatComment containing an\n address and a String array of the repeatable comments for a reference."
      },
      "throws": []
    },
    {
      "name": "getComment",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "listing",
          "type_long": "ghidra.program.model.listing.Listing",
          "type_short": "Listing",
          "comment": ""
        },
        {
          "name": "address",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String[]",
        "type_short": "java.lang.String[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getComments",
      "comment": "Return all the comments",
      "javadoc": "Return all the comments\n@return the comments",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String[]",
        "type_short": "java.lang.String[]",
        "comment": "the comments"
      },
      "throws": []
    },
    {
      "name": "getEOLComments",
      "comment": "Gets the end of line comment as an array.",
      "javadoc": "Gets the end of line comment as an array.\n@return the EOL comment",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String[]",
        "type_short": "java.lang.String[]",
        "comment": "the EOL comment"
      },
      "throws": []
    },
    {
      "name": "getRepeatableComments",
      "comment": "Gets the repeatable comment as an array.",
      "javadoc": "Gets the repeatable comment as an array.\n@return the repeatable comment.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String[]",
        "type_short": "java.lang.String[]",
        "comment": "the repeatable comment."
      },
      "throws": []
    },
    {
      "name": "getReferencedRepeatableCommentsCount",
      "comment": "Gets the number of repeatable comments at the \"to reference\"s",
      "javadoc": "Gets the number of repeatable comments at the \"to reference\"s\n@return the number of reference repeatable comments",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the number of reference repeatable comments"
      },
      "throws": []
    },
    {
      "name": "getReferencedRepeatableComments",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String[]",
        "type_short": "java.lang.String[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getReferencedRepeatableComments",
      "comment": "Gets a referenced repeatable comment as a RefRepeatComment object.",
      "javadoc": "Gets a referenced repeatable comment as a RefRepeatComment object.\n@param index indicator of which referenced repeatable comment is desired.\n The value is 0 thru one less than the number of referenced repeatable comments.\n@return the RefRepeatComment containing the referenced address and its referenced repeatable comment",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "int",
          "type_short": "int",
          "comment": "indicator of which referenced repeatable comment is desired.\n The value is 0 thru one less than the number of referenced repeatable comments."
        }
      ],
      "return": {
        "type_long": "ghidra.app.util.RefRepeatComment",
        "type_short": "RefRepeatComment",
        "comment": "the RefRepeatComment containing the referenced address and its referenced repeatable comment"
      },
      "throws": []
    },
    {
      "name": "getReferencedRepeatableComments",
      "comment": "Gets a referenced repeatable comment as a RefRepeatComment object.",
      "javadoc": "Gets a referenced repeatable comment as a RefRepeatComment object.\n@param refAddress the reference address whose repeatable comment is desired.\n Note: there must be a reference from the address for this displayableEol to the refAddress.\n@return the comment lines for the referenced address\u0027s repeatable comment or null.",
      "static": false,
      "params": [
        {
          "name": "refAddress",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "the reference address whose repeatable comment is desired.\n Note: there must be a reference from the address for this displayableEol to the refAddress."
        }
      ],
      "return": {
        "type_long": "java.lang.String[]",
        "type_short": "java.lang.String[]",
        "comment": "the comment lines for the referenced address\u0027s repeatable comment or null."
      },
      "throws": []
    },
    {
      "name": "getAutomaticComment",
      "comment": "Gets the automatic comment as an array.",
      "javadoc": "Gets the automatic comment as an array.\n@return the automatic comment",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String[]",
        "type_short": "java.lang.String[]",
        "comment": "the automatic comment"
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getCommentLineCount",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "subType",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getRefRepeatableCommentLineCount",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "refAddress",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getEolRow",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "loc",
          "type_long": "ghidra.program.util.ProgramLocation",
          "type_short": "ProgramLocation",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hasRefRepeatComment",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "desiredAddress",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getRowCol",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "cloc",
          "type_long": "ghidra.program.util.CommentFieldLocation",
          "type_short": "CommentFieldLocation",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.widgets.fieldpanel.support.RowColLocation",
        "type_short": "RowColLocation",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLocation",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "eolRow",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "eolColumn",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.util.ProgramLocation",
        "type_short": "ProgramLocation",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getRefRepeatAddress",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "rowInAllRefRepeats",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getRefRepeatRow",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "rowInAllRefRepeats",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getCommentStartRow",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "refAddress",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isRefRepeatRow",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "eolRow",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    }
  ]
}
