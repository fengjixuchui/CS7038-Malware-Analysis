{
  "name": "ParseException",
  "comment": "This exception is thrown when parse errors are encountered.\n You can explicitly create objects of this exception type by\n calling the method generateParseException in the generated\n parser.\n\n You can modify this class to customize your error reporting\n mechanisms so long as you retain the public fields.",
  "javadoc": "This exception is thrown when parse errors are encountered.\n You can explicitly create objects of this exception type by\n calling the method generateParseException in the generated\n parser.\n\n You can modify this class to customize your error reporting\n mechanisms so long as you retain the public fields.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Exception",
  "fields": [
    {
      "name": "serialVersionUID",
      "comment": "The version identifier for this Serializable class.\n Increment only if the serialized form of the\n class changes.",
      "javadoc": "The version identifier for this Serializable class.\n Increment only if the \u003ci\u003eserialized\u003c/i\u003e form of the\n class changes.",
      "static": true,
      "type_long": "long",
      "type_short": "long",
      "constant_value": "1"
    },
    {
      "name": "currentToken",
      "comment": "This is the last token that has been consumed successfully.  If\n this object has been created due to a parse error, the token\n followng this token will (therefore) be the first error token.",
      "javadoc": "This is the last token that has been consumed successfully.  If\n this object has been created due to a parse error, the token\n followng this token will (therefore) be the first error token.",
      "static": false,
      "type_long": "ghidra.app.util.cparser.C.Token",
      "type_short": "Token",
      "constant_value": null
    },
    {
      "name": "expectedTokenSequences",
      "comment": "Each entry in this array is an array of integers.  Each array\n of integers represents a sequence of tokens (by their ordinal\n values) that is expected at this point of the parse.",
      "javadoc": "Each entry in this array is an array of integers.  Each array\n of integers represents a sequence of tokens (by their ordinal\n values) that is expected at this point of the parse.",
      "static": false,
      "type_long": "int[][]",
      "type_short": "int[][]",
      "constant_value": null
    },
    {
      "name": "tokenImage",
      "comment": "This is a reference to the \"tokenImage\" array of the generated\n parser within which the parse error occurred.  This array is\n defined in the generated ...Constants interface.",
      "javadoc": "This is a reference to the \"tokenImage\" array of the generated\n parser within which the parse error occurred.  This array is\n defined in the generated ...Constants interface.",
      "static": false,
      "type_long": "java.lang.String[]",
      "type_short": "java.lang.String[]",
      "constant_value": null
    },
    {
      "name": "eol",
      "comment": "The end of line string for this machine.",
      "javadoc": "The end of line string for this machine.",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "This constructor is used by the method \"generateParseException\"\n in the generated parser.  Calling this constructor generates\n a new object of this type with the fields \"currentToken\",\n \"expectedTokenSequences\", and \"tokenImage\" set.",
      "javadoc": "This constructor is used by the method \"generateParseException\"\n in the generated parser.  Calling this constructor generates\n a new object of this type with the fields \"currentToken\",\n \"expectedTokenSequences\", and \"tokenImage\" set.",
      "static": false,
      "params": [
        {
          "name": "currentTokenVal",
          "type_long": "ghidra.app.util.cparser.C.Token",
          "type_short": "Token",
          "comment": ""
        },
        {
          "name": "expectedTokenSequencesVal",
          "type_long": "int[][]",
          "type_short": "int[][]",
          "comment": ""
        },
        {
          "name": "tokenImageVal",
          "type_long": "java.lang.String[]",
          "type_short": "java.lang.String[]",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "The following constructors are for use by you for whatever\n purpose you can think of.  Constructing the exception in this\n manner makes the exception behave in the normal way - i.e., as\n documented in the class \"Throwable\".  The fields \"errorToken\",\n \"expectedTokenSequences\", and \"tokenImage\" do not contain\n relevant information.  The JavaCC generated code does not use\n these constructors.",
      "javadoc": "The following constructors are for use by you for whatever\n purpose you can think of.  Constructing the exception in this\n manner makes the exception behave in the normal way - i.e., as\n documented in the class \"Throwable\".  The fields \"errorToken\",\n \"expectedTokenSequences\", and \"tokenImage\" do not contain\n relevant information.  The JavaCC generated code does not use\n these constructors.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor with message.",
      "javadoc": "Constructor with message.",
      "static": false,
      "params": [
        {
          "name": "message",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "initialise",
      "comment": "It uses \"currentToken\" and \"expectedTokenSequences\" to generate a parse\n error message and returns it.  If this object has been created\n due to a parse error, and you do not catch it (it gets thrown\n from the parser) the correct error message\n gets displayed.",
      "javadoc": "It uses \"currentToken\" and \"expectedTokenSequences\" to generate a parse\n error message and returns it.  If this object has been created\n due to a parse error, and you do not catch it (it gets thrown\n from the parser) the correct error message\n gets displayed.",
      "static": true,
      "params": [
        {
          "name": "currentToken",
          "type_long": "ghidra.app.util.cparser.C.Token",
          "type_short": "Token",
          "comment": ""
        },
        {
          "name": "expectedTokenSequences",
          "type_long": "int[][]",
          "type_short": "int[][]",
          "comment": ""
        },
        {
          "name": "tokenImage",
          "type_long": "java.lang.String[]",
          "type_short": "java.lang.String[]",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "add_escapes",
      "comment": "Used to convert raw characters to their escaped version\n when these raw version cannot be used as part of an ASCII\n string literal.",
      "javadoc": "Used to convert raw characters to their escaped version\n when these raw version cannot be used as part of an ASCII\n string literal.",
      "static": true,
      "params": [
        {
          "name": "str",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    }
  ]
}
