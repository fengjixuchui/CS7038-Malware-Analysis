{
  "name": "CompositeHandler",
  "comment": "Used by the CParser to handle fields added to structures(composites).\n Currently only bitfields are handled specially.\n \n NOTE: when bitfield handling is added directly to structures, this class may\n no longer be necessary.",
  "javadoc": "Used by the CParser to handle fields added to structures(composites).\n Currently only bitfields are handled specially.\n \n NOTE: when bitfield handling is added directly to structures, this class may\n no longer be necessary.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "parent",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.data.Composite",
      "type_short": "Composite",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "parent",
          "type_long": "ghidra.program.model.data.Composite",
          "type_short": "Composite",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getComposite",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.data.Composite",
        "type_short": "Composite",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "add",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "dec",
          "type_long": "ghidra.app.util.cparser.C.Declaration",
          "type_short": "Declaration",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.lang.IllegalArgumentException",
          "type_short": "IllegalArgumentException",
          "comment": ""
        }
      ]
    }
  ]
}
