{
  "name": "DefineTable",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "defs",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.Hashtable\u003cjava.lang.String,ghidra.app.util.cparser.CPP.PreProcessor.PPToken\u003e",
      "type_short": "Hashtable",
      "constant_value": null
    },
    {
      "name": "args",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.Hashtable\u003cjava.lang.String,java.util.Vector\u003cghidra.app.util.cparser.CPP.PreProcessor.PPToken\u003e\u003e",
      "type_short": "Hashtable",
      "constant_value": null
    },
    {
      "name": "lookupTable",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.Hashtable",
      "type_short": "Hashtable",
      "constant_value": null
    },
    {
      "name": "VALUE",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"value\""
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "get",
      "comment": "",
      "javadoc": "@param string\n@return ",
      "static": false,
      "params": [
        {
          "name": "string",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.app.util.cparser.CPP.PreProcessor.PPToken",
        "type_short": "PPToken",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getArgs",
      "comment": "",
      "javadoc": "@param currKey\n@return ",
      "static": false,
      "params": [
        {
          "name": "currKey",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.Vector\u003cghidra.app.util.cparser.CPP.PreProcessor.PPToken\u003e",
        "type_short": "Vector",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDefineAt",
      "comment": "",
      "javadoc": "@param buf the buffer containing the define\n@param pos the position of the define\n@return the define",
      "static": false,
      "params": [
        {
          "name": "buf",
          "type_long": "java.lang.StringBuffer",
          "type_short": "StringBuffer",
          "comment": "the buffer containing the define"
        },
        {
          "name": "pos",
          "type_long": "int",
          "type_short": "int",
          "comment": "the position of the define"
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the define"
      },
      "throws": []
    },
    {
      "name": "put",
      "comment": "Associate a define \"name\" with a Preprocessor parser token match.",
      "javadoc": "Associate a define \"name\" with a Preprocessor parser token match.\n@param string - name of define\n@param val - token value from parsing",
      "static": false,
      "params": [
        {
          "name": "string",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "- name of define"
        },
        {
          "name": "val",
          "type_long": "ghidra.app.util.cparser.CPP.PreProcessor.PPToken",
          "type_short": "PPToken",
          "comment": "- token value from parsing"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "putArg",
      "comment": "Add an args definition for a define with arguments\n     #define bubba(a,b)   (a or b)",
      "javadoc": "Add an args definition for a define with arguments\n     #define bubba(a,b)   (a or b)\n@param string name of define\n@param val set of arg token names",
      "static": false,
      "params": [
        {
          "name": "string",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "name of define"
        },
        {
          "name": "val",
          "type_long": "java.util.Vector\u003cghidra.app.util.cparser.CPP.PreProcessor.PPToken\u003e",
          "type_short": "Vector",
          "comment": "set of arg token names"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "containsKey",
      "comment": "See if the define table contains a definition",
      "javadoc": "See if the define table contains a definition\n@param def\n@return ",
      "static": false,
      "params": [
        {
          "name": "def",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "size",
      "comment": "Size of the define table.",
      "javadoc": "Size of the define table.\n@return ",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "remove",
      "comment": "Remove a definition from the known defines.",
      "javadoc": "Remove a definition from the known defines.\n@param string name of define\n@return return the defined token for the named define.",
      "static": false,
      "params": [
        {
          "name": "string",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "name of define"
        }
      ],
      "return": {
        "type_long": "ghidra.app.util.cparser.CPP.PreProcessor.PPToken",
        "type_short": "PPToken",
        "comment": "return the defined token for the named define."
      },
      "throws": []
    },
    {
      "name": "isArg",
      "comment": "Check if a define has args.",
      "javadoc": "Check if a define has args.\n@param string name of define\n@return ",
      "static": false,
      "params": [
        {
          "name": "string",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "name of define"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeArg",
      "comment": "Get rid of args for a define",
      "javadoc": "Get rid of args for a define\n@param string name of define\n@return ",
      "static": false,
      "params": [
        {
          "name": "string",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "name of define"
        }
      ],
      "return": {
        "type_long": "java.util.Vector\u003cghidra.app.util.cparser.CPP.PreProcessor.PPToken\u003e",
        "type_short": "Vector",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "display a string for the named define.",
      "javadoc": "display a string for the named define.\n@param string named define\n@return ",
      "static": false,
      "params": [
        {
          "name": "string",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "named define"
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDefineNames",
      "comment": "",
      "javadoc": "@return an iterator over the defined string names",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Iterator\u003cjava.lang.String\u003e",
        "type_short": "Iterator",
        "comment": "an iterator over the defined string names"
      },
      "throws": []
    },
    {
      "name": "getValue",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "defName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isNumeric",
      "comment": "Check if the token that defined this define was numeric",
      "javadoc": "Check if the token that defined this define was numeric\n@param defName\n@return ",
      "static": false,
      "params": [
        {
          "name": "defName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDefinitionPath",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "defName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "macroSub",
      "comment": "return a string with all the macros substitute starting at pos in the input string.",
      "javadoc": "return a string with all the macros substitute starting at pos in the input string.\n@param image string to expand\n@param pos position within string to start expanding\n@return ",
      "static": false,
      "params": [
        {
          "name": "image",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "string to expand"
        },
        {
          "name": "pos",
          "type_long": "int",
          "type_short": "int",
          "comment": "position within string to start expanding"
        },
        {
          "name": "sublist",
          "type_long": "java.util.ArrayList\u003cjava.lang.String\u003e",
          "type_short": "ArrayList",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "shouldReplace",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "buf",
          "type_long": "java.lang.StringBuffer",
          "type_short": "StringBuffer",
          "comment": ""
        },
        {
          "name": "defName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "pos",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "replace",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "buf",
          "type_long": "java.lang.StringBuffer",
          "type_short": "StringBuffer",
          "comment": ""
        },
        {
          "name": "currKey",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "fromIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "sublist",
          "type_long": "java.util.ArrayList\u003cjava.lang.String\u003e",
          "type_short": "ArrayList",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "subParams",
      "comment": "expand a define with arguments",
      "javadoc": "expand a define with arguments\n@return the newly expanded string",
      "static": false,
      "params": [
        {
          "name": "replString",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "defName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "parms",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "argv",
          "type_long": "java.util.Vector\u003cghidra.app.util.cparser.CPP.PreProcessor.PPToken\u003e",
          "type_short": "Vector",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the newly expanded string"
      },
      "throws": []
    },
    {
      "name": "getParams",
      "comment": "",
      "javadoc": "@param buf the buffer containing the parameters\n@param start the starting index of the parameters in the buffer\n@param endChar the delimiter for the parameters\n@return the parameters",
      "static": false,
      "params": [
        {
          "name": "buf",
          "type_long": "java.lang.StringBuffer",
          "type_short": "StringBuffer",
          "comment": "the buffer containing the parameters"
        },
        {
          "name": "start",
          "type_long": "int",
          "type_short": "int",
          "comment": "the starting index of the parameters in the buffer"
        },
        {
          "name": "endChar",
          "type_long": "char",
          "type_short": "char",
          "comment": "the delimiter for the parameters"
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the parameters"
      },
      "throws": []
    },
    {
      "name": "expand",
      "comment": "do the final expansion of \"##\" concats in the define strings that protect normal macro substitution.",
      "javadoc": "do the final expansion of \"##\" concats in the define strings that protect normal macro substitution.\n@param image\n@param join\n@return ",
      "static": false,
      "params": [
        {
          "name": "image",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "join",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "joinPdPd",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "image",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "populateDefineEquates",
      "comment": "Given a data type manager, populate defines with constant values as Enums",
      "javadoc": "Given a data type manager, populate defines with constant values as Enums",
      "static": false,
      "params": [
        {
          "name": "dtMgr",
          "type_long": "ghidra.program.model.data.DataTypeManager",
          "type_short": "DataTypeManager",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getCValue",
      "comment": "Parse a C format integer value",
      "javadoc": "Parse a C format integer value\n@param strValue value to parse\n@return long value if parsable as an integer, null otherwise",
      "static": true,
      "params": [
        {
          "name": "strValue",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "value to parse"
        }
      ],
      "return": {
        "type_long": "java.lang.Long",
        "type_short": "Long",
        "comment": "long value if parsable as an integer, null otherwise"
      },
      "throws": []
    },
    {
      "name": "getCategory",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "catName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.data.CategoryPath",
        "type_short": "CategoryPath",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFileName",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "path",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "stripCast",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "strValue",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    }
  ]
}
