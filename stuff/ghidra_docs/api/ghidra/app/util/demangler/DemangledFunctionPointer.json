{
  "name": "DemangledFunctionPointer",
  "comment": "A class to represent a demangled function pointer",
  "javadoc": "A class to represent a demangled function pointer",
  "static": false,
  "implements": [],
  "extends": "ghidra.app.util.demangler.AbstractDemangledFunctionDefinitionDataType",
  "fields": [
    {
      "name": "displayFunctionPointerSyntax",
      "comment": "display parens in front of parameter list",
      "javadoc": "display parens in front of parameter list",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "mangled",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "originalDemangled",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getTypeString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setDisplayDefaultFunctionPointerSyntax",
      "comment": "Signals whether to display function pointer syntax when there is no function name, which \n is \u0027\u0027, such as found in this example \u0027\u0027.  the default is true",
      "javadoc": "Signals whether to display function pointer syntax when there is no function name, which \n is \u0027{@code (*)}\u0027, such as found in this example \u0027{@code void (*)()}\u0027.  the default is true\n@param b true to display nameless function pointer syntax; false to not display",
      "static": false,
      "params": [
        {
          "name": "b",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true to display nameless function pointer syntax; false to not display"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addFunctionPointerParens",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "buffer",
          "type_long": "java.lang.StringBuilder",
          "type_short": "StringBuilder",
          "comment": ""
        },
        {
          "name": "s",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
