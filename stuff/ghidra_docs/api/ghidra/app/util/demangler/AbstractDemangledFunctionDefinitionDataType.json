{
  "name": "AbstractDemangledFunctionDefinitionDataType",
  "comment": "Parent base class for types that represent things that refer to functions",
  "javadoc": "Parent base class for types that represent things that refer to functions",
  "static": false,
  "implements": [],
  "extends": "ghidra.app.util.demangler.DemangledDataType",
  "fields": [
    {
      "name": "DEFAULT_NAME_PREFIX",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"FuncDef\""
    },
    {
      "name": "EMPTY_STRING",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"\""
    },
    {
      "name": "ID",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "returnType",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.demangler.DemangledDataType",
      "type_short": "DemangledDataType",
      "constant_value": null
    },
    {
      "name": "callingConvention",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "parameters",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cghidra.app.util.demangler.DemangledDataType\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "modifier",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "isConstPointer",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "parentName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "isTrailingPointer64",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "isTrailingUnaligned",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "isTrailingRestrict",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "mangled",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "originalDemangled",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "nextId",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getTypeString",
      "comment": "Returns the string for this type of reference (e.g., * or )",
      "javadoc": "Returns the string for this type of reference (e.g., * or \u0026amp;)\n@return the string",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the string"
      },
      "throws": []
    },
    {
      "name": "getSignature",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setReturnType",
      "comment": "Sets the return type",
      "javadoc": "Sets the return type\n@param returnType the return type",
      "static": false,
      "params": [
        {
          "name": "returnType",
          "type_long": "ghidra.app.util.demangler.DemangledDataType",
          "type_short": "DemangledDataType",
          "comment": "the return type"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getReturnType",
      "comment": "Returns the return type",
      "javadoc": "Returns the return type\n@return the return type",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.util.demangler.DemangledDataType",
        "type_short": "DemangledDataType",
        "comment": "the return type"
      },
      "throws": []
    },
    {
      "name": "setCallingConvention",
      "comment": "Sets the function calling convention. For example, \"__cdecl\"",
      "javadoc": "Sets the function calling convention. For example, \"__cdecl\"\n@param callingConvention the function calling convention",
      "static": false,
      "params": [
        {
          "name": "callingConvention",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the function calling convention"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getCallingConvention",
      "comment": "Returns the calling convention or null, if unspecified",
      "javadoc": "Returns the calling convention or null, if unspecified\n@return the calling convention or null, if unspecified",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the calling convention or null, if unspecified"
      },
      "throws": []
    },
    {
      "name": "setModifier",
      "comment": "Sets the function __ modifier. For example, \"namespace::\".",
      "javadoc": "Sets the function __ modifier. For example, \"namespace::\".\n@param modifier the function modifier",
      "static": false,
      "params": [
        {
          "name": "modifier",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the function modifier"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isConstPointer",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setConstPointer",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isTrailingPointer64",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setTrailingPointer64",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isTrailingUnaligned",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setTrailingUnaligned",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isTrailingRestrict",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setTrailingRestrict",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addParameter",
      "comment": "Adds a parameters to the end of the parameter list for this demangled function",
      "javadoc": "Adds a parameters to the end of the parameter list for this demangled function\n@param parameter the new parameter to add",
      "static": false,
      "params": [
        {
          "name": "parameter",
          "type_long": "ghidra.app.util.demangler.DemangledDataType",
          "type_short": "DemangledDataType",
          "comment": "the new parameter to add"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getParameters",
      "comment": "Returns a list of the parameters for this demangled functions.",
      "javadoc": "Returns a list of the parameters for this demangled functions.\n@return a list of the parameters for this demangled functions",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cghidra.app.util.demangler.DemangledDataType\u003e",
        "type_short": "List",
        "comment": "a list of the parameters for this demangled functions"
      },
      "throws": []
    },
    {
      "name": "toSignature",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getConventionPointerNameString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addModifier",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "buffer",
          "type_long": "java.lang.StringBuilder",
          "type_short": "StringBuilder",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addFunctionPointerParens",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "buffer",
          "type_long": "java.lang.StringBuilder",
          "type_short": "StringBuilder",
          "comment": ""
        },
        {
          "name": "s",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addParentName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "buffer",
          "type_long": "java.lang.StringBuilder",
          "type_short": "StringBuilder",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDataType",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "dataTypeManager",
          "type_long": "ghidra.program.model.data.DataTypeManager",
          "type_short": "DataTypeManager",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.data.DataType",
        "type_short": "DataType",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setParameters",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "fddt",
          "type_long": "ghidra.program.model.data.FunctionDefinitionDataType",
          "type_short": "FunctionDefinitionDataType",
          "comment": ""
        },
        {
          "name": "dataTypeManager",
          "type_long": "ghidra.program.model.data.DataTypeManager",
          "type_short": "DataTypeManager",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hasSingleVoidParameter",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "dataTypeManager",
          "type_long": "ghidra.program.model.data.DataTypeManager",
          "type_short": "DataTypeManager",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    }
  ]
}
