{
  "name": "DemanglerUtil",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "LEADING_PARAMETER_SPACE_PATTERN",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.util.regex.Pattern",
      "type_short": "Pattern",
      "constant_value": null
    },
    {
      "name": "TRAILING_PARAMETER_SPACE_PATTERN",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.util.regex.Pattern",
      "type_short": "Pattern",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "demangle",
      "comment": "Locates all available demanglers, then it attempts to demangle.  This method will\n query all demanglers regardless of architecture.  \n \n This method will use only the default options for demangling.  If you need to \n specify options, then you will have to call each specific demangler directly, creating\n the options specifically needed for each demangler.   See \n Demangler#createDefaultOptions().",
      "javadoc": "Locates all available demanglers, then it attempts to demangle.  This method will\n query all demanglers regardless of architecture.  \n \n \u003cp\u003eThis method will use only the default options for demangling.  If you need to \n specify options, then you will have to call each specific demangler directly, creating\n the options specifically needed for each demangler.   See \n {@link Demangler#createDefaultOptions()}.\n@param mangled the mangled name\n@return the demangled object or null",
      "static": true,
      "params": [
        {
          "name": "mangled",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the mangled name"
        }
      ],
      "return": {
        "type_long": "ghidra.app.util.demangler.DemangledObject",
        "type_short": "DemangledObject",
        "comment": "the demangled object or null"
      },
      "throws": []
    },
    {
      "name": "demangle",
      "comment": "Locates all available demanglers and checks to see if the supplied program is \n supported, then it attempts to demangle.\n \n This method will use only the default options for demangling.  If you need to \n specify options, then you will have to call each specific demangler directly, creating\n the options specifically needed for each demangler.   See \n Demangler#createDefaultOptions().",
      "javadoc": "Locates all available demanglers and checks to see if the supplied program is \n supported, then it attempts to demangle.\n \n \u003cp\u003eThis method will use only the default options for demangling.  If you need to \n specify options, then you will have to call each specific demangler directly, creating\n the options specifically needed for each demangler.   See \n {@link Demangler#createDefaultOptions()}.\n@param program the program containing the mangled name\n@param mangled the mangled name\n@return the demangled object or null",
      "static": true,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "the program containing the mangled name"
        },
        {
          "name": "mangled",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the mangled name"
        }
      ],
      "return": {
        "type_long": "ghidra.app.util.demangler.DemangledObject",
        "type_short": "DemangledObject",
        "comment": "the demangled object or null"
      },
      "throws": []
    },
    {
      "name": "getDemanglers",
      "comment": "Dynamically locates all available demangler implementations.",
      "javadoc": "Dynamically locates all available demangler implementations.\n@return a list of all demanglers",
      "static": true,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cghidra.app.util.demangler.Demangler\u003e",
        "type_short": "List",
        "comment": "a list of all demanglers"
      },
      "throws": []
    },
    {
      "name": "stripSuperfluousSignatureSpaces",
      "comment": "Remove superfluous function signature spaces from specified string",
      "javadoc": "Remove superfluous function signature spaces from specified string\n@param str string\n@return string with unwanted spaces removed",
      "static": true,
      "params": [
        {
          "name": "str",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "string"
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "string with unwanted spaces removed"
      },
      "throws": []
    },
    {
      "name": "replace",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "str",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "spaceCleanerPattern",
          "type_long": "java.util.regex.Pattern",
          "type_short": "Pattern",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    }
  ]
}
