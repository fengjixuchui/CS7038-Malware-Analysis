{
  "name": "Demangler",
  "comment": "NOTE:  ALL DEMANGLER CLASSES MUST END IN \"Demangler\".  If not,\n the ClassSearcher will not find them.",
  "javadoc": "NOTE:  ALL DEMANGLER CLASSES MUST END IN \"Demangler\".  If not,\n the ClassSearcher will not find them.",
  "static": false,
  "implements": [
    "ghidra.util.classfinder.ExtensionPoint"
  ],
  "fields": [],
  "methods": [
    {
      "name": "canDemangle",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "demangle",
      "comment": "Deprecated.  Use #demangle(String) or\n  #demangle(String, DemanglerOptions).",
      "javadoc": "Deprecated.  Use {@link #demangle(String)} or\n  {@link #demangle(String, DemanglerOptions)}.\n@param mangled the mangled string\n@param demangleOnlyKnownPatterns true signals to avoid demangling strings that do\n        not fit known demangled patterns for this demangler\n@return the result\n@throws DemangledException if the string cannot be demangled\n@deprecated see above",
      "static": false,
      "params": [
        {
          "name": "mangled",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the mangled string"
        },
        {
          "name": "demangleOnlyKnownPatterns",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true signals to avoid demangling strings that do\n        not fit known demangled patterns for this demangler"
        }
      ],
      "return": {
        "type_long": "ghidra.app.util.demangler.DemangledObject",
        "type_short": "DemangledObject",
        "comment": "the result"
      },
      "throws": [
        {
          "type_long": "ghidra.app.util.demangler.DemangledException",
          "type_short": "DemangledException",
          "comment": "if the string cannot be demangled"
        }
      ]
    },
    {
      "name": "demangle",
      "comment": "Attempts to demangle the given string using the default options \n (#createDefaultOptions()",
      "javadoc": "Attempts to demangle the given string using the default options \n ({@link #createDefaultOptions()}\n@param mangled the mangled string\n@return the result\n@throws DemangledException if the string cannot be demangled",
      "static": false,
      "params": [
        {
          "name": "mangled",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the mangled string"
        }
      ],
      "return": {
        "type_long": "ghidra.app.util.demangler.DemangledObject",
        "type_short": "DemangledObject",
        "comment": "the result"
      },
      "throws": [
        {
          "type_long": "ghidra.app.util.demangler.DemangledException",
          "type_short": "DemangledException",
          "comment": "if the string cannot be demangled"
        }
      ]
    },
    {
      "name": "demangle",
      "comment": "Attempts to demangle the given string using the given options",
      "javadoc": "Attempts to demangle the given string using the given options\n@param mangled the mangled string\n@param options the options\n@return the result\n@throws DemangledException if the string cannot be demangled",
      "static": false,
      "params": [
        {
          "name": "mangled",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the mangled string"
        },
        {
          "name": "options",
          "type_long": "ghidra.app.util.demangler.DemanglerOptions",
          "type_short": "DemanglerOptions",
          "comment": "the options"
        }
      ],
      "return": {
        "type_long": "ghidra.app.util.demangler.DemangledObject",
        "type_short": "DemangledObject",
        "comment": "the result"
      },
      "throws": [
        {
          "type_long": "ghidra.app.util.demangler.DemangledException",
          "type_short": "DemangledException",
          "comment": "if the string cannot be demangled"
        }
      ]
    },
    {
      "name": "createDefaultOptions",
      "comment": "Creates default options for this particular demangler",
      "javadoc": "Creates default options for this particular demangler\n@return the options",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.util.demangler.DemanglerOptions",
        "type_short": "DemanglerOptions",
        "comment": "the options"
      },
      "throws": []
    }
  ]
}
