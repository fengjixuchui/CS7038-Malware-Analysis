{
  "name": "DemangledAddressTable",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "extends": "ghidra.app.util.demangler.DemangledObject",
  "fields": [
    {
      "name": "calculateLength",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "length",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor",
      "javadoc": "Constructor\n@param mangled the source mangled string\n@param originalDemangled the original demangled string\n@param name the name of the address table\n@param calculateLength true if the length of this address table should be calculdated at\n        analysis time",
      "static": false,
      "params": [
        {
          "name": "mangled",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the source mangled string"
        },
        {
          "name": "originalDemangled",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the original demangled string"
        },
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of the address table"
        },
        {
          "name": "calculateLength",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true if the length of this address table should be calculdated at\n        analysis time"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLength",
      "comment": "Returns the length of the address table.\n -1 indicates the length is unknown.",
      "javadoc": "Returns the length of the address table.\n -1 indicates the length is unknown.\n@return the length of the address table",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the length of the address table"
      },
      "throws": []
    },
    {
      "name": "getSignature",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "format",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "applyTo",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "address",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "options",
          "type_long": "ghidra.app.util.demangler.DemanglerOptions",
          "type_short": "DemanglerOptions",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.lang.Exception",
          "type_short": "Exception",
          "comment": ""
        }
      ]
    },
    {
      "name": "guessTableLength",
      "comment": "Perform a best guess at the length of an address table assuming that\n another label (or end of block) can be used to identify the end.",
      "javadoc": "Perform a best guess at the length of an address table assuming that\n another label (or end of block) can be used to identify the end.\n@param program the program\n@param address start of address table\n@return maximum length of table or -1 if address does not reside\n within an initialized memory block",
      "static": true,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "the program"
        },
        {
          "name": "address",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "start of address table"
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "maximum length of table or -1 if address does not reside\n within an initialized memory block"
      },
      "throws": []
    },
    {
      "name": "findNextImportedSymbol",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "address",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.symbol.Symbol",
        "type_short": "Symbol",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createPointers",
      "comment": "Creates pointers from start address.\n If a pointer already exists, then skip it and continue.",
      "javadoc": "Creates pointers from start address.\n If a pointer already exists, then skip it and continue.",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "start",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "count",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isUndefinedInRange",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "start",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "end",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    }
  ]
}
