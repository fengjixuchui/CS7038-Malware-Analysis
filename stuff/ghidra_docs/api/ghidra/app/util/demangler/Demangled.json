{
  "name": "Demangled",
  "comment": "A unifying top-level interface for all DemangledObjects and DemangledTypes\n \n This class and its children have many overlapping concepts that we wish to refine at a \n future date.  Below is a listing of known uses:\n \n \t\t\n \t\t\tMethodDescription\n \t\t\n \t\t\n \t\t\t\n \t\t\t#getName()\n \t\t\t\n \t\t\t\n \t\t\tA \u0027safe\u0027 name that is the #getDemangledName(), but with some characters\n \t\t\tchanged to be valid for use within Ghidra.\n \t\t\t\n \t\t\n \t\t\n \t\t\t\n \t\t\t#getDemangledName()\n \t\t\t\n \t\t\t\n \t\t\tThe unmodified name that was set upon this object. \n \t\t\t\n \t\t\n \t\t\n \t\t\t\n \t\t\t#getNamespaceName()\n \t\t\t\n \t\t\t\n \t\t\tThe \u0027safe\u0027 name of this object when it is used as a namespace name.   This usually has \n \t\t\tparameter and template information.  Further, some characters within templates and\n \t\t\tfunction signatures are replaced, such as spaces and namespace separators.\n \t \t\t\n \t\t\tGiven this full demangled string: , this method will return\n \t\t\t.\n \t\t\t\n \t\t\n \t\t\n \t\t\t\n \t\t\t#getNamespaceString()\n \t\t\t\n \t\t\t\n \t\t\tThis returns the unmodified name of this item, along with any unmodified parent \n \t\t\tnamespace names, all separated by a namespace delimiter.  Unlike \n \t\t\t#getNamespaceName(), the spaces and internal namespace tokens will not be \n \t\t\treplaced.\n \t\t\t\n \t\t\tGiven this full demangled string: , this method will return\n \t\t\t.\n \t\t\t\n \t\t\n \t\t\n \t\t\t\n \t\t\t#getSignature()\n \t\t\t\n \t\t\t\n \t\t\tReturns the complete string form of this object, with most known attributes.  For \n \t\t\tfunctions, this will be a complete signature. \n \t\t\t\n \t\t\n \t\t\n \t\t\t\n \t\t\t#getOriginalDemangled()\n \t\t\t\n \t\t\t\n \t\t\tThe original unmodified demangled string.  This is the full demangled string returned\n          from the demangling service.\n \t\t\t\n \t\t\n ",
  "javadoc": "A unifying top-level interface for all {@link DemangledObject}s and {@link DemangledType}s\n \n \u003cp\u003eThis class and its children have many overlapping concepts that we wish to refine at a \n future date.  Below is a listing of known uses:\n \u003cTABLE\u003e\n \t\t\u003cTR\u003e\n \t\t\t\u003cTH ALIGN\u003d\"left\"\u003eMethod\u003c/TH\u003e\u003cTH ALIGN\u003d\"left\"\u003eDescription\u003c/TH\u003e\n \t\t\u003c/TR\u003e\n \t\t\u003cTR\u003e\n \t\t\t\u003cTD\u003e\n \t\t\t{@link #getName()}\n \t\t\t\u003c/TD\u003e\n \t\t\t\u003cTD\u003e\n \t\t\tA \u0027safe\u0027 name that is the {@link #getDemangledName()}, but with some characters\n \t\t\tchanged to be valid for use within Ghidra.\n \t\t\t\u003c/TD\u003e\n \t\t\u003c/TR\u003e\n \t\t\u003cTR\u003e\n \t\t\t\u003cTD\u003e\n \t\t\t{@link #getDemangledName()}\n \t\t\t\u003c/TD\u003e\n \t\t\t\u003cTD\u003e\n \t\t\tThe unmodified \u003cb\u003ename\u003c/b\u003e that was set upon this object. \n \t\t\t\u003c/TD\u003e\n \t\t\u003c/TR\u003e\n \t\t\u003cTR\u003e\n \t\t\t\u003cTD\u003e\n \t\t\t{@link #getNamespaceName()}\n \t\t\t\u003c/TD\u003e\n \t\t\t\u003cTD\u003e\n \t\t\tThe \u0027safe\u0027 name of this object when it is used as a namespace name.   This usually has \n \t\t\tparameter and template information.  Further, some characters within templates and\n \t\t\tfunction signatures are replaced, such as spaces and namespace separators.\n \t \t\t\u003cP\u003e\n \t\t\tGiven this full demangled string: {@code Foo::Bar::Baz\u003cint\u003e}, this method will return\n \t\t\t{@code Baz\u003cint\u003e}.\n \t\t\t\u003c/TD\u003e\n \t\t\u003c/TR\u003e\n \t\t\u003cTR\u003e\n \t\t\t\u003cTD\u003e\n \t\t\t{@link #getNamespaceString()}\n \t\t\t\u003c/TD\u003e\n \t\t\t\u003cTD\u003e\n \t\t\tThis returns the unmodified name of this item, along with any unmodified parent \n \t\t\tnamespace names, all separated by a namespace delimiter.  Unlike \n \t\t\t{@link #getNamespaceName()}, the spaces and internal namespace tokens will not be \n \t\t\treplaced.\n \t\t\t\u003cP\u003e\n \t\t\tGiven this full demangled string: {@code Foo::Bar::Baz\u003cint\u003e}, this method will return\n \t\t\t{@code Foo::Bar::Baz\u003cint\u003e}.\n \t\t\t\u003c/TD\u003e\n \t\t\u003c/TR\u003e\n \t\t\u003cTR\u003e\n \t\t\t\u003cTD\u003e\n \t\t\t{@link #getSignature()}\n \t\t\t\u003c/TD\u003e\n \t\t\t\u003cTD\u003e\n \t\t\tReturns the complete string form of this object, with most known attributes.  For \n \t\t\tfunctions, this will be a complete signature. \n \t\t\t\u003c/TD\u003e\n \t\t\u003c/TR\u003e\n \t\t\u003cTR\u003e\n \t\t\t\u003cTD\u003e\n \t\t\t{@link #getOriginalDemangled()}\n \t\t\t\u003c/TD\u003e\n \t\t\t\u003cTD\u003e\n \t\t\tThe original unmodified demangled string.  This is the full demangled string returned\n          from the demangling service.\n \t\t\t\u003c/TD\u003e\n \t\t\u003c/TR\u003e\n \u003c/TABLE\u003e",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "getMangledString",
      "comment": "Returns the original mangled string",
      "javadoc": "Returns the original mangled string\n@return the string",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the string"
      },
      "throws": []
    },
    {
      "name": "getOriginalDemangled",
      "comment": "Returns the original demangled string returned by the demangling service",
      "javadoc": "Returns the original demangled string returned by the demangling service\n@return the original demangled string",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the original demangled string"
      },
      "throws": []
    },
    {
      "name": "getName",
      "comment": "Returns the demangled name of this object.\n NOTE: unsupported symbol characters, like whitespace, will be converted to an underscore.",
      "javadoc": "Returns the demangled name of this object.\n NOTE: unsupported symbol characters, like whitespace, will be converted to an underscore.\n@return name of this DemangledObject with unsupported characters converted to underscore\n@see #getDemangledName()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "name of this DemangledObject with unsupported characters converted to underscore"
      },
      "throws": []
    },
    {
      "name": "setName",
      "comment": "Sets the name for this object",
      "javadoc": "Sets the name for this object\n@param name the name",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDemangledName",
      "comment": "Returns the unmodified demangled name of this object. This name may contain whitespace \n and other characters not supported for symbol or data type creation.  See #getName() \n for the same name modified for use within Ghidra.",
      "javadoc": "Returns the unmodified demangled name of this object. This name may contain whitespace \n and other characters not supported for symbol or data type creation.  See {@link #getName()} \n for the same name modified for use within Ghidra.\n@return name of this DemangledObject",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "name of this DemangledObject"
      },
      "throws": []
    },
    {
      "name": "getNamespace",
      "comment": "Returns the namespace containing this demangled object",
      "javadoc": "Returns the namespace containing this demangled object\n@return the namespace containing this demangled object",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.util.demangler.Demangled",
        "type_short": "Demangled",
        "comment": "the namespace containing this demangled object"
      },
      "throws": []
    },
    {
      "name": "setNamespace",
      "comment": "Sets the namespace of this demangled object",
      "javadoc": "Sets the namespace of this demangled object\n@param ns the namespace",
      "static": false,
      "params": [
        {
          "name": "ns",
          "type_long": "ghidra.app.util.demangler.Demangled",
          "type_short": "Demangled",
          "comment": "the namespace"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getNamespaceString",
      "comment": "Returns a representation of this object as fully-qualified namespace.  The \n value returned here may have had some special characters replaced, such as \u0027 \u0027 replaced\n with \u0027_\u0027 and \u0027::\u0027 replaced with \u0027--\u0027.",
      "javadoc": "Returns a representation of this object as fully-qualified namespace.  The \n value returned here may have had some special characters replaced, such as \u0027 \u0027 replaced\n with \u0027_\u0027 and \u0027::\u0027 replaced with \u0027--\u0027.\n@return the full namespace",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the full namespace"
      },
      "throws": []
    },
    {
      "name": "getNamespaceName",
      "comment": "Returns this object\u0027s namespace name without the fully-qualified parent path. The \n value returned here may have had some special characters replaced, such as \u0027 \u0027 replaced\n with \u0027_\u0027 and \u0027::\u0027 replaced with \u0027--\u0027.",
      "javadoc": "Returns this object\u0027s namespace name without the fully-qualified parent path. The \n value returned here may have had some special characters replaced, such as \u0027 \u0027 replaced\n with \u0027_\u0027 and \u0027::\u0027 replaced with \u0027--\u0027.\n@return the name",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the name"
      },
      "throws": []
    },
    {
      "name": "getSignature",
      "comment": "Generates a complete representation of this object to include all know attributes of this\n object",
      "javadoc": "Generates a complete representation of this object to include all know attributes of this\n object\n@return the signature",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the signature"
      },
      "throws": []
    }
  ]
}
