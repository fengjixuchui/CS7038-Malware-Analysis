{
  "name": "DtParser",
  "comment": "DtParser",
  "javadoc": "DtParser",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "dtManager",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.data.DataTypeManager",
      "type_short": "DataTypeManager",
      "constant_value": null
    },
    {
      "name": "parser",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.data.DataTypeParser",
      "type_short": "DataTypeParser",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "dtManager",
          "type_long": "ghidra.program.model.data.DataTypeManager",
          "type_short": "DataTypeManager",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "parseDataType",
      "comment": "Parse the specified dtName within the specified category.",
      "javadoc": "Parse the specified dtName within the specified category.\n@param dtName\n@param category\n@param size optional data-type size, or -1 for unspecified\n@return data-type if found, or null if not found",
      "static": false,
      "params": [
        {
          "name": "dtName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "category",
          "type_long": "ghidra.program.model.data.CategoryPath",
          "type_short": "CategoryPath",
          "comment": ""
        },
        {
          "name": "size",
          "type_long": "int",
          "type_short": "int",
          "comment": "optional data-type size, or -1 for unspecified"
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.data.DataType",
        "type_short": "DataType",
        "comment": "data-type if found, or null if not found"
      },
      "throws": []
    },
    {
      "name": "adjustPointerDataTypes",
      "comment": "Adjust pointer data-types based upon specified size which may not be \n factored into pointer specification (e.g., void *32).",
      "javadoc": "Adjust pointer data-types based upon specified size which may not be \n factored into pointer specification (e.g., void *32).\n@param size\n@param dt\n@return adjusted data-type",
      "static": false,
      "params": [
        {
          "name": "size",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "dt",
          "type_long": "ghidra.program.model.data.DataType",
          "type_short": "DataType",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.data.DataType",
        "type_short": "DataType",
        "comment": "adjusted data-type"
      },
      "throws": []
    }
  ]
}
