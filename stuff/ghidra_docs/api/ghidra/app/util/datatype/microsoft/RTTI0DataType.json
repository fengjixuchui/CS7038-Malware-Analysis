{
  "name": "RTTI0DataType",
  "comment": "The RTTI0 data type represents a TypeDescriptor structure.\n \n Fields for this RunTimeTypeInformation structure can be found on http://www.openrce.org\n \n \n struct TypeDescriptor {\n     Pointer vfTablePointer;\n     Pointer dataPointer;\n     NullTerminatedString name; // mangled version of class name\n }\n \n \n RTTI_Type_Descriptor is the label for the RTTI0 data structure.",
  "javadoc": "The RTTI0 data type represents a TypeDescriptor structure.\n \u003cp\u003e\n Fields for this RunTimeTypeInformation structure can be found on http://www.openrce.org\n \u003cp\u003e\n \u003cpre\u003e\n struct TypeDescriptor {\n     Pointer vfTablePointer;\n     Pointer dataPointer;\n     NullTerminatedString name; // mangled version of class name\n }\n \u003c/pre\u003e\n \u003cp\u003e\n RTTI_Type_Descriptor is the label for the RTTI0 data structure.",
  "static": false,
  "implements": [],
  "extends": "ghidra.app.util.datatype.microsoft.RTTIDataType",
  "fields": [
    {
      "name": "serialVersionUID",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "long",
      "type_short": "long",
      "constant_value": "1"
    },
    {
      "name": "VF_TABLE_POINTER_OFFSET",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "0"
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Creates a dynamic Type Descriptor data type.",
      "javadoc": "Creates a dynamic Type Descriptor data type.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Creates a dynamic Type Descriptor data type.",
      "javadoc": "Creates a dynamic Type Descriptor data type.\n@param dtm the data type manager for this data type.",
      "static": false,
      "params": [
        {
          "name": "dtm",
          "type_long": "ghidra.program.model.data.DataTypeManager",
          "type_short": "DataTypeManager",
          "comment": "the data type manager for this data type."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "clone",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "dtm",
          "type_long": "ghidra.program.model.data.DataTypeManager",
          "type_short": "DataTypeManager",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.data.DataType",
        "type_short": "DataType",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDescription",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getMnemonic",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "settings",
          "type_long": "ghidra.docking.settings.Settings",
          "type_short": "Settings",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getRepresentation",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "buf",
          "type_long": "ghidra.program.model.mem.MemBuffer",
          "type_short": "MemBuffer",
          "comment": ""
        },
        {
          "name": "settings",
          "type_long": "ghidra.docking.settings.Settings",
          "type_short": "Settings",
          "comment": ""
        },
        {
          "name": "length",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getValue",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "buf",
          "type_long": "ghidra.program.model.mem.MemBuffer",
          "type_short": "MemBuffer",
          "comment": ""
        },
        {
          "name": "settings",
          "type_long": "ghidra.docking.settings.Settings",
          "type_short": "Settings",
          "comment": ""
        },
        {
          "name": "length",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.Object",
        "type_short": "Object",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getAllComponents",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "buf",
          "type_long": "ghidra.program.model.mem.MemBuffer",
          "type_short": "MemBuffer",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.data.DataTypeComponent[]",
        "type_short": "ghidra.program.model.data.DataTypeComponent[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSpareDataOffset",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getNameOffset",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getVFTableAddress",
      "comment": "Gets the address of the vf table or null if one isn\u0027t indicated.",
      "javadoc": "Gets the address of the vf table or null if one isn\u0027t indicated.\n@param memory the program memory containing the address\n@param rtti0Address the address for the RTTI 0\n@return the address of the vf table or null.",
      "static": false,
      "params": [
        {
          "name": "memory",
          "type_long": "ghidra.program.model.mem.Memory",
          "type_short": "Memory",
          "comment": "the program memory containing the address"
        },
        {
          "name": "rtti0Address",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "the address for the RTTI 0"
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": "the address of the vf table or null."
      },
      "throws": []
    },
    {
      "name": "getSpareDataAddress",
      "comment": "Gets the address of the spare data, a 0 address if there is no spare data,\n or null.",
      "javadoc": "Gets the address of the spare data, a 0 address if there is no spare data,\n or null.\n@param memory the program memory containing the address\n@param rtti0Address the address for the RTTI 0\n@return the address of the spare data, a 0 value, or null.",
      "static": false,
      "params": [
        {
          "name": "memory",
          "type_long": "ghidra.program.model.mem.Memory",
          "type_short": "Memory",
          "comment": "the program memory containing the address"
        },
        {
          "name": "rtti0Address",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "the address for the RTTI 0"
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": "the address of the spare data, a 0 value, or null."
      },
      "throws": []
    },
    {
      "name": "getVFTableName",
      "comment": "Gets the type name for this descriptor.",
      "javadoc": "Gets the type name for this descriptor.\n@param buf the memory buffer where data has been created with this data type.\n@return the name",
      "static": false,
      "params": [
        {
          "name": "buf",
          "type_long": "ghidra.program.model.mem.MemBuffer",
          "type_short": "MemBuffer",
          "comment": "the memory buffer where data has been created with this data type."
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the name"
      },
      "throws": []
    },
    {
      "name": "getLength",
      "comment": "Gets the total length of the data created when this data type is placed at the indicated\n address in memory.",
      "javadoc": "Gets the total length of the data created when this data type is placed at the indicated\n address in memory.\n@param memory the program memory for this data.\n@param address the start address of the data.\n@param bytes the bytes for this data.\n@return the length of the data. zero is returned if valid data can\u0027t be created at the\n indicated address using this data type.",
      "static": false,
      "params": [
        {
          "name": "memory",
          "type_long": "ghidra.program.model.mem.Memory",
          "type_short": "Memory",
          "comment": "the program memory for this data."
        },
        {
          "name": "address",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "the start address of the data."
        },
        {
          "name": "bytes",
          "type_long": "byte[]",
          "type_short": "byte[]",
          "comment": "the bytes for this data."
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the length of the data. zero is returned if valid data can\u0027t be created at the\n indicated address using this data type."
      },
      "throws": []
    },
    {
      "name": "containsWhitespace",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "s",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isValid",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "startAddress",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "validationOptions",
          "type_long": "ghidra.app.util.datatype.microsoft.DataValidationOptions",
          "type_short": "DataValidationOptions",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLength",
      "comment": "Gets the total length of the data created when this data type is placed at the indicated\n address in memory.",
      "javadoc": "Gets the total length of the data created when this data type is placed at the indicated\n address in memory.\n@param memory the program memory for this data.\n@param startAddress the start address of the data.\n@return the length of the data. zero is returned if valid data can\u0027t be created at the\n indicated address using this data type.",
      "static": false,
      "params": [
        {
          "name": "memory",
          "type_long": "ghidra.program.model.mem.Memory",
          "type_short": "Memory",
          "comment": "the program memory for this data."
        },
        {
          "name": "startAddress",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "the start address of the data."
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the length of the data. zero is returned if valid data can\u0027t be created at the\n indicated address using this data type."
      },
      "throws": []
    },
    {
      "name": "getDefaultLabelPrefix",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    }
  ]
}
