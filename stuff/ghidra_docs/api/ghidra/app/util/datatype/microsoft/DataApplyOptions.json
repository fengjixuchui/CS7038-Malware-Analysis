{
  "name": "DataApplyOptions",
  "comment": "Holds options for the commands for creating new data structures.",
  "javadoc": "Holds options for the commands for creating new data structures.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "followData",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "clearInstructions",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "clearDefinedData",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "createLabel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "createFunction",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "createBookmarks",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "createComments",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Creates an DataApplyOptions object with the default values.",
      "javadoc": "Creates an DataApplyOptions object with the default values.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Copy constructor",
      "javadoc": "Copy constructor\n@param dataApplyOptions the data apply options to copy",
      "static": false,
      "params": [
        {
          "name": "dataApplyOptions",
          "type_long": "ghidra.app.util.datatype.microsoft.DataApplyOptions",
          "type_short": "DataApplyOptions",
          "comment": "the data apply options to copy"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "shouldFollowData",
      "comment": "An option indicating whether or not to create data that is referred to by the data structure.\n Default is true.",
      "javadoc": "An option indicating whether or not to create data that is referred to by the data structure.\n \u003cbr\u003eDefault is true.\n@return true if structures should be created for referred to data.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if structures should be created for referred to data."
      },
      "throws": []
    },
    {
      "name": "setFollowData",
      "comment": "Sets whether or not to create follow on data that is referred to by the new structure.",
      "javadoc": "Sets whether or not to create follow on data that is referred to by the new structure.\n@param followData true indicates follow on data should be created.",
      "static": false,
      "params": [
        {
          "name": "followData",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true indicates follow on data should be created."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "shouldClearInstructions",
      "comment": "An option indicating whether or not to clear existing instructions in order to create \n new data.\n Default is false.",
      "javadoc": "An option indicating whether or not to clear existing instructions in order to create \n new data.\n \u003cbr\u003eDefault is false.\n@return true if existing instructions should be cleared to create the new data.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if existing instructions should be cleared to create the new data."
      },
      "throws": []
    },
    {
      "name": "setClearInstructions",
      "comment": "Sets whether or not to clear existing instructions in order to create new data.",
      "javadoc": "Sets whether or not to clear existing instructions in order to create new data.\n@param clearInstructions true indicates existing instructions should be cleared to create \n the new data.",
      "static": false,
      "params": [
        {
          "name": "clearInstructions",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true indicates existing instructions should be cleared to create \n the new data."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "shouldClearDefinedData",
      "comment": "An option indicating whether or not to clear existing defined data in order to create \n new data.\n Default is false.",
      "javadoc": "An option indicating whether or not to clear existing defined data in order to create \n new data.\n \u003cbr\u003eDefault is false.\n@return true if existing defined data should be cleared to create the new data.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if existing defined data should be cleared to create the new data."
      },
      "throws": []
    },
    {
      "name": "setClearDefinedData",
      "comment": "Sets whether or not to clear existing defined data in order to create new data.",
      "javadoc": "Sets whether or not to clear existing defined data in order to create new data.\n@param clearDefinedData true indicates existing defined data should be cleared to create \n the new data.",
      "static": false,
      "params": [
        {
          "name": "clearDefinedData",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true indicates existing defined data should be cleared to create \n the new data."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "shouldCreateLabel",
      "comment": "An option indicating whether or not to create a label for the new data or for a \n referred to data or function.\n Default is true.",
      "javadoc": "An option indicating whether or not to create a label for the new data or for a \n referred to data or function.\n \u003cbr\u003eDefault is true.\n@return true if a label should be created for this data or for referred to structures \n and functions.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if a label should be created for this data or for referred to structures \n and functions."
      },
      "throws": []
    },
    {
      "name": "setCreateLabel",
      "comment": "Sets whether or not to create labels for follow on data or a function that is referred to \n by the current new structure.",
      "javadoc": "Sets whether or not to create labels for follow on data or a function that is referred to \n by the current new structure.\n@param createLabel true indicates a label should be created.",
      "static": false,
      "params": [
        {
          "name": "createLabel",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true indicates a label should be created."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "shouldCreateFunction",
      "comment": "An option indicating whether or not to disassemble and create a function that is referred\n to by your current structure.\n Default is true.",
      "javadoc": "An option indicating whether or not to disassemble and create a function that is referred\n to by your current structure.\n \u003cbr\u003eDefault is true.\n@return true if referred to functions should be created.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if referred to functions should be created."
      },
      "throws": []
    },
    {
      "name": "setCreateFunction",
      "comment": "Sets whether or not to disassemble and create a function that is referred to \n by the current new structure.",
      "javadoc": "Sets whether or not to disassemble and create a function that is referred to \n by the current new structure.\n@param createFunction true indicates a function should be created.",
      "static": false,
      "params": [
        {
          "name": "createFunction",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true indicates a function should be created."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "shouldCreateBookmarks",
      "comment": "An option indicating whether or not to create bookmarks indicating any problems that\n occurred while creating the current structure or information associated with it.\n Default is true.",
      "javadoc": "An option indicating whether or not to create bookmarks indicating any problems that\n occurred while creating the current structure or information associated with it.\n \u003cbr\u003eDefault is true.\n@return true if error bookmarks should be created.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if error bookmarks should be created."
      },
      "throws": []
    },
    {
      "name": "setCreateBookmarks",
      "comment": "Sets whether or not to create bookmarks for problems encountered while trying to create\n an new structure or information associated with it.",
      "javadoc": "Sets whether or not to create bookmarks for problems encountered while trying to create\n an new structure or information associated with it.\n@param createBookmarks true indicates error bookmarks should be created.",
      "static": false,
      "params": [
        {
          "name": "createBookmarks",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true indicates error bookmarks should be created."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "shouldCreateComments",
      "comment": "An option indicating whether or not to create comments indicating any problems that\n occurred while creating the data or information associated with it.\n Default is true.",
      "javadoc": "An option indicating whether or not to create comments indicating any problems that\n occurred while creating the data or information associated with it.\n \u003cbr\u003eDefault is true.\n@return true if error comments should be created.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if error comments should be created."
      },
      "throws": []
    },
    {
      "name": "setCreateComments",
      "comment": "Sets whether or not to create comments for problems encountered while trying to create\n a new structure or information associated with it.",
      "javadoc": "Sets whether or not to create comments for problems encountered while trying to create\n a new structure or information associated with it.\n@param createComments true indicates comments for the data should be created.",
      "static": false,
      "params": [
        {
          "name": "createComments",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true indicates comments for the data should be created."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
