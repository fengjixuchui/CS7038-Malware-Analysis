{
  "name": "FormatManager",
  "comment": "Class to manage the set of format models.",
  "javadoc": "Class to manage the set of format models.",
  "static": false,
  "implements": [
    "ghidra.framework.options.OptionsChangeListener"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "ARRAY_OPTIONS_GROUP",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Array Options\""
    },
    {
      "name": "HIGHLIGHT_GROUP",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Cursor Text Highlight\""
    },
    {
      "name": "HIGHLIGHT_COLOR_NAME",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Cursor Text Highlight.Highlight Color\""
    },
    {
      "name": "HIGHLIGHT_ALT_COLOR_NAME",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Cursor Text Highlight.Alternate Highlight Color\""
    },
    {
      "name": "ARRAY_DISPLAY_OPTIONS",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Array Options.Array Display Options\""
    },
    {
      "name": "ARRAY_DISPLAY_DESCRIPTION",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Adjusts the Array Field display\""
    },
    {
      "name": "NUM_MODELS",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "7"
    },
    {
      "name": "NAMES",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String[]",
      "type_short": "java.lang.String[]",
      "constant_value": null
    },
    {
      "name": "PROXY_CLASSES",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.Class\u003c?\u003e[]",
      "type_short": "java.lang.Class\u003c?\u003e[]",
      "constant_value": null
    },
    {
      "name": "models",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.viewer.format.FieldFormatModel[]",
      "type_short": "ghidra.app.util.viewer.format.FieldFormatModel[]",
      "constant_value": null
    },
    {
      "name": "formatListeners",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.datastruct.WeakSet\u003cghidra.app.util.viewer.format.FormatModelListener\u003e",
      "type_short": "WeakSet",
      "constant_value": null
    },
    {
      "name": "maxNumRows",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "factorys",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.viewer.field.FieldFactory[]",
      "type_short": "ghidra.app.util.viewer.field.FieldFactory[]",
      "constant_value": null
    },
    {
      "name": "fieldOptions",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.options.ToolOptions",
      "type_short": "ToolOptions",
      "constant_value": null
    },
    {
      "name": "displayOptions",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.options.ToolOptions",
      "type_short": "ToolOptions",
      "constant_value": null
    },
    {
      "name": "initialized",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "highlightProvider",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.viewer.format.FormatManager.MultipleHighlighterProvider",
      "type_short": "MultipleHighlighterProvider",
      "constant_value": null
    },
    {
      "name": "serviceProvider",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.plugintool.ServiceProvider",
      "type_short": "ServiceProvider",
      "constant_value": null
    },
    {
      "name": "arrayValuesPerLine",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "groupArrayElements",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new FormatManager.",
      "javadoc": "Constructs a new FormatManager.\n@param displayOptions the Options containing display options (color, fonts, etc)\n@param fieldOptions the Options contains specific field options.",
      "static": false,
      "params": [
        {
          "name": "displayOptions",
          "type_long": "ghidra.framework.options.ToolOptions",
          "type_short": "ToolOptions",
          "comment": "the Options containing display options (color, fonts, etc)"
        },
        {
          "name": "fieldOptions",
          "type_long": "ghidra.framework.options.ToolOptions",
          "type_short": "ToolOptions",
          "comment": "the Options contains specific field options."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getArrayDisplayOptions",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "options",
          "type_long": "ghidra.framework.options.Options",
          "type_short": "Options",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createClone",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.util.viewer.format.FormatManager",
        "type_short": "FormatManager",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "dispose",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setServiceProvider",
      "comment": "Sets the service provider used by the field factory objects.",
      "javadoc": "Sets the service provider used by the field factory objects.\n@param provider the service provider",
      "static": false,
      "params": [
        {
          "name": "provider",
          "type_long": "ghidra.framework.plugintool.ServiceProvider",
          "type_short": "ServiceProvider",
          "comment": "the service provider"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "notifyServicesChanged",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFactorys",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addFormatModelListener",
      "comment": "Adds a listener to be notified when a format changes.",
      "javadoc": "Adds a listener to be notified when a format changes.\n@param listener the listener to be added.",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "ghidra.app.util.viewer.format.FormatModelListener",
          "type_short": "FormatModelListener",
          "comment": "the listener to be added."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeFormatModleListener",
      "comment": "Removes the given listener from the list of listeners to be notified of a\n format change.",
      "javadoc": "Removes the given listener from the list of listeners to be notified of a\n format change.\n@param listener the listener to be removed.",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "ghidra.app.util.viewer.format.FormatModelListener",
          "type_short": "FormatModelListener",
          "comment": "the listener to be removed."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getNumModels",
      "comment": "Returns the total number of model in the format manager.",
      "javadoc": "Returns the total number of model in the format manager.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getModel",
      "comment": "Returns the format model for the given index.",
      "javadoc": "Returns the format model for the given index.\n@param index the index of the format model to return.",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "int",
          "type_short": "int",
          "comment": "the index of the format model to return."
        }
      ],
      "return": {
        "type_long": "ghidra.app.util.viewer.format.FieldFormatModel",
        "type_short": "FieldFormatModel",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDividerModel",
      "comment": "Returns the format model for the address break (divider)",
      "javadoc": "Returns the format model for the address break (divider)",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.util.viewer.format.FieldFormatModel",
        "type_short": "FieldFormatModel",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPlateFormat",
      "comment": "Returns the format model for the plate field",
      "javadoc": "Returns the format model for the plate field",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.util.viewer.format.FieldFormatModel",
        "type_short": "FieldFormatModel",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFunctionFormat",
      "comment": "Returns the format model for the function signature",
      "javadoc": "Returns the format model for the function signature",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.util.viewer.format.FieldFormatModel",
        "type_short": "FieldFormatModel",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFunctionVarFormat",
      "comment": "Returns the format model for the function variables.",
      "javadoc": "Returns the format model for the function variables.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.util.viewer.format.FieldFormatModel",
        "type_short": "FieldFormatModel",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getCodeUnitFormat",
      "comment": "Returns the format model for a code unit.",
      "javadoc": "Returns the format model for a code unit.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.util.viewer.format.FieldFormatModel",
        "type_short": "FieldFormatModel",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getOpenDataFormat",
      "comment": "Returns the format model to use for the internals of open structures.",
      "javadoc": "Returns the format model to use for the internals of open structures.\n@param data the data code unit to get the format model for.",
      "static": false,
      "params": [
        {
          "name": "data",
          "type_long": "ghidra.program.model.listing.Data",
          "type_short": "Data",
          "comment": "the data code unit to get the format model for."
        }
      ],
      "return": {
        "type_long": "ghidra.app.util.viewer.format.FieldFormatModel",
        "type_short": "FieldFormatModel",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isPrimitiveArrayElement",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "data",
          "type_long": "ghidra.program.model.listing.Data",
          "type_short": "Data",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "update",
      "comment": "update all listeners that a model has changed.",
      "javadoc": "update all listeners that a model has changed.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDisplayOptions",
      "comment": "Returns the Options used for display properties.",
      "javadoc": "Returns the Options used for display properties.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.framework.options.ToolOptions",
        "type_short": "ToolOptions",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFieldOptions",
      "comment": "Returns the Options used for field specific properties.",
      "javadoc": "Returns the Options used for field specific properties.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.framework.options.ToolOptions",
        "type_short": "ToolOptions",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "modelChanged",
      "comment": "Notifies listeners that the given model has changed.",
      "javadoc": "Notifies listeners that the given model has changed.\n@param model the format model that changed.",
      "static": false,
      "params": [
        {
          "name": "model",
          "type_long": "ghidra.app.util.viewer.format.FieldFormatModel",
          "type_short": "FieldFormatModel",
          "comment": "the format model that changed."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getMaxWidth",
      "comment": "Returns the width of the widest model in this manager.",
      "javadoc": "Returns the width of the widest model in this manager.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getMaxRowCount",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDefaultModel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "modelID",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "org.jdom.Element",
        "type_short": "Element",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDefaultDividerFormat",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "org.jdom.Element",
        "type_short": "Element",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDefaultPlateFormat",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "org.jdom.Element",
        "type_short": "Element",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDefaultFunctionFormat",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "org.jdom.Element",
        "type_short": "Element",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDefaultVariableFormat",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "org.jdom.Element",
        "type_short": "Element",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDefaultCodeFormat",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "org.jdom.Element",
        "type_short": "Element",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDefaultSubDataFormat",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "org.jdom.Element",
        "type_short": "Element",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDefaultArrayFormat",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "org.jdom.Element",
        "type_short": "Element",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setRowIDs",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getMaxNumRows",
      "comment": "Returns the maximum number of possible rows in a layout. This would only\n occur if some address had every possible type of information to be displayed.",
      "javadoc": "Returns the maximum number of possible rows in a layout. This would only\n occur if some address had every possible type of information to be displayed.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setDefaultFormat",
      "comment": "Resets the model with the given id to its default format.",
      "javadoc": "Resets the model with the given id to its default format.\n@param modelID the id of the model to reset.",
      "static": false,
      "params": [
        {
          "name": "modelID",
          "type_long": "int",
          "type_short": "int",
          "comment": "the id of the model to reset."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setDefaultFormats",
      "comment": "Resets all format models to their default format.",
      "javadoc": "Resets all format models to their default format.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addHighlightProvider",
      "comment": "Adds a HighlightProvider",
      "javadoc": "Adds a HighlightProvider\n@param provider the provider to use.\n@see #removeHighlightProvider(HighlightProvider)\n@see #getHighlightProviders()",
      "static": false,
      "params": [
        {
          "name": "provider",
          "type_long": "ghidra.app.util.HighlightProvider",
          "type_short": "HighlightProvider",
          "comment": "the provider to use."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeHighlightProvider",
      "comment": "Removes the provider",
      "javadoc": "Removes the provider\n@param provider the provider to remove.\n@see #addHighlightProvider(HighlightProvider)",
      "static": false,
      "params": [
        {
          "name": "provider",
          "type_long": "ghidra.app.util.HighlightProvider",
          "type_short": "HighlightProvider",
          "comment": "the provider to remove."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getHighlightProviders",
      "comment": "Gets all HighlightProviders installed on this FormatManager via the \n #addHighlightProvider(HighlightProvider).",
      "javadoc": "Gets all {@link HighlightProvider}s installed on this FormatManager via the \n {@link #addHighlightProvider(HighlightProvider)}.\n@return all {@link HighlightProvider}s installed on this FormatManager.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cghidra.app.util.HighlightProvider\u003e",
        "type_short": "List",
        "comment": "all HighlightProviders installed on this FormatManager."
      },
      "throws": []
    },
    {
      "name": "getFormatHighlightProvider",
      "comment": "Returns the HighlightProvider that should be used when creating FieldFactory\n objects.",
      "javadoc": "Returns the {@link HighlightProvider} that should be used when creating {@link FieldFactory}\n objects.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.util.HighlightProvider",
        "type_short": "HighlightProvider",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "optionsChanged",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "options",
          "type_long": "ghidra.framework.options.ToolOptions",
          "type_short": "ToolOptions",
          "comment": ""
        },
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "oldValue",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        },
        {
          "name": "newValue",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "saveState",
      "comment": "Saves the state of this LayoutManager to the SaveState object.",
      "javadoc": "Saves the state of this LayoutManager to the SaveState object.\n@param saveState the SaveState object to write to.",
      "static": false,
      "params": [
        {
          "name": "saveState",
          "type_long": "ghidra.framework.options.SaveState",
          "type_short": "SaveState",
          "comment": "the SaveState object to write to."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "readState",
      "comment": "Restores the state of this LayoutController from the given SaveState\n object.",
      "javadoc": "Restores the state of this LayoutController from the given SaveState\n object.\n@param saveState the SaveState to read from.",
      "static": false,
      "params": [
        {
          "name": "saveState",
          "type_long": "ghidra.framework.options.SaveState",
          "type_short": "SaveState",
          "comment": "the SaveState to read from."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getServiceProvider",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.framework.plugintool.ServiceProvider",
        "type_short": "ServiceProvider",
        "comment": ""
      },
      "throws": []
    }
  ]
}
