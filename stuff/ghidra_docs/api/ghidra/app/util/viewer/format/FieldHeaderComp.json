{
  "name": "FieldHeaderComp",
  "comment": "Class manage a header for the FieldViewer.",
  "javadoc": "Class manage a header for the FieldViewer.",
  "static": false,
  "implements": [],
  "extends": "javax.swing.JPanel",
  "fields": [
    {
      "name": "FUDGE",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "5"
    },
    {
      "name": "MIN_FIELD_SIZE",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "10"
    },
    {
      "name": "DEFAULT_SNAP_SIZE",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "10"
    },
    {
      "name": "model",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.viewer.format.FieldFormatModel",
      "type_short": "FieldFormatModel",
      "constant_value": null
    },
    {
      "name": "label",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.JLabel",
      "type_short": "JLabel",
      "constant_value": null
    },
    {
      "name": "rowHeight",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "state",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.viewer.format.FieldHeaderComp.CursorState",
      "type_short": "CursorState",
      "constant_value": null
    },
    {
      "name": "curRow",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "curCol",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "edgeCol",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "edgeColSize",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "anchorX",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "anchorY",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "snapSize",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "buttonColor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.awt.Color",
      "type_short": "Color",
      "constant_value": null
    },
    {
      "name": "highlightButtonColor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.awt.Color",
      "type_short": "Color",
      "constant_value": null
    },
    {
      "name": "moving",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.viewer.format.FieldHeaderComp.MovingField",
      "type_short": "MovingField",
      "constant_value": null
    },
    {
      "name": "renderPane",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.CellRendererPane",
      "type_short": "CellRendererPane",
      "constant_value": null
    },
    {
      "name": "defaultCursor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.awt.Cursor",
      "type_short": "Cursor",
      "constant_value": null
    },
    {
      "name": "resizeCursor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.awt.Cursor",
      "type_short": "Cursor",
      "constant_value": null
    },
    {
      "name": "headerPanel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.viewer.format.FieldHeader",
      "type_short": "FieldHeader",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new FieldHeader for the given model.",
      "javadoc": "Constructs a new FieldHeader for the given model.\n@param headerPanel the headerPanel containing this component.\n@param modelNumber the model number for this component.",
      "static": false,
      "params": [
        {
          "name": "headerPanel",
          "type_long": "ghidra.app.util.viewer.format.FieldHeader",
          "type_short": "FieldHeader",
          "comment": "the headerPanel containing this component."
        },
        {
          "name": "modelNumber",
          "type_long": "int",
          "type_short": "int",
          "comment": "the model number for this component."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getModel",
      "comment": "Returns the currently displayed model.",
      "javadoc": "Returns the currently displayed model.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.util.viewer.format.FieldFormatModel",
        "type_short": "FieldFormatModel",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "update",
      "comment": "Called when the model\u0027s layout changes.",
      "javadoc": "Called when the model\u0027s layout changes.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setCursor",
      "comment": "Sets the cursor shape that appropriate for the given location.  If the location\n is near a boundary, then the cursor will change to a RESIZE shape, otherwise\n it will be the default cursor.",
      "javadoc": "Sets the cursor shape that appropriate for the given location.  If the location\n is near a boundary, then the cursor will change to a RESIZE shape, otherwise\n it will be the default cursor.",
      "static": false,
      "params": [
        {
          "name": "x",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "y",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "pressed",
      "comment": "Callback for when the mouse button is pressed.",
      "javadoc": "Callback for when the mouse button is pressed.",
      "static": false,
      "params": [
        {
          "name": "x",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "y",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "released",
      "comment": "Callback for when the mouse button is released.",
      "javadoc": "Callback for when the mouse button is released.",
      "static": false,
      "params": [
        {
          "name": "x",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "y",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "dragged",
      "comment": "Callback for when the mouse is dragged.",
      "javadoc": "Callback for when the mouse is dragged.",
      "static": false,
      "params": [
        {
          "name": "x",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "y",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "resize",
      "comment": "Callback as the user is resizing a field.",
      "javadoc": "Callback as the user is resizing a field.",
      "static": false,
      "params": [
        {
          "name": "deltaX",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getRow",
      "comment": "Returns the row in the model that the point is over.",
      "javadoc": "Returns the row in the model that the point is over.\n@param p the point for which to find its corresponding row.",
      "static": false,
      "params": [
        {
          "name": "p",
          "type_long": "java.awt.Point",
          "type_short": "Point",
          "comment": "the point for which to find its corresponding row."
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getCol",
      "comment": "Returns the index of the field on the given row containing the give x pos.",
      "javadoc": "Returns the index of the field on the given row containing the give x pos.\n@param row the row on which to find the index of the field contianing the x coordinate.\n@param x the horizontal coordinate (in pixels)",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "the row on which to find the index of the field contianing the x coordinate."
        },
        {
          "name": "x",
          "type_long": "int",
          "type_short": "int",
          "comment": "the horizontal coordinate (in pixels)"
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "paint",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "g",
          "type_long": "java.awt.Graphics",
          "type_short": "Graphics",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPreferredSize",
      "comment": "Returns the preferredSize for this header component.",
      "javadoc": "Returns the preferredSize for this header component.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Dimension",
        "type_short": "Dimension",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setBounds",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "x",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "y",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "width",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "height",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFieldHeaderLocation",
      "comment": "Returns a FieldHeaderLocation for the given point",
      "javadoc": "Returns a FieldHeaderLocation for the given point\n@param p the point to get a location for.",
      "static": false,
      "params": [
        {
          "name": "p",
          "type_long": "java.awt.Point",
          "type_short": "Point",
          "comment": "the point to get a location for."
        }
      ],
      "return": {
        "type_long": "ghidra.app.util.viewer.format.FieldHeaderLocation",
        "type_short": "FieldHeaderLocation",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    }
  ]
}
