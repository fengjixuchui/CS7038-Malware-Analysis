{
  "name": "ListingComparisonFieldPanelCoordinator",
  "comment": "Coordinates cursor location and scrolling between the two sides of a ListingCodeComparisonPanel.",
  "javadoc": "Coordinates cursor location and scrolling between the two sides of a ListingCodeComparisonPanel.",
  "static": false,
  "implements": [
    "ghidra.app.util.viewer.listingpanel.DualListingFieldPanelCoordinator"
  ],
  "extends": "docking.widgets.fieldpanel.internal.LayoutLockedFieldPanelCoordinator",
  "fields": [
    {
      "name": "dualListingPanel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.viewer.listingpanel.ListingCodeComparisonPanel",
      "type_short": "ListingCodeComparisonPanel",
      "constant_value": null
    },
    {
      "name": "addressCorrelation",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.util.ListingAddressCorrelation",
      "type_short": "ListingAddressCorrelation",
      "constant_value": null
    },
    {
      "name": "lockLineAddresses",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.address.Address[]",
      "type_short": "ghidra.program.model.address.Address[]",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor for this dual listing field panel coordinator.",
      "javadoc": "Constructor for this dual listing field panel coordinator.\n@param dualListingPanel the dual listing to be controlled by this coordinator.",
      "static": false,
      "params": [
        {
          "name": "dualListingPanel",
          "type_long": "ghidra.app.util.viewer.listingpanel.ListingCodeComparisonPanel",
          "type_short": "ListingCodeComparisonPanel",
          "comment": "the dual listing to be controlled by this coordinator."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setCorrelation",
      "comment": "Sets a new address correlation for associating addresses between the left and right sides.\n The field panels can then be coordinated by locking the layouts together whenever the\n current location on one side can be correlated with a location on the other side.",
      "javadoc": "Sets a new address correlation for associating addresses between the left and right sides.\n The field panels can then be coordinated by locking the layouts together whenever the\n current location on one side can be correlated with a location on the other side.\n@param addressCorrelation the correlation to use for locking the two sides together for\n scrolling.",
      "static": false,
      "params": [
        {
          "name": "addressCorrelation",
          "type_long": "ghidra.program.util.ListingAddressCorrelation",
          "type_short": "ListingAddressCorrelation",
          "comment": "the correlation to use for locking the two sides together for\n scrolling."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "leftLocationChanged",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "leftLocation",
          "type_long": "ghidra.program.util.ProgramLocation",
          "type_short": "ProgramLocation",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "rightLocationChanged",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "rightLocation",
          "type_long": "ghidra.program.util.ProgramLocation",
          "type_short": "ProgramLocation",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "adjustFieldPanel",
      "comment": "Kicks the field panels viewChanged() method so that the field panels will realign their\n layouts using the locked line numbers.",
      "javadoc": "Kicks the field panels viewChanged() method so that the field panels will realign their\n layouts using the locked line numbers.\n@param fp the field panel that has focus.",
      "static": false,
      "params": [
        {
          "name": "fp",
          "type_long": "docking.widgets.fieldpanel.FieldPanel",
          "type_short": "FieldPanel",
          "comment": "the field panel that has focus."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setLockedAddresses",
      "comment": "Sets the left and right addresses that should currently be locked together for\n synchronized scrolling.",
      "javadoc": "Sets the left and right addresses that should currently be locked together for\n synchronized scrolling.\n@param leftAddress the address in the left listing.\n@param rightAddress the address in the right listing.",
      "static": false,
      "params": [
        {
          "name": "leftAddress",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "the address in the left listing."
        },
        {
          "name": "rightAddress",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "the address in the right listing."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLockedAddresses",
      "comment": "Gets the left and right addresses that are currently locked together for synchronized \n scrolling.",
      "javadoc": "Gets the left and right addresses that are currently locked together for synchronized \n scrolling.\n@return an array containing the left (index 0) and right (index 1) addresses that are \n locked together.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.address.Address[]",
        "type_short": "ghidra.program.model.address.Address[]",
        "comment": "an array containing the left (index 0) and right (index 1) addresses that are \n locked together."
      },
      "throws": []
    }
  ]
}
