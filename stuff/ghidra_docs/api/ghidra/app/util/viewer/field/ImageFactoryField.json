{
  "name": "ImageFactoryField",
  "comment": "Class for displaying images in fields.",
  "javadoc": "Class for displaying images in fields.",
  "static": false,
  "implements": [
    "ghidra.app.util.viewer.field.ListingField"
  ],
  "extends": "docking.widgets.fieldpanel.field.SimpleImageField",
  "fields": [
    {
      "name": "factory",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.viewer.field.FieldFactory",
      "type_short": "FieldFactory",
      "constant_value": null
    },
    {
      "name": "proxy",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.viewer.proxy.ProxyObj",
      "type_short": "ProxyObj",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor",
      "javadoc": "Constructor\n@param factory the FieldFactory that generated this field.\n@param icon the ImageIcon to display.\n@param proxy the object that this field represents.\n@param metrics the FontMetrics used to render.\n@param x the starting x position for this field.\n@param width the width of this field.",
      "static": false,
      "params": [
        {
          "name": "factory",
          "type_long": "ghidra.app.util.viewer.field.FieldFactory",
          "type_short": "FieldFactory",
          "comment": "the FieldFactory that generated this field."
        },
        {
          "name": "icon",
          "type_long": "javax.swing.ImageIcon",
          "type_short": "ImageIcon",
          "comment": "the ImageIcon to display."
        },
        {
          "name": "proxy",
          "type_long": "ghidra.app.util.viewer.proxy.ProxyObj",
          "type_short": "ProxyObj",
          "comment": "the object that this field represents."
        },
        {
          "name": "metrics",
          "type_long": "java.awt.FontMetrics",
          "type_short": "FontMetrics",
          "comment": "the FontMetrics used to render."
        },
        {
          "name": "x",
          "type_long": "int",
          "type_short": "int",
          "comment": "the starting x position for this field."
        },
        {
          "name": "width",
          "type_long": "int",
          "type_short": "int",
          "comment": "the width of this field."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor",
      "javadoc": "Constructor\n@param factory the FieldFactory that generated this field.\n@param icon the ImageIcon to display.\n@param proxy the object that this field represents.\n@param metrics the FontMetrics used to render.\n@param x the starting x position for this field.\n@param width the width of this field.\n@param center centers the image if true.",
      "static": false,
      "params": [
        {
          "name": "factory",
          "type_long": "ghidra.app.util.viewer.field.FieldFactory",
          "type_short": "FieldFactory",
          "comment": "the FieldFactory that generated this field."
        },
        {
          "name": "icon",
          "type_long": "javax.swing.ImageIcon",
          "type_short": "ImageIcon",
          "comment": "the ImageIcon to display."
        },
        {
          "name": "proxy",
          "type_long": "ghidra.app.util.viewer.proxy.ProxyObj",
          "type_short": "ProxyObj",
          "comment": "the object that this field represents."
        },
        {
          "name": "metrics",
          "type_long": "java.awt.FontMetrics",
          "type_short": "FontMetrics",
          "comment": "the FontMetrics used to render."
        },
        {
          "name": "x",
          "type_long": "int",
          "type_short": "int",
          "comment": "the starting x position for this field."
        },
        {
          "name": "width",
          "type_long": "int",
          "type_short": "int",
          "comment": "the width of this field."
        },
        {
          "name": "center",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "centers the image if true."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFieldFactory",
      "comment": "Returns the FieldFactory that generated this Field.",
      "javadoc": "Returns the FieldFactory that generated this Field.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.util.viewer.field.FieldFactory",
        "type_short": "FieldFactory",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFieldModel",
      "comment": "Returns the model that contains the FieldFactory that generated this Field.",
      "javadoc": "Returns the model that contains the FieldFactory that generated this Field.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.util.viewer.format.FieldFormatModel",
        "type_short": "FieldFormatModel",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getProxy",
      "comment": "Returns the object that this field is associated with.",
      "javadoc": "Returns the object that this field is associated with.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.util.viewer.proxy.ProxyObj",
        "type_short": "ProxyObj",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getClickedObject",
      "comment": "",
      "javadoc": "@see ListingField#getClickedObject(FieldLocation)",
      "static": false,
      "params": [
        {
          "name": "fieldLocation",
          "type_long": "docking.widgets.fieldpanel.support.FieldLocation",
          "type_short": "FieldLocation",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.Object",
        "type_short": "Object",
        "comment": ""
      },
      "throws": []
    }
  ]
}
