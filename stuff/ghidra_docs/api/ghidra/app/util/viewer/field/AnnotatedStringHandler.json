{
  "name": "AnnotatedStringHandler",
  "comment": "NOTE:  ALL AnnotatedStringHandler CLASSES MUST END IN \"StringHandler\".  If not,\n the ClassSearcher will not find them.\n \n An interface that describes a string that has been annotated, which allows for adding\n rendering and functionality to strings.",
  "javadoc": "NOTE:  ALL AnnotatedStringHandler CLASSES MUST END IN \"StringHandler\".  If not,\n the ClassSearcher will not find them.\n \n An interface that describes a string that has been annotated, which allows for adding\n rendering and functionality to strings.",
  "static": false,
  "implements": [
    "ghidra.util.classfinder.ExtensionPoint"
  ],
  "fields": [
    {
      "name": "DUMMY_MOUSE_HANDLER",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.app.util.viewer.field.AnnotatedMouseHandler",
      "type_short": "AnnotatedMouseHandler",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "createAnnotatedString",
      "comment": "Creates an FieldElement based upon the give array of Strings.  The first String\n in the list is expected to be the annotation tag used to create the annotation.  At the\n very least the array is expected to be comprised of two elements, the annotation and some\n data.  Extra data may be provided as needed by implementing classes.",
      "javadoc": "Creates an {@link FieldElement} based upon the give array of Strings.  The first String\n in the list is expected to be the annotation tag used to create the annotation.  At the\n very least the array is expected to be comprised of two elements, the annotation and some\n data.  Extra data may be provided as needed by implementing classes.\n@param prototypeString The prototype {@link FieldElement} that dictates the\n         attributes for the newly created string.  Implementations may change attributes\n         as needed.\n@param text An array of Strings used to create the {@link FieldElement} being\n         returned.\n@param program The program with which the returned string is associated.\n@return An {@link AnnotatedTextFieldElement} that will be used to render the given text.\n@throws AnnotationException if the given text data does not fit the expected format for\n         the given handler implementation.",
      "static": false,
      "params": [
        {
          "name": "prototypeString",
          "type_long": "docking.widgets.fieldpanel.field.AttributedString",
          "type_short": "AttributedString",
          "comment": "The prototype FieldElement that dictates the\n         attributes for the newly created string.  Implementations may change attributes\n         as needed."
        },
        {
          "name": "text",
          "type_long": "java.lang.String[]",
          "type_short": "java.lang.String[]",
          "comment": "An array of Strings used to create the FieldElement being\n         returned."
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "The program with which the returned string is associated."
        }
      ],
      "return": {
        "type_long": "docking.widgets.fieldpanel.field.AttributedString",
        "type_short": "AttributedString",
        "comment": "An AnnotatedTextFieldElement that will be used to render the given text."
      },
      "throws": [
        {
          "type_long": "ghidra.app.util.viewer.field.AnnotationException",
          "type_short": "AnnotationException",
          "comment": "if the given text data does not fit the expected format for\n         the given handler implementation."
        }
      ]
    },
    {
      "name": "getSupportedAnnotations",
      "comment": "Returns the annotation string names that this AnnotatedStringHandler supports (e.g., \"symbol\",\n \"address\", etc...).",
      "javadoc": "Returns the annotation string names that this AnnotatedStringHandler supports (e.g., \"symbol\",\n \"address\", etc...).\n@return the annotation string names that this AnnotatedStringHandler supports.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String[]",
        "type_short": "java.lang.String[]",
        "comment": "the annotation string names that this AnnotatedStringHandler supports."
      },
      "throws": []
    },
    {
      "name": "handleMouseClick",
      "comment": "A method that is notified when an annotation is clicked.  Returns true if this annotation\n handles the click; return false if this annotation does not do anything with the click.",
      "javadoc": "A method that is notified when an annotation is clicked.  Returns true if this annotation\n handles the click; return false if this annotation does not do anything with the click.\n@param annotationParts The constituent parts of the annotation\n@param sourceNavigatable The location in the program that was clicked.\n@param serviceProvider A service provider for needed services.\n@return true if this annotation handles the click; return false if this annotation does \n         not do anything with the click.",
      "static": false,
      "params": [
        {
          "name": "annotationParts",
          "type_long": "java.lang.String[]",
          "type_short": "java.lang.String[]",
          "comment": "The constituent parts of the annotation"
        },
        {
          "name": "sourceNavigatable",
          "type_long": "ghidra.app.nav.Navigatable",
          "type_short": "Navigatable",
          "comment": "The location in the program that was clicked."
        },
        {
          "name": "serviceProvider",
          "type_long": "ghidra.framework.plugintool.ServiceProvider",
          "type_short": "ServiceProvider",
          "comment": "A service provider for needed services."
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if this annotation handles the click; return false if this annotation does \n         not do anything with the click."
      },
      "throws": []
    },
    {
      "name": "getDisplayString",
      "comment": "Returns the String that represents the GUI presence of this option",
      "javadoc": "Returns the String that represents the GUI presence of this option\n@return the String to display in GUI components.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the String to display in GUI components."
      },
      "throws": []
    },
    {
      "name": "getPrototypeString",
      "comment": "Returns an example string of how the annotation is used",
      "javadoc": "Returns an example string of how the annotation is used\n@return the example of how this is used.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the example of how this is used."
      },
      "throws": []
    }
  ]
}
