{
  "name": "CommentUtils",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "ANNOTATION_START_PATTERN",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.util.regex.Pattern",
      "type_short": "Pattern",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "fixupAnnoations",
      "comment": "Makes adjustments as necessary to any annotations in the given text.",
      "javadoc": "Makes adjustments as necessary to any annotations in the given text.\n@param rawCommentText the text to be updated\n@param program the program associated with the comment\n@return the updated string",
      "static": true,
      "params": [
        {
          "name": "rawCommentText",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the text to be updated"
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "the program associated with the comment"
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the updated string"
      },
      "throws": []
    },
    {
      "name": "createPrototype",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [],
      "return": {
        "type_long": "docking.widgets.fieldpanel.field.AttributedString",
        "type_short": "AttributedString",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDisplayString",
      "comment": "Returns the display string for the given raw annotation text.  Annotations are \n encoded strings that fit this pattern: .  This method\n will parse the given text, converting any annotations into their display version.",
      "javadoc": "Returns the display string for the given raw annotation text.  Annotations are \n encoded strings that fit this pattern: \u003ccode\u003e{@literal {@name text}}\u003c/code\u003e.  This method\n will parse the given text, converting any annotations into their display version.\n@param rawCommentText text that may include annotations\n@param program the program\n@return the display string",
      "static": true,
      "params": [
        {
          "name": "rawCommentText",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "text that may include annotations"
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "the program"
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the display string"
      },
      "throws": []
    },
    {
      "name": "parseTextForAnnotations",
      "comment": "Parses the given text looking for annotations.",
      "javadoc": "Parses the given text looking for annotations.\n@param text The text to parse.\n@param program the program from which to get information\n@param prototypeString The reference string used to determine the attributes of any \n         newly created AttributedString.\n@param row the row of the newly created FieldElement\n@return A field element containing {@link AttributedString}s",
      "static": true,
      "params": [
        {
          "name": "text",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "The text to parse."
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "the program from which to get information"
        },
        {
          "name": "prototypeString",
          "type_long": "docking.widgets.fieldpanel.field.AttributedString",
          "type_short": "AttributedString",
          "comment": "The reference string used to determine the attributes of any \n         newly created AttributedString."
        },
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "the row of the newly created FieldElement"
        }
      ],
      "return": {
        "type_long": "docking.widgets.fieldpanel.field.FieldElement",
        "type_short": "FieldElement",
        "comment": "A field element containing AttributedStrings"
      },
      "throws": []
    },
    {
      "name": "doParseTextForAnnotations",
      "comment": "Parses the given text looking for annotations.",
      "javadoc": "Parses the given text looking for annotations.\n@param text The text to parse\n@param fixerUpper a function that will take an annotation and optionally create a new \n        one.  This allows clients to use the annotations to change the text as needed\n@param program the program from which to get information\n@param prototype The reference string used to determine the attributes of any \n         newly created AttributedString.\n@param row the row of the newly created FieldElement\n@return A field element containing {@link AttributedString}s",
      "static": true,
      "params": [
        {
          "name": "text",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "The text to parse"
        },
        {
          "name": "fixerUpper",
          "type_long": "java.util.function.Function\u003cghidra.app.util.viewer.field.Annotation,ghidra.app.util.viewer.field.Annotation\u003e",
          "type_short": "Function",
          "comment": "a function that will take an annotation and optionally create a new \n        one.  This allows clients to use the annotations to change the text as needed"
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "the program from which to get information"
        },
        {
          "name": "prototype",
          "type_long": "docking.widgets.fieldpanel.field.AttributedString",
          "type_short": "AttributedString",
          "comment": "The reference string used to determine the attributes of any \n         newly created AttributedString."
        },
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "the row of the newly created FieldElement"
        }
      ],
      "return": {
        "type_long": "docking.widgets.fieldpanel.field.FieldElement",
        "type_short": "FieldElement",
        "comment": "A field element containing AttributedStrings"
      },
      "throws": []
    },
    {
      "name": "doParseTextIntoTextAndAnnotations",
      "comment": "Split the given text into parts where the returned list contains either a String or \n an Annotation",
      "javadoc": "Split the given text into parts where the returned list contains either a String or \n an Annotation\n@param text the text to parse\n@param fixerUpper a function that is given a chance to convert an Annotation into a new\n        one\n@param program the program\n@param prototype the prototype string that contains decoration attributes\n@return a list that contains a mixture String or an Annotation entries",
      "static": true,
      "params": [
        {
          "name": "text",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the text to parse"
        },
        {
          "name": "fixerUpper",
          "type_long": "java.util.function.Function\u003cghidra.app.util.viewer.field.Annotation,ghidra.app.util.viewer.field.Annotation\u003e",
          "type_short": "Function",
          "comment": "a function that is given a chance to convert an Annotation into a new\n        one"
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "the program"
        },
        {
          "name": "prototype",
          "type_long": "docking.widgets.fieldpanel.field.AttributedString",
          "type_short": "AttributedString",
          "comment": "the prototype string that contains decoration attributes"
        }
      ],
      "return": {
        "type_long": "java.util.List\u003cjava.lang.Object\u003e",
        "type_short": "List",
        "comment": "a list that contains a mixture String or an Annotation entries"
      },
      "throws": []
    },
    {
      "name": "getCommentAnnotations",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "comment",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.List\u003cghidra.util.WordLocation\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createAnnotationStartPattern",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [],
      "return": {
        "type_long": "java.util.regex.Pattern",
        "type_short": "Pattern",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "findAnnotationEnd",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "comment",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "start",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    }
  ]
}
