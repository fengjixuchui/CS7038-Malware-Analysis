{
  "name": "AddressBasedIndexMapper",
  "comment": "Implementation of IndexMapper that uses an old and new AddressIndexMap to map indexes \n  when the AddressIndexMap changes.",
  "javadoc": "Implementation of IndexMapper that uses an old and new AddressIndexMap to map indexes \n  when the AddressIndexMap changes.",
  "static": false,
  "implements": [
    "docking.widgets.fieldpanel.listener.IndexMapper"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "from",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.viewer.util.AddressIndexMap",
      "type_short": "AddressIndexMap",
      "constant_value": null
    },
    {
      "name": "to",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.viewer.util.AddressIndexMap",
      "type_short": "AddressIndexMap",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "from",
          "type_long": "ghidra.app.util.viewer.util.AddressIndexMap",
          "type_short": "AddressIndexMap",
          "comment": ""
        },
        {
          "name": "to",
          "type_long": "ghidra.app.util.viewer.util.AddressIndexMap",
          "type_short": "AddressIndexMap",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "map",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "value",
          "type_long": "java.math.BigInteger",
          "type_short": "BigInteger",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.math.BigInteger",
        "type_short": "BigInteger",
        "comment": ""
      },
      "throws": []
    }
  ]
}
