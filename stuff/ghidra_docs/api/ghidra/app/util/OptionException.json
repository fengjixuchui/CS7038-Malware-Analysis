{
  "name": "OptionException",
  "comment": "Exception thrown if there was a problem accessing an Option, or if\n an informational message is to be conveyed.",
  "javadoc": "Exception thrown if there was a problem accessing an Option, or if\n an informational message is to be conveyed.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Exception",
  "fields": [
    {
      "name": "isInfo",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a new OptionException.",
      "javadoc": "Construct a new OptionException.\n@param msg reason for the exception",
      "static": false,
      "params": [
        {
          "name": "msg",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "reason for the exception"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a new OptionException that may be an informational message\n if isValid is true.",
      "javadoc": "Construct a new OptionException that may be an informational message\n if isValid is true.\n@param msg message to display\n@param isInfo true if the msg is in informational message",
      "static": false,
      "params": [
        {
          "name": "msg",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "message to display"
        },
        {
          "name": "isInfo",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true if the msg is in informational message"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isInfoMessage",
      "comment": "Return whether the message associated with this exception is\n informational.",
      "javadoc": "Return whether the message associated with this exception is\n informational.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    }
  ]
}
