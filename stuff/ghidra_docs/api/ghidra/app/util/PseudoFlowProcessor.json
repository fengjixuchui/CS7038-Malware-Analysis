{
  "name": "PseudoFlowProcessor",
  "comment": "Defines methods for flow as if the code were actually being disassembled.",
  "javadoc": "Defines methods for flow as if the code were actually being disassembled.",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "process",
      "comment": "Process this instruction; return false if instr terminates.",
      "javadoc": "Process this instruction; return false if instr terminates.\n@param instr instruction to check\n@return false when the processing should stop",
      "static": false,
      "params": [
        {
          "name": "instr",
          "type_long": "ghidra.app.util.PseudoInstruction",
          "type_short": "PseudoInstruction",
          "comment": "instruction to check"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "false when the processing should stop"
      },
      "throws": []
    },
    {
      "name": "followFlows",
      "comment": "Return true if the flows should be followed from this instruction",
      "javadoc": "Return true if the flows should be followed from this instruction\n@param instr instruction to test\n@return false if flows should not be followed",
      "static": false,
      "params": [
        {
          "name": "instr",
          "type_long": "ghidra.app.util.PseudoInstruction",
          "type_short": "PseudoInstruction",
          "comment": "instruction to test"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "false if flows should not be followed"
      },
      "throws": []
    }
  ]
}
