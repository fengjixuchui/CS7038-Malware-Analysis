{
  "name": "CppExporter",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "extends": "ghidra.app.util.exporter.Exporter",
  "fields": [
    {
      "name": "CREATE_C_FILE",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Create C File (.c)\""
    },
    {
      "name": "CREATE_HEADER_FILE",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Create Header File (.h)\""
    },
    {
      "name": "USE_CPP_STYLE_COMMENTS",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Use C++ Style Comments (//)\""
    },
    {
      "name": "EMIT_TYPE_DEFINITONS",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Emit Data-type Definitions\""
    },
    {
      "name": "FUNCTION_TAG_FILTERS",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Function Tags to Filter\""
    },
    {
      "name": "FUNCTION_TAG_EXCLUDE",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Function Tags Excluded\""
    },
    {
      "name": "EOL",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "isCreateHeaderFile",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "isCreateCFile",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "isUseCppStyleComments",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "emitDataTypeDefinitions",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "tagOptions",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "functionTagSet",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.Set\u003cghidra.program.model.listing.FunctionTag\u003e",
      "type_short": "Set",
      "constant_value": null
    },
    {
      "name": "excludeMatchingTags",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "options",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.decompiler.DecompileOptions",
      "type_short": "DecompileOptions",
      "constant_value": null
    },
    {
      "name": "userSuppliedOptions",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "options",
          "type_long": "ghidra.app.decompiler.DecompileOptions",
          "type_short": "DecompileOptions",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "createHeader",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        },
        {
          "name": "createFile",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        },
        {
          "name": "emitTypes",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        },
        {
          "name": "excludeTags",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        },
        {
          "name": "tags",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "export",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "file",
          "type_long": "java.io.File",
          "type_short": "File",
          "comment": ""
        },
        {
          "name": "domainObj",
          "type_long": "ghidra.framework.model.DomainObject",
          "type_short": "DomainObject",
          "comment": ""
        },
        {
          "name": "addrSet",
          "type_long": "ghidra.program.model.address.AddressSetView",
          "type_short": "AddressSetView",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        },
        {
          "type_long": "ghidra.app.util.exporter.ExporterException",
          "type_short": "ExporterException",
          "comment": ""
        }
      ]
    },
    {
      "name": "decompileAndExport",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "addrSet",
          "type_long": "ghidra.program.model.address.AddressSetView",
          "type_short": "AddressSetView",
          "comment": ""
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "headerWriter",
          "type_long": "java.io.PrintWriter",
          "type_short": "PrintWriter",
          "comment": ""
        },
        {
          "name": "cFileWriter",
          "type_long": "java.io.PrintWriter",
          "type_short": "PrintWriter",
          "comment": ""
        },
        {
          "name": "parallelDecompiler",
          "type_long": "ghidra.app.decompiler.parallel.ChunkingParallelDecompiler\u003cghidra.app.util.exporter.CppExporter.CPPResult\u003e",
          "type_short": "ChunkingParallelDecompiler",
          "comment": ""
        },
        {
          "name": "chunkingMonitor",
          "type_long": "ghidra.app.util.exporter.CppExporter.ChunkingTaskMonitor",
          "type_short": "ChunkingTaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.lang.InterruptedException",
          "type_short": "InterruptedException",
          "comment": ""
        },
        {
          "type_long": "java.lang.Exception",
          "type_short": "Exception",
          "comment": ""
        },
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": ""
        }
      ]
    },
    {
      "name": "excludeFunction",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "currentFunction",
          "type_long": "ghidra.program.model.listing.Function",
          "type_short": "Function",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "writeResults",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "results",
          "type_long": "java.util.List\u003cghidra.app.util.exporter.CppExporter.CPPResult\u003e",
          "type_short": "List",
          "comment": ""
        },
        {
          "name": "headerWriter",
          "type_long": "java.io.PrintWriter",
          "type_short": "PrintWriter",
          "comment": ""
        },
        {
          "name": "cFileWriter",
          "type_long": "java.io.PrintWriter",
          "type_short": "PrintWriter",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": ""
        }
      ]
    },
    {
      "name": "configureOptions",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "configureFunctionTags",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "writeProgramDataTypes",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "header",
          "type_long": "java.io.File",
          "type_short": "File",
          "comment": ""
        },
        {
          "name": "headerWriter",
          "type_long": "java.io.PrintWriter",
          "type_short": "PrintWriter",
          "comment": ""
        },
        {
          "name": "cFileWriter",
          "type_long": "java.io.PrintWriter",
          "type_short": "PrintWriter",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        },
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getHeaderFile",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "file",
          "type_long": "java.io.File",
          "type_short": "File",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.io.File",
        "type_short": "File",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getOptions",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "domainObjectService",
          "type_long": "ghidra.app.util.DomainObjectService",
          "type_short": "DomainObjectService",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.List\u003cghidra.app.util.Option\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setOptions",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "options",
          "type_long": "java.util.List\u003cghidra.app.util.Option\u003e",
          "type_short": "List",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.app.util.OptionException",
          "type_short": "OptionException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getBuiltInDeclaration",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "typeName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "ctypeName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getBuiltInDeclaration",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "typeName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "typeLen",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "signed",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        },
        {
          "name": "dataOrganization",
          "type_long": "ghidra.program.model.data.DataOrganization",
          "type_short": "DataOrganization",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFakeCTypeDefinitions",
      "comment": "Generate suitable C-style definition statements (#define) for any fake data-type names\n which may be produced by the decompiler (e.g., unkint, unkuint, etc.).",
      "javadoc": "Generate suitable C-style definition statements (#define) for any fake data-type names\n which may be produced by the decompiler (e.g., unkint, unkuint, etc.).\n@param dataOrganization is the data organization to result the size of core types.\n@return multi-line string containing C-style declarations of fake decompiler types.",
      "static": true,
      "params": [
        {
          "name": "dataOrganization",
          "type_long": "ghidra.program.model.data.DataOrganization",
          "type_short": "DataOrganization",
          "comment": "is the data organization to result the size of core types."
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "multi-line string containing C-style declarations of fake decompiler types."
      },
      "throws": []
    }
  ]
}
