{
  "name": "Navigatable",
  "comment": "Interface for ComponentProviders to implement if they support basic navigation and selection\n capabilities.  Implementing this interface will provide the provider with navigation history\n and actions that require navigation or selection. (Search Text, Search Memory, Select bytes,\n Select instructions, etc.)",
  "javadoc": "Interface for ComponentProviders to implement if they support basic navigation and selection\n capabilities.  Implementing this interface will provide the provider with navigation history\n and actions that require navigation or selection. (Search Text, Search Memory, Select bytes,\n Select instructions, etc.)",
  "static": false,
  "implements": [],
  "fields": [
    {
      "name": "DEFAULT_NAVIGATABLE_ID",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "long",
      "type_short": "long",
      "constant_value": "-1"
    }
  ],
  "methods": [
    {
      "name": "getInstanceID",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "goTo",
      "comment": "Commands this navigatable to goto (display) the given program and location",
      "javadoc": "Commands this navigatable to goto (display) the given program and location\n@param program the program\n@param location the location in that program to display\n@return true if the goto was successful",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "the program"
        },
        {
          "name": "location",
          "type_long": "ghidra.program.util.ProgramLocation",
          "type_short": "ProgramLocation",
          "comment": "the location in that program to display"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the goto was successful"
      },
      "throws": []
    },
    {
      "name": "getLocation",
      "comment": "Returns the current location of this Navigatable",
      "javadoc": "Returns the current location of this Navigatable\n@return the current location of this Navigatable",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.util.ProgramLocation",
        "type_short": "ProgramLocation",
        "comment": "the current location of this Navigatable"
      },
      "throws": []
    },
    {
      "name": "getProgram",
      "comment": "Returns the current Program of this Navigatable",
      "javadoc": "Returns the current Program of this Navigatable\n@return the current Program of this Navigatable",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.listing.Program",
        "type_short": "Program",
        "comment": "the current Program of this Navigatable"
      },
      "throws": []
    },
    {
      "name": "getMemento",
      "comment": "Returns the view state for this navigatable",
      "javadoc": "Returns the view state for this navigatable\n@return the view state for this navigatable",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.nav.LocationMemento",
        "type_short": "LocationMemento",
        "comment": "the view state for this navigatable"
      },
      "throws": []
    },
    {
      "name": "setMemento",
      "comment": "Sets the view state for this navigatable.  This is used later to restore the view state.",
      "javadoc": "Sets the view state for this navigatable.  This is used later to restore the view state.\n@param memento the state of this navigatable",
      "static": false,
      "params": [
        {
          "name": "memento",
          "type_long": "ghidra.app.nav.LocationMemento",
          "type_short": "LocationMemento",
          "comment": "the state of this navigatable"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getNavigatableIcon",
      "comment": "Returns an icon that represents this Navigatable",
      "javadoc": "Returns an icon that represents this Navigatable\n@return the icon",
      "static": false,
      "params": [],
      "return": {
        "type_long": "javax.swing.Icon",
        "type_short": "Icon",
        "comment": "the icon"
      },
      "throws": []
    },
    {
      "name": "isConnected",
      "comment": "Returns true if this Navigatable is \"connected\".  Navigatables are connected if they\n produce and consume location and selection events.",
      "javadoc": "Returns true if this Navigatable is \"connected\".  Navigatables are connected if they\n produce and consume location and selection events.\n@return true if this Navigatable is \"connected\"",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if this Navigatable is \"connected\""
      },
      "throws": []
    },
    {
      "name": "supportsMarkers",
      "comment": "Currently only the \u0027connected\u0027 windows support markers",
      "javadoc": "Currently only the \u0027connected\u0027 windows support markers\n@return true if this navigatable supports markers",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if this navigatable supports markers"
      },
      "throws": []
    },
    {
      "name": "requestFocus",
      "comment": "Tells this provider to request focus.",
      "javadoc": "Tells this provider to request focus.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isVisible",
      "comment": "Returns true if this provider is visible",
      "javadoc": "Returns true if this provider is visible\n@return true if visible",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if visible"
      },
      "throws": []
    },
    {
      "name": "setSelection",
      "comment": "Tells this Navigatable to set its selection to the given selection",
      "javadoc": "Tells this Navigatable to set its selection to the given selection\n@param selection the selection to set.",
      "static": false,
      "params": [
        {
          "name": "selection",
          "type_long": "ghidra.program.util.ProgramSelection",
          "type_short": "ProgramSelection",
          "comment": "the selection to set."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setHighlight",
      "comment": "Tells this Navigatable to set its highlight to the given highlight",
      "javadoc": "Tells this Navigatable to set its highlight to the given highlight\n@param highlight the highlight to set.",
      "static": false,
      "params": [
        {
          "name": "highlight",
          "type_long": "ghidra.program.util.ProgramSelection",
          "type_short": "ProgramSelection",
          "comment": "the highlight to set."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSelection",
      "comment": "Returns the current selection of this Navigatable",
      "javadoc": "Returns the current selection of this Navigatable\n@return the current selection of this Navigatable",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.util.ProgramSelection",
        "type_short": "ProgramSelection",
        "comment": "the current selection of this Navigatable"
      },
      "throws": []
    },
    {
      "name": "getHighlight",
      "comment": "Returns the current highlight of this Navigatable",
      "javadoc": "Returns the current highlight of this Navigatable\n@return the current highlight of this Navigatable",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.util.ProgramSelection",
        "type_short": "ProgramSelection",
        "comment": "the current highlight of this Navigatable"
      },
      "throws": []
    },
    {
      "name": "getTextSelection",
      "comment": "Returns the current text selection or null",
      "javadoc": "Returns the current text selection or null\n@return the text selection",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the text selection"
      },
      "throws": []
    },
    {
      "name": "addNavigatableListener",
      "comment": "Adds a listener to be notified if this Navigatable is terminated",
      "javadoc": "Adds a listener to be notified if this Navigatable is terminated\n@param listener the listener to be notified when this Navigatable is closed",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "ghidra.app.nav.NavigatableRemovalListener",
          "type_short": "NavigatableRemovalListener",
          "comment": "the listener to be notified when this Navigatable is closed"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeNavigatableListener",
      "comment": "Removes a listener to be notified if this Navigatable is terminated.",
      "javadoc": "Removes a listener to be notified if this Navigatable is terminated.\n@param listener the listener that no longer should be notified when this Navigatable is \n        closed.",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "ghidra.app.nav.NavigatableRemovalListener",
          "type_short": "NavigatableRemovalListener",
          "comment": "the listener that no longer should be notified when this Navigatable is \n        closed."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isDisposed",
      "comment": "Returns true if this navigatable is no longer valid, false if it is still good",
      "javadoc": "Returns true if this navigatable is no longer valid, false if it is still good\n@return true if this navigatable is no longer valid, false if it is still good",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if this navigatable is no longer valid, false if it is still good"
      },
      "throws": []
    },
    {
      "name": "supportsHighlight",
      "comment": "Returns true if this navigatable supports highlighting",
      "javadoc": "Returns true if this navigatable supports highlighting\n@return true if this navigatable supports highlighting",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if this navigatable supports highlighting"
      },
      "throws": []
    },
    {
      "name": "setHighlightProvider",
      "comment": "Set the highlight provider for the given program",
      "javadoc": "Set the highlight provider for the given program\n@param highlightProvider the provider\n@param program the program",
      "static": false,
      "params": [
        {
          "name": "highlightProvider",
          "type_long": "ghidra.app.util.HighlightProvider",
          "type_short": "HighlightProvider",
          "comment": "the provider"
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "the program"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeHighlightProvider",
      "comment": "Removes the given highlight provider for the given program",
      "javadoc": "Removes the given highlight provider for the given program\n@param highlightProvider the provider\n@param program the program",
      "static": false,
      "params": [
        {
          "name": "highlightProvider",
          "type_long": "ghidra.app.util.HighlightProvider",
          "type_short": "HighlightProvider",
          "comment": "the provider"
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "the program"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
