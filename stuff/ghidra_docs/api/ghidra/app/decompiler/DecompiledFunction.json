{
  "name": "DecompiledFunction",
  "comment": "A class to hold pieces of a decompiled function.",
  "javadoc": "A class to hold pieces of a decompiled function.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "signature",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "c",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new decompiled function.",
      "javadoc": "Constructs a new decompiled function.\n@param signature the function signature or prototype (eg, \"int foo(double d)\")\n@param c the complete C code of the function.",
      "static": false,
      "params": [
        {
          "name": "signature",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the function signature or prototype (eg, \"int foo(double d)\")"
        },
        {
          "name": "c",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the complete C code of the function."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSignature",
      "comment": "Returns the function signature or prototype (eg, \"int foo(double d)\").",
      "javadoc": "Returns the function signature or prototype (eg, \"int foo(double d)\").\n@return the function signature or prototype (eg, \"int foo(double d)\")",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the function signature or prototype (eg, \"int foo(double d)\")"
      },
      "throws": []
    },
    {
      "name": "getC",
      "comment": "Returns the complete C code of the function.",
      "javadoc": "Returns the complete C code of the function.\n@return the complete C code of the function",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the complete C code of the function"
      },
      "throws": []
    }
  ]
}
