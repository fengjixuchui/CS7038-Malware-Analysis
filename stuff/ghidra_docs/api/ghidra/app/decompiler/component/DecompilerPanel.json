{
  "name": "DecompilerPanel",
  "comment": "Class to handle the display of a decompiled function",
  "javadoc": "Class to handle the display of a decompiled function",
  "static": false,
  "implements": [
    "docking.widgets.fieldpanel.listener.FieldMouseListener",
    "docking.widgets.fieldpanel.listener.FieldLocationListener",
    "docking.widgets.fieldpanel.listener.FieldSelectionListener",
    "ghidra.app.decompiler.component.ClangHighlightListener"
  ],
  "extends": "javax.swing.JPanel",
  "fields": [
    {
      "name": "NON_FUNCTION_BACKGROUND_COLOR_DEF",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.awt.Color",
      "type_short": "Color",
      "constant_value": null
    },
    {
      "name": "SPECIAL_COLOR_DEF",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.awt.Color",
      "type_short": "Color",
      "constant_value": null
    },
    {
      "name": "controller",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.decompiler.component.DecompilerController",
      "type_short": "DecompilerController",
      "constant_value": null
    },
    {
      "name": "options",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.decompiler.DecompileOptions",
      "type_short": "DecompileOptions",
      "constant_value": null
    },
    {
      "name": "fieldPanel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.decompiler.component.DecompilerPanel.DecompilerFieldPanel",
      "type_short": "DecompilerFieldPanel",
      "constant_value": null
    },
    {
      "name": "layoutMgr",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.decompiler.component.ClangLayoutController",
      "type_short": "ClangLayoutController",
      "constant_value": null
    },
    {
      "name": "hlFactory",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.widgets.fieldpanel.support.HighlightFactory",
      "type_short": "HighlightFactory",
      "constant_value": null
    },
    {
      "name": "highlightController",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.decompiler.component.ClangHighlightController",
      "type_short": "ClangHighlightController",
      "constant_value": null
    },
    {
      "name": "pendingHighlightUpdate",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.decompiler.component.DecompilerPanel.PendingHighlightUpdate",
      "type_short": "PendingHighlightUpdate",
      "constant_value": null
    },
    {
      "name": "highlighCursorUpdater",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.task.SwingUpdateManager",
      "type_short": "SwingUpdateManager",
      "constant_value": null
    },
    {
      "name": "middleMouseHighlightButton",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "middleMouseHighlightColor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.awt.Color",
      "type_short": "Color",
      "constant_value": null
    },
    {
      "name": "currentVariableHighlightColor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.awt.Color",
      "type_short": "Color",
      "constant_value": null
    },
    {
      "name": "searchHighlightColor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.awt.Color",
      "type_short": "Color",
      "constant_value": null
    },
    {
      "name": "currentSearchLocation",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.widgets.SearchLocation",
      "type_short": "SearchLocation",
      "constant_value": null
    },
    {
      "name": "decompileData",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.decompiler.component.DecompileData",
      "type_short": "DecompileData",
      "constant_value": null
    },
    {
      "name": "clipboard",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.plugin.core.decompile.DecompilerClipboardProvider",
      "type_short": "DecompilerClipboardProvider",
      "constant_value": null
    },
    {
      "name": "originalBackgroundColor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.awt.Color",
      "type_short": "Color",
      "constant_value": null
    },
    {
      "name": "useNonFunctionColor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "navitationEnabled",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "decompilerHoverProvider",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.decompiler.component.DecompilerHoverProvider",
      "type_short": "DecompilerHoverProvider",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "controller",
          "type_long": "ghidra.app.decompiler.component.DecompilerController",
          "type_short": "DecompilerController",
          "comment": ""
        },
        {
          "name": "options",
          "type_long": "ghidra.app.decompiler.DecompileOptions",
          "type_short": "DecompileOptions",
          "comment": ""
        },
        {
          "name": "clipboard",
          "type_long": "ghidra.app.plugin.core.decompile.DecompilerClipboardProvider",
          "type_short": "DecompilerClipboardProvider",
          "comment": ""
        },
        {
          "name": "taskMonitorComponent",
          "type_long": "javax.swing.JComponent",
          "type_short": "JComponent",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLines",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cghidra.app.decompiler.ClangLine\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFields",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cdocking.widgets.fieldpanel.field.Field\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFieldPanel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.widgets.fieldpanel.FieldPanel",
        "type_short": "FieldPanel",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "applySecondaryHighlights",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "highlightsByName",
          "type_long": "java.util.Map\u003cjava.lang.String,java.awt.Color\u003e",
          "type_short": "Map",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSecondaryHighlightColors",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.decompiler.component.TokenHighlightColors",
        "type_short": "TokenHighlightColors",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSecondaryHighlightedTokens",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.decompiler.component.TokenHighlights",
        "type_short": "TokenHighlights",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeSecondaryHighlights",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeSecondaryHighlight",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "token",
          "type_long": "ghidra.app.decompiler.ClangToken",
          "type_short": "ClangToken",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeSecondaryHighlight",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "tokenText",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addSecondaryHighlight",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "token",
          "type_long": "ghidra.app.decompiler.ClangToken",
          "type_short": "ClangToken",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addSecondaryHighlight",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "tokenText",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addSecondaryHighlight",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "token",
          "type_long": "ghidra.app.decompiler.ClangToken",
          "type_short": "ClangToken",
          "comment": ""
        },
        {
          "name": "color",
          "type_long": "java.awt.Color",
          "type_short": "Color",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addSecondaryHighlight",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "tokenText",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "color",
          "type_long": "java.awt.Color",
          "type_short": "Color",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "togglePrimaryHighlight",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "location",
          "type_long": "docking.widgets.fieldpanel.support.FieldLocation",
          "type_short": "FieldLocation",
          "comment": ""
        },
        {
          "name": "field",
          "type_long": "docking.widgets.fieldpanel.field.Field",
          "type_short": "Field",
          "comment": ""
        },
        {
          "name": "highlightColor",
          "type_long": "java.awt.Color",
          "type_short": "Color",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setBackground",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "bg",
          "type_long": "java.awt.Color",
          "type_short": "Color",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setDecompileData",
      "comment": "This function sets the current window display based on our display state",
      "javadoc": "This function sets the current window display based on our display state\n@param decompileData the new data",
      "static": false,
      "params": [
        {
          "name": "decompileData",
          "type_long": "ghidra.app.decompiler.component.DecompileData",
          "type_short": "DecompileData",
          "comment": "the new data"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "reapplySecondaryHighlights",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setLocation",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "oldData",
          "type_long": "ghidra.app.decompiler.component.DecompileData",
          "type_short": "DecompileData",
          "comment": ""
        },
        {
          "name": "newData",
          "type_long": "ghidra.app.decompiler.component.DecompileData",
          "type_short": "DecompileData",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLayoutModel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.widgets.fieldpanel.LayoutModel",
        "type_short": "LayoutModel",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "containsLocation",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "location",
          "type_long": "ghidra.program.util.ProgramLocation",
          "type_short": "ProgramLocation",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setLocation",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "location",
          "type_long": "ghidra.program.util.ProgramLocation",
          "type_short": "ProgramLocation",
          "comment": ""
        },
        {
          "name": "viewerPosition",
          "type_long": "docking.widgets.fieldpanel.support.ViewerPosition",
          "type_short": "ViewerPosition",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "goToFunctionSignature",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "address",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFunctionSignatureLine",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "functionLines",
          "type_long": "java.util.List\u003cghidra.app.decompiler.ClangLine\u003e",
          "type_short": "List",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.app.decompiler.ClangLine",
        "type_short": "ClangLine",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "goToBeginningOfLine",
      "comment": "Put cursor on first token in the list",
      "javadoc": "Put cursor on first token in the list\n@param tokens the tokens to search for",
      "static": false,
      "params": [
        {
          "name": "tokens",
          "type_long": "java.util.List\u003cghidra.app.decompiler.ClangToken\u003e",
          "type_short": "List",
          "comment": "the tokens to search for"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "goToToken",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "token",
          "type_long": "ghidra.app.decompiler.ClangToken",
          "type_short": "ClangToken",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getOffscreenDistance",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "line",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "translate",
      "comment": "Translate Ghidra address to decompiler address. Functions within an overlay space are \n decompiled in their physical space, therefore decompiler results refer to the \n functions underlying .physical space",
      "javadoc": "Translate Ghidra address to decompiler address. Functions within an overlay space are \n decompiled in their physical space, therefore decompiler results refer to the \n functions underlying .physical space\n@param addr the Ghidra address\n@return the decompiler address",
      "static": false,
      "params": [
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "the Ghidra address"
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": "the decompiler address"
      },
      "throws": []
    },
    {
      "name": "translateSet",
      "comment": "Translate Ghidra address set to decompiler address set. Functions within an overlay \n space are decompiled in their physical space, therefore decompiler results\n refer to the functions underlying .physical space",
      "javadoc": "Translate Ghidra address set to decompiler address set. Functions within an overlay \n space are decompiled in their physical space, therefore decompiler results\n refer to the functions underlying .physical space\n@param set the Ghidra addresses\n@return the decompiler addresses",
      "static": false,
      "params": [
        {
          "name": "set",
          "type_long": "ghidra.program.model.address.AddressSetView",
          "type_short": "AddressSetView",
          "comment": "the Ghidra addresses"
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.AddressSetView",
        "type_short": "AddressSetView",
        "comment": "the decompiler addresses"
      },
      "throws": []
    },
    {
      "name": "setSelection",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "selection",
          "type_long": "ghidra.program.util.ProgramSelection",
          "type_short": "ProgramSelection",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setDecompilerHoverProvider",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "provider",
          "type_long": "ghidra.app.decompiler.component.DecompilerHoverProvider",
          "type_short": "DecompilerHoverProvider",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "dispose",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFontMetrics",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "decompileOptions",
          "type_long": "ghidra.app.decompiler.DecompileOptions",
          "type_short": "DecompileOptions",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.awt.FontMetrics",
        "type_short": "FontMetrics",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setMouseNavigationEnabled",
      "comment": "Passing false signals to disallow navigating to new functions from within the panel by \n using the mouse.",
      "javadoc": "Passing false signals to disallow navigating to new functions from within the panel by \n using the mouse.\n@param enabled false disabled mouse function navigation",
      "static": false,
      "params": [
        {
          "name": "enabled",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "false disabled mouse function navigation"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "buttonPressed",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "location",
          "type_long": "docking.widgets.fieldpanel.support.FieldLocation",
          "type_short": "FieldLocation",
          "comment": ""
        },
        {
          "name": "field",
          "type_long": "docking.widgets.fieldpanel.field.Field",
          "type_short": "Field",
          "comment": ""
        },
        {
          "name": "ev",
          "type_long": "java.awt.event.MouseEvent",
          "type_short": "MouseEvent",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "tryToGoto",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "location",
          "type_long": "docking.widgets.fieldpanel.support.FieldLocation",
          "type_short": "FieldLocation",
          "comment": ""
        },
        {
          "name": "field",
          "type_long": "docking.widgets.fieldpanel.field.Field",
          "type_short": "Field",
          "comment": ""
        },
        {
          "name": "event",
          "type_long": "java.awt.event.MouseEvent",
          "type_short": "MouseEvent",
          "comment": ""
        },
        {
          "name": "newWindow",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "tryGoToComment",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "location",
          "type_long": "docking.widgets.fieldpanel.support.FieldLocation",
          "type_short": "FieldLocation",
          "comment": ""
        },
        {
          "name": "event",
          "type_long": "java.awt.event.MouseEvent",
          "type_short": "MouseEvent",
          "comment": ""
        },
        {
          "name": "textField",
          "type_long": "ghidra.app.decompiler.component.ClangTextField",
          "type_short": "ClangTextField",
          "comment": ""
        },
        {
          "name": "token",
          "type_long": "ghidra.app.decompiler.ClangToken",
          "type_short": "ClangToken",
          "comment": ""
        },
        {
          "name": "newWindow",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "tryGoToFunction",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "functionToken",
          "type_long": "ghidra.app.decompiler.ClangFuncNameToken",
          "type_short": "ClangFuncNameToken",
          "comment": ""
        },
        {
          "name": "newWindow",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "tryGoToLabel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "token",
          "type_long": "ghidra.app.decompiler.ClangLabelToken",
          "type_short": "ClangLabelToken",
          "comment": ""
        },
        {
          "name": "newWindow",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "tryGoToSyntaxToken",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "token",
          "type_long": "ghidra.app.decompiler.ClangSyntaxToken",
          "type_short": "ClangSyntaxToken",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "tryGoToVarnode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "token",
          "type_long": "ghidra.app.decompiler.ClangVariableToken",
          "type_short": "ClangVariableToken",
          "comment": ""
        },
        {
          "name": "newWindow",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "tryGoToScalar",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "text",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "newWindow",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getProgram",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.listing.Program",
        "type_short": "Program",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getCurrentLocation",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.util.ProgramLocation",
        "type_short": "ProgramLocation",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "fieldLocationChanged",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "location",
          "type_long": "docking.widgets.fieldpanel.support.FieldLocation",
          "type_short": "FieldLocation",
          "comment": ""
        },
        {
          "name": "field",
          "type_long": "docking.widgets.fieldpanel.field.Field",
          "type_short": "Field",
          "comment": ""
        },
        {
          "name": "trigger",
          "type_long": "docking.widgets.EventTrigger",
          "type_short": "EventTrigger",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "selectionChanged",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "selection",
          "type_long": "docking.widgets.fieldpanel.support.FieldSelection",
          "type_short": "FieldSelection",
          "comment": ""
        },
        {
          "name": "trigger",
          "type_long": "docking.widgets.EventTrigger",
          "type_short": "EventTrigger",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getProgramLocation",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "field",
          "type_long": "docking.widgets.fieldpanel.field.Field",
          "type_short": "Field",
          "comment": ""
        },
        {
          "name": "location",
          "type_long": "docking.widgets.fieldpanel.support.FieldLocation",
          "type_short": "FieldLocation",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.util.ProgramLocation",
        "type_short": "ProgramLocation",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "searchText",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "text",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "startLocation",
          "type_long": "docking.widgets.fieldpanel.support.FieldLocation",
          "type_short": "FieldLocation",
          "comment": ""
        },
        {
          "name": "forwardDirection",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.widgets.SearchLocation",
        "type_short": "SearchLocation",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "searchTextRegex",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "text",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "startLocation",
          "type_long": "docking.widgets.fieldpanel.support.FieldLocation",
          "type_short": "FieldLocation",
          "comment": ""
        },
        {
          "name": "forwardDirection",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.widgets.SearchLocation",
        "type_short": "SearchLocation",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setSearchResults",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "searchLocation",
          "type_long": "docking.widgets.SearchLocation",
          "type_short": "SearchLocation",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getCurrentVariableHighlightColor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Color",
        "type_short": "Color",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getMiddleMouseHighlightColor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Color",
        "type_short": "Color",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSpecialHighlightColor",
      "comment": "The color used in a primary highlight to mark the token that was clicked.  This is used\n in \u0027slice\u0027 actions to mark the source of the slice.",
      "javadoc": "The color used in a primary highlight to mark the token that was clicked.  This is used\n in \u0027slice\u0027 actions to mark the source of the slice.\n@return the color",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Color",
        "type_short": "Color",
        "comment": "the color"
      },
      "throws": []
    },
    {
      "name": "getHighlightedText",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getCursorPosition",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.widgets.fieldpanel.support.FieldLocation",
        "type_short": "FieldLocation",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setCursorPosition",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "fieldLocation",
          "type_long": "docking.widgets.fieldpanel.support.FieldLocation",
          "type_short": "FieldLocation",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSelectedToken",
      "comment": "Returns a single selected token; null if there is no selection or multiple tokens selected.",
      "javadoc": "Returns a single selected token; null if there is no selection or multiple tokens selected.\n@return a single selected token; null if there is no selection or multiple tokens selected.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.decompiler.ClangToken",
        "type_short": "ClangToken",
        "comment": "a single selected token; null if there is no selection or multiple tokens selected."
      },
      "throws": []
    },
    {
      "name": "getTextSelection",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getTokenAtCursor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.decompiler.ClangToken",
        "type_short": "ClangToken",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getOptions",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.decompiler.DecompileOptions",
        "type_short": "DecompileOptions",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addHoverService",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "hoverService",
          "type_long": "ghidra.app.decompiler.component.hover.DecompilerHoverService",
          "type_short": "DecompilerHoverService",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeHoverService",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "hoverService",
          "type_long": "ghidra.app.decompiler.component.hover.DecompilerHoverService",
          "type_short": "DecompilerHoverService",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setHoverMode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "enabled",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isHoverShowing",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "clearPrimaryHighlights",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addVarnodeHighlights",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "varnodes",
          "type_long": "java.util.Set\u003cghidra.program.model.pcode.Varnode\u003e",
          "type_short": "Set",
          "comment": ""
        },
        {
          "name": "colorProvider",
          "type_long": "ghidra.app.plugin.core.decompile.actions.TokenHighlightColorProvider",
          "type_short": "TokenHighlightColorProvider",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addPcodeOpHighlights",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "ops",
          "type_long": "java.util.Set\u003cghidra.program.model.pcode.PcodeOp\u003e",
          "type_short": "Set",
          "comment": ""
        },
        {
          "name": "hlColor",
          "type_long": "java.awt.Color",
          "type_short": "Color",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "findTokensByName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.List\u003cghidra.app.decompiler.ClangToken\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "doFindTokensByName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "tokens",
          "type_long": "java.util.List\u003cghidra.app.decompiler.ClangToken\u003e",
          "type_short": "List",
          "comment": ""
        },
        {
          "name": "group",
          "type_long": "ghidra.app.decompiler.ClangTokenGroup",
          "type_short": "ClangTokenGroup",
          "comment": ""
        },
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getViewerPosition",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.widgets.fieldpanel.support.ViewerPosition",
        "type_short": "ViewerPosition",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setViewerPosition",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "viewerPosition",
          "type_long": "docking.widgets.fieldpanel.support.ViewerPosition",
          "type_short": "ViewerPosition",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "requestFocus",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "selectAll",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "optionsChanged",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "decompilerOptions",
          "type_long": "ghidra.app.decompiler.DecompileOptions",
          "type_short": "DecompileOptions",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setHighlightController",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "highlightController",
          "type_long": "ghidra.app.decompiler.component.ClangHighlightController",
          "type_short": "ClangHighlightController",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "tokenHighlightsChanged",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "tokenRenamed",
      "comment": "This is function is used to alert the panel that a token was renamed.\n If the token that is being renamed had a secondary highlight, we must re-apply the highlight\n to the new token.",
      "javadoc": "This is function is used to alert the panel that a token was renamed.\n If the token that is being renamed had a secondary highlight, we must re-apply the highlight\n to the new token.\n@param token the token being renamed\n@param newName the new name of the token",
      "static": false,
      "params": [
        {
          "name": "token",
          "type_long": "ghidra.app.decompiler.ClangToken",
          "type_short": "ClangToken",
          "comment": "the token being renamed"
        },
        {
          "name": "newName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the new name of the token"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getHighlightController",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.decompiler.component.ClangHighlightController",
        "type_short": "ClangHighlightController",
        "comment": ""
      },
      "throws": []
    }
  ]
}
