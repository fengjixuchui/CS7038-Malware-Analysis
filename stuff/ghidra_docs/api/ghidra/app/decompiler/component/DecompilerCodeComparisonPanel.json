{
  "name": "DecompilerCodeComparisonPanel",
  "comment": "Panel that displays two decompilers for comparison",
  "javadoc": "Panel that displays two decompilers for comparison",
  "static": false,
  "implements": [],
  "extends": "ghidra.app.util.viewer.util.CodeComparisonPanel",
  "fields": [
    {
      "name": "NO_FUNCTION_TITLE",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"No Function\""
    },
    {
      "name": "OPTIONS_TITLE",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Decompiler\""
    },
    {
      "name": "splitPane",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.JSplitPane",
      "type_short": "JSplitPane",
      "constant_value": null
    },
    {
      "name": "cPanels",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.decompiler.component.CDisplayPanel[]",
      "type_short": "ghidra.app.decompiler.component.CDisplayPanel[]",
      "constant_value": null
    },
    {
      "name": "dualDecompilerCoordinator",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.decompiler.component.DualDecompilerFieldPanelCoordinator",
      "type_short": "DualDecompilerFieldPanelCoordinator",
      "constant_value": null
    },
    {
      "name": "leftDecompileData",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.decompiler.component.DecompileData",
      "type_short": "DecompileData",
      "constant_value": null
    },
    {
      "name": "rightDecompileData",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.decompiler.component.DecompileData",
      "type_short": "DecompileData",
      "constant_value": null
    },
    {
      "name": "isMatchingConstantsExactly",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "leftDecompileOptions",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.decompiler.DecompileOptions",
      "type_short": "DecompileOptions",
      "constant_value": null
    },
    {
      "name": "rightDecompileOptions",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.decompiler.DecompileOptions",
      "type_short": "DecompileOptions",
      "constant_value": null
    },
    {
      "name": "applyFunctionSignatureAction",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.decompiler.component.ApplyFunctionSignatureAction",
      "type_short": "ApplyFunctionSignatureAction",
      "constant_value": null
    },
    {
      "name": "highlightControllers",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.decompiler.component.ClangHighlightController[]",
      "type_short": "ghidra.app.decompiler.component.ClangHighlightController[]",
      "constant_value": null
    },
    {
      "name": "dualDecompileResultsListenerList",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.ArrayList\u003cghidra.app.decompiler.component.DualDecompileResultsListener\u003e",
      "type_short": "ArrayList",
      "constant_value": null
    },
    {
      "name": "leftTitle",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "rightTitle",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "leftDecompilerLocationListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.viewer.listingpanel.ProgramLocationListener",
      "type_short": "ProgramLocationListener",
      "constant_value": null
    },
    {
      "name": "rightDecompilerLocationListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.viewer.listingpanel.ProgramLocationListener",
      "type_short": "ProgramLocationListener",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Creates a comparison panel with two decompilers",
      "javadoc": "Creates a comparison panel with two decompilers\n@param owner the owner of this panel\n@param tool the tool displaying this panel",
      "static": false,
      "params": [
        {
          "name": "owner",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the owner of this panel"
        },
        {
          "name": "tool",
          "type_long": "ghidra.framework.plugintool.PluginTool",
          "type_short": "PluginTool",
          "comment": "the tool displaying this panel"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "initialize",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getComponent",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "javax.swing.JComponent",
        "type_short": "JComponent",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getTitle",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setVisible",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "aFlag",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setTitles",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "leftTitle",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "rightTitle",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setTitle",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "titlePanel",
          "type_long": "ghidra.app.util.viewer.util.TitledPanel",
          "type_short": "TitledPanel",
          "comment": ""
        },
        {
          "name": "titlePrefix",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "title",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setLeftTitle",
      "comment": "Sets the title for the left side\u0027s decompiler.",
      "javadoc": "Sets the title for the left side\u0027s decompiler.\n@param leftTitle the title",
      "static": false,
      "params": [
        {
          "name": "leftTitle",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the title"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setRightTitle",
      "comment": "Sets the title for the right side\u0027s decompiler.",
      "javadoc": "Sets the title for the right side\u0027s decompiler.\n@param rightTitle the title",
      "static": false,
      "params": [
        {
          "name": "rightTitle",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the title"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setTitles",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "leftFunction",
          "type_long": "ghidra.program.model.listing.Function",
          "type_short": "Function",
          "comment": ""
        },
        {
          "name": "rightFunction",
          "type_long": "ghidra.program.model.listing.Function",
          "type_short": "Function",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getTitleForFunction",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "function",
          "type_long": "ghidra.program.model.listing.Function",
          "type_short": "Function",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isMatchingConstantsExactly",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "loadFunctions",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "leftFunction",
          "type_long": "ghidra.program.model.listing.Function",
          "type_short": "Function",
          "comment": ""
        },
        {
          "name": "rightFunction",
          "type_long": "ghidra.program.model.listing.Function",
          "type_short": "Function",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "notifyDecompileResultsListeners",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "loadLeftFunction",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "function",
          "type_long": "ghidra.program.model.listing.Function",
          "type_short": "Function",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "loadRightFunction",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "function",
          "type_long": "ghidra.program.model.listing.Function",
          "type_short": "Function",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "buildPanel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addDualDecompileResultsListener",
      "comment": "Adds the indicated listener to be notified when the decompile results have completed.",
      "javadoc": "Adds the indicated listener to be notified when the decompile results have completed.\n@param listener the listener\n@return true if the listener was added.",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "ghidra.app.decompiler.component.DualDecompileResultsListener",
          "type_short": "DualDecompileResultsListener",
          "comment": "the listener"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the listener was added."
      },
      "throws": []
    },
    {
      "name": "removeDualDecompileResultsListener",
      "comment": "Removes the indicated listener from being notified about decompile results.",
      "javadoc": "Removes the indicated listener from being notified about decompile results.\n@param listener the listener\n@return true if the listener was removed.",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "ghidra.app.decompiler.component.DualDecompileResultsListener",
          "type_short": "DualDecompileResultsListener",
          "comment": "the listener"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the listener was removed."
      },
      "throws": []
    },
    {
      "name": "setHighlightControllers",
      "comment": "Sets the highlight controllers for both decompiler panels.",
      "javadoc": "Sets the highlight controllers for both decompiler panels.\n@param leftHighlightController the left side\u0027s highlight controller\n@param rightHighlightController the right side\u0027s highlight controller",
      "static": false,
      "params": [
        {
          "name": "leftHighlightController",
          "type_long": "ghidra.app.decompiler.component.ClangHighlightController",
          "type_short": "ClangHighlightController",
          "comment": "the left side\u0027s highlight controller"
        },
        {
          "name": "rightHighlightController",
          "type_long": "ghidra.app.decompiler.component.ClangHighlightController",
          "type_short": "ClangHighlightController",
          "comment": "the right side\u0027s highlight controller"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setFieldPanelCoordinator",
      "comment": "Sets the coordinator for the two decompiler panels within this code comparison panel. \n It coordinates their scrolling and location synchronization.",
      "javadoc": "Sets the coordinator for the two decompiler panels within this code comparison panel. \n It coordinates their scrolling and location synchronization.\n@param fieldPanelCoordinator the coordinator for the two decompiler panels",
      "static": false,
      "params": [
        {
          "name": "fieldPanelCoordinator",
          "type_long": "ghidra.app.decompiler.component.DualDecompilerFieldPanelCoordinator",
          "type_short": "DualDecompilerFieldPanelCoordinator",
          "comment": "the coordinator for the two decompiler panels"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "rightDecompileDataSet",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "decompileData",
          "type_long": "ghidra.app.decompiler.component.DecompileData",
          "type_short": "DecompileData",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "leftDecompileDataSet",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "decompileData",
          "type_long": "ghidra.app.decompiler.component.DecompileData",
          "type_short": "DecompileData",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setTopComponent",
      "comment": "Sets the component displayed in the top of this panel.",
      "javadoc": "Sets the component displayed in the top of this panel.\n@param comp the component.",
      "static": false,
      "params": [
        {
          "name": "comp",
          "type_long": "javax.swing.JComponent",
          "type_short": "JComponent",
          "comment": "the component."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setBottomComponent",
      "comment": "Sets the component displayed in the bottom of this panel.",
      "javadoc": "Sets the component displayed in the bottom of this panel.\n@param comp the component.",
      "static": false,
      "params": [
        {
          "name": "comp",
          "type_long": "javax.swing.JComponent",
          "type_short": "JComponent",
          "comment": "the component."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFocusedDecompilerPanel",
      "comment": "Gets the display panel from the left or right side that has or last had focus.",
      "javadoc": "Gets the display panel from the left or right side that has or last had focus.\n@return the last C display panel with focus",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.decompiler.component.CDisplayPanel",
        "type_short": "CDisplayPanel",
        "comment": "the last C display panel with focus"
      },
      "throws": []
    },
    {
      "name": "getLeftPanel",
      "comment": "Gets the left side\u0027s C display panel.",
      "javadoc": "Gets the left side\u0027s C display panel.\n@return the left C display panel",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.decompiler.component.CDisplayPanel",
        "type_short": "CDisplayPanel",
        "comment": "the left C display panel"
      },
      "throws": []
    },
    {
      "name": "getRightPanel",
      "comment": "Gets the right side\u0027s C display panel.",
      "javadoc": "Gets the right side\u0027s C display panel.\n@return the right C display panel",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.decompiler.component.CDisplayPanel",
        "type_short": "CDisplayPanel",
        "comment": "the right C display panel"
      },
      "throws": []
    },
    {
      "name": "dispose",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "focusGained",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "e",
          "type_long": "java.awt.event.FocusEvent",
          "type_short": "FocusEvent",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setDualPanelFocus",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "leftOrRight",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "clearBothDisplaysAndShowMessage",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "message",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setMouseNavigationEnabled",
      "comment": "Disable mouse navigation from within this dual decompiler panel.",
      "javadoc": "Disable mouse navigation from within this dual decompiler panel.\n@param enabled false disables navigation",
      "static": false,
      "params": [
        {
          "name": "enabled",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "false disables navigation"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setPrograms",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "leftProgram",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "rightProgram",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "loadData",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "leftData",
          "type_long": "ghidra.program.model.listing.Data",
          "type_short": "Data",
          "comment": ""
        },
        {
          "name": "rightData",
          "type_long": "ghidra.program.model.listing.Data",
          "type_short": "Data",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "loadAddresses",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "leftProgram",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "rightProgram",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "leftAddresses",
          "type_long": "ghidra.program.model.address.AddressSetView",
          "type_short": "AddressSetView",
          "comment": ""
        },
        {
          "name": "rightAddresses",
          "type_long": "ghidra.program.model.address.AddressSetView",
          "type_short": "AddressSetView",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLeftDecompilerPanel",
      "comment": "Gets the left side\u0027s decompiler panel.",
      "javadoc": "Gets the left side\u0027s decompiler panel.\n@return the left decompiler panel",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.decompiler.component.DecompilerPanel",
        "type_short": "DecompilerPanel",
        "comment": "the left decompiler panel"
      },
      "throws": []
    },
    {
      "name": "getRightDecompilerPanel",
      "comment": "Gets the right side\u0027s decompiler panel.",
      "javadoc": "Gets the right side\u0027s decompiler panel.\n@return the right decompiler panel",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.decompiler.component.DecompilerPanel",
        "type_short": "DecompilerPanel",
        "comment": "the right decompiler panel"
      },
      "throws": []
    },
    {
      "name": "updateActionEnablement",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createActions",
      "comment": "Creates the actions provided by this panel.",
      "javadoc": "Creates the actions provided by this panel.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getActions",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.action.DockingAction[]",
        "type_short": "docking.action.DockingAction[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPanelThisSupersedes",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.Class\u003c? extends ghidra.app.decompiler.component.DecompilerCodeComparisonPanel\u003c? extends docking.widgets.fieldpanel.internal.FieldPanelCoordinator\u003e\u003e",
        "type_short": "Class",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getActionContext",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "provider",
          "type_long": "docking.ComponentProvider",
          "type_short": "ComponentProvider",
          "comment": ""
        },
        {
          "name": "event",
          "type_long": "java.awt.event.MouseEvent",
          "type_short": "MouseEvent",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.ActionContext",
        "type_short": "ActionContext",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "programRestored",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "refreshPanel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "leftOrRight",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "refreshLeftPanel",
      "comment": "Refreshes the left side of this panel.",
      "javadoc": "Refreshes the left side of this panel.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "refreshRightPanel",
      "comment": "Refreshes the right side of this panel.",
      "javadoc": "Refreshes the right side of this panel.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "leftPanelHasFocus",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setTitlePrefixes",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "leftTitlePrefix",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "rightTitlePrefix",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLeftAddresses",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.address.AddressSetView",
        "type_short": "AddressSetView",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getRightAddresses",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.address.AddressSetView",
        "type_short": "AddressSetView",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLeftFieldPanel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.widgets.fieldpanel.FieldPanel",
        "type_short": "FieldPanel",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getRightFieldPanel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.widgets.fieldpanel.FieldPanel",
        "type_short": "FieldPanel",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createFieldPanelCoordinator",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.decompiler.component.DualDecompilerFieldPanelCoordinator",
        "type_short": "DualDecompilerFieldPanelCoordinator",
        "comment": ""
      },
      "throws": []
    }
  ]
}
