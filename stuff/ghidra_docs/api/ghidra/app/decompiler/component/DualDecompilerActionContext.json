{
  "name": "DualDecompilerActionContext",
  "comment": "Action context for a dual decompiler panel.",
  "javadoc": "Action context for a dual decompiler panel.",
  "static": false,
  "implements": [
    "ghidra.app.context.RestrictedAddressSetContext",
    "ghidra.app.util.viewer.util.CodeComparisonPanelActionContext"
  ],
  "extends": "docking.ActionContext",
  "fields": [
    {
      "name": "codeComparisonPanel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.viewer.util.CodeComparisonPanel\u003c? extends docking.widgets.fieldpanel.internal.FieldPanelCoordinator\u003e",
      "type_short": "CodeComparisonPanel",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Creates an action context for a dual decompiler panel.",
      "javadoc": "Creates an action context for a dual decompiler panel.\n@param provider the provider for this context\n@param cPanel the decompiler panel associated with this context\n@param source the source of the action",
      "static": false,
      "params": [
        {
          "name": "provider",
          "type_long": "docking.ComponentProvider",
          "type_short": "ComponentProvider",
          "comment": "the provider for this context"
        },
        {
          "name": "cPanel",
          "type_long": "ghidra.app.decompiler.component.CDisplayPanel",
          "type_short": "CDisplayPanel",
          "comment": "the decompiler panel associated with this context"
        },
        {
          "name": "source",
          "type_long": "java.awt.Component",
          "type_short": "Component",
          "comment": "the source of the action"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setCodeComparisonPanel",
      "comment": "Sets the CodeComparisonPanel associated with this context.",
      "javadoc": "Sets the CodeComparisonPanel associated with this context.\n@param codeComparisonPanel the code comparison panel.",
      "static": false,
      "params": [
        {
          "name": "codeComparisonPanel",
          "type_long": "ghidra.app.util.viewer.util.CodeComparisonPanel\u003c? extends docking.widgets.fieldpanel.internal.FieldPanelCoordinator\u003e",
          "type_short": "CodeComparisonPanel",
          "comment": "the code comparison panel."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getCodeComparisonPanel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.util.viewer.util.CodeComparisonPanel\u003c? extends docking.widgets.fieldpanel.internal.FieldPanelCoordinator\u003e",
        "type_short": "CodeComparisonPanel",
        "comment": ""
      },
      "throws": []
    }
  ]
}
