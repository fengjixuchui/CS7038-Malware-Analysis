{
  "name": "DecompileRunnable",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [
    "ghidra.util.task.SwingRunnable"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "functionToDecompile",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.listing.Function",
      "type_short": "Function",
      "constant_value": null
    },
    {
      "name": "program",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.listing.Program",
      "type_short": "Program",
      "constant_value": null
    },
    {
      "name": "location",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.util.ProgramLocation",
      "type_short": "ProgramLocation",
      "constant_value": null
    },
    {
      "name": "debugFile",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.io.File",
      "type_short": "File",
      "constant_value": null
    },
    {
      "name": "decompileResults",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.decompiler.DecompileResults",
      "type_short": "DecompileResults",
      "constant_value": null
    },
    {
      "name": "errorMessage",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "viewerPosition",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.widgets.fieldpanel.support.ViewerPosition",
      "type_short": "ViewerPosition",
      "constant_value": null
    },
    {
      "name": "decompilerManager",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.decompiler.component.DecompilerManager",
      "type_short": "DecompilerManager",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor for a scheduled Decompile runnable",
      "javadoc": "Constructor for a scheduled Decompile runnable\n@param program the program containing the function to be decompiled\n@param location the location for which to find its containing function.\n@param debugFile if non-null, the file to store decompile debug information.",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "the program containing the function to be decompiled"
        },
        {
          "name": "location",
          "type_long": "ghidra.program.util.ProgramLocation",
          "type_short": "ProgramLocation",
          "comment": "the location for which to find its containing function."
        },
        {
          "name": "debugFile",
          "type_long": "java.io.File",
          "type_short": "File",
          "comment": "if non-null, the file to store decompile debug information."
        },
        {
          "name": "viewerPosition",
          "type_long": "docking.widgets.fieldpanel.support.ViewerPosition",
          "type_short": "ViewerPosition",
          "comment": ""
        },
        {
          "name": "decompilerManager",
          "type_long": "ghidra.app.decompiler.component.DecompilerManager",
          "type_short": "DecompilerManager",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "update",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "newRunnable",
          "type_long": "ghidra.app.decompiler.component.DecompileRunnable",
          "type_short": "DecompileRunnable",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "matches",
      "comment": "Checks if the given program and location represent the same function as this\n decompile\u0027s function",
      "javadoc": "Checks if the given program and location represent the same function as this\n decompile\u0027s function",
      "static": false,
      "params": [
        {
          "name": "otherProgram",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "otherLocation",
          "type_long": "ghidra.program.util.ProgramLocation",
          "type_short": "ProgramLocation",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "monitoredRun",
      "comment": "Performs the decompile.",
      "javadoc": "Performs the decompile.",
      "static": false,
      "params": [
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "swingRun",
      "comment": "Automatically called in the Swing thread by the RunManager after the run() method completes.\n If the decompile wasn\u0027t cancelled, it reports the results back to the DecompilerController.",
      "javadoc": "Automatically called in the Swing thread by the RunManager after the run() method completes.\n If the decompile wasn\u0027t cancelled, it reports the results back to the DecompilerController.",
      "static": false,
      "params": [
        {
          "name": "isCancelled",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "findFunction",
      "comment": "locates the function to be decompiled based on the location given at construction time.",
      "javadoc": "locates the function to be decompiled based on the location given at construction time.",
      "static": false,
      "params": [
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.listing.Function",
        "type_short": "Function",
        "comment": ""
      },
      "throws": []
    }
  ]
}
