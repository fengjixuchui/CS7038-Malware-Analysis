{
  "name": "ClangHighlightController",
  "comment": "Class to handle highlights for a decompiled function.\n \n This class does not painting directly.  Rather, this class tracks the currently highlighted\n tokens and then sets the highlight color on the token when it is highlighted and clears the \n highlight color when the highlight is removed.\n \n This class maintains the notion of \u0027primary\u0027 highlights and \u0027secondary\u0027 highlights.  \n Primary highlights are considered transient and get cleared whenever the location changes.\n Secondary highlights will stay until they are manually cleared by a user action.  Primary\n highlights happen when the user clicks around the Decompiler.  They show state such as the\n current field, impact of a variable (via a slicing action), or related syntax (such as \n matching braces).  Secondary highlights are triggered by the user to show all occurrences of\n a particular variable.  Further,  the user can apply multiple secondary highlights at the \n same time, with different colors for each highlight.",
  "javadoc": "Class to handle highlights for a decompiled function.\n \n \u003cp\u003eThis class does not painting directly.  Rather, this class tracks the currently highlighted\n tokens and then sets the highlight color on the token when it is highlighted and clears the \n highlight color when the highlight is removed.\n \n \u003cp\u003eThis class maintains the notion of \u0027primary\u0027 highlights and \u0027secondary\u0027 highlights.  \n Primary highlights are considered transient and get cleared whenever the location changes.\n Secondary highlights will stay until they are manually cleared by a user action.  Primary\n highlights happen when the user clicks around the Decompiler.  They show state such as the\n current field, impact of a variable (via a slicing action), or related syntax (such as \n matching braces).  Secondary highlights are triggered by the user to show all occurrences of\n a particular variable.  Further,  the user can apply multiple secondary highlights at the \n same time, with different colors for each highlight.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "DEFAULT_HIGHLIGHT_COLOR",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.awt.Color",
      "type_short": "Color",
      "constant_value": null
    },
    {
      "name": "defaultHighlightColor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.awt.Color",
      "type_short": "Color",
      "constant_value": null
    },
    {
      "name": "defaultParenColor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.awt.Color",
      "type_short": "Color",
      "constant_value": null
    },
    {
      "name": "primaryHighlightTokens",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.decompiler.component.TokenHighlights",
      "type_short": "TokenHighlights",
      "constant_value": null
    },
    {
      "name": "secondaryHighlightTokens",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.decompiler.component.TokenHighlights",
      "type_short": "TokenHighlights",
      "constant_value": null
    },
    {
      "name": "secondaryHighlightColors",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.decompiler.component.TokenHighlightColors",
      "type_short": "TokenHighlightColors",
      "constant_value": null
    },
    {
      "name": "updateId",
      "comment": "A counter to track updates so that clients know when a buffered highlight request is invalid",
      "javadoc": "A counter to track updates so that clients know when a buffered highlight request is invalid",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "listeners",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cghidra.app.decompiler.component.ClangHighlightListener\u003e",
      "type_short": "List",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "dummyIfNull",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "c",
          "type_long": "ghidra.app.decompiler.component.ClangHighlightController",
          "type_short": "ClangHighlightController",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.app.decompiler.component.ClangHighlightController",
        "type_short": "ClangHighlightController",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "fieldLocationChanged",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "location",
          "type_long": "docking.widgets.fieldpanel.support.FieldLocation",
          "type_short": "FieldLocation",
          "comment": ""
        },
        {
          "name": "field",
          "type_long": "docking.widgets.fieldpanel.field.Field",
          "type_short": "Field",
          "comment": ""
        },
        {
          "name": "trigger",
          "type_long": "docking.widgets.EventTrigger",
          "type_short": "EventTrigger",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setHighlightColor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "c",
          "type_long": "java.awt.Color",
          "type_short": "Color",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getHighlightedText",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getUpdateId",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSecondaryHighlightColors",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.decompiler.component.TokenHighlightColors",
        "type_short": "TokenHighlightColors",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPrimaryHighlightedTokens",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.decompiler.component.TokenHighlights",
        "type_short": "TokenHighlights",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSecondaryHighlightedTokens",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.decompiler.component.TokenHighlights",
        "type_short": "TokenHighlights",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getHighlightedToken",
      "comment": "Return the current highlighted token (if exists and unique)",
      "javadoc": "Return the current highlighted token (if exists and unique)\n@return token or null",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.decompiler.ClangToken",
        "type_short": "ClangToken",
        "comment": "token or null"
      },
      "throws": []
    },
    {
      "name": "gatherAllTokens",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "parentNode",
          "type_long": "ghidra.app.decompiler.ClangNode",
          "type_short": "ClangNode",
          "comment": ""
        },
        {
          "name": "results",
          "type_long": "java.util.Set\u003cghidra.app.decompiler.ClangToken\u003e",
          "type_short": "Set",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "clearPrimaryHighlights",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "clearAllHighlights",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "doClearHighlights",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "tokenHighlights",
          "type_long": "ghidra.app.decompiler.component.TokenHighlights",
          "type_short": "TokenHighlights",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "togglePrimaryHighlights",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "hlColor",
          "type_long": "java.awt.Color",
          "type_short": "Color",
          "comment": ""
        },
        {
          "name": "tokens",
          "type_long": "java.util.function.Supplier\u003cjava.util.List\u003cghidra.app.decompiler.ClangToken\u003e\u003e",
          "type_short": "Supplier",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hasPrimaryHighlight",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "token",
          "type_long": "ghidra.app.decompiler.ClangToken",
          "type_short": "ClangToken",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hasSecondaryHighlight",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "token",
          "type_long": "ghidra.app.decompiler.ClangToken",
          "type_short": "ClangToken",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSecondaryHighlightsByFunction",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "f",
          "type_long": "ghidra.program.model.listing.Function",
          "type_short": "Function",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.Set\u003cghidra.app.decompiler.component.HighlightToken\u003e",
        "type_short": "Set",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeSecondaryHighlights",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "f",
          "type_long": "ghidra.program.model.listing.Function",
          "type_short": "Function",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeSecondaryHighlights",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "token",
          "type_long": "ghidra.app.decompiler.ClangToken",
          "type_short": "ClangToken",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeSecondaryHighlights",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "tokens",
          "type_long": "java.util.function.Supplier\u003c? extends java.util.Collection\u003cghidra.app.decompiler.ClangToken\u003e\u003e",
          "type_short": "Supplier",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addSecondaryHighlights",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "tokenText",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "tokens",
          "type_long": "java.util.function.Supplier\u003c? extends java.util.Collection\u003cghidra.app.decompiler.ClangToken\u003e\u003e",
          "type_short": "Supplier",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addSecondaryHighlights",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "tokens",
          "type_long": "java.util.function.Supplier\u003c? extends java.util.Collection\u003cghidra.app.decompiler.ClangToken\u003e\u003e",
          "type_short": "Supplier",
          "comment": ""
        },
        {
          "name": "hlColor",
          "type_long": "java.awt.Color",
          "type_short": "Color",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addPrimaryHighlights",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "tokens",
          "type_long": "java.util.function.Supplier\u003c? extends java.util.Collection\u003cghidra.app.decompiler.ClangToken\u003e\u003e",
          "type_short": "Supplier",
          "comment": ""
        },
        {
          "name": "hlColor",
          "type_long": "java.awt.Color",
          "type_short": "Color",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addPrimaryHighlights",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "parentNode",
          "type_long": "ghidra.app.decompiler.ClangNode",
          "type_short": "ClangNode",
          "comment": ""
        },
        {
          "name": "colorProvider",
          "type_long": "ghidra.app.plugin.core.decompile.actions.TokenHighlightColorProvider",
          "type_short": "TokenHighlightColorProvider",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addPrimaryHighlights",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "parentNode",
          "type_long": "ghidra.app.decompiler.ClangNode",
          "type_short": "ClangNode",
          "comment": ""
        },
        {
          "name": "ops",
          "type_long": "java.util.Set\u003cghidra.program.model.pcode.PcodeOp\u003e",
          "type_short": "Set",
          "comment": ""
        },
        {
          "name": "hlColor",
          "type_long": "java.awt.Color",
          "type_short": "Color",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addPrimaryHighlights",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "tokens",
          "type_long": "java.util.Collection\u003cghidra.app.decompiler.ClangToken\u003e",
          "type_short": "Collection",
          "comment": ""
        },
        {
          "name": "hlColor",
          "type_long": "java.awt.Color",
          "type_short": "Color",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addTokensToHighlights",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "tokens",
          "type_long": "java.util.Collection\u003cghidra.app.decompiler.ClangToken\u003e",
          "type_short": "Collection",
          "comment": ""
        },
        {
          "name": "colorProvider",
          "type_long": "java.util.function.Function\u003cghidra.app.decompiler.ClangToken,java.awt.Color\u003e",
          "type_short": "Function",
          "comment": ""
        },
        {
          "name": "currentHighlights",
          "type_long": "ghidra.app.decompiler.component.TokenHighlights",
          "type_short": "TokenHighlights",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addPrimaryHighlight",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "token",
          "type_long": "ghidra.app.decompiler.ClangToken",
          "type_short": "ClangToken",
          "comment": ""
        },
        {
          "name": "highlightColor",
          "type_long": "java.awt.Color",
          "type_short": "Color",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "doAddHighlight",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "clangToken",
          "type_long": "ghidra.app.decompiler.ClangToken",
          "type_short": "ClangToken",
          "comment": ""
        },
        {
          "name": "highlightColor",
          "type_long": "java.awt.Color",
          "type_short": "Color",
          "comment": ""
        },
        {
          "name": "currentHighlights",
          "type_long": "ghidra.app.decompiler.component.TokenHighlights",
          "type_short": "TokenHighlights",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "updateHighlightColor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "t",
          "type_long": "ghidra.app.decompiler.ClangToken",
          "type_short": "ClangToken",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getCombinedColor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "t",
          "type_long": "ghidra.app.decompiler.ClangToken",
          "type_short": "ClangToken",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.awt.Color",
        "type_short": "Color",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addPrimaryHighlightToTokensForParenthesis",
      "comment": "If input token is a parenthesis, highlight all\n tokens between it and its match",
      "javadoc": "If input token is a parenthesis, highlight all\n tokens between it and its match\n@param tok potential parenthesis token\n@param highlightColor the highlight color\n@return a list of all tokens that were highlighted.",
      "static": false,
      "params": [
        {
          "name": "tok",
          "type_long": "ghidra.app.decompiler.ClangSyntaxToken",
          "type_short": "ClangSyntaxToken",
          "comment": "potential parenthesis token"
        },
        {
          "name": "highlightColor",
          "type_long": "java.awt.Color",
          "type_short": "Color",
          "comment": "the highlight color"
        }
      ],
      "return": {
        "type_long": "java.util.List\u003cghidra.app.decompiler.ClangToken\u003e",
        "type_short": "List",
        "comment": "a list of all tokens that were highlighted."
      },
      "throws": []
    },
    {
      "name": "gatherContentsOfParenthesis",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "tok",
          "type_long": "ghidra.app.decompiler.ClangSyntaxToken",
          "type_short": "ClangSyntaxToken",
          "comment": ""
        },
        {
          "name": "parenId",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.List\u003cghidra.app.decompiler.ClangToken\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addHighlightBrace",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "token",
          "type_long": "ghidra.app.decompiler.ClangSyntaxToken",
          "type_short": "ClangSyntaxToken",
          "comment": ""
        },
        {
          "name": "highlightColor",
          "type_long": "java.awt.Color",
          "type_short": "Color",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "highlightBrace",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "startToken",
          "type_long": "ghidra.app.decompiler.ClangSyntaxToken",
          "type_short": "ClangSyntaxToken",
          "comment": ""
        },
        {
          "name": "highlightColor",
          "type_long": "java.awt.Color",
          "type_short": "Color",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "ghidra.app.decompiler.component.ClangHighlightListener",
          "type_short": "ClangHighlightListener",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "ghidra.app.decompiler.component.ClangHighlightListener",
          "type_short": "ClangHighlightListener",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "notifyListeners",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
