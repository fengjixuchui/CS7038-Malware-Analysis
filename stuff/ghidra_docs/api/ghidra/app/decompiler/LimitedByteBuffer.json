{
  "name": "LimitedByteBuffer",
  "comment": "Class for accumulating bytes into an automatically expanding buffer with an explicit upper limit to the size",
  "javadoc": "Class for accumulating bytes into an automatically expanding buffer with an explicit upper limit to the size",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "value",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "byte[]",
      "type_short": "byte[]",
      "constant_value": null
    },
    {
      "name": "count",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "absmax",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Create the buffer specifying its initial and limiting capacity",
      "javadoc": "Create the buffer specifying its initial and limiting capacity\n@param initial is the number of bytes to be initially allocated for the buffer\n@param amax is the absolute maximum number of bytes the buffer is allowed to expand to before throwing exceptions",
      "static": false,
      "params": [
        {
          "name": "initial",
          "type_long": "int",
          "type_short": "int",
          "comment": "is the number of bytes to be initially allocated for the buffer"
        },
        {
          "name": "amax",
          "type_long": "int",
          "type_short": "int",
          "comment": "is the absolute maximum number of bytes the buffer is allowed to expand to before throwing exceptions"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "append",
      "comment": "Append a byte into the buffer.  The buffer\u0027s internal storage is expanded as necessary, but only up to\n the specified maximum. If this append exceeds that maximum, then an exception is thrown",
      "javadoc": "Append a byte into the buffer.  The buffer\u0027s internal storage is expanded as necessary, but only up to\n the specified maximum. If this append exceeds that maximum, then an exception is thrown\n@param b is the byte to append\n@throws IOException",
      "static": false,
      "params": [
        {
          "name": "b",
          "type_long": "byte",
          "type_short": "byte",
          "comment": "is the byte to append"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getInputStream",
      "comment": "Generate an InputStream from the bytes that have been appended to the buffer\n The buffer is NOT copied",
      "javadoc": "Generate an InputStream from the bytes that have been appended to the buffer\n The buffer is NOT copied\n@return the new InputStream",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.io.ByteArrayInputStream",
        "type_short": "ByteArrayInputStream",
        "comment": "the new InputStream"
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    }
  ]
}
