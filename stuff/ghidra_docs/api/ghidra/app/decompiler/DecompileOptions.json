{
  "name": "DecompileOptions",
  "comment": "Configuration options for the decompiler\n This stores the options and can create an XML\n string to be sent to the decompiler process",
  "javadoc": "Configuration options for the decompiler\n This stores the options and can create an XML\n string to be sent to the decompiler process",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "PREDICATE_OPTIONSTRING",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Analysis.Simplify predication\""
    },
    {
      "name": "PREDICATE_OPTIONDESCRIPTION",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"If set, multiple conditionally executed instructions depending on one predicate will be combined into a single if/else statement\""
    },
    {
      "name": "PREDICATE_OPTIONDEFAULT",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": "true"
    },
    {
      "name": "predicate",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "READONLY_OPTIONSTRING",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Analysis.Respect readonly flags\""
    },
    {
      "name": "READONLY_OPTIONDESCRIPTION",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"If set, this option causes the decompiler to treat any values in memory marked read-only as constant values.\""
    },
    {
      "name": "READONLY_OPTIONDEFAULT",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": "true"
    },
    {
      "name": "readOnly",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "ELIMINATE_UNREACHABLE_OPTIONSTRING",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Analysis.Eliminate unreachable code\""
    },
    {
      "name": "ELIMINATE_UNREACHABLE_OPTIONDESCRIPTION",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"If set, branches and code that can never be executed are eliminated as dead code\""
    },
    {
      "name": "ELIMINATE_UNREACHABLE_OPTIONDEFAULT",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": "true"
    },
    {
      "name": "eliminateUnreachable",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "SIMPLIFY_DOUBLEPRECISION_OPTIONSTRING",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Analysis.Simplify extended integer operations\""
    },
    {
      "name": "SIMPLIFY_DOUBLEPRECISION_OPTIONDESCRIPTION",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"If set, integer operations which are split into high and low pieces are collapsed into a single logical operation\""
    },
    {
      "name": "SIMPLIFY_DOUBLEPRECISION_OPTIONDEFAULT",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": "true"
    },
    {
      "name": "simplifyDoublePrecision",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "IGNOREUNIMPL_OPTIONSTRING",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Analysis.Ignore unimplemented instructions\""
    },
    {
      "name": "IGNOREUNIMPL_OPTIONDESCRIPTION",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"If set, instructions which do not have a p-code translation implemented are treated as if they do nothing (like a NOP)\""
    },
    {
      "name": "IGNOREUNIMPL_OPTIONDEFAULT",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": "false"
    },
    {
      "name": "ignoreunimpl",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "INFERCONSTPTR_OPTIONSTRING",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Analysis.Infer constant pointers\""
    },
    {
      "name": "INFERCONSTPTR_OPTIONDESCRIPTION",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"If set, constants which are not being explicitly used as pointers, but which can be interpreted as a legitimate address, will still be treated as having a pointer datatype\""
    },
    {
      "name": "INFERCONSTPTR_OPTIONDEFAULT",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": "true"
    },
    {
      "name": "inferconstptr",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "ANALYZEFORLOOPS_OPTIONSTRING",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Analysis.Recover -for- loops\""
    },
    {
      "name": "ANALYZEFORLOOPS_OPTIONDESCRIPTION",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"If set, the decompiler attempts to recover for-loop variables, including their initializer, condition, and incrementer statements. Loop variable bounds are displayed as a formal -for- loop header\""
    },
    {
      "name": "ANALYZEFORLOOPS_OPTIONDEFAULT",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": "true"
    },
    {
      "name": "analyzeForLoops",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "NULLTOKEN_OPTIONSTRING",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Display.Print \u0027NULL\u0027 for null pointers\""
    },
    {
      "name": "NULLTOKEN_OPTIONDESCRIPTION",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"If set, any zero valued pointer (null pointer) will be printed using the token \u0027NULL\u0027. Otherwise, a cast of the number \u00270\u0027 is printed.\""
    },
    {
      "name": "NULLTOKEN_OPTIONDEFAULT",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": "false"
    },
    {
      "name": "nullToken",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "INPLACEOP_OPTIONSTRING",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Analysis.Use inplace assignment operators\""
    },
    {
      "name": "INPLACEOP_OPTIONDESCRIPTION",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"If set the inplace assignment operators will be used for appropriate expressions. \u0027+\u003d\u0027   \u0027*\u003d\u0027   \u0027\u0026\u003d\u0027   \u0027\u003c\u003c\u003d\u0027 etc.\""
    },
    {
      "name": "INPLACEOP_OPTIONDEFAULT",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": "false"
    },
    {
      "name": "inplaceTokens",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "ALIASBLOCK_OPTIONSTRING",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Analysis.Alias Blocking\""
    },
    {
      "name": "ALIASBLOCK_OPTIONDESCRIPTION",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Specify which data-types prevent a pointer alias from reaching across them on the stack.\""
    },
    {
      "name": "ALIASBLOCK_OPTIONDEFAULT",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.app.decompiler.DecompileOptions.AliasBlockEnum",
      "type_short": "AliasBlockEnum",
      "constant_value": null
    },
    {
      "name": "aliasBlock",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.decompiler.DecompileOptions.AliasBlockEnum",
      "type_short": "AliasBlockEnum",
      "constant_value": null
    },
    {
      "name": "CONVENTION_OPTIONSTRING",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Display.Print calling convention name\""
    },
    {
      "name": "CONVENTION_OPTIONDESCRIPTION",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"If set, the names of callling conventions (which differ from the default) will be printed as part of the function prototype.\""
    },
    {
      "name": "CONVENTION_OPTIONDEFAULT",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": "true"
    },
    {
      "name": "conventionPrint",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "NOCAST_OPTIONSTRING",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Display.Disable printing of type casts\""
    },
    {
      "name": "NOCAST_OPTIONDESCRIPTION",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"If set, any C style type cast recovered by the decompiler will not be displayed. The resulting C syntax may not parse correctly.\""
    },
    {
      "name": "NOCAST_OPTIONDEFAULT",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": "false"
    },
    {
      "name": "noCastPrint",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "MAXWIDTH_OPTIONSTRING",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Display.Maximum characters in a code line\""
    },
    {
      "name": "MAXWIDTH_OPTIONDESCRIPTION",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Maximum number of characters allowed per line before before line breaks are forced.\""
    },
    {
      "name": "MAXWIDTH_OPTIONDEFAULT",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "100"
    },
    {
      "name": "maxwidth",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "INDENTWIDTH_OPTIONSTRING",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Display.Number of characters per indent level\""
    },
    {
      "name": "INDENTWIDTH_OPTIONDESCRIPTION",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Number of characters indented for each level of control-flow or scope nesting\""
    },
    {
      "name": "INDENTWIDTH_OPTIONDEFAULT",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "2"
    },
    {
      "name": "indentwidth",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "COMMENTINDENT_OPTIONSTRING",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Display.Comment line indent level\""
    },
    {
      "name": "COMMENTINDENT_OPTIONDESCRIPTION",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Number of characters each line of comments is indented\""
    },
    {
      "name": "COMMENTINDENT_OPTIONDEFAULT",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "20"
    },
    {
      "name": "commentindent",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "COMMENTSTYLE_OPTIONSTRING",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Display.Comment style\""
    },
    {
      "name": "COMMENTSTYLE_OPTIONDESCRIPTION",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Choice between either the C style comments /* */ or C++ style // \""
    },
    {
      "name": "SUGGESTED_DECOMPILE_TIMEOUT_SECS",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "30"
    },
    {
      "name": "SUGGESTED_MAX_PAYLOAD_BYTES",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "50"
    },
    {
      "name": "SUGGESTED_MAX_INSTRUCTIONS",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "100000"
    },
    {
      "name": "COMMENTSTYLE_OPTIONDEFAULT",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.app.decompiler.DecompileOptions.CommentStyleEnum",
      "type_short": "CommentStyleEnum",
      "constant_value": null
    },
    {
      "name": "commentStyle",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.decompiler.DecompileOptions.CommentStyleEnum",
      "type_short": "CommentStyleEnum",
      "constant_value": null
    },
    {
      "name": "COMMENTPRE_OPTIONSTRING",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Display.Display PRE comments\""
    },
    {
      "name": "COMMENTPRE_OPTIONDESCRIPTION",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"If set, disassembly pre-instruction (PRE) comments are displayed in the decompiler C output\""
    },
    {
      "name": "COMMENTPRE_OPTIONDEFAULT",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": "true"
    },
    {
      "name": "commentPREInclude",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "COMMENTPLATE_OPTIONSTRING",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Display.Display PLATE comments\""
    },
    {
      "name": "COMMENTPLATE_OPTIONDESCRIPTION",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"If set, disassembly plate comments are displayed in the decompiler C output\""
    },
    {
      "name": "COMMENTPLATE_OPTIONDEFAULT",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": "false"
    },
    {
      "name": "commentPLATEInclude",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "COMMENTPOST_OPTIONSTRING",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Display.Display POST comments\""
    },
    {
      "name": "COMMENTPOST_OPTIONDESCRIPTION",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"If set, disassembly post-instruction (POST) comments are displayed in the decompiler C output\""
    },
    {
      "name": "COMMENTPOST_OPTIONDEFAULT",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": "false"
    },
    {
      "name": "commentPOSTInclude",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "COMMENTEOL_OPTIONSTRING",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Display.Display EOL comments\""
    },
    {
      "name": "COMMENTEOL_OPTIONDESCRIPTION",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"If set, disassembly end-of-line (EOL) comments are displayed in the decompiler C output\""
    },
    {
      "name": "COMMENTEOL_OPTIONDEFAULT",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": "false"
    },
    {
      "name": "commentEOLInclude",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "COMMENTWARN_OPTIONSTRING",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Display.Display Warning comments\""
    },
    {
      "name": "COMMENTWARN_OPTIONDESCRIPTION",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"If set, warnings generated by the decompiler embedded in the displayed code as comments\""
    },
    {
      "name": "COMMENTWARN_OPTIONDEFAULT",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": "true"
    },
    {
      "name": "commentWARNInclude",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "COMMENTHEAD_OPTIONSTRING",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Display.Display Header comment\""
    },
    {
      "name": "COMMENTHEAD_OPTIONDESCRIPTION",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"If set, the entry point plate comment is displayed as a function header comment.\""
    },
    {
      "name": "COMMENTHEAD_OPTIONDEFAULT",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": "true"
    },
    {
      "name": "commentHeadInclude",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "NAMESPACE_OPTIONSTRING",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Display.Display Namespaces\""
    },
    {
      "name": "NAMESPACE_OPTIONDESCRIPTION",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Choose how/if namespace tokens should be displayed along with symbol names\""
    },
    {
      "name": "NAMESPACE_OPTIONDEFAULT",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.app.decompiler.DecompileOptions.NamespaceStrategy",
      "type_short": "NamespaceStrategy",
      "constant_value": null
    },
    {
      "name": "namespaceStrategy",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.decompiler.DecompileOptions.NamespaceStrategy",
      "type_short": "NamespaceStrategy",
      "constant_value": null
    },
    {
      "name": "INTEGERFORMAT_OPTIONSTRING",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Display.Integer format\""
    },
    {
      "name": "INTEGERFORMAT_OPTIONDESCRIPTION",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Choose how to display integers: as hexadecimal, decimal, or best fit\""
    },
    {
      "name": "INTEGERFORMAT_OPTIONDEFAULT",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.app.decompiler.DecompileOptions.IntegerFormatEnum",
      "type_short": "IntegerFormatEnum",
      "constant_value": null
    },
    {
      "name": "integerFormat",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.decompiler.DecompileOptions.IntegerFormatEnum",
      "type_short": "IntegerFormatEnum",
      "constant_value": null
    },
    {
      "name": "HIGHLIGHT_MIDDLE_MOUSE_DEF",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.awt.Color",
      "type_short": "Color",
      "constant_value": null
    },
    {
      "name": "middleMouseHighlightColor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.awt.Color",
      "type_short": "Color",
      "constant_value": null
    },
    {
      "name": "middleMouseHighlightButton",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "HIGHLIGHT_CURRENT_VARIABLE_MSG",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Display.Color for Current Variable Highlight\""
    },
    {
      "name": "HIGHLIGHT_CURRENT_VARIABLE_DEF",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.awt.Color",
      "type_short": "Color",
      "constant_value": null
    },
    {
      "name": "currentVariableHighlightColor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.awt.Color",
      "type_short": "Color",
      "constant_value": null
    },
    {
      "name": "HIGHLIGHT_KEYWORD_MSG",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Display.Color for Keywords\""
    },
    {
      "name": "HIGHLIGHT_KEYWORD_DEF",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.awt.Color",
      "type_short": "Color",
      "constant_value": null
    },
    {
      "name": "keywordColor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.awt.Color",
      "type_short": "Color",
      "constant_value": null
    },
    {
      "name": "HIGHLIGHT_FUNCTION_MSG",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Display.Color for Function names\""
    },
    {
      "name": "HIGHLIGHT_FUNCTION_DEF",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.awt.Color",
      "type_short": "Color",
      "constant_value": null
    },
    {
      "name": "functionColor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.awt.Color",
      "type_short": "Color",
      "constant_value": null
    },
    {
      "name": "HIGHLIGHT_COMMENT_MSG",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Display.Color for Comments\""
    },
    {
      "name": "HIGHLIGHT_COMMENT_DEF",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.awt.Color",
      "type_short": "Color",
      "constant_value": null
    },
    {
      "name": "commentColor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.awt.Color",
      "type_short": "Color",
      "constant_value": null
    },
    {
      "name": "HIGHLIGHT_VARIABLE_MSG",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Display.Color for Variables\""
    },
    {
      "name": "HIGHLIGHT_VARIABLE_DEF",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.awt.Color",
      "type_short": "Color",
      "constant_value": null
    },
    {
      "name": "variableColor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.awt.Color",
      "type_short": "Color",
      "constant_value": null
    },
    {
      "name": "HIGHLIGHT_CONST_MSG",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Display.Color for Constants\""
    },
    {
      "name": "HIGHLIGHT_CONST_DEF",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.awt.Color",
      "type_short": "Color",
      "constant_value": null
    },
    {
      "name": "constantColor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.awt.Color",
      "type_short": "Color",
      "constant_value": null
    },
    {
      "name": "HIGHLIGHT_TYPE_MSG",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Display.Color for Types\""
    },
    {
      "name": "HIGHLIGHT_TYPE_DEF",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.awt.Color",
      "type_short": "Color",
      "constant_value": null
    },
    {
      "name": "typeColor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.awt.Color",
      "type_short": "Color",
      "constant_value": null
    },
    {
      "name": "HIGHLIGHT_PARAMETER_MSG",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Display.Color for Parameters\""
    },
    {
      "name": "HIGHLIGHT_PARAMETER_DEF",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.awt.Color",
      "type_short": "Color",
      "constant_value": null
    },
    {
      "name": "parameterColor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.awt.Color",
      "type_short": "Color",
      "constant_value": null
    },
    {
      "name": "HIGHLIGHT_GLOBAL_MSG",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Display.Color for Globals\""
    },
    {
      "name": "HIGHLIGHT_GLOBAL_DEF",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.awt.Color",
      "type_short": "Color",
      "constant_value": null
    },
    {
      "name": "globalColor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.awt.Color",
      "type_short": "Color",
      "constant_value": null
    },
    {
      "name": "HIGHLIGHT_DEFAULT_MSG",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Display.Color Default\""
    },
    {
      "name": "HIGHLIGHT_DEFAULT_DEF",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.awt.Color",
      "type_short": "Color",
      "constant_value": null
    },
    {
      "name": "defaultColor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.awt.Color",
      "type_short": "Color",
      "constant_value": null
    },
    {
      "name": "CODE_VIEWER_BACKGROUND_COLOR_MSG",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Display.Background Color\""
    },
    {
      "name": "CODE_VIEWER_BACKGROUND_COLOR",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.awt.Color",
      "type_short": "Color",
      "constant_value": null
    },
    {
      "name": "codeViewerBackgroundColor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.awt.Color",
      "type_short": "Color",
      "constant_value": null
    },
    {
      "name": "SEARCH_HIGHLIGHT_MSG",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Display.Color for Highlighting Find Matches\""
    },
    {
      "name": "SEARCH_HIGHLIGHT_DEF",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.awt.Color",
      "type_short": "Color",
      "constant_value": null
    },
    {
      "name": "defaultSearchHighlightColor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.awt.Color",
      "type_short": "Color",
      "constant_value": null
    },
    {
      "name": "FONT_MSG",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Display.Font\""
    },
    {
      "name": "DEFAULT_FONT",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.awt.Font",
      "type_short": "Font",
      "constant_value": null
    },
    {
      "name": "defaultFont",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.awt.Font",
      "type_short": "Font",
      "constant_value": null
    },
    {
      "name": "CACHED_RESULTS_SIZE_MSG",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Cache Size (Functions)\""
    },
    {
      "name": "SUGGESTED_CACHED_RESULTS_SIZE",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "10"
    },
    {
      "name": "CACHE_RESULTS_DESCRIPTION",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Number of Decompiled Functions to Cache in the Decompile Window\""
    },
    {
      "name": "LINE_NUMBER_MSG",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Display.Display Line Numbers\""
    },
    {
      "name": "DECOMPILE_TIMEOUT",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Decompiler Timeout (seconds)\""
    },
    {
      "name": "PAYLOAD_LIMIT",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Decompiler Max-Payload (MBytes)\""
    },
    {
      "name": "MAX_INSTRUCTIONS",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Max Instructions per Function\""
    },
    {
      "name": "LINE_NUMBER_DEF",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.Boolean",
      "type_short": "Boolean",
      "constant_value": null
    },
    {
      "name": "displayLineNumbers",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "decompileTimeoutSeconds",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "payloadLimitMBytes",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "maxIntructionsPer",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "cachedResultsSize",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "displayLanguage",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.lang.DecompilerLanguage",
      "type_short": "DecompilerLanguage",
      "constant_value": null
    },
    {
      "name": "protoEvalModel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "grabFromToolAndProgram",
      "comment": "Grab all the decompiler options from various sources within a specific tool and program\n and cache them in this object.",
      "javadoc": "Grab all the decompiler options from various sources within a specific tool and program\n and cache them in this object.\n@param ownerPlugin the plugin that owns the \"tool options\" for the decompiler\n@param opt the Options object that contains the \"tool options\" specific to the decompiler\n@param program the program whose \"program options\" are relevant to the decompiler",
      "static": false,
      "params": [
        {
          "name": "ownerPlugin",
          "type_long": "ghidra.framework.plugintool.Plugin",
          "type_short": "Plugin",
          "comment": "the plugin that owns the \"tool options\" for the decompiler"
        },
        {
          "name": "opt",
          "type_long": "ghidra.framework.options.ToolOptions",
          "type_short": "ToolOptions",
          "comment": "the Options object that contains the \"tool options\" specific to the decompiler"
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "the program whose \"program options\" are relevant to the decompiler"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "grabFromToolOptions",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "ownerPlugin",
          "type_long": "ghidra.framework.plugintool.Plugin",
          "type_short": "Plugin",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "grabFromProgram",
      "comment": "Grab all the decompiler options from the program specifically\n and cache them in this object.",
      "javadoc": "Grab all the decompiler options from the program specifically\n and cache them in this object.\n@param program the program whose \"program options\" are relevant to the decompiler",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "the program whose \"program options\" are relevant to the decompiler"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getProtoEvalModel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setProtoEvalModel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "protoEvalModel",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "registerOptions",
      "comment": "This registers all the decompiler tool options with ghidra, and has the side effect of\n pulling all the current values for the options if they exist",
      "javadoc": "This registers all the decompiler tool options with ghidra, and has the side effect of\n pulling all the current values for the options if they exist\n@param ownerPlugin the plugin to which the options should be registered\n@param opt the options object to register with\n@param program the program",
      "static": false,
      "params": [
        {
          "name": "ownerPlugin",
          "type_long": "ghidra.framework.plugintool.Plugin",
          "type_short": "Plugin",
          "comment": "the plugin to which the options should be registered"
        },
        {
          "name": "opt",
          "type_long": "ghidra.framework.options.ToolOptions",
          "type_short": "ToolOptions",
          "comment": "the options object to register with"
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "the program"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "appendOption",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "buf",
          "type_long": "java.lang.StringBuffer",
          "type_short": "StringBuffer",
          "comment": ""
        },
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "p1",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "p2",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "p3",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getXML",
      "comment": "Produce XML document of configuration options\n to be sent to decompiler process. This object\n is global to all decompile processes so we can\n tailor to the specific process by passing in the\n interface",
      "javadoc": "Produce XML document of configuration options\n to be sent to decompiler process. This object\n is global to all decompile processes so we can\n tailor to the specific process by passing in the\n interface\n@param iface specific DecompInterface being sent options\n@return XML document as a string",
      "static": false,
      "params": [
        {
          "name": "iface",
          "type_long": "ghidra.app.decompiler.DecompInterface",
          "type_short": "DecompInterface",
          "comment": "specific DecompInterface being sent options"
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "XML document as a string"
      },
      "throws": []
    },
    {
      "name": "getMaxWidth",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setMaxWidth",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "maxwidth",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getKeywordColor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Color",
        "type_short": "Color",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getTypeColor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Color",
        "type_short": "Color",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFunctionColor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Color",
        "type_short": "Color",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getCommentColor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Color",
        "type_short": "Color",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getConstantColor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Color",
        "type_short": "Color",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getVariableColor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Color",
        "type_short": "Color",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getParameterColor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Color",
        "type_short": "Color",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getGlobalColor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Color",
        "type_short": "Color",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDefaultColor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Color",
        "type_short": "Color",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getCodeViewerBackgroundColor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Color",
        "type_short": "Color",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getCurrentVariableHighlightColor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Color",
        "type_short": "Color",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getMiddleMouseHighlightColor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Color",
        "type_short": "Color",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSearchHighlightColor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Color",
        "type_short": "Color",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getMiddleMouseHighlightButton",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isPRECommentIncluded",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setPRECommentIncluded",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "commentPREInclude",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isPLATECommentIncluded",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setPLATECommentIncluded",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "commentPLATEInclude",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isPOSTCommentIncluded",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setPOSTCommentIncluded",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "commentPOSTInclude",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isEOLCommentIncluded",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setEOLCommentIncluded",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "commentEOLInclude",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isWARNCommentIncluded",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setWARNCommentIncluded",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "commentWARNInclude",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isHeadCommentIncluded",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setHeadCommentIncluded",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "commentHeadInclude",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isEliminateUnreachable",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setEliminateUnreachable",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "eliminateUnreachable",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isSimplifyDoublePrecision",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setSimplifyDoublePrecision",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "simplifyDoublePrecision",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isDisplayLineNumbers",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDisplayLanguage",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.lang.DecompilerLanguage",
        "type_short": "DecompilerLanguage",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isConventionPrint",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setConventionPrint",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "conventionPrint",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isNoCastPrint",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setNoCastPrint",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "noCastPrint",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setDisplayLanguage",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "val",
          "type_long": "ghidra.program.model.lang.DecompilerLanguage",
          "type_short": "DecompilerLanguage",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDefaultFont",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Font",
        "type_short": "Font",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDefaultTimeout",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setDefaultTimeout",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "timeout",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getMaxPayloadMBytes",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setMaxPayloadMBytes",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "mbytes",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getMaxInstructions",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setMaxInstructions",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "num",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getCommentStyle",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.decompiler.DecompileOptions.CommentStyleEnum",
        "type_short": "CommentStyleEnum",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setCommentStyle",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "commentStyle",
          "type_long": "ghidra.app.decompiler.DecompileOptions.CommentStyleEnum",
          "type_short": "CommentStyleEnum",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getCacheSize",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    }
  ]
}
