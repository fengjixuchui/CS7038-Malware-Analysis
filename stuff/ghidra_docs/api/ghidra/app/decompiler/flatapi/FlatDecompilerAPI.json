{
  "name": "FlatDecompilerAPI",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [
    "ghidra.util.Disposable"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "flatProgramAPI",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.flatapi.FlatProgramAPI",
      "type_short": "FlatProgramAPI",
      "constant_value": null
    },
    {
      "name": "decompiler",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.decompiler.DecompInterface",
      "type_short": "DecompInterface",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Initializes without a provided FlatProgramAPI instance...this must be set before\n using the FlatDecompilerAPI!",
      "javadoc": "Initializes without a provided FlatProgramAPI instance...this must be set before\n using the FlatDecompilerAPI!",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Initializes with a provided FlatProgramAPI instance.",
      "javadoc": "Initializes with a provided FlatProgramAPI instance.\n@param flatProgramAPI the FlatProgramAPI instance.",
      "static": false,
      "params": [
        {
          "name": "flatProgramAPI",
          "type_long": "ghidra.program.flatapi.FlatProgramAPI",
          "type_short": "FlatProgramAPI",
          "comment": "the FlatProgramAPI instance."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDecompiler",
      "comment": "Gets the actual decompiler (may be null if not initialized).",
      "javadoc": "Gets the actual decompiler (may be null if not initialized).\n@return the decompiler",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.decompiler.DecompInterface",
        "type_short": "DecompInterface",
        "comment": "the decompiler"
      },
      "throws": []
    },
    {
      "name": "decompile",
      "comment": "Decompiles the specified function and returns a\n string containing the decompilation.\n This call does not impose a timeout.",
      "javadoc": "Decompiles the specified function and returns a\n string containing the decompilation.\n This call does not impose a timeout.\n@param function the function to decompile\n@return a string containing the decompilation",
      "static": false,
      "params": [
        {
          "name": "function",
          "type_long": "ghidra.program.model.listing.Function",
          "type_short": "Function",
          "comment": "the function to decompile"
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "a string containing the decompilation"
      },
      "throws": [
        {
          "type_long": "java.lang.Exception",
          "type_short": "Exception",
          "comment": ""
        }
      ]
    },
    {
      "name": "decompile",
      "comment": "Decompiles the specified function and returns a\n string containing the decompilation.",
      "javadoc": "Decompiles the specified function and returns a\n string containing the decompilation.\n@param function the function to decompile\n@param timeoutSecs maximum time allowed for decompile to complete.\n@return a string containing the decompilation",
      "static": false,
      "params": [
        {
          "name": "function",
          "type_long": "ghidra.program.model.listing.Function",
          "type_short": "Function",
          "comment": "the function to decompile"
        },
        {
          "name": "timeoutSecs",
          "type_long": "int",
          "type_short": "int",
          "comment": "maximum time allowed for decompile to complete."
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "a string containing the decompilation"
      },
      "throws": [
        {
          "type_long": "java.lang.Exception",
          "type_short": "Exception",
          "comment": ""
        }
      ]
    },
    {
      "name": "initialize",
      "comment": "Initializes the decompiler instance.",
      "javadoc": "Initializes the decompiler instance.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.lang.Exception",
          "type_short": "Exception",
          "comment": ""
        }
      ]
    },
    {
      "name": "dispose",
      "comment": "Disposes of the decompiler resources by calling currentDecompiler.dispose().",
      "javadoc": "Disposes of the decompiler resources by calling currentDecompiler.dispose().",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
