{
  "name": "PrettyPrinter",
  "comment": "This class is used to convert a C language\n token group into readable C code.",
  "javadoc": "This class is used to convert a C language\n token group into readable C code.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "INDENT_STRING",
      "comment": "The indent string to use when printing.",
      "javadoc": "The indent string to use when printing.",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\" \""
    },
    {
      "name": "function",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.listing.Function",
      "type_short": "Function",
      "constant_value": null
    },
    {
      "name": "tokgroup",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.decompiler.ClangTokenGroup",
      "type_short": "ClangTokenGroup",
      "constant_value": null
    },
    {
      "name": "lines",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.ArrayList\u003cghidra.app.decompiler.ClangLine\u003e",
      "type_short": "ArrayList",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new pretty printer using the specified C language token group.",
      "javadoc": "Constructs a new pretty printer using the specified C language token group.\n@param tokgroup the C language token group",
      "static": false,
      "params": [
        {
          "name": "function",
          "type_long": "ghidra.program.model.listing.Function",
          "type_short": "Function",
          "comment": ""
        },
        {
          "name": "tokgroup",
          "type_long": "ghidra.app.decompiler.ClangTokenGroup",
          "type_short": "ClangTokenGroup",
          "comment": "the C language token group"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "padEmptyLines",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFunction",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.listing.Function",
        "type_short": "Function",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLines",
      "comment": "Returns an array list of the C language lines contained in the\n C language token group.",
      "javadoc": "Returns an array list of the C language lines contained in the\n C language token group.\n@return an array list of the C language lines",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.ArrayList\u003cghidra.app.decompiler.ClangLine\u003e",
        "type_short": "ArrayList",
        "comment": "an array list of the C language lines"
      },
      "throws": []
    },
    {
      "name": "print",
      "comment": "Prints the C language token group\n into a string of C code.",
      "javadoc": "Prints the C language token group\n into a string of C code.\n@param removeInvalidChars true if invalid character should be\n removed from functions and labels.\n@return a string of readable C code",
      "static": false,
      "params": [
        {
          "name": "removeInvalidChars",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true if invalid character should be\n removed from functions and labels."
        }
      ],
      "return": {
        "type_long": "ghidra.app.decompiler.DecompiledFunction",
        "type_short": "DecompiledFunction",
        "comment": "a string of readable C code"
      },
      "throws": []
    },
    {
      "name": "findSignature",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "flattenLines",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
