{
  "name": "CreateStructureCmd",
  "comment": "Command to create a structure.",
  "javadoc": "Command to create a structure.",
  "static": false,
  "implements": [],
  "extends": "ghidra.app.cmd.data.AbstractCreateStructureCmd",
  "fields": [
    {
      "name": "structureDataLength",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "structure",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.data.Structure",
      "type_short": "Structure",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new command for creating a new structure and applying it to\n the browser.  This method simply calls \n #CreateStructureCmd(String, Address, int) with \n ghidra.program.model.data.StructureFactory#DEFAULT_STRUCTURE_NAME as the name of the structure.",
      "javadoc": "Constructs a new command for creating a new structure and applying it to\n the browser.  This method simply calls \n {@link #CreateStructureCmd(String, Address, int)} with \n {@link ghidra.program.model.data.StructureFactory#DEFAULT_STRUCTURE_NAME} as the name of the structure.\n@param address the address at which to create the new structure.\n@param length the number of undefined bytes to consume in the new \n        structure.",
      "static": false,
      "params": [
        {
          "name": "address",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "the address at which to create the new structure."
        },
        {
          "name": "length",
          "type_long": "int",
          "type_short": "int",
          "comment": "the number of undefined bytes to consume in the new \n        structure."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new command for creating a new structure and applying it to\n the browser.",
      "javadoc": "Constructs a new command for creating a new structure and applying it to\n the browser.\n@param name The name of the new structure to create.\n@param address the address at which to create the new structure.\n@param length the number of undefined bytes to consume in the new \n        structure.",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "The name of the new structure to create."
        },
        {
          "name": "address",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "the address at which to create the new structure."
        },
        {
          "name": "length",
          "type_long": "int",
          "type_short": "int",
          "comment": "the number of undefined bytes to consume in the new \n        structure."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Creates a new structure by using the provided structure and attaching\n it to the program passed in the #applyTo(DomainObject) method.",
      "javadoc": "Creates a new structure by using the provided structure and attaching\n it to the program passed in the {@link #applyTo(DomainObject)} method.\n@param newStructure The new structure to attach to the program \n        provided in the {@link #applyTo(DomainObject)} method.\n@param address the address at which to create the new structure.",
      "static": false,
      "params": [
        {
          "name": "newStructure",
          "type_long": "ghidra.program.model.data.Structure",
          "type_short": "Structure",
          "comment": "The new structure to attach to the program \n        provided in the #applyTo(DomainObject) method."
        },
        {
          "name": "address",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "the address at which to create the new structure."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createStructure",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "address",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.data.Structure",
        "type_short": "Structure",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "initializeStructureData",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "localStructure",
          "type_long": "ghidra.program.model.data.Structure",
          "type_short": "Structure",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.data.DataType",
        "type_short": "DataType",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "findExistingRefs",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "refMgr",
          "type_long": "ghidra.program.model.symbol.ReferenceManager",
          "type_short": "ReferenceManager",
          "comment": ""
        },
        {
          "name": "af",
          "type_long": "ghidra.program.model.address.AddressFactory",
          "type_short": "AddressFactory",
          "comment": ""
        },
        {
          "name": "start",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "end",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.symbol.Reference[]",
        "type_short": "ghidra.program.model.symbol.Reference[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addRefs",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "p",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "refMgr",
          "type_long": "ghidra.program.model.symbol.ReferenceManager",
          "type_short": "ReferenceManager",
          "comment": ""
        },
        {
          "name": "refs",
          "type_long": "ghidra.program.model.symbol.Reference[]",
          "type_short": "ghidra.program.model.symbol.Reference[]",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
