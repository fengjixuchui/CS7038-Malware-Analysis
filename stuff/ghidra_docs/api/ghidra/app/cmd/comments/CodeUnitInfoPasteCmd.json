{
  "name": "CodeUnitInfoPasteCmd",
  "comment": "Undoable edit for pasting code unit information at a location.\n This class actually does the work of the \"paste.\"",
  "javadoc": "Undoable edit for pasting code unit information at a location.\n This class actually does the work of the \"paste.\"",
  "static": false,
  "implements": [
    "ghidra.framework.cmd.Command"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "infoList",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cghidra.app.util.CodeUnitInfo\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "startAddr",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.address.Address",
      "type_short": "Address",
      "constant_value": null
    },
    {
      "name": "messages",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.StringBuilder",
      "type_short": "StringBuilder",
      "constant_value": null
    },
    {
      "name": "pasteLabels",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "pasteComments",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Creates a new command for pasting comments/labels.",
      "javadoc": "Creates a new command for pasting comments/labels.\n@param startAddr starting address for info\n@param infoList list of CodeUnitInfo objects that will be applied",
      "static": false,
      "params": [
        {
          "name": "startAddr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "starting address for info"
        },
        {
          "name": "infoList",
          "type_long": "java.util.List\u003cghidra.app.util.CodeUnitInfo\u003e",
          "type_short": "List",
          "comment": "list of CodeUnitInfo objects that will be applied"
        },
        {
          "name": "pasteLabels",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        },
        {
          "name": "pasteComments",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getName",
      "comment": "The name of the edit action.",
      "javadoc": "The name of the edit action.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "applyTo",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "obj",
          "type_long": "ghidra.framework.model.DomainObject",
          "type_short": "DomainObject",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getStatusMsg",
      "comment": "",
      "javadoc": "@see ghidra.framework.cmd.Command#getStatusMsg()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setFunction",
      "comment": "Get the original function info and save it off in the undoMap;\n set the function info using the new info object.",
      "javadoc": "Get the original function info and save it off in the undoMap;\n set the function info using the new info object.\n@param listing listing\n@param addr address of where to look for a function\n@param info new info to use",
      "static": false,
      "params": [
        {
          "name": "listing",
          "type_long": "ghidra.program.model.listing.Listing",
          "type_short": "Listing",
          "comment": "listing"
        },
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "address of where to look for a function"
        },
        {
          "name": "info",
          "type_long": "ghidra.app.util.CodeUnitInfo",
          "type_short": "CodeUnitInfo",
          "comment": "new info to use"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "findStackVar",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "stackVars",
          "type_long": "ghidra.program.model.listing.Variable[]",
          "type_short": "ghidra.program.model.listing.Variable[]",
          "comment": ""
        },
        {
          "name": "stackOffset",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "firstUseOffset",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.listing.Variable",
        "type_short": "Variable",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "findVar",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "vars",
          "type_long": "ghidra.program.model.listing.Variable[]",
          "type_short": "ghidra.program.model.listing.Variable[]",
          "comment": ""
        },
        {
          "name": "storageAddr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "firstUseOffset",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.listing.Variable",
        "type_short": "Variable",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setLabel",
      "comment": "Set the label at the given address.",
      "javadoc": "Set the label at the given address.\n@param symTable symbol table\n@param addr address for the label\n@param info object containing label and aliases",
      "static": false,
      "params": [
        {
          "name": "listing",
          "type_long": "ghidra.program.model.listing.Listing",
          "type_short": "Listing",
          "comment": ""
        },
        {
          "name": "symTable",
          "type_long": "ghidra.program.model.symbol.SymbolTable",
          "type_short": "SymbolTable",
          "comment": "symbol table"
        },
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "address for the label"
        },
        {
          "name": "info",
          "type_long": "ghidra.app.util.CodeUnitInfo",
          "type_short": "CodeUnitInfo",
          "comment": "object containing label and aliases"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createSymbols",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "symTable",
          "type_long": "ghidra.program.model.symbol.SymbolTable",
          "type_short": "SymbolTable",
          "comment": ""
        },
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "symbolNames",
          "type_long": "java.lang.String[]",
          "type_short": "java.lang.String[]",
          "comment": ""
        },
        {
          "name": "scope",
          "type_long": "ghidra.program.model.symbol.Namespace",
          "type_short": "Namespace",
          "comment": ""
        },
        {
          "name": "symbolSources",
          "type_long": "ghidra.program.model.symbol.SourceType[]",
          "type_short": "ghidra.program.model.symbol.SourceType[]",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setComments",
      "comment": "Set the comments at the given address.",
      "javadoc": "Set the comments at the given address.\n@param cu code unit\n@param addr address of where to put the comments\n@param info info that has the comments to set",
      "static": false,
      "params": [
        {
          "name": "cu",
          "type_long": "ghidra.program.model.listing.CodeUnit",
          "type_short": "CodeUnit",
          "comment": "code unit"
        },
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "address of where to put the comments"
        },
        {
          "name": "info",
          "type_long": "ghidra.app.util.CodeUnitInfo",
          "type_short": "CodeUnitInfo",
          "comment": "info that has the comments to set"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "appendComment",
      "comment": "Append comment2 onto comment1.",
      "javadoc": "Append comment2 onto comment1.",
      "static": false,
      "params": [
        {
          "name": "comment1",
          "type_long": "java.lang.String[]",
          "type_short": "java.lang.String[]",
          "comment": ""
        },
        {
          "name": "comment2",
          "type_long": "java.lang.String[]",
          "type_short": "java.lang.String[]",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String[]",
        "type_short": "java.lang.String[]",
        "comment": ""
      },
      "throws": []
    }
  ]
}
