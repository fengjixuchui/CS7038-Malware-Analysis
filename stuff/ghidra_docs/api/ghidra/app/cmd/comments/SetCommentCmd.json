{
  "name": "SetCommentCmd",
  "comment": "Command to set a specific type of comment on a code unit.",
  "javadoc": "Command to set a specific type of comment on a code unit.",
  "static": false,
  "implements": [
    "ghidra.framework.cmd.Command"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "address",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.address.Address",
      "type_short": "Address",
      "constant_value": null
    },
    {
      "name": "commentType",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "comment",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "cmdName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "message",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct command",
      "javadoc": "Construct command\n@param addr address of code unit where comment will be placed\n@param commentType valid comment type (see CodeUnit)\n@param comment comment for code unit",
      "static": false,
      "params": [
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "address of code unit where comment will be placed"
        },
        {
          "name": "commentType",
          "type_long": "int",
          "type_short": "int",
          "comment": "valid comment type (see CodeUnit)"
        },
        {
          "name": "comment",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "comment for code unit"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getName",
      "comment": "",
      "javadoc": "@see ghidra.framework.cmd.Command#getName()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "commentChanged",
      "comment": "return true if the newValue and oldValue are different",
      "javadoc": "return true if the newValue and oldValue are different\n@param newValue a String containing the new comment\n@param oldValue a String containing the old comment\n@return true if newValue and oldValue are different.",
      "static": false,
      "params": [
        {
          "name": "newValue",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "a String containing the new comment"
        },
        {
          "name": "oldValue",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "a String containing the old comment"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if newValue and oldValue are different."
      },
      "throws": []
    },
    {
      "name": "applyTo",
      "comment": "",
      "javadoc": "@see ghidra.framework.cmd.Command#applyTo(ghidra.framework.model.DomainObject)",
      "static": false,
      "params": [
        {
          "name": "obj",
          "type_long": "ghidra.framework.model.DomainObject",
          "type_short": "DomainObject",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getCodeUnit",
      "comment": "Get the code unit from the program location provider.",
      "javadoc": "Get the code unit from the program location provider.\n@return CodeUnit null if there is no location provider.",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.listing.CodeUnit",
        "type_short": "CodeUnit",
        "comment": "CodeUnit null if there is no location provider."
      },
      "throws": []
    },
    {
      "name": "getStatusMsg",
      "comment": "",
      "javadoc": "@see ghidra.framework.cmd.Command#getStatusMsg()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createComment",
      "comment": "Creates the specified comment of the specified type at address.  The current comment of\n this commentType will be cleared.",
      "javadoc": "Creates the specified comment of the specified type at address.  The current comment of\n this commentType will be cleared.\n@param program the program being analyzed\n@param addr the address where data is created\n@param comment the comment about the data\n@param commentType the type of comment ({@link CodeUnit#PLATE_COMMENT}, \n {@link CodeUnit#PRE_COMMENT}, {@link CodeUnit#EOL_COMMENT}, {@link CodeUnit#POST_COMMENT},\n {@link CodeUnit#REPEATABLE_COMMENT})",
      "static": true,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "the program being analyzed"
        },
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "the address where data is created"
        },
        {
          "name": "comment",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the comment about the data"
        },
        {
          "name": "commentType",
          "type_long": "int",
          "type_short": "int",
          "comment": "the type of comment (CodeUnit#PLATE_COMMENT, \n CodeUnit#PRE_COMMENT, CodeUnit#EOL_COMMENT, CodeUnit#POST_COMMENT,\n CodeUnit#REPEATABLE_COMMENT)"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
