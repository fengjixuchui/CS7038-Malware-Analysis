{
  "name": "SubroutineModelCmd",
  "comment": "Command that organizes a Module or Fragment according to a specified block\n model. This organization produces a \"flat\" (single layer) partitioning.",
  "javadoc": "Command that organizes a Module or Fragment according to a specified block\n model. This organization produces a \"flat\" (single layer) partitioning.\n@see ghidra.program.model.block.CodeBlockModel",
  "static": false,
  "implements": [],
  "extends": "ghidra.framework.cmd.BackgroundCommand",
  "fields": [
    {
      "name": "NEW_MODULE_SUFFIX",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\" [Subroutines]\""
    },
    {
      "name": "PROGRAM_CHANGED_MESSAGE",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Organize algorithm did not run: Program Tree has changed since the algorithm was scheduled.\""
    },
    {
      "name": "blockModelService",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.services.BlockModelService",
      "type_short": "BlockModelService",
      "constant_value": null
    },
    {
      "name": "treeName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "groupPath",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.util.GroupPath",
      "type_short": "GroupPath",
      "constant_value": null
    },
    {
      "name": "modelName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "tool",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.plugintool.PluginTool",
      "type_short": "PluginTool",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor",
      "javadoc": "Constructor\n@param groupPath group path of the affected Module or Fragment\n@param treeName name of the tree where group exists\n@param blockModelService service that has the known block models\n@param modelName name of the model to use",
      "static": false,
      "params": [
        {
          "name": "groupPath",
          "type_long": "ghidra.program.util.GroupPath",
          "type_short": "GroupPath",
          "comment": "group path of the affected Module or Fragment"
        },
        {
          "name": "treeName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "name of the tree where group exists"
        },
        {
          "name": "blockModelService",
          "type_long": "ghidra.app.services.BlockModelService",
          "type_short": "BlockModelService",
          "comment": "service that has the known block models"
        },
        {
          "name": "modelName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "name of the model to use"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "applyTo",
      "comment": "",
      "javadoc": "@see ghidra.framework.cmd.BackgroundCommand#applyTo(ghidra.framework.model.DomainObject,\n      ghidra.util.task.TaskMonitor)",
      "static": false,
      "params": [
        {
          "name": "obj",
          "type_long": "ghidra.framework.model.DomainObject",
          "type_short": "DomainObject",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setPluginTool",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "tool",
          "type_long": "ghidra.framework.plugintool.PluginTool",
          "type_short": "PluginTool",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "changeModel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "root",
          "type_long": "ghidra.program.model.listing.ProgramModule",
          "type_short": "ProgramModule",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.NotEmptyException",
          "type_short": "NotEmptyException",
          "comment": ""
        },
        {
          "type_long": "ghidra.util.exception.NotFoundException",
          "type_short": "NotFoundException",
          "comment": ""
        },
        {
          "type_long": "ghidra.util.exception.DuplicateNameException",
          "type_short": "DuplicateNameException",
          "comment": ""
        }
      ]
    },
    {
      "name": "createFragment",
      "comment": "Create a fragment with the name as the name of the given block; append a\n one-up number if we get a DuplicateNameException.",
      "javadoc": "Create a fragment with the name as the name of the given block; append a\n one-up number if we get a DuplicateNameException.\n@param root parent module\n@param block code block\n@return Fragment new fragment",
      "static": false,
      "params": [
        {
          "name": "root",
          "type_long": "ghidra.program.model.listing.ProgramModule",
          "type_short": "ProgramModule",
          "comment": "parent module"
        },
        {
          "name": "block",
          "type_long": "ghidra.program.model.block.CodeBlock",
          "type_short": "CodeBlock",
          "comment": "code block"
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.listing.ProgramFragment",
        "type_short": "ProgramFragment",
        "comment": "Fragment new fragment"
      },
      "throws": []
    },
    {
      "name": "createModule",
      "comment": "Create a fragment with the name as the name of the given block; append a\n one-up number if we get a DuplicateNameException.",
      "javadoc": "Create a fragment with the name as the name of the given block; append a\n one-up number if we get a DuplicateNameException.\n@param root parent module\n@param block code block\n@return Fragment new fragment",
      "static": false,
      "params": [
        {
          "name": "root",
          "type_long": "ghidra.program.model.listing.ProgramModule",
          "type_short": "ProgramModule",
          "comment": "parent module"
        },
        {
          "name": "nodeName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.listing.ProgramModule",
        "type_short": "ProgramModule",
        "comment": "Fragment new fragment"
      },
      "throws": []
    },
    {
      "name": "moveCodeUnits",
      "comment": "Method moveCodeUnits. Moves the code units into a Fragment",
      "javadoc": "Method moveCodeUnits. Moves the code units into a Fragment\n@param fragment the Fragment where the code units are moved to.\n@param block the CodeBlock containing the code to be moved.\n@param monitor the TaskMonitor to allow for cancelling.\n@throws NotFoundException",
      "static": false,
      "params": [
        {
          "name": "fragment",
          "type_long": "ghidra.program.model.listing.ProgramFragment",
          "type_short": "ProgramFragment",
          "comment": "the Fragment where the code units are moved to."
        },
        {
          "name": "block",
          "type_long": "ghidra.program.model.block.CodeBlock",
          "type_short": "CodeBlock",
          "comment": "the CodeBlock containing the code to be moved."
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": "the TaskMonitor to allow for cancelling."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.NotFoundException",
          "type_short": "NotFoundException",
          "comment": ""
        }
      ]
    }
  ]
}
