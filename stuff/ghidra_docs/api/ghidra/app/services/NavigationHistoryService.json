{
  "name": "NavigationHistoryService",
  "comment": "The ToolStateHistoryService maintains a stack of locations that the user \n has visited via a navigation plugin.  \n It provides methods querying and manipulating this list.",
  "javadoc": "The ToolStateHistoryService maintains a stack of locations that the user \n has visited via a navigation plugin.  \n It provides methods querying and manipulating this list.",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "next",
      "comment": "Positions the current location to the next location in the history list.\n If there is no \"next\" location, the history list remains unchanged.",
      "javadoc": "Positions the current location to the next location in the history list.\n If there is no \"next\" location, the history list remains unchanged.\n@param navigatable the navigatable to be navigated",
      "static": false,
      "params": [
        {
          "name": "navigatable",
          "type_long": "ghidra.app.nav.Navigatable",
          "type_short": "Navigatable",
          "comment": "the navigatable to be navigated"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "previous",
      "comment": "Positions the \"current\" location to the previous location in the history list.\n If there is no \"previous\" location, the history list remains unchanged.",
      "javadoc": "Positions the \"current\" location to the previous location in the history list.\n If there is no \"previous\" location, the history list remains unchanged.\n@param navigatable the navigatable to be navigated",
      "static": false,
      "params": [
        {
          "name": "navigatable",
          "type_long": "ghidra.app.nav.Navigatable",
          "type_short": "Navigatable",
          "comment": "the navigatable to be navigated"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "next",
      "comment": "Navigates to the given location in the \"next\" list.  If the location is not in the list, then\n nothing will happen.",
      "javadoc": "Navigates to the given location in the \"next\" list.  If the location is not in the list, then\n nothing will happen.\n@param navigatable the navigatable to be navigated\n@param location The location within the \"next\" list to which to go",
      "static": false,
      "params": [
        {
          "name": "navigatable",
          "type_long": "ghidra.app.nav.Navigatable",
          "type_short": "Navigatable",
          "comment": "the navigatable to be navigated"
        },
        {
          "name": "location",
          "type_long": "ghidra.app.nav.LocationMemento",
          "type_short": "LocationMemento",
          "comment": "The location within the \"next\" list to which to go"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "previous",
      "comment": "Navigates to the given location in the \"previous\" list.  If the location is not in \n the list, then nothing will happen",
      "javadoc": "Navigates to the given location in the \"previous\" list.  If the location is not in \n the list, then nothing will happen\n@param navigatable the navigatable to be navigated\n@param location The location within the \"previous\" list to which to go.",
      "static": false,
      "params": [
        {
          "name": "navigatable",
          "type_long": "ghidra.app.nav.Navigatable",
          "type_short": "Navigatable",
          "comment": "the navigatable to be navigated"
        },
        {
          "name": "location",
          "type_long": "ghidra.app.nav.LocationMemento",
          "type_short": "LocationMemento",
          "comment": "The location within the \"previous\" list to which to go."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "nextFunction",
      "comment": "Positions the \"current\" location to the next location which is in a different function\n from current one or previous non-code location.\n If we are not inside any function, performs like \"next\".",
      "javadoc": "Positions the \"current\" location to the next location which is in a different function\n from current one or previous non-code location.\n If we are not inside any function, performs like \"next\".\n@param navigatable the navigatable to be navigated",
      "static": false,
      "params": [
        {
          "name": "navigatable",
          "type_long": "ghidra.app.nav.Navigatable",
          "type_short": "Navigatable",
          "comment": "the navigatable to be navigated"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "previousFunction",
      "comment": "Positions the \"previous\" location to the next location which is in a different function\n from current one or previous non-code location.\n If we are not inside any function, performs like \"next\".",
      "javadoc": "Positions the \"previous\" location to the next location which is in a different function\n from current one or previous non-code location.\n If we are not inside any function, performs like \"next\".\n@param navigatable the navigatable to be navigated",
      "static": false,
      "params": [
        {
          "name": "navigatable",
          "type_long": "ghidra.app.nav.Navigatable",
          "type_short": "Navigatable",
          "comment": "the navigatable to be navigated"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPreviousLocations",
      "comment": "Returns the LocationMemento objects in the \"previous\" list",
      "javadoc": "Returns the LocationMemento objects in the \"previous\" list\n@param navigatable the navigatable to be navigated\n@return the LocationMemento objects in the \"previous\" list",
      "static": false,
      "params": [
        {
          "name": "navigatable",
          "type_long": "ghidra.app.nav.Navigatable",
          "type_short": "Navigatable",
          "comment": "the navigatable to be navigated"
        }
      ],
      "return": {
        "type_long": "java.util.List\u003cghidra.app.nav.LocationMemento\u003e",
        "type_short": "List",
        "comment": "the LocationMemento objects in the \"previous\" list"
      },
      "throws": []
    },
    {
      "name": "getNextLocations",
      "comment": "Returns the LocationMemento objects in the \"next\" list",
      "javadoc": "Returns the LocationMemento objects in the \"next\" list\n@param navigatable the navigatable to be navigated\n@return the LocationMemento objects in the \"next\" list",
      "static": false,
      "params": [
        {
          "name": "navigatable",
          "type_long": "ghidra.app.nav.Navigatable",
          "type_short": "Navigatable",
          "comment": "the navigatable to be navigated"
        }
      ],
      "return": {
        "type_long": "java.util.List\u003cghidra.app.nav.LocationMemento\u003e",
        "type_short": "List",
        "comment": "the LocationMemento objects in the \"next\" list"
      },
      "throws": []
    },
    {
      "name": "hasNext",
      "comment": "Returns true if there is a valid \"next\" location in the history list.",
      "javadoc": "Returns true if there is a valid \"next\" location in the history list.\n@param navigatable the navigatable to be navigated\n@return true if there is a \"next\" location",
      "static": false,
      "params": [
        {
          "name": "navigatable",
          "type_long": "ghidra.app.nav.Navigatable",
          "type_short": "Navigatable",
          "comment": "the navigatable to be navigated"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if there is a \"next\" location"
      },
      "throws": []
    },
    {
      "name": "hasPrevious",
      "comment": "Returns true if there is a valid \"previous\" location in the history list",
      "javadoc": "Returns true if there is a valid \"previous\" location in the history list\n@param navigatable the navigatable to be navigated\n@return true if there is a \"previous\" location",
      "static": false,
      "params": [
        {
          "name": "navigatable",
          "type_long": "ghidra.app.nav.Navigatable",
          "type_short": "Navigatable",
          "comment": "the navigatable to be navigated"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if there is a \"previous\" location"
      },
      "throws": []
    },
    {
      "name": "hasNextFunction",
      "comment": "Returns true if there is a valid \"next\" function location in the history list",
      "javadoc": "Returns true if there is a valid \"next\" function location in the history list\n@param navigatable Navigatable object we are looking at\n@return true if there is a valid \"next\" function location",
      "static": false,
      "params": [
        {
          "name": "navigatable",
          "type_long": "ghidra.app.nav.Navigatable",
          "type_short": "Navigatable",
          "comment": "Navigatable object we are looking at"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if there is a valid \"next\" function location"
      },
      "throws": []
    },
    {
      "name": "hasPreviousFunction",
      "comment": "Returns true if there is a valid \"previous\" function location in the history list",
      "javadoc": "Returns true if there is a valid \"previous\" function location in the history list\n@param navigatable Navigatable object we are looking at\n@return true if there is a valid \"previous\" function location",
      "static": false,
      "params": [
        {
          "name": "navigatable",
          "type_long": "ghidra.app.nav.Navigatable",
          "type_short": "Navigatable",
          "comment": "Navigatable object we are looking at"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if there is a valid \"previous\" function location"
      },
      "throws": []
    },
    {
      "name": "addNewLocation",
      "comment": "Adds the given locationMomento to the list of previous locations.  Clears the list\n of next locations.",
      "javadoc": "Adds the given locationMomento to the list of previous locations.  Clears the list\n of next locations.\n@param navigatable the navigatable to be navigated",
      "static": false,
      "params": [
        {
          "name": "navigatable",
          "type_long": "ghidra.app.nav.Navigatable",
          "type_short": "Navigatable",
          "comment": "the navigatable to be navigated"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "clear",
      "comment": "Removes all visited locations from the history list",
      "javadoc": "Removes all visited locations from the history list\n@param navigatable the navigatable to be navigated",
      "static": false,
      "params": [
        {
          "name": "navigatable",
          "type_long": "ghidra.app.nav.Navigatable",
          "type_short": "Navigatable",
          "comment": "the navigatable to be navigated"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
