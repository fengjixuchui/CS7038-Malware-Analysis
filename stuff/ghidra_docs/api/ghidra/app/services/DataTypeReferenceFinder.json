{
  "name": "DataTypeReferenceFinder",
  "comment": "An interface for extension points to implement.  Implementations know how to find data type\n references.\n \n Implementation class names must end with DataTypeReferenceFinder",
  "javadoc": "An interface for extension points to implement.  Implementations know how to find data type\n references.\n \u003cp\u003e\n Implementation class names must end with DataTypeReferenceFinder",
  "static": false,
  "implements": [
    "ghidra.util.classfinder.ExtensionPoint"
  ],
  "fields": [],
  "methods": [
    {
      "name": "findReferences",
      "comment": "Finds references in the current program in a manner appropriate with the given \n implementation.\n \n Note that this operation is multi-threaded and that results will be delivered as they \n are found via the callback.",
      "javadoc": "Finds references in the current program in a manner appropriate with the given \n implementation.\n \u003cp\u003e\n Note that this operation is multi-threaded and that results will be delivered as they \n are found via the \u003ccode\u003ecallback\u003c/code\u003e.\n@param program the program to search\n@param dataType the type for which to search\n@param callback the callback to be called when a reference is found\n@param monitor the monitor that allows for progress and cancellation\n@throws CancelledException if the operation was cancelled",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "the program to search"
        },
        {
          "name": "dataType",
          "type_long": "ghidra.program.model.data.DataType",
          "type_short": "DataType",
          "comment": "the type for which to search"
        },
        {
          "name": "callback",
          "type_long": "java.util.function.Consumer\u003cghidra.app.services.DataTypeReference\u003e",
          "type_short": "Consumer",
          "comment": "the callback to be called when a reference is found"
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": "the monitor that allows for progress and cancellation"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": "if the operation was cancelled"
        }
      ]
    },
    {
      "name": "findReferences",
      "comment": "Finds references in the current program to specific field of the given Composite type\n in a manner appropriate with the given implementation.\n \n Note that this operation is multi-threaded and that results will be delivered as they \n are found via the callback.",
      "javadoc": "Finds references in the current program to specific field of the given {@link Composite} type\n in a manner appropriate with the given implementation.\n \u003cp\u003e\n Note that this operation is multi-threaded and that results will be delivered as they \n are found via the \u003ccode\u003ecallback\u003c/code\u003e.\n@param program the program to search\n@param composite the type containing the field for which to search\n@param fieldName the name of the composite\u0027s field for which to search\n@param callback the callback to be called when a reference is found\n@param monitor the monitor that allows for progress and cancellation\n@throws CancelledException if the operation was cancelled",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "the program to search"
        },
        {
          "name": "composite",
          "type_long": "ghidra.program.model.data.Composite",
          "type_short": "Composite",
          "comment": "the type containing the field for which to search"
        },
        {
          "name": "fieldName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of the composite\u0027s field for which to search"
        },
        {
          "name": "callback",
          "type_long": "java.util.function.Consumer\u003cghidra.app.services.DataTypeReference\u003e",
          "type_short": "Consumer",
          "comment": "the callback to be called when a reference is found"
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": "the monitor that allows for progress and cancellation"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": "if the operation was cancelled"
        }
      ]
    }
  ]
}
