{
  "name": "ConsoleService",
  "comment": "Generic console interface allowing any plugin to print\n messages to console window.",
  "javadoc": "Generic console interface allowing any plugin to print\n messages to console window.",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "addMessage",
      "comment": "Appends message to the console text area.\n \n For example:\n    \"originator message\"",
      "javadoc": "Appends message to the console text area.\n \n For example:\n    \"originator\u0026gt; message\"\n@param originator a descriptive name of the message creator\n@param message the message to appear in the console",
      "static": false,
      "params": [
        {
          "name": "originator",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "a descriptive name of the message creator"
        },
        {
          "name": "message",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the message to appear in the console"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addErrorMessage",
      "comment": "Appends an error message to the console text area.\n The message should be rendered is such a way as to denote\n that it is an error. For example, display in \"red\".",
      "javadoc": "Appends an error message to the console text area.\n The message should be rendered is such a way as to denote\n that it is an error. For example, display in \"red\".\n@param originator a descriptive name of the message creator\n@param message the message to appear in the console",
      "static": false,
      "params": [
        {
          "name": "originator",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "a descriptive name of the message creator"
        },
        {
          "name": "message",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the message to appear in the console"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addException",
      "comment": "Appends an exception to the console text area.",
      "javadoc": "Appends an exception to the console text area.\n@param originator a descriptive name of the message creator\n@param exc the exception",
      "static": false,
      "params": [
        {
          "name": "originator",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "a descriptive name of the message creator"
        },
        {
          "name": "exc",
          "type_long": "java.lang.Exception",
          "type_short": "Exception",
          "comment": "the exception"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "clearMessages",
      "comment": "Clears all messages from the console.",
      "javadoc": "Clears all messages from the console.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "print",
      "comment": "Prints the message into the console.",
      "javadoc": "Prints the message into the console.\n@param msg the messages to print into the console",
      "static": false,
      "params": [
        {
          "name": "msg",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the messages to print into the console"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "println",
      "comment": "Prints the messages into the console followed by a line feed.",
      "javadoc": "Prints the messages into the console followed by a line feed.\n@param msg the message to print into the console",
      "static": false,
      "params": [
        {
          "name": "msg",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the message to print into the console"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "printError",
      "comment": "Prints the error message into the console.\n It will be displayed in red.",
      "javadoc": "Prints the error message into the console.\n It will be displayed in red.\n@param errmsg the error message to print into the console",
      "static": false,
      "params": [
        {
          "name": "errmsg",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the error message to print into the console"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "printlnError",
      "comment": "Prints the error message into the console followed by a line feed.\n It will be displayed in red.",
      "javadoc": "Prints the error message into the console followed by a line feed.\n It will be displayed in red.\n@param errmsg the error message to print into the console",
      "static": false,
      "params": [
        {
          "name": "errmsg",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the error message to print into the console"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getStdOut",
      "comment": "Returns a print writer object to use as standard output.",
      "javadoc": "Returns a print writer object to use as standard output.\n@return a print writer object to use as standard output",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.io.PrintWriter",
        "type_short": "PrintWriter",
        "comment": "a print writer object to use as standard output"
      },
      "throws": []
    },
    {
      "name": "getStdErr",
      "comment": "Returns a print writer object to use as standard error.",
      "javadoc": "Returns a print writer object to use as standard error.\n@return a print writer object to use as standard error",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.io.PrintWriter",
        "type_short": "PrintWriter",
        "comment": "a print writer object to use as standard error"
      },
      "throws": []
    },
    {
      "name": "getTextLength",
      "comment": "Returns number of characters of currently \n in the console.\n If the console is cleared, this number is reset.\n \n Please note:\n Support for this method is optional\n based on the underlying console\n implementation. If this method cannot be supported,\n please throw UnsupportedOperationException.",
      "javadoc": "Returns number of characters of currently \n in the console.\n If the console is cleared, this number is reset.\n \n Please note:\n Support for this method is optional\n based on the underlying console\n implementation. If this method cannot be supported,\n please throw {@link UnsupportedOperationException}.\n@return number of characters \u0026gt;\u003d 0\n@throws UnsupportedOperationException",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "number of characters \u003d 0"
      },
      "throws": []
    },
    {
      "name": "getText",
      "comment": "Fetches the text contained within the given portion \n of the console.\n \n Please note:\n Support for this method is optional\n based on the underlying console\n implementation. If this method cannot be supported,\n please throw UnsupportedOperationException.",
      "javadoc": "Fetches the text contained within the given portion \n of the console.\n \n Please note:\n Support for this method is optional\n based on the underlying console\n implementation. If this method cannot be supported,\n please throw {@link UnsupportedOperationException}.\n@param offset the offset into the console representing the desired start of the text \u0026gt;\u003d 0\n@param length the length of the desired string \u0026gt;\u003d 0\n@return the text, in a String of length \u0026gt;\u003d 0\n@throws UnsupportedOperationException",
      "static": false,
      "params": [
        {
          "name": "offset",
          "type_long": "int",
          "type_short": "int",
          "comment": "the offset into the console representing the desired start of the text \u003d 0"
        },
        {
          "name": "length",
          "type_long": "int",
          "type_short": "int",
          "comment": "the length of the desired string \u003d 0"
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the text, in a String of length \u003d 0"
      },
      "throws": []
    }
  ]
}
