{
  "name": "AssemblySyntaxException",
  "comment": "Thrown when all parses of an assembly instruction result in syntax errors.",
  "javadoc": "Thrown when all parses of an assembly instruction result in syntax errors.",
  "static": false,
  "implements": [],
  "extends": "ghidra.app.plugin.assembler.AssemblyException",
  "fields": [
    {
      "name": "errors",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.Set\u003cghidra.app.plugin.assembler.sleigh.parse.AssemblyParseResult\u003e",
      "type_short": "Set",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "message",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a syntax exception with the associated syntax errors",
      "javadoc": "Construct a syntax exception with the associated syntax errors\n@param errors the associated syntax errors",
      "static": false,
      "params": [
        {
          "name": "errors",
          "type_long": "java.util.Set\u003cghidra.app.plugin.assembler.sleigh.parse.AssemblyParseResult\u003e",
          "type_short": "Set",
          "comment": "the associated syntax errors"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getErrors",
      "comment": "Get the collection of associated syntax errors",
      "javadoc": "Get the collection of associated syntax errors\n@return the collection",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Collection\u003cghidra.app.plugin.assembler.sleigh.parse.AssemblyParseResult\u003e",
        "type_short": "Collection",
        "comment": "the collection"
      },
      "throws": []
    }
  ]
}
