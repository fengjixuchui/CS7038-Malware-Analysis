{
  "name": "AssemblerBuilder",
  "comment": "An interface to build an assembler for a given language",
  "javadoc": "An interface to build an assembler for a given language",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "getLanguageID",
      "comment": "Get the ID of the language for which this instance builds an assembler",
      "javadoc": "Get the ID of the language for which this instance builds an assembler\n@return the language ID",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.lang.LanguageID",
        "type_short": "LanguageID",
        "comment": "the language ID"
      },
      "throws": []
    },
    {
      "name": "getLanguage",
      "comment": "Get the language for which this instance builds an assembler",
      "javadoc": "Get the language for which this instance builds an assembler\n@return the language",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.lang.Language",
        "type_short": "Language",
        "comment": "the language"
      },
      "throws": []
    },
    {
      "name": "getAssembler",
      "comment": "Build an assembler with the given selector callback",
      "javadoc": "Build an assembler with the given selector callback\n@param selector the selector callback\n@return the built assembler",
      "static": false,
      "params": [
        {
          "name": "selector",
          "type_long": "ghidra.app.plugin.assembler.AssemblySelector",
          "type_short": "AssemblySelector",
          "comment": "the selector callback"
        }
      ],
      "return": {
        "type_long": "ghidra.app.plugin.assembler.Assembler",
        "type_short": "Assembler",
        "comment": "the built assembler"
      },
      "throws": []
    },
    {
      "name": "getAssembler",
      "comment": "Build an assembler with the given selector callback and program binding",
      "javadoc": "Build an assembler with the given selector callback and program binding\n@param selector the selector callback\n@param program the bound program\n@return the built assembler",
      "static": false,
      "params": [
        {
          "name": "selector",
          "type_long": "ghidra.app.plugin.assembler.AssemblySelector",
          "type_short": "AssemblySelector",
          "comment": "the selector callback"
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "the bound program"
        }
      ],
      "return": {
        "type_long": "ghidra.app.plugin.assembler.Assembler",
        "type_short": "Assembler",
        "comment": "the built assembler"
      },
      "throws": []
    }
  ]
}
