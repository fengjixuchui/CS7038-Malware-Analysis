{
  "name": "AssemblyExtendedGrammar",
  "comment": "Defines an \"extended\" grammar\n \n \"Extended grammar\" as in a grammar extended with state numbers from an LR0 parser.\n See LALR(1) Parsing from Stephen Jackson\n of Dalhousie University, Halifax, Nova Scotia, Canada.",
  "javadoc": "Defines an \"extended\" grammar\n \n \"Extended grammar\" as in a grammar extended with state numbers from an LR0 parser.\n See \u003ca href\u003d\"http://web.cs.dal.ca/~sjackson/lalr1.html\"\u003eLALR(1) Parsing\u003c/a\u003e from Stephen Jackson\n of Dalhousie University, Halifax, Nova Scotia, Canada.",
  "static": false,
  "implements": [],
  "extends": "ghidra.app.plugin.assembler.sleigh.grammars.AbstractAssemblyGrammar",
  "fields": [],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "newProduction",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "lhs",
          "type_long": "ghidra.app.plugin.assembler.sleigh.symbol.AssemblyExtendedNonTerminal",
          "type_short": "AssemblyExtendedNonTerminal",
          "comment": ""
        },
        {
          "name": "rhs",
          "type_long": "ghidra.app.plugin.assembler.sleigh.grammars.AssemblySentential\u003cghidra.app.plugin.assembler.sleigh.symbol.AssemblyExtendedNonTerminal\u003e",
          "type_short": "AssemblySentential",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.app.plugin.assembler.sleigh.grammars.AssemblyExtendedProduction",
        "type_short": "AssemblyExtendedProduction",
        "comment": ""
      },
      "throws": []
    }
  ]
}
