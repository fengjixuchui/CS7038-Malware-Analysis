{
  "name": "TableEntryKey",
  "comment": "A key in a (sparse) LR(0) transition table or LALR(1) action/goto table",
  "javadoc": "A key in a (sparse) LR(0) transition table or LALR(1) action/goto table\n@see AssemblyParseTransitionTable\n@see AssemblyParseActionGotoTable",
  "static": false,
  "implements": [
    "java.lang.Comparable"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "state",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "sym",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.plugin.assembler.sleigh.symbol.AssemblySymbol",
      "type_short": "AssemblySymbol",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Create a new key for the given state and symbol",
      "javadoc": "Create a new key for the given state and symbol\n@param state the row\n@param sym the column",
      "static": false,
      "params": [
        {
          "name": "state",
          "type_long": "int",
          "type_short": "int",
          "comment": "the row"
        },
        {
          "name": "sym",
          "type_long": "ghidra.app.plugin.assembler.sleigh.symbol.AssemblySymbol",
          "type_short": "AssemblySymbol",
          "comment": "the column"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hashCode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "equals",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "that",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "compareTo",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "that",
          "type_long": "ghidra.app.plugin.assembler.sleigh.util.TableEntryKey",
          "type_short": "TableEntryKey",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getState",
      "comment": "Get the state (row) of the key in the table",
      "javadoc": "Get the state (row) of the key in the table\n@return the state",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the state"
      },
      "throws": []
    },
    {
      "name": "getSym",
      "comment": "Get the symbol (column) of the entry in the table",
      "javadoc": "Get the symbol (column) of the entry in the table\n@return the symbol",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.plugin.assembler.sleigh.symbol.AssemblySymbol",
        "type_short": "AssemblySymbol",
        "comment": "the symbol"
      },
      "throws": []
    }
  ]
}
