{
  "name": "AssemblyParseResult",
  "comment": "A result of parsing a sentence\n \n If the sentence was accepted, this yields a parse tree. If not, this describes the error and\n provides suggestions to correct the error.",
  "javadoc": "A result of parsing a sentence\n \n If the sentence was accepted, this yields a parse tree. If not, this describes the error and\n provides suggestions to correct the error.",
  "static": false,
  "implements": [
    "java.lang.Comparable"
  ],
  "extends": "java.lang.Object",
  "fields": [],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "accept",
      "comment": "Construct a successful parse result",
      "javadoc": "Construct a successful parse result\n@param tree the tree output by the parser",
      "static": true,
      "params": [
        {
          "name": "tree",
          "type_long": "ghidra.app.plugin.assembler.sleigh.tree.AssemblyParseBranch",
          "type_short": "AssemblyParseBranch",
          "comment": "the tree output by the parser"
        }
      ],
      "return": {
        "type_long": "ghidra.app.plugin.assembler.sleigh.parse.AssemblyParseAcceptResult",
        "type_short": "AssemblyParseAcceptResult",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "error",
      "comment": "Construct an error parse result",
      "javadoc": "Construct an error parse result\n@param got the input buffer when the error occurred\n@param suggestions a subset of strings that would have allowed parsing to proceed",
      "static": true,
      "params": [
        {
          "name": "got",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the input buffer when the error occurred"
        },
        {
          "name": "suggestions",
          "type_long": "java.util.Set\u003cjava.lang.String\u003e",
          "type_short": "Set",
          "comment": "a subset of strings that would have allowed parsing to proceed"
        }
      ],
      "return": {
        "type_long": "ghidra.app.plugin.assembler.sleigh.parse.AssemblyParseErrorResult",
        "type_short": "AssemblyParseErrorResult",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isError",
      "comment": "Check if the parse result is successful or an error",
      "javadoc": "Check if the parse result is successful or an error\n@return true if the result describes an error",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the result describes an error"
      },
      "throws": []
    },
    {
      "name": "compareTo",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "that",
          "type_long": "ghidra.app.plugin.assembler.sleigh.parse.AssemblyParseResult",
          "type_short": "AssemblyParseResult",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    }
  ]
}
