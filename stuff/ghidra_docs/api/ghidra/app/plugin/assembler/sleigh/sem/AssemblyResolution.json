{
  "name": "AssemblyResolution",
  "comment": "The (often intermediate) result of assembly\n \n These may represent a successful construction (AssemblyResolvedConstructor, a future\n field (AssemblyResolvedBackfill), or an error (AssemblyResolvedError).\n \n This class also provides the static factory methods for constructing any of its subclasses.",
  "javadoc": "The (often intermediate) result of assembly\n \n These may represent a successful construction ({@link AssemblyResolvedConstructor}, a future\n field ({@link AssemblyResolvedBackfill}), or an error ({@link AssemblyResolvedError}).\n \n This class also provides the static factory methods for constructing any of its subclasses.",
  "static": false,
  "implements": [
    "java.lang.Comparable"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "description",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "children",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003c? extends ghidra.app.plugin.assembler.sleigh.sem.AssemblyResolution\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "hashed",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "hash",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "hashCode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "computeHash",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a resolution",
      "javadoc": "Construct a resolution\n@param description a textual description used as part of {@link #toString()}\n@param children for record keeping, any children used in constructing this resolution",
      "static": false,
      "params": [
        {
          "name": "description",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "a textual description used as part of #toString()"
        },
        {
          "name": "children",
          "type_long": "java.util.List\u003c? extends ghidra.app.plugin.assembler.sleigh.sem.AssemblyResolution\u003e",
          "type_short": "List",
          "comment": "for record keeping, any children used in constructing this resolution"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "resolved",
      "comment": "Build the result of successfully resolving a SLEIGH constructor\n \n NOTE: This is not used strictly for resolved SLEIGH constructors. It may also be used to\n store intermediates, e.g., encoded operands, during constructor resolution.",
      "javadoc": "Build the result of successfully resolving a SLEIGH constructor\n \n NOTE: This is not used strictly for resolved SLEIGH constructors. It may also be used to\n store intermediates, e.g., encoded operands, during constructor resolution.\n@param ins the instruction pattern block\n@param ctx the context pattern block\n@param description a description of the resolution\n@param sel the children selected to resolve this constructor, or null\n@return the new resolution",
      "static": true,
      "params": [
        {
          "name": "ins",
          "type_long": "ghidra.app.plugin.assembler.sleigh.sem.AssemblyPatternBlock",
          "type_short": "AssemblyPatternBlock",
          "comment": "the instruction pattern block"
        },
        {
          "name": "ctx",
          "type_long": "ghidra.app.plugin.assembler.sleigh.sem.AssemblyPatternBlock",
          "type_short": "AssemblyPatternBlock",
          "comment": "the context pattern block"
        },
        {
          "name": "description",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "a description of the resolution"
        },
        {
          "name": "sel",
          "type_long": "java.util.List\u003c? extends ghidra.app.plugin.assembler.sleigh.sem.AssemblyResolution\u003e",
          "type_short": "List",
          "comment": "the children selected to resolve this constructor, or null"
        }
      ],
      "return": {
        "type_long": "ghidra.app.plugin.assembler.sleigh.sem.AssemblyResolvedConstructor",
        "type_short": "AssemblyResolvedConstructor",
        "comment": "the new resolution"
      },
      "throws": []
    },
    {
      "name": "instrOnly",
      "comment": "Build an instruction-only successful resolution result",
      "javadoc": "Build an instruction-only successful resolution result\n@see #resolved(AssemblyPatternBlock, AssemblyPatternBlock, String, List)\n@param ins the instruction pattern block\n@param description a description of the resolution\n@param children the children selected to resolve this constructor, or null\n@return the new resolution",
      "static": true,
      "params": [
        {
          "name": "ins",
          "type_long": "ghidra.app.plugin.assembler.sleigh.sem.AssemblyPatternBlock",
          "type_short": "AssemblyPatternBlock",
          "comment": "the instruction pattern block"
        },
        {
          "name": "description",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "a description of the resolution"
        },
        {
          "name": "children",
          "type_long": "java.util.List\u003cghidra.app.plugin.assembler.sleigh.sem.AssemblyResolution\u003e",
          "type_short": "List",
          "comment": "the children selected to resolve this constructor, or null"
        }
      ],
      "return": {
        "type_long": "ghidra.app.plugin.assembler.sleigh.sem.AssemblyResolvedConstructor",
        "type_short": "AssemblyResolvedConstructor",
        "comment": "the new resolution"
      },
      "throws": []
    },
    {
      "name": "contextOnly",
      "comment": "Build a context-only successful resolution result",
      "javadoc": "Build a context-only successful resolution result\n@see #resolved(AssemblyPatternBlock, AssemblyPatternBlock, String, List)\n@param ctx the context pattern block\n@param description a description of the resolution\n@param children the children selected to resolve this constructor, or null\n@return the new resolution",
      "static": true,
      "params": [
        {
          "name": "ctx",
          "type_long": "ghidra.app.plugin.assembler.sleigh.sem.AssemblyPatternBlock",
          "type_short": "AssemblyPatternBlock",
          "comment": "the context pattern block"
        },
        {
          "name": "description",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "a description of the resolution"
        },
        {
          "name": "children",
          "type_long": "java.util.List\u003cghidra.app.plugin.assembler.sleigh.sem.AssemblyResolution\u003e",
          "type_short": "List",
          "comment": "the children selected to resolve this constructor, or null"
        }
      ],
      "return": {
        "type_long": "ghidra.app.plugin.assembler.sleigh.sem.AssemblyResolvedConstructor",
        "type_short": "AssemblyResolvedConstructor",
        "comment": "the new resolution"
      },
      "throws": []
    },
    {
      "name": "fromPattern",
      "comment": "Build a successful resolution result from a SLEIGH constructor\u0027s patterns",
      "javadoc": "Build a successful resolution result from a SLEIGH constructor\u0027s patterns\n@param pat the constructor\u0027s pattern\n@param description a description of the resolution\n@return the new resolution",
      "static": true,
      "params": [
        {
          "name": "pat",
          "type_long": "ghidra.app.plugin.processors.sleigh.pattern.DisjointPattern",
          "type_short": "DisjointPattern",
          "comment": "the constructor\u0027s pattern"
        },
        {
          "name": "minLen",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "description",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "a description of the resolution"
        }
      ],
      "return": {
        "type_long": "ghidra.app.plugin.assembler.sleigh.sem.AssemblyResolvedConstructor",
        "type_short": "AssemblyResolvedConstructor",
        "comment": "the new resolution"
      },
      "throws": []
    },
    {
      "name": "backfill",
      "comment": "Build a backfill record to attach to a successful resolution result",
      "javadoc": "Build a backfill record to attach to a successful resolution result\n@param exp the expression depending on a missing symbol\n@param goal the desired value of the expression\n@param res the resolution result for child constructors\n@param inslen the length of instruction portion expected in the future solution\n@param description a description of the backfill record\n@return the new record",
      "static": true,
      "params": [
        {
          "name": "exp",
          "type_long": "ghidra.app.plugin.processors.sleigh.expression.PatternExpression",
          "type_short": "PatternExpression",
          "comment": "the expression depending on a missing symbol"
        },
        {
          "name": "goal",
          "type_long": "ghidra.app.plugin.assembler.sleigh.expr.MaskedLong",
          "type_short": "MaskedLong",
          "comment": "the desired value of the expression"
        },
        {
          "name": "res",
          "type_long": "java.util.Map\u003cjava.lang.Integer,java.lang.Object\u003e",
          "type_short": "Map",
          "comment": "the resolution result for child constructors"
        },
        {
          "name": "inslen",
          "type_long": "int",
          "type_short": "int",
          "comment": "the length of instruction portion expected in the future solution"
        },
        {
          "name": "description",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "a description of the backfill record"
        }
      ],
      "return": {
        "type_long": "ghidra.app.plugin.assembler.sleigh.sem.AssemblyResolvedBackfill",
        "type_short": "AssemblyResolvedBackfill",
        "comment": "the new record"
      },
      "throws": []
    },
    {
      "name": "nop",
      "comment": "Obtain a new \"blank\" resolved SLEIGH constructor record",
      "javadoc": "Obtain a new \"blank\" resolved SLEIGH constructor record\n@param description a description of the resolution\n@param sel any children that will be involved in populating this record\n@return the new resolution",
      "static": true,
      "params": [
        {
          "name": "description",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "a description of the resolution"
        },
        {
          "name": "sel",
          "type_long": "java.util.List\u003c? extends ghidra.app.plugin.assembler.sleigh.sem.AssemblyResolution\u003e",
          "type_short": "List",
          "comment": "any children that will be involved in populating this record"
        }
      ],
      "return": {
        "type_long": "ghidra.app.plugin.assembler.sleigh.sem.AssemblyResolvedConstructor",
        "type_short": "AssemblyResolvedConstructor",
        "comment": "the new resolution"
      },
      "throws": []
    },
    {
      "name": "error",
      "comment": "Build an error resolution record",
      "javadoc": "Build an error resolution record\n@param error a description of the error\n@param description a description of what the resolver was doing when the error ocurred\n@param children any children involved in generating the error\n@return the new resolution",
      "static": true,
      "params": [
        {
          "name": "error",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "a description of the error"
        },
        {
          "name": "description",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "a description of what the resolver was doing when the error ocurred"
        },
        {
          "name": "children",
          "type_long": "java.util.List\u003c? extends ghidra.app.plugin.assembler.sleigh.sem.AssemblyResolution\u003e",
          "type_short": "List",
          "comment": "any children involved in generating the error"
        }
      ],
      "return": {
        "type_long": "ghidra.app.plugin.assembler.sleigh.sem.AssemblyResolvedError",
        "type_short": "AssemblyResolvedError",
        "comment": "the new resolution"
      },
      "throws": []
    },
    {
      "name": "error",
      "comment": "Build an error resolution record, based on an intermediate SLEIGH constructor record",
      "javadoc": "Build an error resolution record, based on an intermediate SLEIGH constructor record\n@param error a description of the error\n@param res the constructor record that was being populated when the error ocurred\n@return the new error resolution",
      "static": true,
      "params": [
        {
          "name": "error",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "a description of the error"
        },
        {
          "name": "res",
          "type_long": "ghidra.app.plugin.assembler.sleigh.sem.AssemblyResolvedConstructor",
          "type_short": "AssemblyResolvedConstructor",
          "comment": "the constructor record that was being populated when the error ocurred"
        }
      ],
      "return": {
        "type_long": "ghidra.app.plugin.assembler.sleigh.sem.AssemblyResolution",
        "type_short": "AssemblyResolution",
        "comment": "the new error resolution"
      },
      "throws": []
    },
    {
      "name": "isError",
      "comment": "Check if this record describes an error",
      "javadoc": "Check if this record describes an error\n@return true if the record is an error",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the record is an error"
      },
      "throws": []
    },
    {
      "name": "isBackfill",
      "comment": "Check if this record describes a backfill",
      "javadoc": "Check if this record describes a backfill\n@return true if the record is a backfill",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the record is a backfill"
      },
      "throws": []
    },
    {
      "name": "lineToString",
      "comment": "Display the resolution result in one line (omitting child details)",
      "javadoc": "Display the resolution result in one line (omitting child details)\n@return the display description",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the display description"
      },
      "throws": []
    },
    {
      "name": "childrenToString",
      "comment": "Get the child portion of #toString()\n \n If a subclass has another, possible additional, notion of children that it would like to\n include in #toString(), it must override this method.",
      "javadoc": "Get the child portion of {@link #toString()}\n \n If a subclass has another, possible additional, notion of children that it would like to\n include in {@link #toString()}, it must override this method.\n@see #hasChildren()\n@param indent the current indentation\n@return the indented description for each child on its own line",
      "static": false,
      "params": [
        {
          "name": "indent",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the current indentation"
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the indented description for each child on its own line"
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "Used only by parents: get a multi-line description of this record, indented",
      "javadoc": "Used only by parents: get a multi-line description of this record, indented\n@param indent the current indentation\n@return the indented description",
      "static": false,
      "params": [
        {
          "name": "indent",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the current indentation"
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the indented description"
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "Describe this record including indented children, grandchildren, etc., each on its own line",
      "javadoc": "Describe this record including indented children, grandchildren, etc., each on its own line",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "compareTo",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "that",
          "type_long": "ghidra.app.plugin.assembler.sleigh.sem.AssemblyResolution",
          "type_short": "AssemblyResolution",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hasChildren",
      "comment": "Check if this record has children\n \n If a subclass has another, possibly additional, notion of children that it would like to\n include in #toString(), it must override this method to return true when such\n children are present.",
      "javadoc": "Check if this record has children\n \n If a subclass has another, possibly additional, notion of children that it would like to\n include in {@link #toString()}, it must override this method to return true when such\n children are present.\n@see #childrenToString(String)\n@return true if this record has children",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if this record has children"
      },
      "throws": []
    }
  ]
}
