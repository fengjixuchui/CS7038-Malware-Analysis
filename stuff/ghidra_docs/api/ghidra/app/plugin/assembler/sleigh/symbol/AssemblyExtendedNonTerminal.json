{
  "name": "AssemblyExtendedNonTerminal",
  "comment": "The type of non-terminal for an \"extended grammar\"",
  "javadoc": "The type of non-terminal for an \"extended grammar\"\n@see AssemblyExtendedGrammar",
  "static": false,
  "implements": [],
  "extends": "ghidra.app.plugin.assembler.sleigh.symbol.AssemblyNonTerminal",
  "fields": [
    {
      "name": "nt",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.plugin.assembler.sleigh.symbol.AssemblyNonTerminal",
      "type_short": "AssemblyNonTerminal",
      "constant_value": null
    },
    {
      "name": "end",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a new extended non terminal, derived from the given non-terminal",
      "javadoc": "Construct a new extended non terminal, derived from the given non-terminal\n@param start the start state for the extended non-terminal\n@param nt the non-terminal from which the extended non-terminal is derived\n@param end the end state for the extended non-terminal",
      "static": false,
      "params": [
        {
          "name": "start",
          "type_long": "int",
          "type_short": "int",
          "comment": "the start state for the extended non-terminal"
        },
        {
          "name": "nt",
          "type_long": "ghidra.app.plugin.assembler.sleigh.symbol.AssemblyNonTerminal",
          "type_short": "AssemblyNonTerminal",
          "comment": "the non-terminal from which the extended non-terminal is derived"
        },
        {
          "name": "end",
          "type_long": "int",
          "type_short": "int",
          "comment": "the end state for the extended non-terminal"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    }
  ]
}
