{
  "name": "AssemblyParseState",
  "comment": "A state in an LR(0) parsing machine\n \n Each item consists of a kernel and an implied closure. Only the kernel is necessary to define\n the item, but the whole closure must be considered when deriving new states.",
  "javadoc": "A state in an LR(0) parsing machine\n \n Each item consists of a kernel and an implied closure. Only the kernel is necessary to define\n the item, but the whole closure must be considered when deriving new states.",
  "static": false,
  "implements": [
    "java.lang.Comparable"
  ],
  "extends": "org.apache.commons.collections4.set.AbstractSetDecorator",
  "fields": [
    {
      "name": "grammar",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.plugin.assembler.sleigh.grammars.AssemblyGrammar",
      "type_short": "AssemblyGrammar",
      "constant_value": null
    },
    {
      "name": "kernel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.Set\u003cghidra.app.plugin.assembler.sleigh.parse.AssemblyParseStateItem\u003e",
      "type_short": "Set",
      "constant_value": null
    },
    {
      "name": "closure",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.Set\u003cghidra.app.plugin.assembler.sleigh.parse.AssemblyParseStateItem\u003e",
      "type_short": "Set",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a new state associated with the given grammar",
      "javadoc": "Construct a new state associated with the given grammar\n@param grammar the grammar",
      "static": false,
      "params": [
        {
          "name": "grammar",
          "type_long": "ghidra.app.plugin.assembler.sleigh.grammars.AssemblyGrammar",
          "type_short": "AssemblyGrammar",
          "comment": "the grammar"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a new state associated with the given grammar, seeded with the given item",
      "javadoc": "Construct a new state associated with the given grammar, seeded with the given item\n@param grammar the grammar\n@param item an item in the state",
      "static": false,
      "params": [
        {
          "name": "grammar",
          "type_long": "ghidra.app.plugin.assembler.sleigh.grammars.AssemblyGrammar",
          "type_short": "AssemblyGrammar",
          "comment": "the grammar"
        },
        {
          "name": "item",
          "type_long": "ghidra.app.plugin.assembler.sleigh.parse.AssemblyParseStateItem",
          "type_short": "AssemblyParseStateItem",
          "comment": "an item in the state"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "decorated",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Set\u003cghidra.app.plugin.assembler.sleigh.parse.AssemblyParseStateItem\u003e",
        "type_short": "Set",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getClosure",
      "comment": "Get the closure of this item, caching the result",
      "javadoc": "Get the closure of this item, caching the result\n@return the closure",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Set\u003cghidra.app.plugin.assembler.sleigh.parse.AssemblyParseStateItem\u003e",
        "type_short": "Set",
        "comment": "the closure"
      },
      "throws": []
    },
    {
      "name": "equals",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "that",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "compareTo",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "that",
          "type_long": "ghidra.app.plugin.assembler.sleigh.parse.AssemblyParseState",
          "type_short": "AssemblyParseState",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hashCode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    }
  ]
}
