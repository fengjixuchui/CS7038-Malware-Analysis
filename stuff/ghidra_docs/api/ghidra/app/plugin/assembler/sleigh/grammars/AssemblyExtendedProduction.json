{
  "name": "AssemblyExtendedProduction",
  "comment": "Defines a production of an \"extended\" grammar",
  "javadoc": "Defines a production of an \"extended\" grammar\n@see AssemblyExtendedGrammar",
  "static": false,
  "implements": [],
  "extends": "ghidra.app.plugin.assembler.sleigh.grammars.AbstractAssemblyProduction",
  "fields": [
    {
      "name": "finalState",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "ancestor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.plugin.assembler.sleigh.grammars.AssemblyProduction",
      "type_short": "AssemblyProduction",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct an extended production based on the given ancestor",
      "javadoc": "Construct an extended production based on the given ancestor\n@param lhs the extended left-hand side\n@param rhs the extended right-hand side\n@param finalState the end state of the final symbol of the RHS\n@param ancestor the original production from which this extended production is derived",
      "static": false,
      "params": [
        {
          "name": "lhs",
          "type_long": "ghidra.app.plugin.assembler.sleigh.symbol.AssemblyExtendedNonTerminal",
          "type_short": "AssemblyExtendedNonTerminal",
          "comment": "the extended left-hand side"
        },
        {
          "name": "rhs",
          "type_long": "ghidra.app.plugin.assembler.sleigh.grammars.AssemblySentential\u003cghidra.app.plugin.assembler.sleigh.symbol.AssemblyExtendedNonTerminal\u003e",
          "type_short": "AssemblySentential",
          "comment": "the extended right-hand side"
        },
        {
          "name": "finalState",
          "type_long": "int",
          "type_short": "int",
          "comment": "the end state of the final symbol of the RHS"
        },
        {
          "name": "ancestor",
          "type_long": "ghidra.app.plugin.assembler.sleigh.grammars.AssemblyProduction",
          "type_short": "AssemblyProduction",
          "comment": "the original production from which this extended production is derived"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLHS",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.plugin.assembler.sleigh.symbol.AssemblyExtendedNonTerminal",
        "type_short": "AssemblyExtendedNonTerminal",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFinalState",
      "comment": "Get the final state of this production",
      "javadoc": "Get the final state of this production\n@return the end state of the last symbol of the RHS",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the end state of the last symbol of the RHS"
      },
      "throws": []
    },
    {
      "name": "getAncestor",
      "comment": "Get the original production from which this production was derived",
      "javadoc": "Get the original production from which this production was derived\n@return the original production",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.plugin.assembler.sleigh.grammars.AssemblyProduction",
        "type_short": "AssemblyProduction",
        "comment": "the original production"
      },
      "throws": []
    }
  ]
}
