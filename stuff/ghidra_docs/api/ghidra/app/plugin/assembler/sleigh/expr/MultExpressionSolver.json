{
  "name": "MultExpressionSolver",
  "comment": "Solves expressions of the form A * B",
  "javadoc": "Solves expressions of the form A * B",
  "static": false,
  "implements": [],
  "extends": "ghidra.app.plugin.assembler.sleigh.expr.AbstractBinaryExpressionSolver",
  "fields": [],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "tryRep",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "lexp",
          "type_long": "ghidra.app.plugin.processors.sleigh.expression.PatternExpression",
          "type_short": "PatternExpression",
          "comment": ""
        },
        {
          "name": "rval",
          "type_long": "ghidra.app.plugin.assembler.sleigh.expr.MaskedLong",
          "type_short": "MaskedLong",
          "comment": ""
        },
        {
          "name": "repGoal",
          "type_long": "ghidra.app.plugin.assembler.sleigh.expr.MaskedLong",
          "type_short": "MaskedLong",
          "comment": ""
        },
        {
          "name": "goal",
          "type_long": "ghidra.app.plugin.assembler.sleigh.expr.MaskedLong",
          "type_short": "MaskedLong",
          "comment": ""
        },
        {
          "name": "vals",
          "type_long": "java.util.Map\u003cjava.lang.String,java.lang.Long\u003e",
          "type_short": "Map",
          "comment": ""
        },
        {
          "name": "res",
          "type_long": "java.util.Map\u003cjava.lang.Integer,java.lang.Object\u003e",
          "type_short": "Map",
          "comment": ""
        },
        {
          "name": "cur",
          "type_long": "ghidra.app.plugin.assembler.sleigh.sem.AssemblyResolvedConstructor",
          "type_short": "AssemblyResolvedConstructor",
          "comment": ""
        },
        {
          "name": "hints",
          "type_long": "java.util.Set\u003cghidra.app.plugin.assembler.sleigh.expr.SolverHint\u003e",
          "type_short": "Set",
          "comment": ""
        },
        {
          "name": "description",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.app.plugin.assembler.sleigh.sem.AssemblyResolution",
        "type_short": "AssemblyResolution",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.app.plugin.assembler.sleigh.expr.NeedsBackfillException",
          "type_short": "NeedsBackfillException",
          "comment": ""
        }
      ]
    },
    {
      "name": "solveLeftSide",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "lexp",
          "type_long": "ghidra.app.plugin.processors.sleigh.expression.PatternExpression",
          "type_short": "PatternExpression",
          "comment": ""
        },
        {
          "name": "rval",
          "type_long": "ghidra.app.plugin.assembler.sleigh.expr.MaskedLong",
          "type_short": "MaskedLong",
          "comment": ""
        },
        {
          "name": "goal",
          "type_long": "ghidra.app.plugin.assembler.sleigh.expr.MaskedLong",
          "type_short": "MaskedLong",
          "comment": ""
        },
        {
          "name": "vals",
          "type_long": "java.util.Map\u003cjava.lang.String,java.lang.Long\u003e",
          "type_short": "Map",
          "comment": ""
        },
        {
          "name": "res",
          "type_long": "java.util.Map\u003cjava.lang.Integer,java.lang.Object\u003e",
          "type_short": "Map",
          "comment": ""
        },
        {
          "name": "cur",
          "type_long": "ghidra.app.plugin.assembler.sleigh.sem.AssemblyResolvedConstructor",
          "type_short": "AssemblyResolvedConstructor",
          "comment": ""
        },
        {
          "name": "hints",
          "type_long": "java.util.Set\u003cghidra.app.plugin.assembler.sleigh.expr.SolverHint\u003e",
          "type_short": "Set",
          "comment": ""
        },
        {
          "name": "description",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.app.plugin.assembler.sleigh.sem.AssemblyResolution",
        "type_short": "AssemblyResolution",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.app.plugin.assembler.sleigh.expr.NeedsBackfillException",
          "type_short": "NeedsBackfillException",
          "comment": ""
        },
        {
          "type_long": "ghidra.app.plugin.assembler.sleigh.expr.SolverException",
          "type_short": "SolverException",
          "comment": ""
        }
      ]
    },
    {
      "name": "solveRightSide",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "rexp",
          "type_long": "ghidra.app.plugin.processors.sleigh.expression.PatternExpression",
          "type_short": "PatternExpression",
          "comment": ""
        },
        {
          "name": "lval",
          "type_long": "ghidra.app.plugin.assembler.sleigh.expr.MaskedLong",
          "type_short": "MaskedLong",
          "comment": ""
        },
        {
          "name": "goal",
          "type_long": "ghidra.app.plugin.assembler.sleigh.expr.MaskedLong",
          "type_short": "MaskedLong",
          "comment": ""
        },
        {
          "name": "vals",
          "type_long": "java.util.Map\u003cjava.lang.String,java.lang.Long\u003e",
          "type_short": "Map",
          "comment": ""
        },
        {
          "name": "res",
          "type_long": "java.util.Map\u003cjava.lang.Integer,java.lang.Object\u003e",
          "type_short": "Map",
          "comment": ""
        },
        {
          "name": "cur",
          "type_long": "ghidra.app.plugin.assembler.sleigh.sem.AssemblyResolvedConstructor",
          "type_short": "AssemblyResolvedConstructor",
          "comment": ""
        },
        {
          "name": "hints",
          "type_long": "java.util.Set\u003cghidra.app.plugin.assembler.sleigh.expr.SolverHint\u003e",
          "type_short": "Set",
          "comment": ""
        },
        {
          "name": "description",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.app.plugin.assembler.sleigh.sem.AssemblyResolution",
        "type_short": "AssemblyResolution",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.app.plugin.assembler.sleigh.expr.NeedsBackfillException",
          "type_short": "NeedsBackfillException",
          "comment": ""
        },
        {
          "type_long": "ghidra.app.plugin.assembler.sleigh.expr.SolverException",
          "type_short": "SolverException",
          "comment": ""
        }
      ]
    },
    {
      "name": "computeLeft",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "rval",
          "type_long": "ghidra.app.plugin.assembler.sleigh.expr.MaskedLong",
          "type_short": "MaskedLong",
          "comment": ""
        },
        {
          "name": "goal",
          "type_long": "ghidra.app.plugin.assembler.sleigh.expr.MaskedLong",
          "type_short": "MaskedLong",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.app.plugin.assembler.sleigh.expr.MaskedLong",
        "type_short": "MaskedLong",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.app.plugin.assembler.sleigh.expr.SolverException",
          "type_short": "SolverException",
          "comment": ""
        }
      ]
    },
    {
      "name": "compute",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "lval",
          "type_long": "ghidra.app.plugin.assembler.sleigh.expr.MaskedLong",
          "type_short": "MaskedLong",
          "comment": ""
        },
        {
          "name": "rval",
          "type_long": "ghidra.app.plugin.assembler.sleigh.expr.MaskedLong",
          "type_short": "MaskedLong",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.app.plugin.assembler.sleigh.expr.MaskedLong",
        "type_short": "MaskedLong",
        "comment": ""
      },
      "throws": []
    }
  ]
}
