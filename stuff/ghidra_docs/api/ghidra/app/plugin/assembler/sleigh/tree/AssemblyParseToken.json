{
  "name": "AssemblyParseToken",
  "comment": "A string token",
  "javadoc": "A string token\n@see AssemblyStringTerminal",
  "static": false,
  "implements": [],
  "extends": "ghidra.app.plugin.assembler.sleigh.tree.AssemblyParseTreeNode",
  "fields": [
    {
      "name": "term",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.plugin.assembler.sleigh.symbol.AssemblyTerminal",
      "type_short": "AssemblyTerminal",
      "constant_value": null
    },
    {
      "name": "str",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a new token having the given string value",
      "javadoc": "Construct a new token having the given string value\n@param grammar the grammar containing the terminal\n@param term the terminal that matched this token\n@param str the portion of the input comprising this token",
      "static": false,
      "params": [
        {
          "name": "grammar",
          "type_long": "ghidra.app.plugin.assembler.sleigh.grammars.AssemblyGrammar",
          "type_short": "AssemblyGrammar",
          "comment": "the grammar containing the terminal"
        },
        {
          "name": "term",
          "type_long": "ghidra.app.plugin.assembler.sleigh.symbol.AssemblyTerminal",
          "type_short": "AssemblyTerminal",
          "comment": "the terminal that matched this token"
        },
        {
          "name": "str",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the portion of the input comprising this token"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hashCode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "equals",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "obj",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getString",
      "comment": "Get the portion of the input comprising the token",
      "javadoc": "Get the portion of the input comprising the token\n@return the string value",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the string value"
      },
      "throws": []
    },
    {
      "name": "getSym",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.plugin.assembler.sleigh.symbol.AssemblyTerminal",
        "type_short": "AssemblyTerminal",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "print",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "out",
          "type_long": "java.io.PrintStream",
          "type_short": "PrintStream",
          "comment": ""
        },
        {
          "name": "indent",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "generateString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    }
  ]
}
