{
  "name": "SleighUtil",
  "comment": "Utilities for Collections",
  "javadoc": "Utilities for {@link Collection}s",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "compareInOrder",
      "comment": "Compare two collections by their corresponding elements in order\n \n If the collections have differing sizes, the ordering does not matter. The smaller\n collection precedes the larger. Otherwise, each corresponding pair of elements are compared.\n Once an unequal pair is found, the collections are ordered by those elements. This is\n analogous to String comparison.",
      "javadoc": "Compare two collections by their corresponding elements in order\n \n If the collections have differing sizes, the ordering does not matter. The smaller\n collection precedes the larger. Otherwise, each corresponding pair of elements are compared.\n Once an unequal pair is found, the collections are ordered by those elements. This is\n analogous to {@link String} comparison.\n@param a the first set\n@param b the second set\n@return a comparison result as in {@link Comparable#compareTo(Object)}",
      "static": true,
      "params": [
        {
          "name": "a",
          "type_long": "java.util.Collection\u003cT\u003e",
          "type_short": "Collection",
          "comment": "the first set"
        },
        {
          "name": "b",
          "type_long": "java.util.Collection\u003cT\u003e",
          "type_short": "Collection",
          "comment": "the second set"
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "a comparison result as in Comparable#compareTo(Object)"
      },
      "throws": []
    },
    {
      "name": "compareArrays",
      "comment": "Compare two byte arrays by their corresponding entries\n \n If the two arrays have differing lengths, the shorter precedes the longer. Otherwise, they\n are compared as in C\u0027s , except that Java s are signed.",
      "javadoc": "Compare two byte arrays by their corresponding entries\n \n If the two arrays have differing lengths, the shorter precedes the longer. Otherwise, they\n are compared as in C\u0027s {@code memcmp}, except that Java {@code byte}s are signed.\n@param a the first array\n@param b the second array\n@return a comparison result as in {@link Comparable#compareTo(Object)}",
      "static": true,
      "params": [
        {
          "name": "a",
          "type_long": "byte[]",
          "type_short": "byte[]",
          "comment": "the first array"
        },
        {
          "name": "b",
          "type_long": "byte[]",
          "type_short": "byte[]",
          "comment": "the second array"
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "a comparison result as in Comparable#compareTo(Object)"
      },
      "throws": []
    }
  ]
}
