{
  "name": "TabbingOutputStream",
  "comment": "A (rather slow) output stream that indents every line of its output",
  "javadoc": "A (rather slow) output stream that indents every line of its output",
  "static": true,
  "implements": [],
  "extends": "java.io.OutputStream",
  "fields": [
    {
      "name": "STATE_NOLINE",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "0"
    },
    {
      "name": "STATE_LINE",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "1"
    },
    {
      "name": "out",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.io.OutputStream",
      "type_short": "OutputStream",
      "constant_value": null
    },
    {
      "name": "state",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "timeStack",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.Stack\u003cjava.lang.Long\u003e",
      "type_short": "Stack",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Create a new stream wrapping another",
      "javadoc": "Create a new stream wrapping another\n@param out the stream to wrap",
      "static": false,
      "params": [
        {
          "name": "out",
          "type_long": "java.io.OutputStream",
          "type_short": "OutputStream",
          "comment": "the stream to wrap"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "startln",
      "comment": "Start a new (indented) line of output",
      "javadoc": "Start a new (indented) line of output\n@throws IOException",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "setTimeStack",
      "comment": "Workaround: Set the time stack reference",
      "javadoc": "Workaround: Set the time stack reference\n@param timeStack the stack",
      "static": false,
      "params": [
        {
          "name": "timeStack",
          "type_long": "java.util.Stack\u003cjava.lang.Long\u003e",
          "type_short": "Stack",
          "comment": "the stack"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "write",
      "comment": "\n \n Parses each line and prepends the indentation as they are printed",
      "javadoc": "{@inheritDoc}\n \n Parses each line and prepends the indentation as they are printed",
      "static": false,
      "params": [
        {
          "name": "b",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "close",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "flush",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    }
  ]
}
