{
  "name": "EhFrameSection",
  "comment": "Parses the call frame information exception handling structures within an \u0027.eh_frame\u0027 \n memory section.",
  "javadoc": "Parses the call frame information exception handling structures within an \u0027.eh_frame\u0027 \n memory section.",
  "static": false,
  "implements": [],
  "extends": "ghidra.app.plugin.exceptionhandlers.gcc.sections.AbstractFrameSection",
  "fields": [
    {
      "name": "EH_FRAME_BLOCK_NAME",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\".eh_frame\""
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor for an eh frame section.",
      "javadoc": "Constructor for an eh frame section.\n@param monitor a status monitor for indicating progress or allowing a task to be cancelled.\n@param program the program containing this eh frame section.",
      "static": false,
      "params": [
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": "a status monitor for indicating progress or allowing a task to be cancelled."
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "the program containing this eh frame section."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getCie",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "currAddress",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.app.plugin.exceptionhandlers.gcc.structures.ehFrame.Cie",
        "type_short": "Cie",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.program.model.mem.MemoryAccessException",
          "type_short": "MemoryAccessException",
          "comment": ""
        },
        {
          "type_long": "ghidra.app.plugin.exceptionhandlers.gcc.structures.ehFrame.ExceptionHandlerFrameException",
          "type_short": "ExceptionHandlerFrameException",
          "comment": ""
        }
      ]
    },
    {
      "name": "analyze",
      "comment": "Analyzes and annotates the eh frame section.",
      "javadoc": "Analyzes and annotates the eh frame section.\n@param fdeTableCount the number of exception handler FDEs.\n@return the region descriptors for the eh frame section.\n@throws MemoryAccessException if memory couldn\u0027t be read/written while processing the eh frame.\n@throws AddressOutOfBoundsException if one or more expected addresses weren\u0027t in the program.\n@throws ExceptionHandlerFrameException if a problem was encountered determining eh frame data.",
      "static": false,
      "params": [
        {
          "name": "fdeTableCount",
          "type_long": "int",
          "type_short": "int",
          "comment": "the number of exception handler FDEs."
        }
      ],
      "return": {
        "type_long": "java.util.List\u003cghidra.app.plugin.exceptionhandlers.gcc.RegionDescriptor\u003e",
        "type_short": "List",
        "comment": "the region descriptors for the eh frame section."
      },
      "throws": [
        {
          "type_long": "ghidra.program.model.mem.MemoryAccessException",
          "type_short": "MemoryAccessException",
          "comment": "if memory couldn\u0027t be read/written while processing the eh frame."
        },
        {
          "type_long": "ghidra.program.model.address.AddressOutOfBoundsException",
          "type_short": "AddressOutOfBoundsException",
          "comment": "if one or more expected addresses weren\u0027t in the program."
        },
        {
          "type_long": "ghidra.app.plugin.exceptionhandlers.gcc.structures.ehFrame.ExceptionHandlerFrameException",
          "type_short": "ExceptionHandlerFrameException",
          "comment": "if a problem was encountered determining eh frame data."
        }
      ]
    },
    {
      "name": "analyzeSection",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "curMemBlock",
          "type_long": "ghidra.program.model.mem.MemoryBlock",
          "type_short": "MemoryBlock",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.List\u003cghidra.app.plugin.exceptionhandlers.gcc.RegionDescriptor\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.program.model.mem.MemoryAccessException",
          "type_short": "MemoryAccessException",
          "comment": ""
        },
        {
          "type_long": "ghidra.program.model.address.AddressOutOfBoundsException",
          "type_short": "AddressOutOfBoundsException",
          "comment": ""
        },
        {
          "type_long": "ghidra.app.plugin.exceptionhandlers.gcc.structures.ehFrame.ExceptionHandlerFrameException",
          "type_short": "ExceptionHandlerFrameException",
          "comment": ""
        }
      ]
    }
  ]
}
