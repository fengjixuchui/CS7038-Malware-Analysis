{
  "name": "CieSource",
  "comment": "Provides GCC exception handling model classes the means to obtain a Common Information Entry\n (CIE) object for a given address.",
  "javadoc": "Provides GCC exception handling model classes the means to obtain a Common Information Entry\n (CIE) object for a given address.",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "getCie",
      "comment": "For the provided address, return a Common Information Entry (CIE)",
      "javadoc": "For the provided address, return a Common Information Entry (CIE)\n@param currAddress the address with the CIE\n@return the Cie at \u003ccode\u003ecurrAddress\u003c/code\u003e\n@throws MemoryAccessException if memory for the CIE couldn\u0027t be read\n@throws ExceptionHandlerFrameException if a problem was encountered",
      "static": false,
      "params": [
        {
          "name": "currAddress",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "the address with the CIE"
        }
      ],
      "return": {
        "type_long": "ghidra.app.plugin.exceptionhandlers.gcc.structures.ehFrame.Cie",
        "type_short": "Cie",
        "comment": "the Cie at currAddress"
      },
      "throws": [
        {
          "type_long": "ghidra.program.model.mem.MemoryAccessException",
          "type_short": "MemoryAccessException",
          "comment": "if memory for the CIE couldn\u0027t be read"
        },
        {
          "type_long": "ghidra.app.plugin.exceptionhandlers.gcc.structures.ehFrame.ExceptionHandlerFrameException",
          "type_short": "ExceptionHandlerFrameException",
          "comment": "if a problem was encountered"
        }
      ]
    }
  ]
}
