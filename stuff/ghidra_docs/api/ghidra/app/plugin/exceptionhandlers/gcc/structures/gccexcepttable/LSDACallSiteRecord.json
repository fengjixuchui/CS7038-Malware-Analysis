{
  "name": "LSDACallSiteRecord",
  "comment": "Defines the bounds of a try-catch region.",
  "javadoc": "Defines the bounds of a try-catch region.",
  "static": false,
  "implements": [],
  "extends": "ghidra.app.plugin.exceptionhandlers.gcc.GccAnalysisClass",
  "fields": [
    {
      "name": "region",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.plugin.exceptionhandlers.gcc.RegionDescriptor",
      "type_short": "RegionDescriptor",
      "constant_value": null
    },
    {
      "name": "nextAddress",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.address.Address",
      "type_short": "Address",
      "constant_value": null
    },
    {
      "name": "callSitePosition",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "callSiteLength",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "landingPadOffset",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "actionOffset",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "callSiteRange",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.address.AddressRange",
      "type_short": "AddressRange",
      "constant_value": null
    },
    {
      "name": "landingPadAddr",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.address.Address",
      "type_short": "Address",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor for a call site record.\n Note: The create(Address) method must be called after constructing an \n LSDACallSiteRecord to associate it with an address before any of its \"get...\" methods are \n called.",
      "javadoc": "Constructor for a call site record.\n \u003cbr\u003eNote: The \u003ccode\u003ecreate(Address)\u003c/code\u003e method must be called after constructing an \n LSDACallSiteRecord to associate it with an address before any of its \"get...\" methods are \n called.\n@param monitor task monitor to see if the user has cancelled analysis.\n@param program the program containing the call site record.\n@param region the region of the program associated with the call site record.",
      "static": false,
      "params": [
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": "task monitor to see if the user has cancelled analysis."
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "the program containing the call site record."
        },
        {
          "name": "region",
          "type_long": "ghidra.app.plugin.exceptionhandlers.gcc.RegionDescriptor",
          "type_short": "RegionDescriptor",
          "comment": "the region of the program associated with the call site record."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "create",
      "comment": "Creates data for a call site record at the indicated address and creates a comment to \n identify it as a call site record.\n Note: This method must get called before any of the \"get...\" methods.",
      "javadoc": "Creates data for a call site record at the indicated address and creates a comment to \n identify it as a call site record.\n \u003cbr\u003eNote: This method must get called before any of the \"get...\" methods.\n@param addr the start (minimum address) of this call site record.\n@param decoder decodes dwarf encoded information within the LSDA\n@throws MemoryAccessException if memory couldn\u0027t be accessed for the call site record",
      "static": false,
      "params": [
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "the start (minimum address) of this call site record."
        },
        {
          "name": "decoder",
          "type_long": "ghidra.app.plugin.exceptionhandlers.gcc.DwarfEHDecoder",
          "type_short": "DwarfEHDecoder",
          "comment": "decodes dwarf encoded information within the LSDA"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.program.model.mem.MemoryAccessException",
          "type_short": "MemoryAccessException",
          "comment": "if memory couldn\u0027t be accessed for the call site record"
        }
      ]
    },
    {
      "name": "createCallSitePosition",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "decoder",
          "type_long": "ghidra.app.plugin.exceptionhandlers.gcc.DwarfEHDecoder",
          "type_short": "DwarfEHDecoder",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.program.model.mem.MemoryAccessException",
          "type_short": "MemoryAccessException",
          "comment": ""
        }
      ]
    },
    {
      "name": "createCallSiteLength",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "decoder",
          "type_long": "ghidra.app.plugin.exceptionhandlers.gcc.DwarfEHDecoder",
          "type_short": "DwarfEHDecoder",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.program.model.mem.MemoryAccessException",
          "type_short": "MemoryAccessException",
          "comment": ""
        }
      ]
    },
    {
      "name": "createLandingPad",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "decoder",
          "type_long": "ghidra.app.plugin.exceptionhandlers.gcc.DwarfEHDecoder",
          "type_short": "DwarfEHDecoder",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.program.model.mem.MemoryAccessException",
          "type_short": "MemoryAccessException",
          "comment": ""
        }
      ]
    },
    {
      "name": "createAction",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getNextAddress",
      "comment": "Gets the next address indicating the address after this call site record.",
      "javadoc": "Gets the next address indicating the address after this call site record.\n@return the next address after this call site record or null if this record hasn\u0027t been \n created at any address yet.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": "the next address after this call site record or null if this record hasn\u0027t been \n created at any address yet."
      },
      "throws": []
    },
    {
      "name": "getCallSitePosition",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getCallSite",
      "comment": "Get the call site addresses which make up the try.",
      "javadoc": "Get the call site addresses which make up the \u003ccode\u003etry\u003c/code\u003e.\n@return the address range of the call site",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.address.AddressRange",
        "type_short": "AddressRange",
        "comment": "the address range of the call site"
      },
      "throws": []
    },
    {
      "name": "getCallSiteLength",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLandingPad",
      "comment": "Get the landing pad address which indicates the catch for this call site.",
      "javadoc": "Get the landing pad address which indicates the \u003ccode\u003ecatch\u003c/code\u003e for this call site.\n@return the landing pad address of the catch.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": "the landing pad address of the catch."
      },
      "throws": []
    },
    {
      "name": "getLandingPadOffset",
      "comment": "Gets the offset of the landing pad address from the landing pad start.",
      "javadoc": "Gets the offset of the landing pad address from the landing pad start.\n@return the landing pad offset",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": "the landing pad offset"
      },
      "throws": []
    },
    {
      "name": "getActionOffset",
      "comment": "Get the offset into the action table for the first action record to be caught.",
      "javadoc": "Get the offset into the action table for the first action record to be caught.\n@return the offset into the action table",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the offset into the action table"
      },
      "throws": []
    }
  ]
}
