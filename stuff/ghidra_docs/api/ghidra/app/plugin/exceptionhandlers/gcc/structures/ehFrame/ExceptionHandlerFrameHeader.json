{
  "name": "ExceptionHandlerFrameHeader",
  "comment": "This class represents an Exception Handler Frame Header.\n \n struct eh_frame_hdr {\n     unsigned char eh_frame_header_version\n     unsigned char eh_frame_pointer_encoding\n     unsigned char eh_frame_description_entry_count\n     unsigned_char eh_handler_table_encoding\n }\n ",
  "javadoc": "This class represents an Exception Handler Frame Header.\n \u003cpre\u003e\n struct eh_frame_hdr {\n     unsigned char eh_frame_header_version\n     unsigned char eh_frame_pointer_encoding\n     unsigned char eh_frame_description_entry_count\n     unsigned_char eh_handler_table_encoding\n }\n \u003c/pre\u003e",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "monitor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.task.TaskMonitor",
      "type_short": "TaskMonitor",
      "constant_value": null
    },
    {
      "name": "prog",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.listing.Program",
      "type_short": "Program",
      "constant_value": null
    },
    {
      "name": "ehFrameHdrStruct",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.data.StructureDataType",
      "type_short": "StructureDataType",
      "constant_value": null
    },
    {
      "name": "eh_version",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "eh_FramePtrEncoding",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "eh_FrameDescEntryCntEncoding",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "eh_FrameTableEncoding",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor for an ExceptionHandlerFrameHeader.",
      "javadoc": "Constructor for an ExceptionHandlerFrameHeader.\n@param monitor a status monitor for indicating progress or allowing a task to be cancelled.\n@param curProg the program containing this eh frame header.",
      "static": false,
      "params": [
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": "a status monitor for indicating progress or allowing a task to be cancelled."
        },
        {
          "name": "curProg",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "the program containing this eh frame header."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addToDataTypeManager",
      "comment": "Adds the structure data type for the eh frame header to the program\u0027s data type manager.",
      "javadoc": "Adds the structure data type for the eh frame header to the program\u0027s data type manager.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "create",
      "comment": "Method that creates an Exception Handler Frame Header Structure\n at the address specified by \u0027addr\u0027. If addr is \u0027null\u0027, this method returns without creating\n the structure.",
      "javadoc": "Method that creates an Exception Handler Frame Header Structure\n at the address specified by \u0027addr\u0027. If addr is \u0027null\u0027, this method returns without creating\n the structure.\n@param addr - Address at which the Exception Handler Frame Header Structure should be created.\n@throws AddressOutOfBoundsException if the memory needed for this frame header isn\u0027t in the program.\n@throws MemoryAccessException if the memory needed for this frame header isn\u0027t in the program.",
      "static": false,
      "params": [
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "- Address at which the Exception Handler Frame Header Structure should be created."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.program.model.mem.MemoryAccessException",
          "type_short": "MemoryAccessException",
          "comment": "if the memory needed for this frame header isn\u0027t in the program."
        },
        {
          "type_long": "ghidra.program.model.address.AddressOutOfBoundsException",
          "type_short": "AddressOutOfBoundsException",
          "comment": "if the memory needed for this frame header isn\u0027t in the program."
        }
      ]
    },
    {
      "name": "getLength",
      "comment": "Gets the length of the EH Frame Header.",
      "javadoc": "Gets the length of the EH Frame Header.\n@return the length of this frame header.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the length of this frame header."
      },
      "throws": []
    },
    {
      "name": "getEh_FrameVersion",
      "comment": "Gets the version for this program\u0027s eh frame.",
      "javadoc": "Gets the version for this program\u0027s eh frame.\n@return the version indicator.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the version indicator."
      },
      "throws": []
    },
    {
      "name": "getEh_FrameDescEntryCntEncoding",
      "comment": "Gets the eh frame description entry count.",
      "javadoc": "Gets the eh frame description entry count.\n@return the description entry count.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the description entry count."
      },
      "throws": []
    },
    {
      "name": "getEh_FramePtrEncoding",
      "comment": "Gets the eh frame pointer encoding.",
      "javadoc": "Gets the eh frame pointer encoding.\n@return the pointer encoding.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the pointer encoding."
      },
      "throws": []
    },
    {
      "name": "getEh_FrameTableEncoding",
      "comment": "Gets the eh handler table encoding.",
      "javadoc": "Gets the eh handler table encoding.\n@return the table encoding.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the table encoding."
      },
      "throws": []
    }
  ]
}
