{
  "name": "FdeTable",
  "comment": "Class that builds the Frame Description Entry (FDE) Table for a Common Information Entry (CIE).\n \n Call Frame Instructions (taken from gcc-3.2.3-20030829/gcc/dwarf2.h\n \n    DW_CFA_advance_loc \u003d 0x40,\n    DW_CFA_offset \u003d 0x80,\n    DW_CFA_restore \u003d 0xc0,\n    DW_CFA_nop \u003d 0x00,\n    DW_CFA_set_loc \u003d 0x01,\n    DW_CFA_advance_loc1 \u003d 0x02,\n    DW_CFA_advance_loc2 \u003d 0x03,\n    DW_CFA_advance_loc4 \u003d 0x04,\n    DW_CFA_offset_extended \u003d 0x05,\n    DW_CFA_restore_extended \u003d 0x06,\n    DW_CFA_undefined \u003d 0x07,\n    DW_CFA_same_value \u003d 0x08,\n    DW_CFA_register \u003d 0x09,\n    DW_CFA_remember_state \u003d 0x0a,\n    DW_CFA_restore_state \u003d 0x0b,\n    DW_CFA_def_cfa \u003d 0x0c,\n    DW_CFA_def_cfa_register \u003d 0x0d,\n    DW_CFA_def_cfa_offset \u003d 0x0e,\n\n    //DWARF 3. //\n    DW_CFA_def_cfa_expression \u003d 0x0f,\n    DW_CFA_expression \u003d 0x10,\n    DW_CFA_offset_extended_sf \u003d 0x11,\n    DW_CFA_def_cfa_sf \u003d 0x12,\n    DW_CFA_def_cfa_offset_sf \u003d 0x13,\n ",
  "javadoc": "Class that builds the Frame Description Entry (FDE) Table for a Common Information Entry (CIE).\n \u003cp\u003e\n Call Frame Instructions (taken from gcc-3.2.3-20030829/gcc/dwarf2.h\n \u003cpre\u003e\n    DW_CFA_advance_loc \u003d 0x40,\n    DW_CFA_offset \u003d 0x80,\n    DW_CFA_restore \u003d 0xc0,\n    DW_CFA_nop \u003d 0x00,\n    DW_CFA_set_loc \u003d 0x01,\n    DW_CFA_advance_loc1 \u003d 0x02,\n    DW_CFA_advance_loc2 \u003d 0x03,\n    DW_CFA_advance_loc4 \u003d 0x04,\n    DW_CFA_offset_extended \u003d 0x05,\n    DW_CFA_restore_extended \u003d 0x06,\n    DW_CFA_undefined \u003d 0x07,\n    DW_CFA_same_value \u003d 0x08,\n    DW_CFA_register \u003d 0x09,\n    DW_CFA_remember_state \u003d 0x0a,\n    DW_CFA_restore_state \u003d 0x0b,\n    DW_CFA_def_cfa \u003d 0x0c,\n    DW_CFA_def_cfa_register \u003d 0x0d,\n    DW_CFA_def_cfa_offset \u003d 0x0e,\n\n    //DWARF 3. //\n    DW_CFA_def_cfa_expression \u003d 0x0f,\n    DW_CFA_expression \u003d 0x10,\n    DW_CFA_offset_extended_sf \u003d 0x11,\n    DW_CFA_def_cfa_sf \u003d 0x12,\n    DW_CFA_def_cfa_offset_sf \u003d 0x13,\n \u003c/pre\u003e",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "monitor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.task.TaskMonitor",
      "type_short": "TaskMonitor",
      "constant_value": null
    },
    {
      "name": "prog",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.listing.Program",
      "type_short": "Program",
      "constant_value": null
    },
    {
      "name": "fdeTableEntry",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.data.StructureDataType",
      "type_short": "StructureDataType",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor for an FDE table.",
      "javadoc": "Constructor for an FDE table.\n@param monitor a status monitor for indicating progress or allowing a task to be cancelled.\n@param curProg the program containing the FDE table.",
      "static": false,
      "params": [
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": "a status monitor for indicating progress or allowing a task to be cancelled."
        },
        {
          "name": "curProg",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "the program containing the FDE table."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "initFdeTableDataType",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "decoder",
          "type_long": "ghidra.app.plugin.exceptionhandlers.gcc.DwarfEHDecoder",
          "type_short": "DwarfEHDecoder",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.app.plugin.exceptionhandlers.gcc.structures.ehFrame.ExceptionHandlerFrameException",
          "type_short": "ExceptionHandlerFrameException",
          "comment": ""
        }
      ]
    },
    {
      "name": "create",
      "comment": "Creates an FDE Table at the specified Address.",
      "javadoc": "Creates an FDE Table at the specified Address.\n@param addr Address at which the FDE Table should be created.\n@param decoder the decoder for DWARF encoded exception handling information\n@param fdeTableCnt the number of exception handler FDEs.\n@throws MemoryAccessException if the needed memory can\u0027t be read.\n@throws ExceptionHandlerFrameException if the FDE table can\u0027t be decoded.",
      "static": false,
      "params": [
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "Address at which the FDE Table should be created."
        },
        {
          "name": "decoder",
          "type_long": "ghidra.app.plugin.exceptionhandlers.gcc.DwarfEHDecoder",
          "type_short": "DwarfEHDecoder",
          "comment": "the decoder for DWARF encoded exception handling information"
        },
        {
          "name": "fdeTableCnt",
          "type_long": "long",
          "type_short": "long",
          "comment": "the number of exception handler FDEs."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.program.model.mem.MemoryAccessException",
          "type_short": "MemoryAccessException",
          "comment": "if the needed memory can\u0027t be read."
        },
        {
          "type_long": "ghidra.app.plugin.exceptionhandlers.gcc.structures.ehFrame.ExceptionHandlerFrameException",
          "type_short": "ExceptionHandlerFrameException",
          "comment": "if the FDE table can\u0027t be decoded."
        }
      ]
    }
  ]
}
