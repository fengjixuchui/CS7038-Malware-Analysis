{
  "name": "SleighLanguage",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [
    "ghidra.program.model.lang.Language"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "SLA_FORMAT_VERSION",
      "comment": "SLA_FORMAT_VERSION will be incremented whenever the format of the .sla\n files change.\n \n Version 3: January 2021: added source file information for each constructor. \n Version 2: April 2019: Changed numbering of Overlay spaces.\n Version 1: Initial version.",
      "javadoc": "SLA_FORMAT_VERSION will be incremented whenever the format of the .sla\n files change.\n \u003cp\u003e\n Version 3: January 2021: added source file information for each constructor. \u003cbr\u003e\n Version 2: April 2019: Changed numbering of Overlay spaces.\u003cbr\u003e\n Version 1: Initial version.\u003cbr\u003e",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "3"
    },
    {
      "name": "compilerSpecDescriptions",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.Map\u003cghidra.program.model.lang.CompilerSpecID,ghidra.app.plugin.processors.sleigh.SleighCompilerSpecDescription\u003e",
      "type_short": "Map",
      "constant_value": null
    },
    {
      "name": "compilerSpecs",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.HashMap\u003cghidra.program.model.lang.CompilerSpecID,ghidra.program.model.lang.BasicCompilerSpec\u003e",
      "type_short": "HashMap",
      "constant_value": null
    },
    {
      "name": "additionalInject",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cghidra.program.model.lang.InjectPayloadSleigh\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "addressFactory",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.address.AddressFactory",
      "type_short": "AddressFactory",
      "constant_value": null
    },
    {
      "name": "defaultDataSpace",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.address.AddressSpace",
      "type_short": "AddressSpace",
      "constant_value": null
    },
    {
      "name": "registerBuilder",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.lang.RegisterBuilder",
      "type_short": "RegisterBuilder",
      "constant_value": null
    },
    {
      "name": "defaultMemoryBlocks",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.plugin.processors.generic.MemoryBlockDefinition[]",
      "type_short": "ghidra.app.plugin.processors.generic.MemoryBlockDefinition[]",
      "constant_value": null
    },
    {
      "name": "programCounter",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.lang.Register",
      "type_short": "Register",
      "constant_value": null
    },
    {
      "name": "defaultSymbols",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cghidra.program.model.util.AddressLabelInfo\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "uniqueBase",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "uniqueAllocateMask",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "numSections",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "alignment",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "defaultPointerWordSize",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "description",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.lang.SleighLanguageDescription",
      "type_short": "SleighLanguageDescription",
      "constant_value": null
    },
    {
      "name": "parallelHelper",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.lang.ParallelInstructionLanguageHelper",
      "type_short": "ParallelInstructionLanguageHelper",
      "constant_value": null
    },
    {
      "name": "indexer",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.sleigh.grammar.SourceFileIndexer",
      "type_short": "SourceFileIndexer",
      "constant_value": null
    },
    {
      "name": "symtab",
      "comment": "Symbols used by sleigh",
      "javadoc": "Symbols used by sleigh",
      "static": false,
      "type_long": "ghidra.app.plugin.processors.sleigh.symbol.SymbolTable",
      "type_short": "SymbolTable",
      "constant_value": null
    },
    {
      "name": "segmentedspace",
      "comment": "Non-null if a space should yes segmented addressing",
      "javadoc": "Non-null if a space should yes segmented addressing",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "segmentType",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "volatileAddresses",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.address.AddressSet",
      "type_short": "AddressSet",
      "constant_value": null
    },
    {
      "name": "contextcache",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.plugin.processors.sleigh.ContextCache",
      "type_short": "ContextCache",
      "constant_value": null
    },
    {
      "name": "instructProtoMap",
      "comment": "Cached instruction prototypes",
      "javadoc": "Cached instruction prototypes",
      "static": false,
      "type_long": "java.util.LinkedHashMap\u003cjava.lang.Integer,ghidra.app.plugin.processors.sleigh.SleighInstructionPrototype\u003e",
      "type_short": "LinkedHashMap",
      "constant_value": null
    },
    {
      "name": "root",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.plugin.processors.sleigh.DecisionNode",
      "type_short": "DecisionNode",
      "constant_value": null
    },
    {
      "name": "spacetable",
      "comment": "table of AddressSpaces",
      "javadoc": "table of AddressSpaces",
      "static": false,
      "type_long": "java.util.LinkedHashMap\u003cjava.lang.String,ghidra.program.model.address.AddressSpace\u003e",
      "type_short": "LinkedHashMap",
      "constant_value": null
    },
    {
      "name": "default_space",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.address.AddressSpace",
      "type_short": "AddressSpace",
      "constant_value": null
    },
    {
      "name": "ctxsetting",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cghidra.program.model.lang.ContextSetting\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "properties",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.LinkedHashMap\u003cjava.lang.String,java.lang.String\u003e",
      "type_short": "LinkedHashMap",
      "constant_value": null
    },
    {
      "name": "manual",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.SortedMap\u003cjava.lang.String,ghidra.util.ManualEntry\u003e",
      "type_short": "SortedMap",
      "constant_value": null
    },
    {
      "name": "registerManager",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.lang.RegisterManager",
      "type_short": "RegisterManager",
      "constant_value": null
    },
    {
      "name": "SPEC_ERR_HANDLER",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "org.xml.sax.ErrorHandler",
      "type_short": "ErrorHandler",
      "constant_value": null
    },
    {
      "name": "manualException",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.Exception",
      "type_short": "Exception",
      "constant_value": null
    },
    {
      "name": "CASE_INSENSITIVE",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.util.Comparator\u003cjava.lang.String\u003e",
      "type_short": "Comparator",
      "constant_value": null
    },
    {
      "name": "COMMENT",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.util.regex.Pattern",
      "type_short": "Pattern",
      "constant_value": null
    },
    {
      "name": "FILE_INCLUDE",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.util.regex.Pattern",
      "type_short": "Pattern",
      "constant_value": null
    },
    {
      "name": "FILE_SWITCH",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.util.regex.Pattern",
      "type_short": "Pattern",
      "constant_value": null
    },
    {
      "name": "FILE_SWITCH_WITH_DESCRIPTION",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.util.regex.Pattern",
      "type_short": "Pattern",
      "constant_value": null
    },
    {
      "name": "INSTRUCTION",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.util.regex.Pattern",
      "type_short": "Pattern",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "description",
          "type_long": "ghidra.program.model.lang.SleighLanguageDescription",
          "type_short": "SleighLanguageDescription",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "org.xml.sax.SAXException",
          "type_short": "SAXException",
          "comment": ""
        },
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        },
        {
          "type_long": "ghidra.program.model.lang.UnknownInstructionException",
          "type_short": "UnknownInstructionException",
          "comment": ""
        }
      ]
    },
    {
      "name": "addAdditionInject",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "payload",
          "type_long": "ghidra.program.model.lang.InjectPayloadSleigh",
          "type_short": "InjectPayloadSleigh",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "initialize",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "langDescription",
          "type_long": "ghidra.program.model.lang.SleighLanguageDescription",
          "type_short": "SleighLanguageDescription",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "org.xml.sax.SAXException",
          "type_short": "SAXException",
          "comment": ""
        },
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        },
        {
          "type_long": "ghidra.program.model.lang.UnknownInstructionException",
          "type_short": "UnknownInstructionException",
          "comment": ""
        }
      ]
    },
    {
      "name": "isSLAWrongVersion",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "slaFile",
          "type_long": "generic.jar.ResourceFile",
          "type_short": "ResourceFile",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isSLAStale",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "slaFile",
          "type_long": "generic.jar.ResourceFile",
          "type_short": "ResourceFile",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getUniqueBase",
      "comment": "Returns the unique base offset from which additional temporary variables\n may be created.",
      "javadoc": "Returns the unique base offset from which additional temporary variables\n may be created.\n@return unique base offset",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": "unique base offset"
      },
      "throws": []
    },
    {
      "name": "getUniqueAllocationMask",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "numSections",
      "comment": "",
      "javadoc": "@return (maximum) number of named p-code sections",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "(maximum) number of named p-code sections"
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getRegisterManager",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.lang.RegisterManager",
        "type_short": "RegisterManager",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "applyContextSettings",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "programContext",
          "type_long": "ghidra.program.model.listing.DefaultProgramContext",
          "type_short": "DefaultProgramContext",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getAddressFactory",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.address.AddressFactory",
        "type_short": "AddressFactory",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getAdditionalInject",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cghidra.program.model.lang.InjectPayloadSleigh\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getContextBaseRegister",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.lang.Register",
        "type_short": "Register",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getContextRegisters",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cghidra.program.model.lang.Register\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDefaultMemoryBlocks",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.plugin.processors.generic.MemoryBlockDefinition[]",
        "type_short": "ghidra.app.plugin.processors.generic.MemoryBlockDefinition[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getProgramCounter",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.lang.Register",
        "type_short": "Register",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDefaultSymbols",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cghidra.program.model.util.AddressLabelInfo\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getInstructionAlignment",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getMinorVersion",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLanguageID",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.lang.LanguageID",
        "type_short": "LanguageID",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getUserDefinedOpName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getNumberOfUserDefinedOpNames",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getProcessor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.lang.Processor",
        "type_short": "Processor",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getRegister",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "addrspc",
          "type_long": "ghidra.program.model.address.AddressSpace",
          "type_short": "AddressSpace",
          "comment": ""
        },
        {
          "name": "offset",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        },
        {
          "name": "size",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.lang.Register",
        "type_short": "Register",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getRegister",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.lang.Register",
        "type_short": "Register",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getRegister",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "size",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.lang.Register",
        "type_short": "Register",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getRegisters",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "address",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.lang.Register[]",
        "type_short": "ghidra.program.model.lang.Register[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getRegisters",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cghidra.program.model.lang.Register\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getRegisterNames",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cjava.lang.String\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSegmentedSpace",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getVersion",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getVolatileAddresses",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.address.AddressSetView",
        "type_short": "AddressSetView",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isBigEndian",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isVolatile",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "parse",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "buf",
          "type_long": "ghidra.program.model.mem.MemBuffer",
          "type_short": "MemBuffer",
          "comment": ""
        },
        {
          "name": "context",
          "type_long": "ghidra.program.model.lang.ProcessorContext",
          "type_short": "ProcessorContext",
          "comment": ""
        },
        {
          "name": "inDelaySlot",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.lang.InstructionPrototype",
        "type_short": "InstructionPrototype",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.program.model.lang.InsufficientBytesException",
          "type_short": "InsufficientBytesException",
          "comment": ""
        },
        {
          "type_long": "ghidra.program.model.lang.UnknownInstructionException",
          "type_short": "UnknownInstructionException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getRootDecisionNode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.plugin.processors.sleigh.DecisionNode",
        "type_short": "DecisionNode",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSymbolTable",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.plugin.processors.sleigh.symbol.SymbolTable",
        "type_short": "SymbolTable",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSourceFileIndexer",
      "comment": "Returns the source file indexer",
      "javadoc": "Returns the source file indexer\n@return indexer",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.sleigh.grammar.SourceFileIndexer",
        "type_short": "SourceFileIndexer",
        "comment": "indexer"
      },
      "throws": []
    },
    {
      "name": "reloadLanguage",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "reloadLanguage",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        },
        {
          "name": "calledFromInitialize",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "supportsPcode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "readInitialDescription",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "org.xml.sax.SAXException",
          "type_short": "SAXException",
          "comment": ""
        },
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "setDefaultDataSpace",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "spaceName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setProgramCounter",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "programCounterName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addContextSetting",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "reg",
          "type_long": "ghidra.program.model.lang.Register",
          "type_short": "Register",
          "comment": ""
        },
        {
          "name": "value",
          "type_long": "java.math.BigInteger",
          "type_short": "BigInteger",
          "comment": ""
        },
        {
          "name": "begad",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "endad",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "parseRange",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "element",
          "type_long": "ghidra.xml.XmlElement",
          "type_short": "XmlElement",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "generic.stl.Pair\u003cghidra.program.model.address.Address,ghidra.program.model.address.Address\u003e",
        "type_short": "Pair",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "read",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "parser",
          "type_long": "ghidra.xml.XmlPullParser",
          "type_short": "XmlPullParser",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.xml.XmlParseException",
          "type_short": "XmlParseException",
          "comment": ""
        }
      ]
    },
    {
      "name": "readRemainingSpecification",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "org.xml.sax.SAXException",
          "type_short": "SAXException",
          "comment": ""
        },
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "readSpecification",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "sleighfile",
          "type_long": "generic.jar.ResourceFile",
          "type_short": "ResourceFile",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "org.xml.sax.SAXException",
          "type_short": "SAXException",
          "comment": ""
        },
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        },
        {
          "type_long": "ghidra.program.model.lang.UnknownInstructionException",
          "type_short": "UnknownInstructionException",
          "comment": ""
        }
      ]
    },
    {
      "name": "restoreXml",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "parser",
          "type_long": "ghidra.xml.XmlPullParser",
          "type_short": "XmlPullParser",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.program.model.lang.UnknownInstructionException",
          "type_short": "UnknownInstructionException",
          "comment": ""
        }
      ]
    },
    {
      "name": "parseSpaces",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "parser",
          "type_long": "ghidra.xml.XmlPullParser",
          "type_short": "XmlPullParser",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "buildAddressSpaceFactory",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "loadRegisters",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "builder",
          "type_long": "ghidra.program.model.lang.RegisterBuilder",
          "type_short": "RegisterBuilder",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setHasMappedRegisters",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "space",
          "type_long": "ghidra.program.model.address.AddressSpace",
          "type_short": "AddressSpace",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "registerContext",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "field",
          "type_long": "ghidra.app.plugin.processors.sleigh.expression.ContextField",
          "type_short": "ContextField",
          "comment": ""
        },
        {
          "name": "builder",
          "type_long": "ghidra.program.model.lang.RegisterBuilder",
          "type_short": "RegisterBuilder",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "registerContext",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "sym",
          "type_long": "ghidra.app.plugin.processors.sleigh.symbol.ContextSymbol",
          "type_short": "ContextSymbol",
          "comment": ""
        },
        {
          "name": "builder",
          "type_long": "ghidra.program.model.lang.RegisterBuilder",
          "type_short": "RegisterBuilder",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "xrefRegisters",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDefaultSpace",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.address.AddressSpace",
        "type_short": "AddressSpace",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDefaultDataSpace",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.address.AddressSpace",
        "type_short": "AddressSpace",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDefaultPointerWordSize",
      "comment": "",
      "javadoc": "@deprecated Will be removed once we have better way to attach address spaces to pointer data-types\n@return the default wordsize to use when analyzing pointer offsets",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the default wordsize to use when analyzing pointer offsets"
      },
      "throws": []
    },
    {
      "name": "getCompatibleCompilerSpecDescriptions",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cghidra.program.model.lang.CompilerSpecDescription\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getCompilerSpecByID",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "compilerSpecID",
          "type_long": "ghidra.program.model.lang.CompilerSpecID",
          "type_short": "CompilerSpecID",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.lang.CompilerSpec",
        "type_short": "CompilerSpec",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.program.model.lang.CompilerSpecNotFoundException",
          "type_short": "CompilerSpecNotFoundException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getLanguageDescription",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.lang.LanguageDescription",
        "type_short": "LanguageDescription",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDefaultCompilerSpec",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.lang.CompilerSpec",
        "type_short": "CompilerSpec",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getProperty",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "key",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPropertyKeys",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Set\u003cjava.lang.String\u003e",
        "type_short": "Set",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getProperty",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "key",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "defaultString",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPropertyAsBoolean",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "key",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "defaultBoolean",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPropertyAsInt",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "key",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "defaultInt",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hasProperty",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "key",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getManualEntry",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "instruction",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.util.ManualEntry",
        "type_short": "ManualEntry",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getManualInstructionMnemonicKeys",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Set\u003cjava.lang.String\u003e",
        "type_short": "Set",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "initManual",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "loadIndex",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "processorFile",
          "type_long": "generic.jar.ResourceFile",
          "type_short": "ResourceFile",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getManualException",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.Exception",
        "type_short": "Exception",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hasManual",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "buildTranslatorTag",
      "comment": "Generates a limited translator XML tag for the specified address factory and optional register set.",
      "javadoc": "Generates a limited translator XML tag for the specified address factory and optional register set.\n@param factory address factory\n@param uniqueOffset the initial offset within the unique address space to start assigning temporary registers\n@param optionalSymTab optional symbol table to be passed (may be null to omit).  Only non-context registers\n and user-defined pcodeop\u0027s are included.\n@return the entire XML tag as a String",
      "static": false,
      "params": [
        {
          "name": "factory",
          "type_long": "ghidra.program.model.address.AddressFactory",
          "type_short": "AddressFactory",
          "comment": "address factory"
        },
        {
          "name": "uniqueOffset",
          "type_long": "long",
          "type_short": "long",
          "comment": "the initial offset within the unique address space to start assigning temporary registers"
        },
        {
          "name": "optionalSymTab",
          "type_long": "ghidra.app.plugin.processors.sleigh.symbol.SymbolTable",
          "type_short": "SymbolTable",
          "comment": "optional symbol table to be passed (may be null to omit).  Only non-context registers\n and user-defined pcodeop\u0027s are included."
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the entire XML tag as a String"
      },
      "throws": []
    },
    {
      "name": "buildSymbolsXml",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "symtab",
          "type_long": "ghidra.app.plugin.processors.sleigh.symbol.SymbolTable",
          "type_short": "SymbolTable",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "initParallelHelper",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getParallelInstructionHelper",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.lang.ParallelInstructionLanguageHelper",
        "type_short": "ParallelInstructionLanguageHelper",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSortedVectorRegisters",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cghidra.program.model.lang.Register\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    }
  ]
}
