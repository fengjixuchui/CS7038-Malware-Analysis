{
  "name": "SleighInstructionPrototype",
  "comment": "The InstructionPrototype for sleigh languages.\n The prototype is unique up to the tree of Constructors.\n Variations in the bit pattern that none of the Constructor\n mask/values care about get lumped under the same prototype",
  "javadoc": "The InstructionPrototype for sleigh languages.\n The prototype is unique up to the tree of Constructors.\n Variations in the bit pattern that none of the Constructor\n mask/values care about get lumped under the same prototype",
  "static": false,
  "implements": [
    "ghidra.program.model.lang.InstructionPrototype"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "RETURN",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "1"
    },
    {
      "name": "CALL_INDIRECT",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "2"
    },
    {
      "name": "BRANCH_INDIRECT",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "4"
    },
    {
      "name": "CALL",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "8"
    },
    {
      "name": "JUMPOUT",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "16"
    },
    {
      "name": "NO_FALLTHRU",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "32"
    },
    {
      "name": "BRANCH_TO_END",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "64"
    },
    {
      "name": "CROSSBUILD",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "128"
    },
    {
      "name": "LABEL",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "256"
    },
    {
      "name": "language",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.plugin.processors.sleigh.SleighLanguage",
      "type_short": "SleighLanguage",
      "constant_value": null
    },
    {
      "name": "isindelayslot",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "flowType",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.symbol.FlowType",
      "type_short": "FlowType",
      "constant_value": null
    },
    {
      "name": "opresolve",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int[]",
      "type_short": "int[]",
      "constant_value": null
    },
    {
      "name": "opRefTypes",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.symbol.RefType[]",
      "type_short": "ghidra.program.model.symbol.RefType[]",
      "constant_value": null
    },
    {
      "name": "flowStateList",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cghidra.app.plugin.processors.sleigh.SleighInstructionPrototype.FlowRecord\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "delaySlotByteCnt",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "hasCrossBuilds",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "flowStateListNamed",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.ArrayList\u003cjava.util.ArrayList\u003cghidra.app.plugin.processors.sleigh.SleighInstructionPrototype.FlowRecord\u003e\u003e",
      "type_short": "ArrayList",
      "constant_value": null
    },
    {
      "name": "emptyPCode",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.program.model.pcode.PcodeOp[]",
      "type_short": "ghidra.program.model.pcode.PcodeOp[]",
      "constant_value": null
    },
    {
      "name": "emptyObject",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.Object[]",
      "type_short": "java.lang.Object[]",
      "constant_value": null
    },
    {
      "name": "emptyFlow",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.program.model.address.Address[]",
      "type_short": "ghidra.program.model.address.Address[]",
      "constant_value": null
    },
    {
      "name": "contextCache",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.plugin.processors.sleigh.ContextCache",
      "type_short": "ContextCache",
      "constant_value": null
    },
    {
      "name": "length",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "rootState",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.plugin.processors.sleigh.ConstructState",
      "type_short": "ConstructState",
      "constant_value": null
    },
    {
      "name": "mnemonicState",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.plugin.processors.sleigh.ConstructState",
      "type_short": "ConstructState",
      "constant_value": null
    },
    {
      "name": "hashcode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "instrMask",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.lang.Mask",
      "type_short": "Mask",
      "constant_value": null
    },
    {
      "name": "operandMasks",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.lang.Mask[]",
      "type_short": "ghidra.program.model.lang.Mask[]",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "lang",
          "type_long": "ghidra.app.plugin.processors.sleigh.SleighLanguage",
          "type_short": "SleighLanguage",
          "comment": ""
        },
        {
          "name": "buf",
          "type_long": "ghidra.program.model.mem.MemBuffer",
          "type_short": "MemBuffer",
          "comment": ""
        },
        {
          "name": "context",
          "type_long": "ghidra.program.model.lang.ProcessorContextView",
          "type_short": "ProcessorContextView",
          "comment": ""
        },
        {
          "name": "cache",
          "type_long": "ghidra.app.plugin.processors.sleigh.ContextCache",
          "type_short": "ContextCache",
          "comment": ""
        },
        {
          "name": "inDelaySlot",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        },
        {
          "name": "debug",
          "type_long": "ghidra.app.plugin.processors.sleigh.SleighDebugLogger",
          "type_short": "SleighDebugLogger",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.program.model.lang.UnknownInstructionException",
          "type_short": "UnknownInstructionException",
          "comment": ""
        },
        {
          "type_long": "ghidra.program.model.mem.MemoryAccessException",
          "type_short": "MemoryAccessException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getLength",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getMnemonicState",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.plugin.processors.sleigh.ConstructState",
        "type_short": "ConstructState",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "cacheMnemonicState",
      "comment": "Cache the Constructor state which represents the base\n mnemonic, and the operands to that mnemonic\n Cache the operand states for each operand in printing order",
      "javadoc": "Cache the Constructor state which represents the base\n mnemonic, and the operands to that mnemonic\n Cache the operand states for each operand in printing order",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hasDelaySlots",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hasCrossBuildDependency",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addExplicitFlow",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "state",
          "type_long": "ghidra.app.plugin.processors.sleigh.ConstructState",
          "type_short": "ConstructState",
          "comment": ""
        },
        {
          "name": "op",
          "type_long": "ghidra.app.plugin.processors.sleigh.template.OpTpl",
          "type_short": "OpTpl",
          "comment": ""
        },
        {
          "name": "flags",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "summary",
          "type_long": "ghidra.app.plugin.processors.sleigh.SleighInstructionPrototype.FlowSummary",
          "type_short": "FlowSummary",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "walkTemplates",
      "comment": "Walk the pcode templates in the order they would be emitted.\n Collect flowFlags FlowRecords",
      "javadoc": "Walk the pcode templates in the order they would be emitted.\n Collect flowFlags FlowRecords\n@param walker the pcode template walker",
      "static": true,
      "params": [
        {
          "name": "walker",
          "type_long": "ghidra.app.plugin.processors.sleigh.OpTplWalker",
          "type_short": "OpTplWalker",
          "comment": "the pcode template walker"
        }
      ],
      "return": {
        "type_long": "ghidra.app.plugin.processors.sleigh.SleighInstructionPrototype.FlowSummary",
        "type_short": "FlowSummary",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "flowListToFlowType",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "flowstate",
          "type_long": "java.util.List\u003cghidra.app.plugin.processors.sleigh.SleighInstructionPrototype.FlowRecord\u003e",
          "type_short": "List",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.symbol.FlowType",
        "type_short": "FlowType",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "cacheTreeInfo",
      "comment": "Walk the Constructor tree gathering ConstructStates which are flow destinations (flowStateList)\n flowFlags and delayslot directives",
      "javadoc": "Walk the Constructor tree gathering ConstructStates which are flow destinations (flowStateList)\n flowFlags and delayslot directives",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "convertFlowFlags",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "flowFlags",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.symbol.FlowType",
        "type_short": "FlowType",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "cacheInfo",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "memBuf",
          "type_long": "ghidra.program.model.mem.MemBuffer",
          "type_short": "MemBuffer",
          "comment": ""
        },
        {
          "name": "context",
          "type_long": "ghidra.program.model.lang.ProcessorContextView",
          "type_short": "ProcessorContextView",
          "comment": ""
        },
        {
          "name": "computeMasks",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "cacheInstructionMasks",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "memBuf",
          "type_long": "ghidra.program.model.mem.MemBuffer",
          "type_short": "MemBuffer",
          "comment": ""
        },
        {
          "name": "context",
          "type_long": "ghidra.program.model.lang.ProcessorContextView",
          "type_short": "ProcessorContextView",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hashCode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "equals",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "obj",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getInstructionMask",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.lang.Mask",
        "type_short": "Mask",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getOperandValueMask",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "operandIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.lang.Mask",
        "type_short": "Mask",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFlowType",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "context",
          "type_long": "ghidra.program.model.lang.InstructionContext",
          "type_short": "InstructionContext",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.symbol.FlowType",
        "type_short": "FlowType",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDelaySlotByteCount",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDelaySlotDepth",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "context",
          "type_long": "ghidra.program.model.lang.InstructionContext",
          "type_short": "InstructionContext",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isInDelaySlot",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getNumOperands",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getOpType",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "opIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "context",
          "type_long": "ghidra.program.model.lang.InstructionContext",
          "type_short": "InstructionContext",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isIndirect",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "sleighOpIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFallThrough",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "context",
          "type_long": "ghidra.program.model.lang.InstructionContext",
          "type_short": "InstructionContext",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFallThroughOffset",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "context",
          "type_long": "ghidra.program.model.lang.InstructionContext",
          "type_short": "InstructionContext",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "gatherFlags",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "curflags",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "context",
          "type_long": "ghidra.program.model.lang.InstructionContext",
          "type_short": "InstructionContext",
          "comment": ""
        },
        {
          "name": "secnum",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.program.model.mem.MemoryAccessException",
          "type_short": "MemoryAccessException",
          "comment": ""
        },
        {
          "type_long": "ghidra.program.model.lang.UnknownContextException",
          "type_short": "UnknownContextException",
          "comment": ""
        }
      ]
    },
    {
      "name": "handleOverlayAddress",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "context",
          "type_long": "ghidra.program.model.lang.InstructionContext",
          "type_short": "InstructionContext",
          "comment": ""
        },
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "gatherFlows",
      "comment": "Gather all the flow records (perhaps across multiple InstructionPrototypes via crossbuilds) and convert to Addresses",
      "javadoc": "Gather all the flow records (perhaps across multiple InstructionPrototypes via crossbuilds) and convert to Addresses\n@param res is the resulting flow Addresses\n@param parsecontext is the parsing context for the current instruction\n@param context is the context for the particular address so crossbuilds can be resolved\n@throws MemoryAccessException\n@throws UnknownContextException",
      "static": false,
      "params": [
        {
          "name": "res",
          "type_long": "java.util.ArrayList\u003cghidra.program.model.address.Address\u003e",
          "type_short": "ArrayList",
          "comment": "is the resulting flow Addresses"
        },
        {
          "name": "parsecontext",
          "type_long": "ghidra.app.plugin.processors.sleigh.SleighParserContext",
          "type_short": "SleighParserContext",
          "comment": "is the parsing context for the current instruction"
        },
        {
          "name": "context",
          "type_long": "ghidra.program.model.lang.InstructionContext",
          "type_short": "InstructionContext",
          "comment": "is the context for the particular address so crossbuilds can be resolved"
        },
        {
          "name": "secnum",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.program.model.mem.MemoryAccessException",
          "type_short": "MemoryAccessException",
          "comment": ""
        },
        {
          "type_long": "ghidra.program.model.lang.UnknownContextException",
          "type_short": "UnknownContextException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getFlows",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "context",
          "type_long": "ghidra.program.model.lang.InstructionContext",
          "type_short": "InstructionContext",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.Address[]",
        "type_short": "ghidra.program.model.address.Address[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSeparator",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "opIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "context",
          "type_long": "ghidra.program.model.lang.InstructionContext",
          "type_short": "InstructionContext",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getOpRepresentationList",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "opIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "context",
          "type_long": "ghidra.program.model.lang.InstructionContext",
          "type_short": "InstructionContext",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.ArrayList\u003cjava.lang.Object\u003e",
        "type_short": "ArrayList",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getOperandSymbol",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "opIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "buf",
          "type_long": "ghidra.program.model.mem.MemBuffer",
          "type_short": "MemBuffer",
          "comment": ""
        },
        {
          "name": "context",
          "type_long": "ghidra.program.model.lang.ProcessorContextView",
          "type_short": "ProcessorContextView",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.app.plugin.processors.sleigh.symbol.OperandSymbol",
        "type_short": "OperandSymbol",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getAddress",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "opIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "context",
          "type_long": "ghidra.program.model.lang.InstructionContext",
          "type_short": "InstructionContext",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getScalar",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "opIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "context",
          "type_long": "ghidra.program.model.lang.InstructionContext",
          "type_short": "InstructionContext",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.scalar.Scalar",
        "type_short": "Scalar",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getRegister",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "opIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "context",
          "type_long": "ghidra.program.model.lang.InstructionContext",
          "type_short": "InstructionContext",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.lang.Register",
        "type_short": "Register",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getOpObjects",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "opIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "context",
          "type_long": "ghidra.program.model.lang.InstructionContext",
          "type_short": "InstructionContext",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.Object[]",
        "type_short": "java.lang.Object[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hasDelimeter",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "opIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getInputObjects",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "context",
          "type_long": "ghidra.program.model.lang.InstructionContext",
          "type_short": "InstructionContext",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.Object[]",
        "type_short": "java.lang.Object[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getInputObjects",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "pcode",
          "type_long": "ghidra.program.model.pcode.PcodeOp",
          "type_short": "PcodeOp",
          "comment": ""
        },
        {
          "name": "inputObjects",
          "type_long": "java.util.HashSet\u003cjava.lang.Object\u003e",
          "type_short": "HashSet",
          "comment": ""
        },
        {
          "name": "writtenObjects",
          "type_long": "java.util.HashSet\u003cjava.lang.Object\u003e",
          "type_short": "HashSet",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getResultObjects",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "context",
          "type_long": "ghidra.program.model.lang.InstructionContext",
          "type_short": "InstructionContext",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.Object[]",
        "type_short": "java.lang.Object[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getResultObject",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "pcode",
          "type_long": "ghidra.program.model.pcode.PcodeOp",
          "type_short": "PcodeOp",
          "comment": ""
        },
        {
          "name": "results",
          "type_long": "java.util.HashSet\u003cjava.lang.Object\u003e",
          "type_short": "HashSet",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getVarnodeObject",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "node",
          "type_long": "ghidra.program.model.pcode.Varnode",
          "type_short": "Varnode",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.Object",
        "type_short": "Object",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPcode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "context",
          "type_long": "ghidra.program.model.lang.InstructionContext",
          "type_short": "InstructionContext",
          "comment": ""
        },
        {
          "name": "override",
          "type_long": "ghidra.program.model.pcode.PcodeOverride",
          "type_short": "PcodeOverride",
          "comment": ""
        },
        {
          "name": "uniqueFactory",
          "type_long": "ghidra.program.model.address.UniqueAddressFactory",
          "type_short": "UniqueAddressFactory",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.pcode.PcodeOp[]",
        "type_short": "ghidra.program.model.pcode.PcodeOp[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPcodePacked",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "context",
          "type_long": "ghidra.program.model.lang.InstructionContext",
          "type_short": "InstructionContext",
          "comment": ""
        },
        {
          "name": "override",
          "type_long": "ghidra.program.model.pcode.PcodeOverride",
          "type_short": "PcodeOverride",
          "comment": ""
        },
        {
          "name": "uniqueFactory",
          "type_long": "ghidra.program.model.address.UniqueAddressFactory",
          "type_short": "UniqueAddressFactory",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.lang.PackedBytes",
        "type_short": "PackedBytes",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPcode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "context",
          "type_long": "ghidra.program.model.lang.InstructionContext",
          "type_short": "InstructionContext",
          "comment": ""
        },
        {
          "name": "opIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.pcode.PcodeOp[]",
        "type_short": "ghidra.program.model.pcode.PcodeOp[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getOperandRefType",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "opIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "context",
          "type_long": "ghidra.program.model.lang.InstructionContext",
          "type_short": "InstructionContext",
          "comment": ""
        },
        {
          "name": "override",
          "type_long": "ghidra.program.model.pcode.PcodeOverride",
          "type_short": "PcodeOverride",
          "comment": ""
        },
        {
          "name": "uniqueFactory",
          "type_long": "ghidra.program.model.address.UniqueAddressFactory",
          "type_short": "UniqueAddressFactory",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.symbol.RefType",
        "type_short": "RefType",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "cacheDefaultOperandRefTypes",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "context",
          "type_long": "ghidra.program.model.lang.InstructionContext",
          "type_short": "InstructionContext",
          "comment": ""
        },
        {
          "name": "uniqueFactory",
          "type_long": "ghidra.program.model.address.UniqueAddressFactory",
          "type_short": "UniqueAddressFactory",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getStaticOperandRefType",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "var",
          "type_long": "ghidra.program.model.pcode.Varnode",
          "type_short": "Varnode",
          "comment": ""
        },
        {
          "name": "pcode",
          "type_long": "ghidra.program.model.pcode.PcodeOp[]",
          "type_short": "ghidra.program.model.pcode.PcodeOp[]",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.symbol.RefType",
        "type_short": "RefType",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDynamicOperandRefType",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "hand",
          "type_long": "ghidra.app.plugin.processors.sleigh.FixedHandle",
          "type_short": "FixedHandle",
          "comment": ""
        },
        {
          "name": "pcode",
          "type_long": "ghidra.program.model.pcode.PcodeOp[]",
          "type_short": "ghidra.program.model.pcode.PcodeOp[]",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.symbol.RefType",
        "type_short": "RefType",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getMnemonic",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "context",
          "type_long": "ghidra.program.model.lang.InstructionContext",
          "type_short": "InstructionContext",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "resolve",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "root",
          "type_long": "ghidra.app.plugin.processors.sleigh.DecisionNode",
          "type_short": "DecisionNode",
          "comment": ""
        },
        {
          "name": "protoContext",
          "type_long": "ghidra.app.plugin.processors.sleigh.SleighParserContext",
          "type_short": "SleighParserContext",
          "comment": ""
        },
        {
          "name": "debug",
          "type_long": "ghidra.app.plugin.processors.sleigh.SleighDebugLogger",
          "type_short": "SleighDebugLogger",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.program.model.mem.MemoryAccessException",
          "type_short": "MemoryAccessException",
          "comment": ""
        },
        {
          "type_long": "ghidra.program.model.lang.UnknownInstructionException",
          "type_short": "UnknownInstructionException",
          "comment": ""
        }
      ]
    },
    {
      "name": "resolveHandles",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "protoContext",
          "type_long": "ghidra.app.plugin.processors.sleigh.SleighParserContext",
          "type_short": "SleighParserContext",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.program.model.mem.MemoryAccessException",
          "type_short": "MemoryAccessException",
          "comment": ""
        }
      ]
    },
    {
      "name": "reconstructContext",
      "comment": "Reconstruct the ParserContext\u0027s internal packed context array and its list of global ContextSet directives\n by walking a previously resolved ConstructState tree",
      "javadoc": "Reconstruct the ParserContext\u0027s internal packed context array and its list of global ContextSet directives\n by walking a previously resolved ConstructState tree\n@param protoContext is the SleighParserContext containing the tree and holding the context results\n@param debug\n@throws MemoryAccessException",
      "static": false,
      "params": [
        {
          "name": "protoContext",
          "type_long": "ghidra.app.plugin.processors.sleigh.SleighParserContext",
          "type_short": "SleighParserContext",
          "comment": "is the SleighParserContext containing the tree and holding the context results"
        },
        {
          "name": "debug",
          "type_long": "ghidra.app.plugin.processors.sleigh.SleighDebugLogger",
          "type_short": "SleighDebugLogger",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.program.model.mem.MemoryAccessException",
          "type_short": "MemoryAccessException",
          "comment": ""
        }
      ]
    },
    {
      "name": "addHandleObject",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "curSpace",
          "type_long": "ghidra.program.model.address.AddressSpace",
          "type_short": "AddressSpace",
          "comment": ""
        },
        {
          "name": "handle",
          "type_long": "ghidra.app.plugin.processors.sleigh.FixedHandle",
          "type_short": "FixedHandle",
          "comment": ""
        },
        {
          "name": "list",
          "type_long": "java.util.ArrayList\u003cjava.lang.Object\u003e",
          "type_short": "ArrayList",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getHandleAddr",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "hand",
          "type_long": "ghidra.app.plugin.processors.sleigh.FixedHandle",
          "type_short": "FixedHandle",
          "comment": ""
        },
        {
          "name": "curSpace",
          "type_long": "ghidra.program.model.address.AddressSpace",
          "type_short": "AddressSpace",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getParserContext",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "buf",
          "type_long": "ghidra.program.model.mem.MemBuffer",
          "type_short": "MemBuffer",
          "comment": ""
        },
        {
          "name": "processorContext",
          "type_long": "ghidra.program.model.lang.ProcessorContextView",
          "type_short": "ProcessorContextView",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.app.plugin.processors.sleigh.SleighParserContext",
        "type_short": "SleighParserContext",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.program.model.mem.MemoryAccessException",
          "type_short": "MemoryAccessException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getPseudoParserContext",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "buffer",
          "type_long": "ghidra.program.model.mem.MemBuffer",
          "type_short": "MemBuffer",
          "comment": ""
        },
        {
          "name": "processorContext",
          "type_long": "ghidra.program.model.lang.ProcessorContextView",
          "type_short": "ProcessorContextView",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.lang.ParserContext",
        "type_short": "ParserContext",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.program.model.lang.InsufficientBytesException",
          "type_short": "InsufficientBytesException",
          "comment": ""
        },
        {
          "type_long": "ghidra.program.model.lang.UnknownInstructionException",
          "type_short": "UnknownInstructionException",
          "comment": ""
        },
        {
          "type_long": "ghidra.program.model.lang.UnknownContextException",
          "type_short": "UnknownContextException",
          "comment": ""
        },
        {
          "type_long": "ghidra.program.model.mem.MemoryAccessException",
          "type_short": "MemoryAccessException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getRootState",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.plugin.processors.sleigh.ConstructState",
        "type_short": "ConstructState",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getContextCache",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.plugin.processors.sleigh.ContextCache",
        "type_short": "ContextCache",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLanguage",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.lang.Language",
        "type_short": "Language",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "dumpConstructorTree",
      "comment": "Used for testing and diagnostics: list the constructor line numbers used to resolve this\n encoding\n \n This includes braces to describe the tree structure",
      "javadoc": "Used for testing and diagnostics: list the constructor line numbers used to resolve this\n encoding\n \n This includes braces to describe the tree structure\n@see AssemblyResolvedConstructor#dumpConstructorTree()\n@return the constructor tree",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the constructor tree"
      },
      "throws": []
    }
  ]
}
