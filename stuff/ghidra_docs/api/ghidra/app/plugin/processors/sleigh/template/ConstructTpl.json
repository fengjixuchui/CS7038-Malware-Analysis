{
  "name": "ConstructTpl",
  "comment": "A constructor template, representing the semantic action of a SLEIGH constructor, without\n its final context.  The constructor template is made up of a list of p-code op templates,\n which are in turn made up of varnode templates.\n This is one step removed from the final array of PcodeOp objects, but:\n   - Constants may still need to incorporate context dependent address resolution and relative offsets.\n   - Certain p-code operations may still need expansion to include a dynamic LOAD or STORE operation.\n   - The list may hold \"build\" directives for sub-constructor templates.\n   - The list may still hold \"label\" information for the final resolution of relative jump offsets.\n \n The final PcodeOps are produced by handing this to the build() method of PcodeEmit which has\n the InstructionContext necessary for final resolution.",
  "javadoc": "A constructor template, representing the semantic action of a SLEIGH constructor, without\n its final context.  The constructor template is made up of a list of p-code op templates,\n which are in turn made up of varnode templates.\n This is one step removed from the final array of PcodeOp objects, but:\n   - Constants may still need to incorporate context dependent address resolution and relative offsets.\n   - Certain p-code operations may still need expansion to include a dynamic LOAD or STORE operation.\n   - The list may hold \"build\" directives for sub-constructor templates.\n   - The list may still hold \"label\" information for the final resolution of relative jump offsets.\n \n The final PcodeOps are produced by handing this to the build() method of PcodeEmit which has\n the InstructionContext necessary for final resolution.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "numlabels",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "vec",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.plugin.processors.sleigh.template.OpTpl[]",
      "type_short": "ghidra.app.plugin.processors.sleigh.template.OpTpl[]",
      "constant_value": null
    },
    {
      "name": "result",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.plugin.processors.sleigh.template.HandleTpl",
      "type_short": "HandleTpl",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor for use with restoreXML",
      "javadoc": "Constructor for use with restoreXML",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Manually build a constructor template. This is useful for building constructor templates\n outside of the normal SLEIGH pipeline, as for an internally created InjectPayload.",
      "javadoc": "Manually build a constructor template. This is useful for building constructor templates\n outside of the normal SLEIGH pipeline, as for an internally created InjectPayload.\n@param opvec is the list of p-code op templates making up the constructor",
      "static": false,
      "params": [
        {
          "name": "opvec",
          "type_long": "ghidra.app.plugin.processors.sleigh.template.OpTpl[]",
          "type_short": "ghidra.app.plugin.processors.sleigh.template.OpTpl[]",
          "comment": "is the list of p-code op templates making up the constructor"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getNumLabels",
      "comment": "",
      "javadoc": "@return the number of labels needing resolution in this template",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the number of labels needing resolution in this template"
      },
      "throws": []
    },
    {
      "name": "getOpVec",
      "comment": "",
      "javadoc": "@return the list of p-code op templates making up this constructor template",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.plugin.processors.sleigh.template.OpTpl[]",
        "type_short": "ghidra.app.plugin.processors.sleigh.template.OpTpl[]",
        "comment": "the list of p-code op templates making up this constructor template"
      },
      "throws": []
    },
    {
      "name": "getResult",
      "comment": "",
      "javadoc": "@return the (possibly dynamic) location of the final semantic value produced by this constructor",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.plugin.processors.sleigh.template.HandleTpl",
        "type_short": "HandleTpl",
        "comment": "the (possibly dynamic) location of the final semantic value produced by this constructor"
      },
      "throws": []
    },
    {
      "name": "restoreXml",
      "comment": "Restore this template from a \\ tag in an XML stream.",
      "javadoc": "Restore this template from a \\\u003cconstruct_tpl\u003e tag in an XML stream.\n@param parser is the XML stream\n@param factory is for manufacturing Address objects\n@return the constructor section id described by the tag\n@throws UnknownInstructionException if the p-code templates contain unknown op-codes",
      "static": false,
      "params": [
        {
          "name": "parser",
          "type_long": "ghidra.xml.XmlPullParser",
          "type_short": "XmlPullParser",
          "comment": "is the XML stream"
        },
        {
          "name": "factory",
          "type_long": "ghidra.program.model.address.AddressFactory",
          "type_short": "AddressFactory",
          "comment": "is for manufacturing Address objects"
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the constructor section id described by the tag"
      },
      "throws": [
        {
          "type_long": "ghidra.program.model.lang.UnknownInstructionException",
          "type_short": "UnknownInstructionException",
          "comment": "if the p-code templates contain unknown op-codes"
        }
      ]
    }
  ]
}
