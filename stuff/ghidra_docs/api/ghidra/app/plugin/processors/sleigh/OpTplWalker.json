{
  "name": "OpTplWalker",
  "comment": "Class for walking pcode templates OpTpl in the correct order\n Supports walking the tree of an entire SleighInstructionPrototype or just a single ConstructTpl",
  "javadoc": "Class for walking pcode templates OpTpl in the correct order\n Supports walking the tree of an entire SleighInstructionPrototype or just a single ConstructTpl",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "point",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.plugin.processors.sleigh.ConstructState",
      "type_short": "ConstructState",
      "constant_value": null
    },
    {
      "name": "oparray",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.plugin.processors.sleigh.template.OpTpl[]",
      "type_short": "ghidra.app.plugin.processors.sleigh.template.OpTpl[]",
      "constant_value": null
    },
    {
      "name": "depth",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "breadcrumb",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int[]",
      "type_short": "int[]",
      "constant_value": null
    },
    {
      "name": "maxsize",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "sectionnum",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "setupPoint",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor for walking an entire parse tree",
      "javadoc": "Constructor for walking an entire parse tree\n@param root is the root ConstructState of the tree\n@param sectionnum is the named section to traverse (or -1 for main section)",
      "static": false,
      "params": [
        {
          "name": "root",
          "type_long": "ghidra.app.plugin.processors.sleigh.ConstructState",
          "type_short": "ConstructState",
          "comment": "is the root ConstructState of the tree"
        },
        {
          "name": "sectionnum",
          "type_long": "int",
          "type_short": "int",
          "comment": "is the named section to traverse (or -1 for main section)"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor for walking a single template",
      "javadoc": "Constructor for walking a single template\n@param tpl",
      "static": false,
      "params": [
        {
          "name": "tpl",
          "type_long": "ghidra.app.plugin.processors.sleigh.template.ConstructTpl",
          "type_short": "ConstructTpl",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getState",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.plugin.processors.sleigh.ConstructState",
        "type_short": "ConstructState",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isState",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "pushBuild",
      "comment": "While walking the OpTpl\u0027s in order, follow a particular BUILD directive into its respective Constructor and ContructTpl\n Use popBuild to backtrack",
      "javadoc": "While walking the OpTpl\u0027s in order, follow a particular BUILD directive into its respective Constructor and ContructTpl\n Use popBuild to backtrack\n@param buildnum is the operand number of the BUILD directive to follow",
      "static": false,
      "params": [
        {
          "name": "buildnum",
          "type_long": "int",
          "type_short": "int",
          "comment": "is the operand number of the BUILD directive to follow"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "popBuild",
      "comment": "Move to the parent of the current node",
      "javadoc": "Move to the parent of the current node",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "nextOpTpl",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.Object",
        "type_short": "Object",
        "comment": ""
      },
      "throws": []
    }
  ]
}
