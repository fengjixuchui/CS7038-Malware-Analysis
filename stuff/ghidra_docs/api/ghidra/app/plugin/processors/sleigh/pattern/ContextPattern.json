{
  "name": "ContextPattern",
  "comment": "Pattern which depends only on the non-instruction stream bits\n of the context",
  "javadoc": "Pattern which depends only on the non-instruction stream bits\n of the context",
  "static": false,
  "implements": [],
  "extends": "ghidra.app.plugin.processors.sleigh.pattern.DisjointPattern",
  "fields": [
    {
      "name": "maskvalue",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.plugin.processors.sleigh.pattern.PatternBlock",
      "type_short": "PatternBlock",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "getBlock",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "context",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.app.plugin.processors.sleigh.pattern.PatternBlock",
        "type_short": "PatternBlock",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "mv",
          "type_long": "ghidra.app.plugin.processors.sleigh.pattern.PatternBlock",
          "type_short": "PatternBlock",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getBlock",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.plugin.processors.sleigh.pattern.PatternBlock",
        "type_short": "PatternBlock",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "simplifyClone",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.plugin.processors.sleigh.pattern.Pattern",
        "type_short": "Pattern",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "shiftInstruction",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "sa",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "doOr",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "b",
          "type_long": "ghidra.app.plugin.processors.sleigh.pattern.Pattern",
          "type_short": "Pattern",
          "comment": ""
        },
        {
          "name": "sa",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.app.plugin.processors.sleigh.pattern.Pattern",
        "type_short": "Pattern",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "doAnd",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "b",
          "type_long": "ghidra.app.plugin.processors.sleigh.pattern.Pattern",
          "type_short": "Pattern",
          "comment": ""
        },
        {
          "name": "sa",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.app.plugin.processors.sleigh.pattern.Pattern",
        "type_short": "Pattern",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isMatch",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "walker",
          "type_long": "ghidra.app.plugin.processors.sleigh.ParserWalker",
          "type_short": "ParserWalker",
          "comment": ""
        },
        {
          "name": "debug",
          "type_long": "ghidra.app.plugin.processors.sleigh.SleighDebugLogger",
          "type_short": "SleighDebugLogger",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.program.model.mem.MemoryAccessException",
          "type_short": "MemoryAccessException",
          "comment": ""
        }
      ]
    },
    {
      "name": "debugPatternMatch",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "debug",
          "type_long": "ghidra.app.plugin.processors.sleigh.SleighDebugLogger",
          "type_short": "SleighDebugLogger",
          "comment": ""
        },
        {
          "name": "walker",
          "type_long": "ghidra.app.plugin.processors.sleigh.ParserWalker",
          "type_short": "ParserWalker",
          "comment": ""
        },
        {
          "name": "match",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "alwaysTrue",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "alwaysFalse",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "alwaysInstructionTrue",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "restoreXml",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "parser",
          "type_long": "ghidra.xml.XmlPullParser",
          "type_short": "XmlPullParser",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    }
  ]
}
