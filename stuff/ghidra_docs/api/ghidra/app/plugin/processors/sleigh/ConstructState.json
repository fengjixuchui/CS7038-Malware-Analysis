{
  "name": "ConstructState",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "ct",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.plugin.processors.sleigh.Constructor",
      "type_short": "Constructor",
      "constant_value": null
    },
    {
      "name": "resolvedStates",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cghidra.app.plugin.processors.sleigh.ConstructState\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "parent",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.plugin.processors.sleigh.ConstructState",
      "type_short": "ConstructState",
      "constant_value": null
    },
    {
      "name": "length",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "offset",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "parent",
          "type_long": "ghidra.app.plugin.processors.sleigh.ConstructState",
          "type_short": "ConstructState",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSubState",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.app.plugin.processors.sleigh.ConstructState",
        "type_short": "ConstructState",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addSubState",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "opState",
          "type_long": "ghidra.app.plugin.processors.sleigh.ConstructState",
          "type_short": "ConstructState",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getParent",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.plugin.processors.sleigh.ConstructState",
        "type_short": "ConstructState",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hashCode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "computeHashCode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "hashcode",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getConstructor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.plugin.processors.sleigh.Constructor",
        "type_short": "Constructor",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setConstructor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "constructor",
          "type_long": "ghidra.app.plugin.processors.sleigh.Constructor",
          "type_short": "Constructor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLength",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setLength",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "length",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getOffset",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setOffset",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "off",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "dumpConstructorTree",
      "comment": "Used for testing and diagnostics: list the constructor line numbers used to resolve this\n encoding\n \n This includes braces to describe the tree structure",
      "javadoc": "Used for testing and diagnostics: list the constructor line numbers used to resolve this\n encoding\n \n This includes braces to describe the tree structure\n@see AssemblyResolvedConstructor#dumpConstructorTree()\n@return the constructor tree",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the constructor tree"
      },
      "throws": []
    }
  ]
}
