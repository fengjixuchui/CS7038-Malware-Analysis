{
  "name": "PcodeEmitPacked",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "extends": "ghidra.app.plugin.processors.sleigh.PcodeEmit",
  "fields": [
    {
      "name": "unimpl_tag",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "32"
    },
    {
      "name": "inst_tag",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "33"
    },
    {
      "name": "op_tag",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "34"
    },
    {
      "name": "void_tag",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "35"
    },
    {
      "name": "spaceid_tag",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "36"
    },
    {
      "name": "addrsz_tag",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "37"
    },
    {
      "name": "end_tag",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "96"
    },
    {
      "name": "buf",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.lang.PackedBytes",
      "type_short": "PackedBytes",
      "constant_value": null
    },
    {
      "name": "labelref",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.ArrayList\u003cghidra.app.plugin.processors.sleigh.PcodeEmitPacked.LabelRef\u003e",
      "type_short": "ArrayList",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Pcode emitter constructor for producing a packed binary representation \n for unimplemented or empty responses.",
      "javadoc": "Pcode emitter constructor for producing a packed binary representation \n for unimplemented or empty responses.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Pcode emitter constructor for producing a packed binary representation.",
      "javadoc": "Pcode emitter constructor for producing a packed binary representation.\n@param walk parser walker\n@param ictx instruction contexts\n@param fallOffset default instruction fall offset (i.e., instruction length including delay slotted instructions)\n@param override required if pcode overrides are to be utilized\n@param uniqueFactory required when override specified or if overlay normalization is required",
      "static": false,
      "params": [
        {
          "name": "walk",
          "type_long": "ghidra.app.plugin.processors.sleigh.ParserWalker",
          "type_short": "ParserWalker",
          "comment": "parser walker"
        },
        {
          "name": "ictx",
          "type_long": "ghidra.program.model.lang.InstructionContext",
          "type_short": "InstructionContext",
          "comment": "instruction contexts"
        },
        {
          "name": "fallOffset",
          "type_long": "int",
          "type_short": "int",
          "comment": "default instruction fall offset (i.e., instruction length including delay slotted instructions)"
        },
        {
          "name": "override",
          "type_long": "ghidra.program.model.pcode.PcodeOverride",
          "type_short": "PcodeOverride",
          "comment": "required if pcode overrides are to be utilized"
        },
        {
          "name": "uniqueFactory",
          "type_long": "ghidra.program.model.address.UniqueAddressFactory",
          "type_short": "UniqueAddressFactory",
          "comment": "required when override specified or if overlay normalization is required"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPackedBytes",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.lang.PackedBytes",
        "type_short": "PackedBytes",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "resolveRelatives",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addLabelRef",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "dump",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "instrAddr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "opcode",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "in",
          "type_long": "ghidra.app.plugin.processors.sleigh.VarnodeData[]",
          "type_short": "ghidra.app.plugin.processors.sleigh.VarnodeData[]",
          "comment": ""
        },
        {
          "name": "isize",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "out",
          "type_long": "ghidra.app.plugin.processors.sleigh.VarnodeData",
          "type_short": "VarnodeData",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "dumpSpaceId",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "v",
          "type_long": "ghidra.app.plugin.processors.sleigh.VarnodeData",
          "type_short": "VarnodeData",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "dumpVarnodeData",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "v",
          "type_long": "ghidra.app.plugin.processors.sleigh.VarnodeData",
          "type_short": "VarnodeData",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "write",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "val",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "dumpOffset",
      "comment": "Encode and dump an integer value to the packed byte stream",
      "javadoc": "Encode and dump an integer value to the packed byte stream\n@param val is the integer to write",
      "static": false,
      "params": [
        {
          "name": "val",
          "type_long": "long",
          "type_short": "long",
          "comment": "is the integer to write"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "insertOffset",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "streampos",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "val",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
