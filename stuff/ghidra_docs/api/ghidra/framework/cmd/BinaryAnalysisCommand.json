{
  "name": "BinaryAnalysisCommand",
  "comment": "NOTE:  ALL BinaryAnalysisCommand CLASSES MUST END IN \"BinaryAnalysisCommand\".  If not,\n the ClassSearcher will not find them.",
  "javadoc": "NOTE:  ALL BinaryAnalysisCommand CLASSES MUST END IN \"BinaryAnalysisCommand\".  If not,\n the ClassSearcher will not find them.",
  "static": false,
  "implements": [
    "ghidra.util.classfinder.ExtensionPoint"
  ],
  "fields": [],
  "methods": [
    {
      "name": "canApply",
      "comment": "Returns TRUE if this command can be applied\n to the given domain object.",
      "javadoc": "Returns TRUE if this command can be applied\n to the given domain object.\n@param program the domain object to inspect.\n@return TRUE if this command can be applied",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "the domain object to inspect."
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "TRUE if this command can be applied"
      },
      "throws": []
    },
    {
      "name": "applyTo",
      "comment": "Applies the command to the given domain object.",
      "javadoc": "Applies the command to the given domain object.\n@param program domain object that this command is to be applied.\n@param monitor the task monitor\n@return true if the command applied successfully",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "domain object that this command is to be applied."
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": "the task monitor"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the command applied successfully"
      },
      "throws": [
        {
          "type_long": "java.lang.Exception",
          "type_short": "Exception",
          "comment": ""
        }
      ]
    },
    {
      "name": "getMessages",
      "comment": "Returns the status message indicating the status of the command.",
      "javadoc": "Returns the status message indicating the status of the command.\n@return reason for failure, or null if the status of the command \n         was successful",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.app.util.importer.MessageLog",
        "type_short": "MessageLog",
        "comment": "reason for failure, or null if the status of the command \n         was successful"
      },
      "throws": []
    },
    {
      "name": "getName",
      "comment": "Returns the name of this command.",
      "javadoc": "Returns the name of this command.\n@return the name of this command",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the name of this command"
      },
      "throws": []
    }
  ]
}
