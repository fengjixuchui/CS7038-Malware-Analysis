{
  "name": "ToolChestImpl",
  "comment": "Implementation for the Project ToolChest.",
  "javadoc": "Implementation for the Project ToolChest.",
  "static": false,
  "implements": [
    "ghidra.framework.model.ToolChest"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "listeners",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cghidra.framework.model.ToolChestChangeListener\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "map",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.Map\u003cjava.lang.String,ghidra.framework.model.ToolTemplate\u003e",
      "type_short": "Map",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct user\u0027s tool chest.",
      "javadoc": "Construct user\u0027s tool chest.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addToolChestChangeListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "l",
          "type_long": "ghidra.framework.model.ToolChestChangeListener",
          "type_short": "ToolChestChangeListener",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeToolChestChangeListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "l",
          "type_long": "ghidra.framework.model.ToolChestChangeListener",
          "type_short": "ToolChestChangeListener",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getToolTemplate",
      "comment": "Get the tool template for the given tool name.",
      "javadoc": "Get the tool template for the given tool name.\n@return null if there is no tool template for the given\n toolName.",
      "static": false,
      "params": [
        {
          "name": "toolName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.framework.model.ToolTemplate",
        "type_short": "ToolTemplate",
        "comment": "null if there is no tool template for the given\n toolName."
      },
      "throws": []
    },
    {
      "name": "getToolTemplates",
      "comment": "Get the ToolConfigs from the tool chest.",
      "javadoc": "Get the ToolConfigs from the tool chest.\n@return zero-length array if there are no ToolConfigs in the\n tool chest.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.framework.model.ToolTemplate[]",
        "type_short": "ghidra.framework.model.ToolTemplate[]",
        "comment": "zero-length array if there are no ToolConfigs in the\n tool chest."
      },
      "throws": []
    },
    {
      "name": "getToolCount",
      "comment": "",
      "javadoc": "@see ghidra.framework.model.ToolChest#getToolCount()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "remove",
      "comment": "Remove tool template from the tool chest.",
      "javadoc": "Remove tool template from the tool chest.\n@return true if the template was removed from the tool chest.",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the template was removed from the tool chest."
      },
      "throws": []
    },
    {
      "name": "replaceToolTemplate",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "template",
          "type_long": "ghidra.framework.model.ToolTemplate",
          "type_short": "ToolTemplate",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addToolTemplate",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "template",
          "type_long": "ghidra.framework.model.ToolTemplate",
          "type_short": "ToolTemplate",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "doAddToolTemplate",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "template",
          "type_long": "ghidra.framework.model.ToolTemplate",
          "type_short": "ToolTemplate",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "Returns a string representation of the object. In general, the\n toString method returns a string that\n \"textually represents\" this object. The result should\n be a concise but informative representation that is easy for a\n person to read.",
      "javadoc": "Returns a string representation of the object. In general, the\n \u003ccode\u003etoString\u003c/code\u003e method returns a string that\n \"textually represents\" this object. The result should\n be a concise but informative representation that is easy for a\n person to read.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    }
  ]
}
