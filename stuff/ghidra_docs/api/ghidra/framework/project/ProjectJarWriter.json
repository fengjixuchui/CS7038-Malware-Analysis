{
  "name": "ProjectJarWriter",
  "comment": "Class to write files in a project to a jar output stream.",
  "javadoc": "Class to write files in a project to a jar output stream.",
  "static": false,
  "implements": [],
  "extends": "generic.io.JarWriter",
  "fields": [
    {
      "name": "PROPERTIES_FILE_NAME",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\".properties\""
    },
    {
      "name": "ORIGINAL_PROPERTIES_FILE_NAME",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"original.properties\""
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "@param jarOut the the jar file output stream the zip entries are\n to be written to.",
      "static": false,
      "params": [
        {
          "name": "jarOut",
          "type_long": "java.util.jar.JarOutputStream",
          "type_short": "JarOutputStream",
          "comment": "the the jar file output stream the zip entries are\n to be written to."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "outputFile",
      "comment": "Outputs an individual file to the jar.",
      "javadoc": "Outputs an individual file to the jar.\n@param baseFile the file to be output\n@param jarPath the base path to prepend to the file as it is written\n to the jar output stream.\n@return true if all files are recursively output to the jar file.",
      "static": false,
      "params": [
        {
          "name": "baseFile",
          "type_long": "java.io.File",
          "type_short": "File",
          "comment": "the file to be output"
        },
        {
          "name": "jarPath",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the base path to prepend to the file as it is written\n to the jar output stream."
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if all files are recursively output to the jar file."
      },
      "throws": []
    }
  ]
}
