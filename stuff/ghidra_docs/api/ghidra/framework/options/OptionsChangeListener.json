{
  "name": "OptionsChangeListener",
  "comment": "Interface for notifying listeners when options change.\n \n Register with ToolOptions#addOptionsChangeListener(OptionsChangeListener).",
  "javadoc": "Interface for notifying listeners when options change.\n \u003cp\u003e\n Register with {@link ToolOptions#addOptionsChangeListener(OptionsChangeListener)}.",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "optionsChanged",
      "comment": "Notification that an option changed.\n \n Note: to reject an options change, you can throw a \n OptionsVetoException.",
      "javadoc": "Notification that an option changed.\n \u003cp\u003e\n Note: to reject an options change, you can throw a \n {@link OptionsVetoException}.\n@param options options object containing the property that changed\n@param optionName name of option that changed\n@param oldValue old value of the option\n@param newValue new value of the option\n@throws OptionsVetoException if a change is rejected",
      "static": false,
      "params": [
        {
          "name": "options",
          "type_long": "ghidra.framework.options.ToolOptions",
          "type_short": "ToolOptions",
          "comment": "options object containing the property that changed"
        },
        {
          "name": "optionName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "name of option that changed"
        },
        {
          "name": "oldValue",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": "old value of the option"
        },
        {
          "name": "newValue",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": "new value of the option"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.bean.opteditor.OptionsVetoException",
          "type_short": "OptionsVetoException",
          "comment": "if a change is rejected"
        }
      ]
    }
  ]
}
