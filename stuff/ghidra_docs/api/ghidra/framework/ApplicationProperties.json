{
  "name": "ApplicationProperties",
  "comment": "The application properties.  Application properties may either be stored on disk, or created\n dynamically.",
  "javadoc": "The application properties.  Application properties may either be stored on disk, or created\n dynamically.",
  "static": false,
  "implements": [],
  "extends": "java.util.Properties",
  "fields": [
    {
      "name": "PROPERTY_FILE",
      "comment": "The name of the application properties file.",
      "javadoc": "The name of the application properties file.",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"application.properties\""
    },
    {
      "name": "APPLICATION_NAME_PROPERTY",
      "comment": "The application name.  For example, \"Ghidra\".",
      "javadoc": "The application name.  For example, \"Ghidra\".",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"application.name\""
    },
    {
      "name": "APPLICATION_VERSION_PROPERTY",
      "comment": "The application version.  For example, \"7.4.2\".",
      "javadoc": "The application version.  For example, \"7.4.2\".\n@see ApplicationVersion",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"application.version\""
    },
    {
      "name": "APPLICATION_LAYOUT_VERSION_PROPERTY",
      "comment": "The application\u0027s layout version.  The layout version should get incremented any time\n something changes about the application that could affect external tools that need to \n navigate the application in some way (such as the Eclipse GhidraDev plugin).\n For example, \"1\".",
      "javadoc": "The application\u0027s layout version.  The layout version should get incremented any time\n something changes about the application that could affect external tools that need to \n navigate the application in some way (such as the Eclipse GhidraDev plugin).\n For example, \"1\".",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"application.layout.version\""
    },
    {
      "name": "APPLICATION_GRADLE_MIN_PROPERTY",
      "comment": "The minimum version of gradle required to build the application.",
      "javadoc": "The minimum version of gradle required to build the application.",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"application.gradle.min\""
    },
    {
      "name": "APPLICATION_JAVA_MIN_PROPERTY",
      "comment": "The minimum major version of Java required to run the application. For example, \"8\".",
      "javadoc": "The minimum major version of Java required to run the application. For example, \"8\".",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"application.java.min\""
    },
    {
      "name": "APPLICATION_JAVA_MAX_PROPERTY",
      "comment": "The maximum major version of Java the application will run under. For example, \"8\".\n \n If all versions of Java greater than #APPLICATION_JAVA_MIN_PROPERTY are\n supported, this property should not be set.",
      "javadoc": "The maximum major version of Java the application will run under. For example, \"8\".\n \u003cp\u003e\n If all versions of Java greater than {@link #APPLICATION_JAVA_MIN_PROPERTY} are\n supported, this property should not be set.",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"application.java.max\""
    },
    {
      "name": "APPLICATION_JAVA_COMPILER_PROPERTY",
      "comment": "The Java compiler compliance level that was used to build the application.\n For example, \"1.8\".",
      "javadoc": "The Java compiler compliance level that was used to build the application.\n For example, \"1.8\".",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"application.java.compiler\""
    },
    {
      "name": "BUILD_DATE_PROPERTY",
      "comment": "The date the application was built on, in a long format.\n For example, \"2018-Jan-11 1346 EST\".",
      "javadoc": "The date the application was built on, in a long format.\n For example, \"2018-Jan-11 1346 EST\".",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"application.build.date\""
    },
    {
      "name": "BUILD_DATE_SHORT_PROPERTY",
      "comment": "The date the application was built on, it a short format. For example, \"20180111\".",
      "javadoc": "The date the application was built on, it a short format. For example, \"20180111\".",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"application.build.date.short\""
    },
    {
      "name": "RELEASE_NAME_PROPERTY",
      "comment": "The application\u0027s release name.  For example, \"U\".",
      "javadoc": "The application\u0027s release name.  For example, \"U\".",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"application.release.name\""
    },
    {
      "name": "RELEASE_MARKING_PROPERTY",
      "comment": "The application\u0027s release marking.",
      "javadoc": "The application\u0027s release marking.",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"application.release.marking\""
    },
    {
      "name": "REVISION_PROPERTY_PREFIX",
      "comment": "Property prefix for dynamically generated version control revision number properties.",
      "javadoc": "Property prefix for dynamically generated version control revision number properties.",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"application.revision.\""
    },
    {
      "name": "TEST_RELEASE_PROPERTY",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"application.test.release\""
    },
    {
      "name": "RELEASE_SOURCE_PROPERTY",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"application.release.source\""
    }
  ],
  "methods": [
    {
      "name": "fromFile",
      "comment": "Attempts to create an instance of this class by looking for the a properties file \n with the give name in the current working directory.",
      "javadoc": "Attempts to create an instance of this class by looking for the a properties file \n with the give name in the current working directory.\n@param filename the name of the properties file to load\n@return the new instance of this class created from the properties file on disk\n@throws IOException if there is no properties file found in the expected location",
      "static": true,
      "params": [
        {
          "name": "filename",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of the properties file to load"
        }
      ],
      "return": {
        "type_long": "ghidra.framework.ApplicationProperties",
        "type_short": "ApplicationProperties",
        "comment": "the new instance of this class created from the properties file on disk"
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if there is no properties file found in the expected location"
        }
      ]
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Creates a new application properties with the given name. Additional properties\n may be set with #setProperty.",
      "javadoc": "Creates a new application properties with the given name. Additional properties\n may be set with {@link #setProperty}.\n@param name The application\u0027s name.",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "The application\u0027s name."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Creates a new application properties with the given name and version. Additional properties\n may be set with #setProperty.",
      "javadoc": "Creates a new application properties with the given name and version. Additional properties\n may be set with {@link #setProperty}.\n@param name The application\u0027s name.\n@param version The application\u0027s version.\n@param releaseName The application\u0027s release name.",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "The application\u0027s name."
        },
        {
          "name": "version",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "The application\u0027s version."
        },
        {
          "name": "releaseName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "The application\u0027s release name."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Creates a new application properties from the given application properties file.",
      "javadoc": "Creates a new application properties from the given application properties file.\n@param appPropertiesFile The application properties file.\n@throws IOException If there was a problem loading/reading a discovered properties file.",
      "static": false,
      "params": [
        {
          "name": "appPropertiesFile",
          "type_long": "generic.jar.ResourceFile",
          "type_short": "ResourceFile",
          "comment": "The application properties file."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "If there was a problem loading/reading a discovered properties file."
        }
      ]
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Creates a new application properties from the application properties files found\n in the given application root directories.  If multiple application properties files\n are found, the properties from the files will be combined.  If duplicate keys exist,\n the newest key encountered will overwrite the existing key.",
      "javadoc": "Creates a new application properties from the application properties files found\n in the given application root directories.  If multiple application properties files\n are found, the properties from the files will be combined.  If duplicate keys exist,\n the newest key encountered will overwrite the existing key.\n@param applicationRootDirs The application root directories to look for the properties files in.\n@throws IOException If there was a problem loading/reading a discovered properties file.",
      "static": false,
      "params": [
        {
          "name": "applicationRootDirs",
          "type_long": "java.util.Collection\u003cgeneric.jar.ResourceFile\u003e",
          "type_short": "Collection",
          "comment": "The application root directories to look for the properties files in."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "If there was a problem loading/reading a discovered properties file."
        }
      ]
    },
    {
      "name": "getProperty",
      "comment": "Gets the given application property.  Note that if the specified property is defined\n as a system property, the system property will be given precedence and returned.",
      "javadoc": "Gets the given application property.  Note that if the specified property is defined\n as a system property, the system property will be given precedence and returned.\n@param propertyName The property name to get.\n@return The property.",
      "static": false,
      "params": [
        {
          "name": "propertyName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "The property name to get."
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "The property."
      },
      "throws": []
    },
    {
      "name": "getApplicationName",
      "comment": "Gets the application\u0027s name.",
      "javadoc": "Gets the application\u0027s name.\n@return The application\u0027s name (empty string if undefined).",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "The application\u0027s name (empty string if undefined)."
      },
      "throws": []
    },
    {
      "name": "getApplicationVersion",
      "comment": "Gets the application\u0027s version.",
      "javadoc": "Gets the application\u0027s version.\n@return The application\u0027s version (empty string if undefined).",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "The application\u0027s version (empty string if undefined)."
      },
      "throws": []
    },
    {
      "name": "getApplicationReleaseName",
      "comment": "Gets the application\u0027s release name.",
      "javadoc": "Gets the application\u0027s release name.\n@return The application\u0027s release name (empty string if undefined).",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "The application\u0027s release name (empty string if undefined)."
      },
      "throws": []
    },
    {
      "name": "getApplicationBuildDate",
      "comment": "Gets the application\u0027s build date.",
      "javadoc": "Gets the application\u0027s build date.\n@return The application\u0027s build date.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "The application\u0027s build date."
      },
      "throws": []
    }
  ]
}
