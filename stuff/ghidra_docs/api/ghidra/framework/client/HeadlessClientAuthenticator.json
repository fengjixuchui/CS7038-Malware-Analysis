{
  "name": "HeadlessClientAuthenticator",
  "comment": "HeadlessClientAuthenticator provides the ability to install a Ghidra Server \n authenticator needed when operating in a headless mode.",
  "javadoc": "\u003ccode\u003eHeadlessClientAuthenticator\u003c/code\u003e provides the ability to install a Ghidra Server \n authenticator needed when operating in a headless mode.",
  "static": false,
  "implements": [
    "ghidra.framework.client.ClientAuthenticator"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "BADPASSWORD",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "char[]",
      "type_short": "char[]",
      "constant_value": null
    },
    {
      "name": "sshPrivateKey",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.Object",
      "type_short": "Object",
      "constant_value": null
    },
    {
      "name": "userID",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "passwordPromptAlowed",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "authenticator",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.net.Authenticator",
      "type_short": "Authenticator",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getAuthenticator",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.net.Authenticator",
        "type_short": "Authenticator",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "installHeadlessClientAuthenticator",
      "comment": "Install headless client authenticator for Ghidra Server",
      "javadoc": "Install headless client authenticator for Ghidra Server\n@param username optional username to be used with a Ghidra Server which\n allows username to be specified\n@param keystorePath optional PKI or SSH keystore path.  May also be specified\n as resource path for SSH key.\n@param allowPasswordPrompt if true the user may be prompted for passwords\n via the console (stdin).  Please note that the Java console will echo \n the password entry to the terminal which may be undesirable.\n@throws IOException if error occurs while opening specified keystorePath",
      "static": true,
      "params": [
        {
          "name": "username",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "optional username to be used with a Ghidra Server which\n allows username to be specified"
        },
        {
          "name": "keystorePath",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "optional PKI or SSH keystore path.  May also be specified\n as resource path for SSH key."
        },
        {
          "name": "allowPasswordPrompt",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "if true the user may be prompted for passwords\n via the console (stdin).  Please note that the Java console will echo \n the password entry to the terminal which may be undesirable."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if error occurs while opening specified keystorePath"
        }
      ]
    },
    {
      "name": "getPassword",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "usage",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "prompt",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "char[]",
        "type_short": "char[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getNewPassword",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "parent",
          "type_long": "java.awt.Component",
          "type_short": "Component",
          "comment": ""
        },
        {
          "name": "serverInfo",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "username",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "char[]",
        "type_short": "char[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "processPasswordCallbacks",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "title",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "serverType",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "serverName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "nameCb",
          "type_long": "javax.security.auth.callback.NameCallback",
          "type_short": "NameCallback",
          "comment": ""
        },
        {
          "name": "passCb",
          "type_long": "javax.security.auth.callback.PasswordCallback",
          "type_short": "PasswordCallback",
          "comment": ""
        },
        {
          "name": "choiceCb",
          "type_long": "javax.security.auth.callback.ChoiceCallback",
          "type_short": "ChoiceCallback",
          "comment": ""
        },
        {
          "name": "anonymousCb",
          "type_long": "ghidra.framework.remote.AnonymousCallback",
          "type_short": "AnonymousCallback",
          "comment": ""
        },
        {
          "name": "loginError",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "promptForReconnect",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "parent",
          "type_long": "java.awt.Component",
          "type_short": "Component",
          "comment": ""
        },
        {
          "name": "message",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getKeyStorePassword",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "keystorePath",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "passwordError",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "char[]",
        "type_short": "char[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "processSSHSignatureCallbacks",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "serverName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "nameCb",
          "type_long": "javax.security.auth.callback.NameCallback",
          "type_short": "NameCallback",
          "comment": ""
        },
        {
          "name": "sshCb",
          "type_long": "ghidra.framework.remote.SSHSignatureCallback",
          "type_short": "SSHSignatureCallback",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isSSHKeyAvailable",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    }
  ]
}
