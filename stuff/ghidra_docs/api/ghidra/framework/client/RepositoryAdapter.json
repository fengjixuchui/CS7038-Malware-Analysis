{
  "name": "RepositoryAdapter",
  "comment": "RepositoryAdapter provides a persistent wrapper for a remote RepositoryHandle \n which may become invalid if the remote connection were to fail.  Connection recovery is provided \n by any method call which must communicate with the server.",
  "javadoc": "\u003ccode\u003eRepositoryAdapter\u003c/code\u003e provides a persistent wrapper for a remote RepositoryHandle \n which may become invalid if the remote connection were to fail.  Connection recovery is provided \n by any method call which must communicate with the server.",
  "static": false,
  "implements": [
    "ghidra.framework.client.RemoteAdapterListener"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "name",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "serverAdapter",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.client.RepositoryServerAdapter",
      "type_short": "RepositoryServerAdapter",
      "constant_value": null
    },
    {
      "name": "listenerList",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.datastruct.WeakSet\u003cghidra.framework.client.RemoteAdapterListener\u003e",
      "type_short": "WeakSet",
      "constant_value": null
    },
    {
      "name": "repository",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.remote.RepositoryHandle",
      "type_short": "RepositoryHandle",
      "constant_value": null
    },
    {
      "name": "user",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.remote.User",
      "type_short": "User",
      "constant_value": null
    },
    {
      "name": "unexpectedDisconnect",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "noSuchRepository",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "openFileHandleCount",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "ignoreNextOpenFileCountEvent",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "changeDispatcher",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.client.RepositoryChangeDispatcher",
      "type_short": "RepositoryChangeDispatcher",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct.",
      "javadoc": "Construct.\n@param serverAdapter persistent server adapter\n@param name repository name",
      "static": false,
      "params": [
        {
          "name": "serverAdapter",
          "type_long": "ghidra.framework.client.RepositoryServerAdapter",
          "type_short": "RepositoryServerAdapter",
          "comment": "persistent server adapter"
        },
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "repository name"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor using a connected repository handle.",
      "javadoc": "Constructor using a connected repository handle.\n@param serverAdapter persistent server adapter\n@param name repository name\n@param repository connected repository handle.",
      "static": false,
      "params": [
        {
          "name": "serverAdapter",
          "type_long": "ghidra.framework.client.RepositoryServerAdapter",
          "type_short": "RepositoryServerAdapter",
          "comment": "persistent server adapter"
        },
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "repository name"
        },
        {
          "name": "repository",
          "type_long": "ghidra.framework.remote.RepositoryHandle",
          "type_short": "RepositoryHandle",
          "comment": "connected repository handle."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hadUnexpectedDisconnect",
      "comment": "Returns true if connection recently was lost unexpectedly",
      "javadoc": "Returns true if connection recently was lost unexpectedly",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getCurrentHandle",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.framework.remote.RepositoryHandle",
        "type_short": "RepositoryHandle",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setFileSystemListener",
      "comment": "Set the file system listener associated with the remote repository.",
      "javadoc": "Set the file system listener associated with the remote repository.\n@param fsListener file system listener",
      "static": false,
      "params": [
        {
          "name": "fsListener",
          "type_long": "ghidra.framework.store.FileSystemListener",
          "type_short": "FileSystemListener",
          "comment": "file system listener"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addListener",
      "comment": "Add a listener to this remote adapter",
      "javadoc": "Add a listener to this remote adapter\n@param listener",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "ghidra.framework.client.RemoteAdapterListener",
          "type_short": "RemoteAdapterListener",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeListener",
      "comment": "Remove a listener from this remote adapter",
      "javadoc": "Remove a listener from this remote adapter\n@param listener",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "ghidra.framework.client.RemoteAdapterListener",
          "type_short": "RemoteAdapterListener",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "fireStateChanged",
      "comment": "Notify listeners of repository connection state change.",
      "javadoc": "Notify listeners of repository connection state change.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "connectionStateChanged",
      "comment": "Notification callback when server connection state changes.",
      "javadoc": "Notification callback when server connection state changes.\n@see ghidra.framework.client.RemoteAdapterListener#connectionStateChanged(java.lang.Object)",
      "static": false,
      "params": [
        {
          "name": "adapter",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isConnected",
      "comment": "Returns true if connected.",
      "javadoc": "Returns true if connected.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "connect",
      "comment": "Attempt to connect to the server.",
      "javadoc": "Attempt to connect to the server.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getEvents",
      "comment": "Event reader for change dispatcher.",
      "javadoc": "Event reader for change dispatcher.\n@return \n@throws IOException\n@throws InterruptedIOException if repository handle is closed",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.framework.remote.RepositoryChangeEvent[]",
        "type_short": "ghidra.framework.remote.RepositoryChangeEvent[]",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.InterruptedIOException",
          "type_short": "InterruptedIOException",
          "comment": "if repository handle is closed"
        }
      ]
    },
    {
      "name": "getName",
      "comment": "Returns repository name",
      "javadoc": "Returns repository name",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getServer",
      "comment": "Returns server adapter",
      "javadoc": "Returns server adapter",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.framework.client.RepositoryServerAdapter",
        "type_short": "RepositoryServerAdapter",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getServerInfo",
      "comment": "Returns server information",
      "javadoc": "Returns server information",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.framework.model.ServerInfo",
        "type_short": "ServerInfo",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "recoverConnection",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "e",
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getUser",
      "comment": "Returns repository user object.",
      "javadoc": "Returns repository user object.\n@throws UserAccessException user no longer has any permission to use repository.\n@throws NotConnectedException if server/repository connection is down (user already informed)\n@see ghidra.framework.remote.RemoteRepositoryHandle#getUser()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.framework.remote.User",
        "type_short": "User",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "anonymousAccessAllowed",
      "comment": "",
      "javadoc": "@return true if anonymous access allowed by this repository\n@throws IOException",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if anonymous access allowed by this repository"
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getUserList",
      "comment": "Returns list of repository users.",
      "javadoc": "Returns list of repository users.\n@throws IOException\n@throws UserAccessException user no longer has any permission to use repository.\n@throws NotConnectedException if server/repository connection is down (user already informed)\n@see RemoteRepositoryHandle#getUserList()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.framework.remote.User[]",
        "type_short": "ghidra.framework.remote.User[]",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getServerUserList",
      "comment": "Returns list of all users known to server.",
      "javadoc": "Returns list of all users known to server.\n@throws IOException\n@throws UserAccessException user no longer has any permission to use repository.\n@throws NotConnectedException if server/repository connection is down (user already informed)\n@see RemoteRepositoryHandle#getServerUserList()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String[]",
        "type_short": "java.lang.String[]",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "setUserList",
      "comment": "Set the list of authorized users for this repository.",
      "javadoc": "Set the list of authorized users for this repository.\n@param users list of user and access permissions.\n@param anonymousAccessAllowed true to permit anonymous access (also requires anonymous\n access to be enabled for server)\n@throws UserAccessException\n@throws IOException\n@throws NotConnectedException if server/repository connection is down (user already informed)\n@see RemoteRepositoryHandle#setUserList(User[], boolean)",
      "static": false,
      "params": [
        {
          "name": "users",
          "type_long": "ghidra.framework.remote.User[]",
          "type_short": "ghidra.framework.remote.User[]",
          "comment": "list of user and access permissions."
        },
        {
          "name": "anonymousAccessAllowed",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true to permit anonymous access (also requires anonymous\n access to be enabled for server)"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "createDatabase",
      "comment": "",
      "javadoc": "@see RepositoryHandle#createDatabase(String, String, String, int, String, String)",
      "static": false,
      "params": [
        {
          "name": "parentPath",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "itemName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "bufferSize",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "contentType",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "fileID",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "projectPath",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "db.buffers.ManagedBufferFileAdapter",
        "type_short": "ManagedBufferFileAdapter",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        },
        {
          "type_long": "ghidra.util.InvalidNameException",
          "type_short": "InvalidNameException",
          "comment": ""
        }
      ]
    },
    {
      "name": "openDatabase",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "parentPath",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "itemName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "version",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "minChangeDataVer",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "db.buffers.ManagedBufferFileAdapter",
        "type_short": "ManagedBufferFileAdapter",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "openDatabase",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "parentPath",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "itemName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "checkoutId",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "db.buffers.ManagedBufferFileAdapter",
        "type_short": "ManagedBufferFileAdapter",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "createDataFile",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "parentPath",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "itemName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "openDataFile",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "parentPath",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "itemName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "version",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.framework.store.DataFileHandle",
        "type_short": "DataFileHandle",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getSubfolderList",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "folderPath",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String[]",
        "type_short": "java.lang.String[]",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getItemCount",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "checkUnmarshalException",
      "comment": "Convert UnmarshalException into UnsupportedOperationException",
      "javadoc": "Convert UnmarshalException into UnsupportedOperationException\n@param e\n@throws UnsupportedOperationException",
      "static": false,
      "params": [
        {
          "name": "e",
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        },
        {
          "name": "operation",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.lang.UnsupportedOperationException",
          "type_short": "UnsupportedOperationException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getItemList",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "folderPath",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.framework.remote.RepositoryItem[]",
        "type_short": "ghidra.framework.remote.RepositoryItem[]",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getItem",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "folderPath",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "itemName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.framework.remote.RepositoryItem",
        "type_short": "RepositoryItem",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getItem",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "fileID",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.framework.remote.RepositoryItem",
        "type_short": "RepositoryItem",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getVersions",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "parentPath",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "itemName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.framework.store.Version[]",
        "type_short": "ghidra.framework.store.Version[]",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "deleteItem",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "parentPath",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "itemName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "version",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "moveFolder",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "oldParentPath",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "newParentPath",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "oldFolderName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "newFolderName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.InvalidNameException",
          "type_short": "InvalidNameException",
          "comment": ""
        },
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "moveItem",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "oldParentPath",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "newParentPath",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "oldItemName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "newItemName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.InvalidNameException",
          "type_short": "InvalidNameException",
          "comment": ""
        },
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "checkout",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "folderPath",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "itemName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "checkoutType",
          "type_long": "ghidra.framework.store.CheckoutType",
          "type_short": "CheckoutType",
          "comment": ""
        },
        {
          "name": "projectPath",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.framework.store.ItemCheckoutStatus",
        "type_short": "ItemCheckoutStatus",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "terminateCheckout",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "folderPath",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "itemName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "checkoutId",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        },
        {
          "name": "notify",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getCheckout",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "parentPath",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "itemName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "checkoutId",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.framework.store.ItemCheckoutStatus",
        "type_short": "ItemCheckoutStatus",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getCheckouts",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "parentPath",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "itemName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.framework.store.ItemCheckoutStatus[]",
        "type_short": "ghidra.framework.store.ItemCheckoutStatus[]",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "folderExists",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "folderPath",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "fileExists",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "folderPath",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "itemName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getLength",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "parentPath",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "itemName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "hasCheckouts",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "parentPath",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "itemName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "isCheckinActive",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "parentPath",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "itemName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "updateCheckoutVersion",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "parentPath",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "itemName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "checkoutId",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        },
        {
          "name": "checkoutVersion",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "verifyConnection",
      "comment": "Verify that the connection is still valid.",
      "javadoc": "Verify that the connection is still valid.\n@return true if the connection is valid; false if the connection needs to be reestablished",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the connection is valid; false if the connection needs to be reestablished"
      },
      "throws": []
    },
    {
      "name": "disconnect",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "disconnect",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "unexpected",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        },
        {
          "name": "notify",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "checkRepository",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.framework.client.NotConnectedException",
          "type_short": "NotConnectedException",
          "comment": ""
        }
      ]
    },
    {
      "name": "fileOpened",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "processOpenHandleCountUpdateEvent",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "event",
          "type_long": "ghidra.framework.remote.RepositoryChangeEvent",
          "type_short": "RepositoryChangeEvent",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getOpenFileHandleCount",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    }
  ]
}
