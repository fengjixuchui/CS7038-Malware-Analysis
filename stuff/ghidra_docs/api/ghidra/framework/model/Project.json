{
  "name": "Project",
  "comment": "Interface to define methods to manage data and tools for users working on a\n particular effort. Project represents the container object for users, data,\n and tools to work together.",
  "javadoc": "Interface to define methods to manage data and tools for users working on a\n particular effort. Project represents the container object for users, data,\n and tools to work together.",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "getName",
      "comment": "Convenience method to get the name of this project.",
      "javadoc": "Convenience method to get the name of this project.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getProjectLocator",
      "comment": "Get the project locator for this project.",
      "javadoc": "Get the project locator for this project.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.framework.model.ProjectLocator",
        "type_short": "ProjectLocator",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getProjectManager",
      "comment": "Returns the project manager of this project.",
      "javadoc": "Returns the project manager of this project.\n@return the project manager of this project.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.framework.model.ProjectManager",
        "type_short": "ProjectManager",
        "comment": "the project manager of this project."
      },
      "throws": []
    },
    {
      "name": "getToolManager",
      "comment": "Return the tool manager for this project.",
      "javadoc": "Return the tool manager for this project.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.framework.model.ToolManager",
        "type_short": "ToolManager",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getToolServices",
      "comment": "Return the tool services for this project.",
      "javadoc": "Return the tool services for this project.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.framework.model.ToolServices",
        "type_short": "ToolServices",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hasChanged",
      "comment": "Return whether the project configuration has changed.",
      "javadoc": "Return whether the project configuration has changed.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isClosed",
      "comment": "Returns whether this project instance has been closed",
      "javadoc": "Returns whether this project instance has been closed",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLocalToolChest",
      "comment": "Return the local tool chest for the user logged in.",
      "javadoc": "Return the local tool chest for the user logged in.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.framework.model.ToolChest",
        "type_short": "ToolChest",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getRepository",
      "comment": "Get the repository that this project is associated with.",
      "javadoc": "Get the repository that this project is associated with.\n@return null if the project is not associated with a remote\n repository",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.framework.client.RepositoryAdapter",
        "type_short": "RepositoryAdapter",
        "comment": "null if the project is not associated with a remote\n repository"
      },
      "throws": []
    },
    {
      "name": "addProjectView",
      "comment": "Add the given project URL to this project\u0027s list project views.\n The project view allows users to look at data files from another\n project.",
      "javadoc": "Add the given project URL to this project\u0027s list project views.\n The project view allows users to look at data files from another\n project.\n@param projectURL identifier for the project view\n@return project data for this view\n@throws IOException if I/O error occurs or if project/repository not found\n@throws MalformedURLException if projectURL is invalid",
      "static": false,
      "params": [
        {
          "name": "projectURL",
          "type_long": "java.net.URL",
          "type_short": "URL",
          "comment": "identifier for the project view"
        }
      ],
      "return": {
        "type_long": "ghidra.framework.model.ProjectData",
        "type_short": "ProjectData",
        "comment": "project data for this view"
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if I/O error occurs or if project/repository not found"
        },
        {
          "type_long": "java.net.MalformedURLException",
          "type_short": "MalformedURLException",
          "comment": "if projectURL is invalid"
        }
      ]
    },
    {
      "name": "removeProjectView",
      "comment": "Remove the project view from this project.",
      "javadoc": "Remove the project view from this project.\n@param projectURL identifier for the project",
      "static": false,
      "params": [
        {
          "name": "projectURL",
          "type_long": "java.net.URL",
          "type_short": "URL",
          "comment": "identifier for the project"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getProjectViews",
      "comment": "Return the list of project views in this project.",
      "javadoc": "Return the list of project views in this project.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.framework.model.ProjectLocator[]",
        "type_short": "ghidra.framework.model.ProjectLocator[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "close",
      "comment": "Close the project.",
      "javadoc": "Close the project.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "save",
      "comment": "Save the project and the list of project views.",
      "javadoc": "Save the project and the list of project views.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "saveSessionTools",
      "comment": "Saves any tools that are associated with the opened project when the project is closed.",
      "javadoc": "Saves any tools that are associated with the opened project when the project is closed.\n@return True if the save was not cancelled.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "True if the save was not cancelled."
      },
      "throws": []
    },
    {
      "name": "restore",
      "comment": "Restore this project\u0027s state.",
      "javadoc": "Restore this project\u0027s state.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "saveToolTemplate",
      "comment": "Save the given tool template as part of the project.",
      "javadoc": "Save the given tool template as part of the project.\n@param tag ID or name for the tool template\n@param template template to save",
      "static": false,
      "params": [
        {
          "name": "tag",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "ID or name for the tool template"
        },
        {
          "name": "template",
          "type_long": "ghidra.framework.model.ToolTemplate",
          "type_short": "ToolTemplate",
          "comment": "template to save"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getToolTemplate",
      "comment": "Get the tool template with the given tag.",
      "javadoc": "Get the tool template with the given tag.\n@param tag ID or name for the tool template to get\n@return tool template",
      "static": false,
      "params": [
        {
          "name": "tag",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "ID or name for the tool template to get"
        }
      ],
      "return": {
        "type_long": "ghidra.framework.model.ToolTemplate",
        "type_short": "ToolTemplate",
        "comment": "tool template"
      },
      "throws": []
    },
    {
      "name": "setSaveableData",
      "comment": "Allows the user to store data related to the project.",
      "javadoc": "Allows the user to store data related to the project.\n@param key A value used to store and lookup saved data\n@param saveState a container of data that will be written out when persisted",
      "static": false,
      "params": [
        {
          "name": "key",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "A value used to store and lookup saved data"
        },
        {
          "name": "saveState",
          "type_long": "ghidra.framework.options.SaveState",
          "type_short": "SaveState",
          "comment": "a container of data that will be written out when persisted"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSaveableData",
      "comment": "The analog for #setSaveableData(String, SaveState).",
      "javadoc": "The analog for {@link #setSaveableData(String, SaveState)}.",
      "static": false,
      "params": [
        {
          "name": "key",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.framework.options.SaveState",
        "type_short": "SaveState",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getOpenData",
      "comment": "Get list of domain files that are open.",
      "javadoc": "Get list of domain files that are open.\n@return the files; empty if no files",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cghidra.framework.model.DomainFile\u003e",
        "type_short": "List",
        "comment": "the files; empty if no files"
      },
      "throws": []
    },
    {
      "name": "getProjectData",
      "comment": "Get the root domain data folder in the project.",
      "javadoc": "Get the root domain data folder in the project.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.framework.model.ProjectData",
        "type_short": "ProjectData",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getProjectData",
      "comment": "Returns the Project Data for the given Project locator.  The Project locator must\n be either the current active project or an currently open project view.",
      "javadoc": "Returns the Project Data for the given Project locator.  The Project locator must\n be either the current active project or an currently open project view.",
      "static": false,
      "params": [
        {
          "name": "projectLocator",
          "type_long": "ghidra.framework.model.ProjectLocator",
          "type_short": "ProjectLocator",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.framework.model.ProjectData",
        "type_short": "ProjectData",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getProjectData",
      "comment": "Returns the Project Data for the given Project URL.  The Project URL must\n correspond to the current active project or an currently open project view.",
      "javadoc": "Returns the Project Data for the given Project URL.  The Project URL must\n correspond to the current active project or an currently open project view.",
      "static": false,
      "params": [
        {
          "name": "url",
          "type_long": "java.net.URL",
          "type_short": "URL",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.framework.model.ProjectData",
        "type_short": "ProjectData",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getViewedProjectData",
      "comment": "Get the project data for other projects that are\n currently being viewed.",
      "javadoc": "Get the project data for other projects that are\n currently being viewed.\n@return zero length array if there are no viewed projects open",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.framework.model.ProjectData[]",
        "type_short": "ghidra.framework.model.ProjectData[]",
        "comment": "zero length array if there are no viewed projects open"
      },
      "throws": []
    },
    {
      "name": "releaseFiles",
      "comment": "Releases all DomainObjects used by the given consumer",
      "javadoc": "Releases all DomainObjects used by the given consumer\n@param consumer object no longer using any DomainObjects.",
      "static": false,
      "params": [
        {
          "name": "consumer",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": "object no longer using any DomainObjects."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
