{
  "name": "XmlDataReader",
  "comment": "Defines the method for creating an Object from an \n XML file in a JarInputStream.",
  "javadoc": "Defines the method for creating an Object from an \n XML file in a JarInputStream.",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "addXMLObject",
      "comment": "Reads the XML file indicated by the base path and relative path name.\n It creates an object(s) from this, that is used by the project.",
      "javadoc": "Reads the XML file indicated by the base path and relative path name.\n It creates an object(s) from this, that is used by the project.\n@param basePath the prefix part of the path for the XML file\n@param relPathName a pathname for the file relative to the basePath.\n@param removeFile on success this should remove the original file.\n@param monitor a monitor for providing progress information to the user.\n@return true if an object associated with the file was added to the\n project. false if the file couldn\u0027t be processed.\n@throws SAXException if the XML file has a XML parsing error.\n@throws IOException if there is problem reading/removing the XML file\n or if there is a problem creating any resulting file.\n@throws NotFoundException if a required service can\u0027t be found in \n the service registry.",
      "static": false,
      "params": [
        {
          "name": "tool",
          "type_long": "ghidra.framework.plugintool.PluginTool",
          "type_short": "PluginTool",
          "comment": ""
        },
        {
          "name": "basePath",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the prefix part of the path for the XML file"
        },
        {
          "name": "relPathName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "a pathname for the file relative to the basePath."
        },
        {
          "name": "removeFile",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "on success this should remove the original file."
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": "a monitor for providing progress information to the user."
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if an object associated with the file was added to the\n project. false if the file couldn\u0027t be processed."
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.NotFoundException",
          "type_short": "NotFoundException",
          "comment": "if a required service can\u0027t be found in \n the service registry."
        },
        {
          "type_long": "org.xml.sax.SAXException",
          "type_short": "SAXException",
          "comment": "if the XML file has a XML parsing error."
        },
        {
          "type_long": "ghidra.util.exception.DuplicateNameException",
          "type_short": "DuplicateNameException",
          "comment": ""
        },
        {
          "type_long": "ghidra.util.NotOwnerException",
          "type_short": "NotOwnerException",
          "comment": ""
        },
        {
          "type_long": "ghidra.util.InvalidNameException",
          "type_short": "InvalidNameException",
          "comment": ""
        },
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if there is problem reading/removing the XML file\n or if there is a problem creating any resulting file."
        }
      ]
    },
    {
      "name": "getSummary",
      "comment": "Returns a string summarizing the results of the XML data read\n or null if there was nothing to report.",
      "javadoc": "Returns a string summarizing the results of the XML data read\n or \u003ccode\u003enull\u003c/code\u003e if there was nothing to report.\n@return a string summarizing the results of the xml data read\n         or \u003ccode\u003enull\u003c/code\u003e if there was nothing to report",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "a string summarizing the results of the xml data read\n         or null if there was nothing to report"
      },
      "throws": []
    }
  ]
}
