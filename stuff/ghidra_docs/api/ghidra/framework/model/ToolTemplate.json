{
  "name": "ToolTemplate",
  "comment": "Configuration of a tool that knows how to create tools.",
  "javadoc": "Configuration of a tool that knows how to create tools.",
  "static": false,
  "implements": [],
  "fields": [
    {
      "name": "TOOL_XML_NAME",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"TOOL\""
    },
    {
      "name": "TOOL_NAME_XML_NAME",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"TOOL_NAME\""
    },
    {
      "name": "TOOL_INSTANCE_NAME_XML_NAME",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"INSTANCE_NAME\""
    }
  ],
  "methods": [
    {
      "name": "getName",
      "comment": "Get the name for the tool.",
      "javadoc": "Get the name for the tool.\n@return the name",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the name"
      },
      "throws": []
    },
    {
      "name": "getPath",
      "comment": "Returns the path from whence this tool template came; may be null if the tool was not \n loaded from the filesystem",
      "javadoc": "Returns the path from whence this tool template came; may be null if the tool was not \n loaded from the filesystem\n@return the path",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the path"
      },
      "throws": []
    },
    {
      "name": "setName",
      "comment": "Set the name for the tool template.",
      "javadoc": "Set the name for the tool template.\n@param name new tool template name",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "new tool template name"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getIconURL",
      "comment": "Get the iconURL for this tool template",
      "javadoc": "Get the iconURL for this tool template\n@return the iconURL for this tool template",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.util.image.ToolIconURL",
        "type_short": "ToolIconURL",
        "comment": "the iconURL for this tool template"
      },
      "throws": []
    },
    {
      "name": "getIcon",
      "comment": "Get the icon for this tool template.  This is equivalent to calling\n getIconURL().getIcon()",
      "javadoc": "Get the icon for this tool template.  This is equivalent to calling\n \u003ccode\u003egetIconURL().getIcon()\u003c/code\u003e\n@return the icon for this tool template.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "javax.swing.ImageIcon",
        "type_short": "ImageIcon",
        "comment": "the icon for this tool template."
      },
      "throws": []
    },
    {
      "name": "getSupportedDataTypes",
      "comment": "Get the classes of the data types that this tool supports,\n i.e., what data types can be dropped onto this tool.",
      "javadoc": "Get the classes of the data types that this tool supports,\n i.e., what data types can be dropped onto this tool.\n@return list of supported data type classes.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.Class\u003c?\u003e[]",
        "type_short": "java.lang.Class\u003c?\u003e[]",
        "comment": "list of supported data type classes."
      },
      "throws": []
    },
    {
      "name": "saveToXml",
      "comment": "Save this object to an XML Element.",
      "javadoc": "Save this object to an XML Element.\n@return the ToolConfig saved as an XML element",
      "static": false,
      "params": [],
      "return": {
        "type_long": "org.jdom.Element",
        "type_short": "Element",
        "comment": "the ToolConfig saved as an XML element"
      },
      "throws": []
    },
    {
      "name": "restoreFromXml",
      "comment": "Restore this object from a saved XML element.",
      "javadoc": "Restore this object from a saved XML element.\n@param root element to restore this object into",
      "static": false,
      "params": [
        {
          "name": "root",
          "type_long": "org.jdom.Element",
          "type_short": "Element",
          "comment": "element to restore this object into"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createTool",
      "comment": "Creates a tool like only this template knows how.",
      "javadoc": "Creates a tool like only this template knows how.\n@param project the project in which the tool will be living.\n@return a new tool for this template implementation.",
      "static": false,
      "params": [
        {
          "name": "project",
          "type_long": "ghidra.framework.model.Project",
          "type_short": "Project",
          "comment": "the project in which the tool will be living."
        }
      ],
      "return": {
        "type_long": "ghidra.framework.plugintool.PluginTool",
        "type_short": "PluginTool",
        "comment": "a new tool for this template implementation."
      },
      "throws": []
    },
    {
      "name": "getToolElement",
      "comment": "This returns the XML element that represents the tool part of the overall XML hierarchy.",
      "javadoc": "This returns the XML element that represents the tool part of the overall XML hierarchy.\n@return the XML element that represents the tool part of the overall XML hierarchy.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "org.jdom.Element",
        "type_short": "Element",
        "comment": "the XML element that represents the tool part of the overall XML hierarchy."
      },
      "throws": []
    }
  ]
}
