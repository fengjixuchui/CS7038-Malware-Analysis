{
  "name": "DomainObjectDBChangeSet",
  "comment": "DomainObjectDBChangeSet extends DBChangeSet \n providing methods which facilitate transaction synchronization with the domain object\u0027s DBHandle.",
  "javadoc": "\u003ccode\u003eDomainObjectDBChangeSet\u003c/code\u003e extends \u003ccode\u003eDBChangeSet\u003c/code\u003e \n providing methods which facilitate transaction synchronization with the domain object\u0027s DBHandle.",
  "static": false,
  "implements": [
    "db.DBChangeSet"
  ],
  "fields": [],
  "methods": [
    {
      "name": "clearUndo",
      "comment": "Resets the change sets after a save.",
      "javadoc": "Resets the change sets after a save.",
      "static": false,
      "params": [
        {
          "name": "isCheckedOut",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "undo",
      "comment": "Undo the last change data transaction",
      "javadoc": "Undo the last change data transaction",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "redo",
      "comment": "Redo the change data transaction associated the last Undo.",
      "javadoc": "Redo the change data transaction associated the last Undo.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setMaxUndos",
      "comment": "Set the undo/redo stack depth",
      "javadoc": "Set the undo/redo stack depth\n@param maxUndos the maximum numbder of undo",
      "static": false,
      "params": [
        {
          "name": "maxUndos",
          "type_long": "int",
          "type_short": "int",
          "comment": "the maximum numbder of undo"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "clearUndo",
      "comment": "Clears the undo/redo stack.",
      "javadoc": "Clears the undo/redo stack.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "startTransaction",
      "comment": "Start change data transaction.",
      "javadoc": "Start change data transaction.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "endTransaction",
      "comment": "End change data transaction.",
      "javadoc": "End change data transaction.\n@param commit if true transaction data is committed, \n               otherwise transaction data is discarded",
      "static": false,
      "params": [
        {
          "name": "commit",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "if true transaction data is committed, \n               otherwise transaction data is discarded"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
