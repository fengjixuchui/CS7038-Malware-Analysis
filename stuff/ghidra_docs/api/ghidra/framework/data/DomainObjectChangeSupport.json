{
  "name": "DomainObjectChangeSupport",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "listeners",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.datastruct.WeakSet\u003cghidra.framework.model.DomainObjectListener\u003e",
      "type_short": "WeakSet",
      "constant_value": null
    },
    {
      "name": "src",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.model.DomainObject",
      "type_short": "DomainObject",
      "constant_value": null
    },
    {
      "name": "changesQueue",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cghidra.framework.model.DomainObjectChangeRecord\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "timer",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "generic.timer.GhidraTimer",
      "type_short": "GhidraTimer",
      "constant_value": null
    },
    {
      "name": "domainObjectLock",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.Lock",
      "type_short": "Lock",
      "constant_value": null
    },
    {
      "name": "writeLock",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.Lock",
      "type_short": "Lock",
      "constant_value": null
    },
    {
      "name": "isDisposed",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new DomainObjectChangeSupport object.",
      "javadoc": "Constructs a new DomainObjectChangeSupport object.\n@param src The object to be put as the src for all events generated.\n@param timeInterval The time (in milliseconds) this object will wait before\n \t\t  flushing its event buffer.  If a new event comes in before the time expires,\n \t\t  the timer is reset.\n@param lock the lock used to verify that calls to {@link #flush()} are not performed \n        while a lock is held; this is the lock to guard the DB",
      "static": false,
      "params": [
        {
          "name": "src",
          "type_long": "ghidra.framework.model.DomainObject",
          "type_short": "DomainObject",
          "comment": "The object to be put as the src for all events generated."
        },
        {
          "name": "timeInterval",
          "type_long": "int",
          "type_short": "int",
          "comment": "The time (in milliseconds) this object will wait before\n \t\t  flushing its event buffer.  If a new event comes in before the time expires,\n \t\t  the timer is reset."
        },
        {
          "name": "bufsize",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "lock",
          "type_long": "ghidra.util.Lock",
          "type_short": "Lock",
          "comment": "the lock used to verify that calls to #flush() are not performed \n        while a lock is held; this is the lock to guard the DB"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "ghidra.framework.model.DomainObjectListener",
          "type_short": "DomainObjectListener",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "ghidra.framework.model.DomainObjectListener",
          "type_short": "DomainObjectListener",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "sendEventNow",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "convertEventQueueRecordsToEvent",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.framework.model.DomainObjectChangedEvent",
        "type_short": "DomainObjectChangedEvent",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "notifyEvent",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "listenersToNotify",
          "type_long": "java.lang.Iterable\u003cghidra.framework.model.DomainObjectListener\u003e",
          "type_short": "Iterable",
          "comment": ""
        },
        {
          "name": "ev",
          "type_long": "ghidra.framework.model.DomainObjectChangedEvent",
          "type_short": "DomainObjectChangedEvent",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "flush",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "fireEvent",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "docr",
          "type_long": "ghidra.framework.model.DomainObjectChangeRecord",
          "type_short": "DomainObjectChangeRecord",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "fatalErrorOccurred",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "t",
          "type_long": "java.lang.Throwable",
          "type_short": "Throwable",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "dispose",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "atomicAddListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "l",
          "type_long": "ghidra.framework.model.DomainObjectListener",
          "type_short": "DomainObjectListener",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.List\u003cghidra.framework.model.DomainObjectListener\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "lockQueue",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "r",
          "type_long": "java.lang.Runnable",
          "type_short": "Runnable",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "lockQueue",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "c",
          "type_long": "java.util.concurrent.Callable\u003cT\u003e",
          "type_short": "Callable",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "T",
        "type_short": "T",
        "comment": ""
      },
      "throws": []
    }
  ]
}
