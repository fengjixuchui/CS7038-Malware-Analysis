{
  "name": "ProjectFileManager",
  "comment": "Helper class to manage files within a project.",
  "javadoc": "Helper class to manage files within a project.",
  "static": false,
  "implements": [
    "ghidra.framework.model.ProjectData"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "MANGLED_DATA_FOLDER_NAME",
      "comment": "Name of folder that stores user\u0027s data",
      "javadoc": "Name of folder that stores user\u0027s data",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"data\""
    },
    {
      "name": "INDEXED_DATA_FOLDER_NAME",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"idata\""
    },
    {
      "name": "USER_FOLDER_NAME",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"user\""
    },
    {
      "name": "VERSIONED_FOLDER_NAME",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"versioned\""
    },
    {
      "name": "USER_DATA_FILE_PREFIX",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"udf_\""
    },
    {
      "name": "TEST_REPOSITORY_PATH",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "SERVER_NAME",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"SERVER\""
    },
    {
      "name": "PORT_NUMBER",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"PORT_NUMBER\""
    },
    {
      "name": "REPOSITORY_NAME",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"REPOSITORY_NAME\""
    },
    {
      "name": "OWNER",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"OWNER\""
    },
    {
      "name": "PROPERTY_FILENAME",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"project\""
    },
    {
      "name": "USER_DATA_RECONCILE_DELAY_MS",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "300000"
    },
    {
      "name": "userDataReconcileTimer",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "generic.timer.GhidraSwinglessTimer",
      "type_short": "GhidraSwinglessTimer",
      "constant_value": null
    },
    {
      "name": "userDataReconcileThread",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.Thread",
      "type_short": "Thread",
      "constant_value": null
    },
    {
      "name": "localStorageLocator",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.model.ProjectLocator",
      "type_short": "ProjectLocator",
      "constant_value": null
    },
    {
      "name": "projectDir",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.io.File",
      "type_short": "File",
      "constant_value": null
    },
    {
      "name": "properties",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.PropertyFile",
      "type_short": "PropertyFile",
      "constant_value": null
    },
    {
      "name": "fileSystem",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.store.local.LocalFileSystem",
      "type_short": "LocalFileSystem",
      "constant_value": null
    },
    {
      "name": "versionedFileSystem",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.store.FileSystem",
      "type_short": "FileSystem",
      "constant_value": null
    },
    {
      "name": "userFileSystem",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.store.local.LocalFileSystem",
      "type_short": "LocalFileSystem",
      "constant_value": null
    },
    {
      "name": "versionedFSListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.data.ProjectFileManager.MyFileSystemListener",
      "type_short": "MyFileSystemListener",
      "constant_value": null
    },
    {
      "name": "repository",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.client.RepositoryAdapter",
      "type_short": "RepositoryAdapter",
      "constant_value": null
    },
    {
      "name": "fileIndex",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.data.DomainFileIndex",
      "type_short": "DomainFileIndex",
      "constant_value": null
    },
    {
      "name": "listenerList",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.data.DomainFolderChangeListenerList",
      "type_short": "DomainFolderChangeListenerList",
      "constant_value": null
    },
    {
      "name": "rootFolderData",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.data.RootGhidraFolderData",
      "type_short": "RootGhidraFolderData",
      "constant_value": null
    },
    {
      "name": "openDomainObjects",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.Map\u003cjava.lang.String,ghidra.framework.data.DomainObjectAdapter\u003e",
      "type_short": "Map",
      "constant_value": null
    },
    {
      "name": "projectDisposalMonitor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.task.TaskMonitorAdapter",
      "type_short": "TaskMonitorAdapter",
      "constant_value": null
    },
    {
      "name": "owner",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor for existing projects.",
      "javadoc": "Constructor for existing projects.\n@param localStorageLocator the location of the project\n@param isInWritableProject true if project content is writable, false if project is read-only\n@param resetOwner true to reset the project owner\n@throws IOException if an i/o error occurs\n@throws NotOwnerException if inProject is true and user is not owner\n@throws FileNotFoundException if project directory not found",
      "static": false,
      "params": [
        {
          "name": "localStorageLocator",
          "type_long": "ghidra.framework.model.ProjectLocator",
          "type_short": "ProjectLocator",
          "comment": "the location of the project"
        },
        {
          "name": "isInWritableProject",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true if project content is writable, false if project is read-only"
        },
        {
          "name": "resetOwner",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true to reset the project owner"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.NotOwnerException",
          "type_short": "NotOwnerException",
          "comment": "if inProject is true and user is not owner"
        },
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if an i/o error occurs"
        }
      ]
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor for a new project.",
      "javadoc": "Constructor for a new project.\n@param localStorageLocator the location of the project\n@param repository a repository if this is a shared project or null if it is a private project\n@param isInWritableProject true if project content is writable, false if project is read-only\n@throws IOException if an i/o error occurs",
      "static": false,
      "params": [
        {
          "name": "localStorageLocator",
          "type_long": "ghidra.framework.model.ProjectLocator",
          "type_short": "ProjectLocator",
          "comment": "the location of the project"
        },
        {
          "name": "repository",
          "type_long": "ghidra.framework.client.RepositoryAdapter",
          "type_short": "RepositoryAdapter",
          "comment": "a repository if this is a shared project or null if it is a private project"
        },
        {
          "name": "isInWritableProject",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true if project content is writable, false if project is read-only"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if an i/o error occurs"
        }
      ]
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "fileSystem",
          "type_long": "ghidra.framework.store.local.LocalFileSystem",
          "type_short": "LocalFileSystem",
          "comment": ""
        },
        {
          "name": "versionedFileSystem",
          "type_long": "ghidra.framework.store.FileSystem",
          "type_short": "FileSystem",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "init",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "create",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        },
        {
          "name": "isInWritableProject",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getMaxNameLength",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "testValidName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "isPath",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.InvalidNameException",
          "type_short": "InvalidNameException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getUser",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.framework.remote.User",
        "type_short": "User",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createVersionedFileSystem",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "updatePropertiesFile",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "rep",
          "type_long": "ghidra.framework.client.RepositoryAdapter",
          "type_short": "RepositoryAdapter",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getVersionedFileSystem",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "isInWritableProject",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getRepositoryAdapter",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "serverName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "port",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "isInWritableProject",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.framework.client.RepositoryAdapter",
        "type_short": "RepositoryAdapter",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getVersionedFileSystem",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.framework.store.FileSystem",
        "type_short": "FileSystem",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getUserFileSystem",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.framework.store.local.LocalFileSystem",
        "type_short": "LocalFileSystem",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLocalFileSystem",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.framework.store.local.LocalFileSystem",
        "type_short": "LocalFileSystem",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLocalStorageClass",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.Class\u003c? extends ghidra.framework.store.local.LocalFileSystem\u003e",
        "type_short": "Class",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setVersionedFileSystem",
      "comment": "Change the versioned filesystem associated with this project file manager.\n This method is provided for testing.  Care should be taken when using a\n LocalFileSystem in a shared capacity since locking is not supported.",
      "javadoc": "Change the versioned filesystem associated with this project file manager.\n This method is provided for testing.  Care should be taken when using a\n LocalFileSystem in a shared capacity since locking is not supported.\n@param fs versioned filesystem\n@throws IOException if an IO error occurs",
      "static": false,
      "params": [
        {
          "name": "fs",
          "type_long": "ghidra.framework.store.FileSystem",
          "type_short": "FileSystem",
          "comment": "versioned filesystem"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if an IO error occurs"
        }
      ]
    },
    {
      "name": "getPrivateFileSystem",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "create",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        },
        {
          "name": "isInWritableProject",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getUserFileSystem",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "isInWritableProject",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getOwner",
      "comment": "Returns the owner of the project that is associated with this \n ProjectFileManager.  A value of null indicates an old multiuser\n project.",
      "javadoc": "Returns the owner of the project that is associated with this \n ProjectFileManager.  A value of null indicates an old multiuser\n project.\n@return the owner of the project",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the owner of the project"
      },
      "throws": []
    },
    {
      "name": "getRootFolder",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.framework.data.GhidraFolder",
        "type_short": "GhidraFolder",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFolder",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "path",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.framework.model.DomainFolder",
        "type_short": "DomainFolder",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFileCount",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFile",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "path",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.framework.model.DomainFile",
        "type_short": "DomainFile",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFileByID",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "fileID",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.framework.model.DomainFile",
        "type_short": "DomainFile",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSharedFileURL",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "path",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.net.URL",
        "type_short": "URL",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "releaseDomainFiles",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "consumer",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "findOpenFiles",
      "comment": "Finds all changed domain files and appends them to the specified list.",
      "javadoc": "Finds all changed domain files and appends them to the specified list.\n@param list the list to receive the changed domain files",
      "static": false,
      "params": [
        {
          "name": "list",
          "type_long": "java.util.List\u003cghidra.framework.model.DomainFile\u003e",
          "type_short": "List",
          "comment": "the list to receive the changed domain files"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getProjectLocator",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.framework.model.ProjectLocator",
        "type_short": "ProjectLocator",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addDomainFolderChangeListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "l",
          "type_long": "ghidra.framework.model.DomainFolderChangeListener",
          "type_short": "DomainFolderChangeListener",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeDomainFolderChangeListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "l",
          "type_long": "ghidra.framework.model.DomainFolderChangeListener",
          "type_short": "DomainFolderChangeListener",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPrivateFileSystem",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.framework.store.FileSystem",
        "type_short": "FileSystem",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getRepository",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.framework.client.RepositoryAdapter",
        "type_short": "RepositoryAdapter",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "refresh",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "force",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "convertProjectToShared",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "newRepository",
          "type_long": "ghidra.framework.client.RepositoryAdapter",
          "type_short": "RepositoryAdapter",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        },
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": ""
        }
      ]
    },
    {
      "name": "updateRepositoryInfo",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "newRepository",
          "type_long": "ghidra.framework.client.RepositoryAdapter",
          "type_short": "RepositoryAdapter",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        },
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": ""
        }
      ]
    },
    {
      "name": "findCheckedOutFiles",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "folder",
          "type_long": "ghidra.framework.model.DomainFolder",
          "type_short": "DomainFolder",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        },
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": ""
        }
      ]
    },
    {
      "name": "convertFilesToPrivate",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "folder",
          "type_long": "ghidra.framework.model.DomainFolder",
          "type_short": "DomainFolder",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        },
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getUserDataFilename",
      "comment": "Returns the standard user data filename associated with the specified file ID.",
      "javadoc": "Returns the standard user data filename associated with the specified file ID.\n@param associatedFileID the file id\n@return user data filename",
      "static": true,
      "params": [
        {
          "name": "associatedFileID",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the file id"
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "user data filename"
      },
      "throws": []
    },
    {
      "name": "scheduleUserDataReconcilation",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "startReconcileUserDataFiles",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "reconcileUserDataFiles",
      "comment": "Reconcile user data files against all content files within the project.\n This must only be done while connected to the repository",
      "javadoc": "Reconcile user data files against all content files within the project.\n This must only be done while connected to the repository",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "makeValidName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getProjectDir",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.io.File",
        "type_short": "File",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "close",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "dispose",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getRootFolderData",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.framework.data.GhidraFolderData",
        "type_short": "GhidraFolderData",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setDomainObject",
      "comment": "Set the open domain object (opened for update) associated with a file. \n NOTE: Caller is responsible for setting domain file on domain object after invoking this \n method. If a domain object saveAs was done, the previous file association \n will be removed.",
      "javadoc": "Set the open domain object (opened for update) associated with a file. \n NOTE: Caller is responsible for setting domain file on domain object after invoking this \n method. If a domain object saveAs was done, the previous file association \n will be removed.\n@param pathname the path name\n@param doa the domain object",
      "static": false,
      "params": [
        {
          "name": "pathname",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the path name"
        },
        {
          "name": "doa",
          "type_long": "ghidra.framework.data.DomainObjectAdapter",
          "type_short": "DomainObjectAdapter",
          "comment": "the domain object"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getOpenedDomainObject",
      "comment": "Returns the open domain object (opened for update) for the specified path.",
      "javadoc": "Returns the open domain object (opened for update) for the specified path.\n@param pathname the path name\n@return the domain object",
      "static": false,
      "params": [
        {
          "name": "pathname",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the path name"
        }
      ],
      "return": {
        "type_long": "ghidra.framework.data.DomainObjectAdapter",
        "type_short": "DomainObjectAdapter",
        "comment": "the domain object"
      },
      "throws": []
    },
    {
      "name": "clearDomainObject",
      "comment": "Clears the previously open domain object which has been closed.",
      "javadoc": "Clears the previously open domain object which has been closed.\n@param pathname the path name\n@return true if previously open domain file was cleared, else false",
      "static": false,
      "params": [
        {
          "name": "pathname",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the path name"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if previously open domain file was cleared, else false"
      },
      "throws": []
    },
    {
      "name": "updateFileIndex",
      "comment": "Update the file index for the specified file data",
      "javadoc": "Update the file index for the specified file data\n@param fileData file data",
      "static": false,
      "params": [
        {
          "name": "fileData",
          "type_long": "ghidra.framework.data.GhidraFileData",
          "type_short": "GhidraFileData",
          "comment": "file data"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeFromIndex",
      "comment": "Remove specified fileID from index.",
      "javadoc": "Remove specified fileID from index.\n@param fileID the file ID",
      "static": false,
      "params": [
        {
          "name": "fileID",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the file ID"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getProjectDisposalMonitor",
      "comment": "Get monitor which will be cancelled if project is closed",
      "javadoc": "Get monitor which will be cancelled if project is closed\n@return cancel monitor",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.util.task.TaskMonitor",
        "type_short": "TaskMonitor",
        "comment": "cancel monitor"
      },
      "throws": []
    }
  ]
}
