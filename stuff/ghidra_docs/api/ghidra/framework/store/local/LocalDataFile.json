{
  "name": "LocalDataFile",
  "comment": "LocalDataFile provides a FolderItem implementation\n for a local serialized data file.  This implementation supports \n a non-versioned file-system only.\n \n This item utilizes a data directory for storing the serialized \n data file.",
  "javadoc": "\u003ccode\u003eLocalDataFile\u003c/code\u003e provides a FolderItem implementation\n for a local serialized data file.  This implementation supports \n a non-versioned file-system only.\n \u003cp\u003e\n This item utilizes a data directory for storing the serialized \n data file.",
  "static": false,
  "implements": [
    "ghidra.framework.store.DataFileItem"
  ],
  "extends": "ghidra.framework.store.local.LocalFolderItem",
  "fields": [
    {
      "name": "IO_BUFFER_SIZE",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "32768"
    },
    {
      "name": "DATA_FILE",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"data.1.gdf\""
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "fileSystem",
          "type_long": "ghidra.framework.store.local.LocalFileSystem",
          "type_short": "LocalFileSystem",
          "comment": ""
        },
        {
          "name": "propertyFile",
          "type_long": "ghidra.util.PropertyFile",
          "type_short": "PropertyFile",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Create a new local data file item.",
      "javadoc": "Create a new local data file item.\n@param fileSystem file system\n@param propertyFile serialized data property file\n@param istream data source input stream (should be a start of data and will be read to end of file).\n The invoker of this constructor is responsible for closing istream.\n@param contentType user content type\n@param monitor progress monitor (used for cancel support, \n progress not used since length of input stream is unknown)\n@throws IOException if an IO Error occurs\n@throws CancelledException if monitor cancels operation",
      "static": false,
      "params": [
        {
          "name": "fileSystem",
          "type_long": "ghidra.framework.store.local.LocalFileSystem",
          "type_short": "LocalFileSystem",
          "comment": "file system"
        },
        {
          "name": "propertyFile",
          "type_long": "ghidra.util.PropertyFile",
          "type_short": "PropertyFile",
          "comment": "serialized data property file"
        },
        {
          "name": "istream",
          "type_long": "java.io.InputStream",
          "type_short": "InputStream",
          "comment": "data source input stream (should be a start of data and will be read to end of file).\n The invoker of this constructor is responsible for closing istream."
        },
        {
          "name": "contentType",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "user content type"
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": "progress monitor (used for cancel support, \n progress not used since length of input stream is unknown)"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if an IO Error occurs"
        },
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": "if monitor cancels operation"
        }
      ]
    },
    {
      "name": "length",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getDataFile",
      "comment": "Returns data File.",
      "javadoc": "Returns data File.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.io.File",
        "type_short": "File",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getInputStream",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.io.InputStream",
        "type_short": "InputStream",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.FileNotFoundException",
          "type_short": "FileNotFoundException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getInputStream",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "version",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.io.InputStream",
        "type_short": "InputStream",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.FileNotFoundException",
          "type_short": "FileNotFoundException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getOutputStream",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.io.OutputStream",
        "type_short": "OutputStream",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.FileNotFoundException",
          "type_short": "FileNotFoundException",
          "comment": ""
        }
      ]
    },
    {
      "name": "updateCheckout",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "versionedFolderItem",
          "type_long": "ghidra.framework.store.FolderItem",
          "type_short": "FolderItem",
          "comment": ""
        },
        {
          "name": "updateItem",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "updateCheckout",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "item",
          "type_long": "ghidra.framework.store.FolderItem",
          "type_short": "FolderItem",
          "comment": ""
        },
        {
          "name": "checkoutVersion",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "deleteMinimumVersion",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "user",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "deleteCurrentVersion",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "user",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "output",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "outputFile",
          "type_long": "java.io.File",
          "type_short": "File",
          "comment": ""
        },
        {
          "name": "version",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getMinimumVersion",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getCurrentVersion",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "canRecover",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    }
  ]
}
