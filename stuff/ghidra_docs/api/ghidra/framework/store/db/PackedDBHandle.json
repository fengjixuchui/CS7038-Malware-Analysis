{
  "name": "PackedDBHandle",
  "comment": "DBHandle provides access to a PackedDatabase.",
  "javadoc": "\u003ccode\u003eDBHandle\u003c/code\u003e provides access to a PackedDatabase.",
  "static": false,
  "implements": [],
  "extends": "db.DBHandle",
  "fields": [
    {
      "name": "pdb",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.store.db.PackedDatabase",
      "type_short": "PackedDatabase",
      "constant_value": null
    },
    {
      "name": "contentType",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a temporary packed database handle.",
      "javadoc": "Constructs a temporary packed database handle.\n@param contentType user defined content type.\n@throws IOException",
      "static": false,
      "params": [
        {
          "name": "contentType",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "user defined content type."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a database handle for an existing packed database.\n Update mode is determined by bfile.",
      "javadoc": "Constructs a database handle for an existing packed database.\n Update mode is determined by bfile.\n@param database packed database\n@param bfile temporary unpacked database which corresponds to the\n specified packed database.",
      "static": false,
      "params": [
        {
          "name": "pdb",
          "type_long": "ghidra.framework.store.db.PackedDatabase",
          "type_short": "PackedDatabase",
          "comment": ""
        },
        {
          "name": "bfile",
          "type_long": "db.buffers.BufferFile",
          "type_short": "BufferFile",
          "comment": "temporary unpacked database which corresponds to the\n specified packed database."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "save",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "comment",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "changeSet",
          "type_long": "db.DBChangeSet",
          "type_short": "DBChangeSet",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        },
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": ""
        }
      ]
    },
    {
      "name": "save",
      "comment": "Saves the open database to the corresponding PackedDatabase file.",
      "javadoc": "Saves the open database to the corresponding PackedDatabase file.\n@param monitor\n@throws IOException\n@throws CancelledException",
      "static": false,
      "params": [
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        },
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": ""
        }
      ]
    },
    {
      "name": "saveAs",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "outFile",
          "type_long": "db.buffers.BufferFile",
          "type_short": "BufferFile",
          "comment": ""
        },
        {
          "name": "newDatabaseId",
          "type_long": "java.lang.Long",
          "type_short": "Long",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        },
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": ""
        }
      ]
    },
    {
      "name": "saveAs",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "outFile",
          "type_long": "db.buffers.BufferFile",
          "type_short": "BufferFile",
          "comment": ""
        },
        {
          "name": "associateWithNewFile",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        },
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": ""
        }
      ]
    },
    {
      "name": "close",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "saveAs",
      "comment": "Save open database to a new packed database.\n If another PackedDatabase was associated with this handle prior to this invocation\n it should be disposed to that the underlying database resources can be cleaned-up.",
      "javadoc": "Save open database to a new packed database.\n If another PackedDatabase was associated with this handle prior to this invocation\n it should be disposed to that the underlying database resources can be cleaned-up.\n@param itemName\n@param dir\n@param packedFileName\n@param monitor\n@return new packed Database object now associated with this handle.\n@throws CancelledException if task monitor cancelled operation.\n@throws IOException\n@throws DuplicateFileException",
      "static": false,
      "params": [
        {
          "name": "itemName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "dir",
          "type_long": "java.io.File",
          "type_short": "File",
          "comment": ""
        },
        {
          "name": "packedFileName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.framework.store.db.PackedDatabase",
        "type_short": "PackedDatabase",
        "comment": "new packed Database object now associated with this handle."
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        },
        {
          "type_long": "ghidra.util.exception.DuplicateFileException",
          "type_short": "DuplicateFileException",
          "comment": ""
        },
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": "if task monitor cancelled operation."
        }
      ]
    },
    {
      "name": "saveAs",
      "comment": "Save open database to a new packed database with a specified newDatabaseId.\n If another PackedDatabase was associated with this handle prior to this invocation\n it should be disposed to that the underlying database resources can be cleaned-up.\n NOTE: This method is intended for use in transforming one database to\n match another existing database.",
      "javadoc": "Save open database to a new packed database with a specified newDatabaseId.\n If another PackedDatabase was associated with this handle prior to this invocation\n it should be disposed to that the underlying database resources can be cleaned-up.\n NOTE: This method is intended for use in transforming one database to\n match another existing database.\n@param itemName\n@param dir\n@param packedFileName\n@param newDatabaseId database ID to be forced for new database or null to generate \n new database ID\n@param monitor\n@return new packed Database object now associated with this handle.\n@throws CancelledException if task monitor cancelled operation.\n@throws IOException\n@throws DuplicateFileException",
      "static": false,
      "params": [
        {
          "name": "itemName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "dir",
          "type_long": "java.io.File",
          "type_short": "File",
          "comment": ""
        },
        {
          "name": "packedFileName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "newDatabaseId",
          "type_long": "java.lang.Long",
          "type_short": "Long",
          "comment": "database ID to be forced for new database or null to generate \n new database ID"
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.framework.store.db.PackedDatabase",
        "type_short": "PackedDatabase",
        "comment": "new packed Database object now associated with this handle."
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        },
        {
          "type_long": "ghidra.util.exception.DuplicateFileException",
          "type_short": "DuplicateFileException",
          "comment": ""
        },
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": "if task monitor cancelled operation."
        }
      ]
    },
    {
      "name": "getContentType",
      "comment": "Returns user defined content type associated with this handle.",
      "javadoc": "Returns user defined content type associated with this handle.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPackedDatabase",
      "comment": "Returns PackedDatabase associated with this handle, or null if\n this is a temporary handle which has not yet been saved to a\n PackedDatabase using saveAs.",
      "javadoc": "Returns PackedDatabase associated with this handle, or null if\n this is a temporary handle which has not yet been saved to a\n PackedDatabase using saveAs.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.framework.store.db.PackedDatabase",
        "type_short": "PackedDatabase",
        "comment": ""
      },
      "throws": []
    }
  ]
}
