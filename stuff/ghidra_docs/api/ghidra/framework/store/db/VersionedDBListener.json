{
  "name": "VersionedDBListener",
  "comment": "VersionedDBListener provides listeners the ability to be notified\n when changes occur to a versioned database.",
  "javadoc": "\u003ccode\u003eVersionedDBListener\u003c/code\u003e provides listeners the ability to be notified\n when changes occur to a versioned database.",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "versionsChanged",
      "comment": "Available database versions have been modified.\n This method is not invoked when a new version is created.",
      "javadoc": "Available database versions have been modified.\n This method is not invoked when a new version is created.\n@param minVersion minimum available version\n@param currentVersion current/latest version",
      "static": false,
      "params": [
        {
          "name": "minVersion",
          "type_long": "int",
          "type_short": "int",
          "comment": "minimum available version"
        },
        {
          "name": "currentVersion",
          "type_long": "int",
          "type_short": "int",
          "comment": "current/latest version"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "versionCreated",
      "comment": "A new database version has been created.",
      "javadoc": "A new database version has been created.\n@param db\n@param version\n@param time\n@param comment\n@param checkinId\n@return true if version is allowed, if false is returned \n the version will be removed.",
      "static": false,
      "params": [
        {
          "name": "db",
          "type_long": "ghidra.framework.store.db.VersionedDatabase",
          "type_short": "VersionedDatabase",
          "comment": ""
        },
        {
          "name": "version",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "time",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        },
        {
          "name": "comment",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "checkinId",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if version is allowed, if false is returned \n the version will be removed."
      },
      "throws": []
    },
    {
      "name": "versionDeleted",
      "comment": "A version has been deleted.",
      "javadoc": "A version has been deleted.\n@param version",
      "static": false,
      "params": [
        {
          "name": "version",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getCheckoutVersion",
      "comment": "Returns the checkout version associated with the specified\n checkoutId.  A returned version of -1 indicates that the \n checkoutId is not valid.",
      "javadoc": "Returns the checkout version associated with the specified\n checkoutId.  A returned version of -1 indicates that the \n checkoutId is not valid.\n@param checkoutId\n@return checkout version",
      "static": false,
      "params": [
        {
          "name": "checkoutId",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "checkout version"
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "checkinCompleted",
      "comment": "Terminate the specified checkout.\n A new version may or may not have been created.",
      "javadoc": "Terminate the specified checkout.\n A new version may or may not have been created.\n@param checkoutId",
      "static": false,
      "params": [
        {
          "name": "checkoutId",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
