{
  "name": "ApplicationIdentifier",
  "comment": "Class to represent an application\u0027s unique identifier.  An application identifier is made up\n of an application name, an application version, and an application release name.\n \n The identifier format is (\\.+) - \\d\\.\\d(\\.\\d)?(\\-.+)? _ (\\.+)\n                          name         version        release name\n \n Application names will be converted to all lowercase and application release names will be\n converted to all uppercase.  Both will have spaces removed from their names.\n \n Examples:\n \n ghidra-7.4_DEV\n ",
  "javadoc": "Class to represent an application\u0027s unique identifier.  An application identifier is made up\n of an application name, an application version, and an application release name.\n \u003cpre\u003e\n The identifier format is (\\.+) - \\d\\.\\d(\\.\\d)?(\\-.+)? _ (\\.+)\n                          name         version        release name\n \u003c/pre\u003e\n Application names will be converted to all lowercase and application release names will be\n converted to all uppercase.  Both will have spaces removed from their names.\n \u003cp\u003e\n Examples:\n \u003cul\u003e\n \u003cli\u003eghidra-7.4_DEV\n \u003c/ul\u003e",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "applicationName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "applicationVersion",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.ApplicationVersion",
      "type_short": "ApplicationVersion",
      "constant_value": null
    },
    {
      "name": "applicationReleaseName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Creates a new ApplicationIdentifier object from an ApplicationProperties.",
      "javadoc": "Creates a new {@link ApplicationIdentifier} object from an {@link ApplicationProperties}.\n@param applicationProperties An {@link ApplicationProperties}.\n@throws IllegalArgumentException if required elements from the {@link ApplicationProperties} \n   were missing or otherwise failed to parse.  The exception\u0027s message has more detailed \n   information about why it failed.",
      "static": false,
      "params": [
        {
          "name": "applicationProperties",
          "type_long": "ghidra.framework.ApplicationProperties",
          "type_short": "ApplicationProperties",
          "comment": "An ApplicationProperties."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.lang.IllegalArgumentException",
          "type_short": "IllegalArgumentException",
          "comment": "if required elements from the ApplicationProperties \n   were missing or otherwise failed to parse.  The exception\u0027s message has more detailed \n   information about why it failed."
        }
      ]
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Creates a new ApplicationIdentifier object from the given string.",
      "javadoc": "Creates a new {@link ApplicationIdentifier} object from the given string.\n@param identifier An identifier string.\n@throws IllegalArgumentException if the identifier string failed to parse.  The \n   exception\u0027s message has more detailed information about why it failed.",
      "static": false,
      "params": [
        {
          "name": "identifier",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "An identifier string."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.lang.IllegalArgumentException",
          "type_short": "IllegalArgumentException",
          "comment": "if the identifier string failed to parse.  The \n   exception\u0027s message has more detailed information about why it failed."
        }
      ]
    },
    {
      "name": "getApplicationName",
      "comment": "Gets the application name.",
      "javadoc": "Gets the application name.\n@return The application name.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "The application name."
      },
      "throws": []
    },
    {
      "name": "getApplicationVersion",
      "comment": "Gets the ApplicationVersion.",
      "javadoc": "Gets the {@link ApplicationVersion application version}.\n@return The {@link ApplicationVersion application version}.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.framework.ApplicationVersion",
        "type_short": "ApplicationVersion",
        "comment": "The ApplicationVersion."
      },
      "throws": []
    },
    {
      "name": "getApplicationReleaseName",
      "comment": "Gets the application release name.",
      "javadoc": "Gets the application release name.\n@return The application release name.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "The application release name."
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hashCode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "equals",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "obj",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "parse",
      "comment": "Parses application identifier components out of the given version string.",
      "javadoc": "Parses application identifier components out of the given version string.\n@param identifier An identifier string.\n@throws IllegalArgumentException if the identifier string failed to parse.  The \n   exception\u0027s message has more detailed information about why it failed.",
      "static": false,
      "params": [
        {
          "name": "identifier",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "An identifier string."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.lang.IllegalArgumentException",
          "type_short": "IllegalArgumentException",
          "comment": "if the identifier string failed to parse.  The \n   exception\u0027s message has more detailed information about why it failed."
        }
      ]
    }
  ]
}
