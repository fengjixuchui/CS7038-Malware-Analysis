{
  "name": "MulticastTaskListener",
  "comment": "Used by the GTaskManager to efficiently manage multiple GTaskListeners.  \n \n When an GTaskManager has multiple listeners, instead of having a list of listeners, listeners\n are chained together using MulticastTaskListeners. It avoids the creation of\n an iterator every time a listener method needs to be called.\n \n For example, the GTaskManager has a single TaskListener variable that it notifies when its state\n changes.  If someone adds a listener, and the current listener is null, then it becomes the \n listener.  If it already has a listener, it will create a new MulticaseTaskListener taking in the\n old listener and the new listener.  When a TaskListener method is called, it simply calls the same\n method on those two listeners.",
  "javadoc": "Used by the GTaskManager to efficiently manage multiple GTaskListeners.  \n \u003cP\u003e\n When an GTaskManager has multiple listeners, instead of having a list of listeners, listeners\n are chained together using MulticastTaskListeners. It avoids the creation of\n an iterator every time a listener method needs to be called.\n \u003cP\u003e\n For example, the GTaskManager has a single TaskListener variable that it notifies when its state\n changes.  If someone adds a listener, and the current listener is null, then it becomes the \n listener.  If it already has a listener, it will create a new MulticaseTaskListener taking in the\n old listener and the new listener.  When a TaskListener method is called, it simply calls the same\n method on those two listeners.",
  "static": false,
  "implements": [
    "ghidra.framework.task.GTaskListener"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "a",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.task.GTaskListener",
      "type_short": "GTaskListener",
      "constant_value": null
    },
    {
      "name": "b",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.task.GTaskListener",
      "type_short": "GTaskListener",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "a",
          "type_long": "ghidra.framework.task.GTaskListener",
          "type_short": "GTaskListener",
          "comment": ""
        },
        {
          "name": "b",
          "type_long": "ghidra.framework.task.GTaskListener",
          "type_short": "GTaskListener",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "taskStarted",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "task",
          "type_long": "ghidra.framework.task.GScheduledTask",
          "type_short": "GScheduledTask",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "taskCompleted",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "task",
          "type_long": "ghidra.framework.task.GScheduledTask",
          "type_short": "GScheduledTask",
          "comment": ""
        },
        {
          "name": "result",
          "type_long": "ghidra.framework.task.GTaskResult",
          "type_short": "GTaskResult",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "taskGroupScheduled",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "group",
          "type_long": "ghidra.framework.task.GTaskGroup",
          "type_short": "GTaskGroup",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "taskScheduled",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "scheduledTask",
          "type_long": "ghidra.framework.task.GScheduledTask",
          "type_short": "GScheduledTask",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "taskGroupStarted",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "taskGroup",
          "type_long": "ghidra.framework.task.GTaskGroup",
          "type_short": "GTaskGroup",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "ghidra.framework.task.GTaskListener",
          "type_short": "GTaskListener",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.framework.task.GTaskListener",
        "type_short": "GTaskListener",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "initialize",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "taskGroupCompleted",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "taskGroup",
          "type_long": "ghidra.framework.task.GTaskGroup",
          "type_short": "GTaskGroup",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "suspendedStateChanged",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "suspended",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
