{
  "name": "GTaskGroup",
  "comment": "Class for grouping several GTasks that all should be \n executed before any new group of tasks are\n executed, regardless of priority.",
  "javadoc": "Class for grouping several {@link GTask}s that all should be \n executed before any new group of tasks are\n executed, regardless of priority.\n@see GTaskManager",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "nextID",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "id",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "description",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "taskList",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cghidra.framework.task.GScheduledTask\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "startNewTransaction",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "cancelled",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "monitor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.task.GTaskMonitor",
      "type_short": "GTaskMonitor",
      "constant_value": null
    },
    {
      "name": "scheduled",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Creates a new named GTaskGroup.",
      "javadoc": "Creates a new named GTaskGroup.\n@param description the display name for the group.\n@param startNewTransaction if true, any existing transaction (if there is one) will be closed\n and a new transaction will be created.  Otherwise, the tasks in this group will be executed\n in the same transaction as the previous group. Note that this can only happen if there was\n a previous group executing at the time this group is scheduled.",
      "static": false,
      "params": [
        {
          "name": "description",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the display name for the group."
        },
        {
          "name": "startNewTransaction",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "if true, any existing transaction (if there is one) will be closed\n and a new transaction will be created.  Otherwise, the tasks in this group will be executed\n in the same transaction as the previous group. Note that this can only happen if there was\n a previous group executing at the time this group is scheduled."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addTask",
      "comment": "Add a task to this group with the given priority.  Tasks can only be added to this group\n before the group is added to the GTaskManager.  After that, an IllegalStateException will\n be thrown.",
      "javadoc": "Add a task to this group with the given priority.  Tasks can only be added to this group\n before the group is added to the GTaskManager.  After that, an IllegalStateException will\n be thrown.\n@param task the task being added to this group.\n@param priority the priority for the task within the group.\n@return the GScheduledTask created to schedule this task within the group.\n@throws IllegalStateException if this method is called after the group has been added to\n the GTaskManager.",
      "static": false,
      "params": [
        {
          "name": "task",
          "type_long": "ghidra.framework.task.GTask",
          "type_short": "GTask",
          "comment": "the task being added to this group."
        },
        {
          "name": "priority",
          "type_long": "int",
          "type_short": "int",
          "comment": "the priority for the task within the group."
        }
      ],
      "return": {
        "type_long": "ghidra.framework.task.GScheduledTask",
        "type_short": "GScheduledTask",
        "comment": "the GScheduledTask created to schedule this task within the group."
      },
      "throws": []
    },
    {
      "name": "doAddTask",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "task",
          "type_long": "ghidra.framework.task.GTask",
          "type_short": "GTask",
          "comment": ""
        },
        {
          "name": "priority",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.framework.task.GScheduledTask",
        "type_short": "GScheduledTask",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getTasks",
      "comment": "Returns a list scheduled tasks in the group.",
      "javadoc": "Returns a list scheduled tasks in the group.\n@return a list scheduled tasks in the group.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cghidra.framework.task.GScheduledTask\u003e",
        "type_short": "List",
        "comment": "a list scheduled tasks in the group."
      },
      "throws": []
    },
    {
      "name": "getTaskMonitor",
      "comment": "Returns the TaskMonitor that will be used to track the overall progress of tasks within this \n group.",
      "javadoc": "Returns the TaskMonitor that will be used to track the overall progress of tasks within this \n group.\n@return the TaskMonitor that will be used to track the overall progress of tasks within this \n group.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.framework.task.GTaskMonitor",
        "type_short": "GTaskMonitor",
        "comment": "the TaskMonitor that will be used to track the overall progress of tasks within this \n group."
      },
      "throws": []
    },
    {
      "name": "wantsNewTransaction",
      "comment": "Returns true if this group wants to start a new transaction when it runs.  Otherwise, the\n group will add-on to any existing transaction from the previous group.",
      "javadoc": "Returns true if this group wants to start a new transaction when it runs.  Otherwise, the\n group will add-on to any existing transaction from the previous group.\n@return true if a new transaction should be started for this group.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if a new transaction should be started for this group."
      },
      "throws": []
    },
    {
      "name": "getDescription",
      "comment": "Returns a description for the group.",
      "javadoc": "Returns a description for the group.\n@return a description for this group.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "a description for this group."
      },
      "throws": []
    },
    {
      "name": "compareTo",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "group",
          "type_long": "ghidra.framework.task.GTaskGroup",
          "type_short": "GTaskGroup",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setCancelled",
      "comment": "Cancels the group.  Any tasks that haven\u0027t yet started will never run.",
      "javadoc": "Cancels the group.  Any tasks that haven\u0027t yet started will never run.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "wasCancelled",
      "comment": "Returns true if this group was cancelled.",
      "javadoc": "Returns true if this group was cancelled.\n@return true if this group was cancelled.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if this group was cancelled."
      },
      "throws": []
    },
    {
      "name": "taskCompleted",
      "comment": "Notification that a task in the group has been completed.  The group keeps track of the overall\n progress of the tasks completed in this group.  This call is used to notify the group that\n another one of its tasks was completed.",
      "javadoc": "Notification that a task in the group has been completed.  The group keeps track of the overall\n progress of the tasks completed in this group.  This call is used to notify the group that\n another one of its tasks was completed.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setScheduled",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
