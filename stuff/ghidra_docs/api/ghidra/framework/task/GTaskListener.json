{
  "name": "GTaskListener",
  "comment": "Interface used to track the state of a GTaskManager",
  "javadoc": "Interface used to track the state of a GTaskManager",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "initialize",
      "comment": "Called when a task listener is added so that the listener can get all the initial state of\n the taskManger while the taskManager is in a locked state where nothing will change.",
      "javadoc": "Called when a task listener is added so that the listener can get all the initial state of\n the taskManger while the taskManager is in a locked state where nothing will change.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "taskStarted",
      "comment": "Notification that a task is starting to run",
      "javadoc": "Notification that a task is starting to run\n@param task the GTask that is starting to run",
      "static": false,
      "params": [
        {
          "name": "task",
          "type_long": "ghidra.framework.task.GScheduledTask",
          "type_short": "GScheduledTask",
          "comment": "the GTask that is starting to run"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "taskCompleted",
      "comment": "Notification that a task is no longer running regardless of whether it completed normally,\n was cancelled, or threw an unhandled exception.",
      "javadoc": "Notification that a task is no longer running regardless of whether it completed normally,\n was cancelled, or threw an unhandled exception.\n@param task the ScheduledTask that was running.\n@param result the result state for the task.",
      "static": false,
      "params": [
        {
          "name": "task",
          "type_long": "ghidra.framework.task.GScheduledTask",
          "type_short": "GScheduledTask",
          "comment": "the ScheduledTask that was running."
        },
        {
          "name": "result",
          "type_long": "ghidra.framework.task.GTaskResult",
          "type_short": "GTaskResult",
          "comment": "the result state for the task."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "taskGroupScheduled",
      "comment": "Notification that a GTaskGroup has been scheduled.",
      "javadoc": "Notification that a GTaskGroup has been scheduled.\n@param group the GTaskGroup that has been scheduled to run.",
      "static": false,
      "params": [
        {
          "name": "group",
          "type_long": "ghidra.framework.task.GTaskGroup",
          "type_short": "GTaskGroup",
          "comment": "the GTaskGroup that has been scheduled to run."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "taskScheduled",
      "comment": "Notification that a new GTask has been scheduled to run.",
      "javadoc": "Notification that a new GTask has been scheduled to run.\n@param scheduledTask the GScheduledTask that wraps the GTask with scheduling information.",
      "static": false,
      "params": [
        {
          "name": "scheduledTask",
          "type_long": "ghidra.framework.task.GScheduledTask",
          "type_short": "GScheduledTask",
          "comment": "the GScheduledTask that wraps the GTask with scheduling information."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "taskGroupStarted",
      "comment": "Notification that a new GTaskGroup has started to run.",
      "javadoc": "Notification that a new GTaskGroup has started to run.\n@param taskGroup the new GTaskGroup that is running.",
      "static": false,
      "params": [
        {
          "name": "taskGroup",
          "type_long": "ghidra.framework.task.GTaskGroup",
          "type_short": "GTaskGroup",
          "comment": "the new GTaskGroup that is running."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "taskGroupCompleted",
      "comment": "Notification that the GTaskGroup has completed running.",
      "javadoc": "Notification that the GTaskGroup has completed running.\n@param taskGroup the GTaskGroup that has completed running.",
      "static": false,
      "params": [
        {
          "name": "taskGroup",
          "type_long": "ghidra.framework.task.GTaskGroup",
          "type_short": "GTaskGroup",
          "comment": "the GTaskGroup that has completed running."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "suspendedStateChanged",
      "comment": "Notification that the GTaskManager has been suspended or resumed.",
      "javadoc": "Notification that the GTaskManager has been suspended or resumed.\n@param suspended true if the GTaskManger has been suspended, or false if it has been resumed.",
      "static": false,
      "params": [
        {
          "name": "suspended",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true if the GTaskManger has been suspended, or false if it has been resumed."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
