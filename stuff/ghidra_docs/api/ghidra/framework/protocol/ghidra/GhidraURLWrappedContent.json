{
  "name": "GhidraURLWrappedContent",
  "comment": "GhidraURLWrappedContent provides controlled access to a Ghidra folder/file\n associated with a Ghidra URL.  It is important to note the issuance of this object does\n not guarantee existence of the requested resource.  Any object obtained via the getContent\n method must be released via the release method.  The following rules should be followed\n when using domain folder and files obtained.\n \n The getContent method may only be invoked once per consumer\n The content must be released when no longer in-use, however it should not be released\n until any derivative domain folders and files are no longer in use as well.\n A read-only or immutable domain object may remain open while the associated domain \n file/folder is released.\n ",
  "javadoc": "\u003ccode\u003eGhidraURLWrappedContent\u003c/code\u003e provides controlled access to a Ghidra folder/file\n associated with a Ghidra URL.  It is important to note the issuance of this object does\n not guarantee existence of the requested resource.  Any object obtained via the getContent\n method must be released via the release method.  The following rules should be followed\n when using domain folder and files obtained.\n \u003col\u003e\n \u003cli\u003eThe getContent method may only be invoked once per consumer\u003c/li\u003e\n \u003cli\u003eThe content must be released when no longer in-use, however it should not be released\n until any derivative domain folders and files are no longer in use as well.\u003c/li\u003e\n \u003cli\u003eA read-only or immutable domain object may remain open while the associated domain \n file/folder is released.\u003c/li\u003e\n \u003c/ol\u003e",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "c",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.protocol.ghidra.GhidraURLConnection",
      "type_short": "GhidraURLConnection",
      "constant_value": null
    },
    {
      "name": "consumers",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cjava.lang.Object\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "projectData",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.model.ProjectData",
      "type_short": "ProjectData",
      "constant_value": null
    },
    {
      "name": "refObject",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.Object",
      "type_short": "Object",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "c",
          "type_long": "ghidra.framework.protocol.ghidra.GhidraURLConnection",
          "type_short": "GhidraURLConnection",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "containsConsumer",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "consumer",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addConsumer",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "consumer",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeConsumer",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "consumer",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "closeProjectData",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getExplicitFolder",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "folderPath",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.framework.model.DomainFolder",
        "type_short": "DomainFolder",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.InvalidNameException",
          "type_short": "InvalidNameException",
          "comment": ""
        },
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "resolve",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        },
        {
          "type_long": "ghidra.util.exception.NotFoundException",
          "type_short": "NotFoundException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getContent",
      "comment": "Get the domain folder or file associated with the Ghidra URL.\n The consumer is responsible for releasing the content object via the release method \n when it is no longer in use.",
      "javadoc": "Get the domain folder or file associated with the Ghidra URL.\n The consumer is responsible for releasing the content object via the release method \n when it is no longer in use.\n@param consumer object which is responsible for releasing the content\n@return domain file or folder\n@throws IOException\n@throws NotFoundException if the Ghidra URL does no correspond to a folder or file\n within the Ghidra repository/project.\n@see #release(Object, Object)",
      "static": false,
      "params": [
        {
          "name": "consumer",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": "object which is responsible for releasing the content"
        }
      ],
      "return": {
        "type_long": "java.lang.Object",
        "type_short": "Object",
        "comment": "domain file or folder"
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        },
        {
          "type_long": "ghidra.util.exception.NotFoundException",
          "type_short": "NotFoundException",
          "comment": "if the Ghidra URL does no correspond to a folder or file\n within the Ghidra repository/project."
        }
      ]
    },
    {
      "name": "release",
      "comment": "Indicates the content object previously obtained from this wrapper is\n no longer in-use and the underlying connection may be closed.  A read-only \n or immutable domain object may remain open and in-use after its associated\n domain folder/file has been released.",
      "javadoc": "Indicates the content object previously obtained from this wrapper is\n no longer in-use and the underlying connection may be closed.  A read-only \n or immutable domain object may remain open and in-use after its associated\n domain folder/file has been released.\n@param content\n@param consumer",
      "static": false,
      "params": [
        {
          "name": "content",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        },
        {
          "name": "consumer",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
