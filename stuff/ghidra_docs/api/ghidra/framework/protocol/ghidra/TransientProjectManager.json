{
  "name": "TransientProjectManager",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "repositoryMap",
      "comment": "Map of existing transient project data.  Weak value references\n are used to allow project data to be finalized and disposed\n automatically when all references are dropped.",
      "javadoc": "Map of existing transient project data.  Weak value references\n are used to allow project data to be finalized and disposed\n automatically when all references are dropped.",
      "static": false,
      "type_long": "java.util.Map\u003cghidra.framework.protocol.ghidra.RepositoryInfo,ghidra.framework.protocol.ghidra.TransientProjectData\u003e",
      "type_short": "Map",
      "constant_value": null
    },
    {
      "name": "transientProjectManager",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.framework.protocol.ghidra.TransientProjectManager",
      "type_short": "TransientProjectManager",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "getTransientProjectManager",
      "comment": "Get the TransientProjectManager singleton instance for the JVM",
      "javadoc": "Get the \u003ccode\u003eTransientProjectManager\u003c/code\u003e singleton instance for the JVM\n@return \u003ccode\u003eTransientProjectManager\u003c/code\u003e singleton instance",
      "static": true,
      "params": [],
      "return": {
        "type_long": "ghidra.framework.protocol.ghidra.TransientProjectManager",
        "type_short": "TransientProjectManager",
        "comment": "TransientProjectManager singleton instance"
      },
      "throws": []
    },
    {
      "name": "getActiveProjectCount",
      "comment": "Get the number of active transient project data instances",
      "javadoc": "Get the number of active transient project data instances\n@return number of active transient project data instances",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "number of active transient project data instances"
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "dispose",
      "comment": "Force disposal of all transient projects associated with remote Ghidra URL\n connections. WARNING: This method intended for testing only.",
      "javadoc": "Force disposal of all transient projects associated with remote Ghidra URL\n connections. WARNING: This method intended for testing only.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getTransientProject",
      "comment": "Get the transient project associated with a specific Ghidra protocol \n connector.  This method will establish a connection if needed.",
      "javadoc": "Get the transient project associated with a specific Ghidra protocol \n connector.  This method will establish a connection if needed.\n@param protocolConnector Ghidra protocol connector\n@param readOnly true if project data should be treated as read-only\n@return transient project data\n@throws IOException",
      "static": false,
      "params": [
        {
          "name": "protocolConnector",
          "type_long": "ghidra.framework.protocol.ghidra.GhidraProtocolConnector",
          "type_short": "GhidraProtocolConnector",
          "comment": "Ghidra protocol connector"
        },
        {
          "name": "readOnly",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true if project data should be treated as read-only"
        }
      ],
      "return": {
        "type_long": "ghidra.framework.protocol.ghidra.TransientProjectData",
        "type_short": "TransientProjectData",
        "comment": "transient project data"
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "cleanupProjectData",
      "comment": "Remove a transient project data from this manager\u0027s instance map",
      "javadoc": "Remove a transient project data from this manager\u0027s instance map\n@param repositoryInfo repository info for tracking transient project data\n@param projectData transient project data",
      "static": false,
      "params": [
        {
          "name": "repositoryInfo",
          "type_long": "ghidra.framework.protocol.ghidra.RepositoryInfo",
          "type_short": "RepositoryInfo",
          "comment": "repository info for tracking transient project data"
        },
        {
          "name": "projectData",
          "type_long": "ghidra.framework.protocol.ghidra.TransientProjectData",
          "type_short": "TransientProjectData",
          "comment": "transient project data"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createTransientProject",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "repository",
          "type_long": "ghidra.framework.client.RepositoryAdapter",
          "type_short": "RepositoryAdapter",
          "comment": ""
        },
        {
          "name": "repositoryInfo",
          "type_long": "ghidra.framework.protocol.ghidra.RepositoryInfo",
          "type_short": "RepositoryInfo",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.framework.protocol.ghidra.TransientProjectData",
        "type_short": "TransientProjectData",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    }
  ]
}
