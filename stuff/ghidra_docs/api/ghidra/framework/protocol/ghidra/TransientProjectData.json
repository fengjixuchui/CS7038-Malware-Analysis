{
  "name": "TransientProjectData",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "extends": "ghidra.framework.data.ProjectFileManager",
  "fields": [
    {
      "name": "dataMgr",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.protocol.ghidra.TransientProjectManager",
      "type_short": "TransientProjectManager",
      "constant_value": null
    },
    {
      "name": "repositoryInfo",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.protocol.ghidra.RepositoryInfo",
      "type_short": "RepositoryInfo",
      "constant_value": null
    },
    {
      "name": "instanceUseCount",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "readyForCleanup",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "timerInitiatedDisposal",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "disposed",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "cleanupTimer",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "generic.timer.GhidraSwinglessTimer",
      "type_short": "GhidraSwinglessTimer",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "dataMgr",
          "type_long": "ghidra.framework.protocol.ghidra.TransientProjectManager",
          "type_short": "TransientProjectManager",
          "comment": ""
        },
        {
          "name": "tmpProjectLocation",
          "type_long": "ghidra.framework.model.ProjectLocator",
          "type_short": "ProjectLocator",
          "comment": ""
        },
        {
          "name": "repositoryInfo",
          "type_long": "ghidra.framework.protocol.ghidra.RepositoryInfo",
          "type_short": "RepositoryInfo",
          "comment": ""
        },
        {
          "name": "repository",
          "type_long": "ghidra.framework.client.RepositoryAdapter",
          "type_short": "RepositoryAdapter",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "cleanup",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isValid",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "stopCleanupTimer",
      "comment": "",
      "javadoc": "@return true if timer was running and has been stopped",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if timer was running and has been stopped"
      },
      "throws": []
    },
    {
      "name": "startCleanupTimer",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "incrementInstanceUseCount",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "forcedDispose",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "dispose",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "finalize",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.lang.Throwable",
          "type_short": "Throwable",
          "comment": ""
        }
      ]
    }
  ]
}
