{
  "name": "GhidraProtocolHandler",
  "comment": "GhidraProtocolHandler provides the extension point for \n Ghidra protocol extensions.  A Ghidra protocol extension will be identified \n within by the optional extProtocolName appearing within a Ghidra URL:\n  In the absence of a protocol extension\n the DefaultGhidraProtocolHandler will be used.",
  "javadoc": "\u003ccode\u003eGhidraProtocolHandler\u003c/code\u003e provides the extension point for \n Ghidra protocol extensions.  A Ghidra protocol extension will be identified \n within by the optional \u003ci\u003eextProtocolName\u003c/i\u003e appearing within a Ghidra URL:\n {@literal ghidra:[\u003cextProtocolName\u003e:]/...} In the absence of a protocol extension\n the {@link DefaultGhidraProtocolHandler} will be used.",
  "static": false,
  "implements": [
    "ghidra.util.classfinder.ExtensionPoint"
  ],
  "extends": "java.lang.Object",
  "fields": [],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isExtensionSupported",
      "comment": "Determine if this protocol handler is responsible for handling the\n specified named protocol extension.  One handler may support multiple\n protocol extension names (e.g., http and https).",
      "javadoc": "Determine if this protocol handler is responsible for handling the\n specified named protocol extension.  One handler may support multiple\n protocol extension names (e.g., http and https).\n@param extProtocolName protocol extension name\n@return true if this handler supports the specified protocol extension name",
      "static": false,
      "params": [
        {
          "name": "extProtocolName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "protocol extension name"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if this handler supports the specified protocol extension name"
      },
      "throws": []
    },
    {
      "name": "getConnector",
      "comment": "Get the Ghidra protocol connector for a Ghidra URL which requires this\n extension.",
      "javadoc": "Get the Ghidra protocol connector for a Ghidra URL which requires this\n extension.\n@param ghidraUrl Ghidra protocol URL\n@return Ghidra protocol connector\n@throws MalformedURLException if URL is invalid",
      "static": false,
      "params": [
        {
          "name": "ghidraUrl",
          "type_long": "java.net.URL",
          "type_short": "URL",
          "comment": "Ghidra protocol URL"
        }
      ],
      "return": {
        "type_long": "ghidra.framework.protocol.ghidra.GhidraProtocolConnector",
        "type_short": "GhidraProtocolConnector",
        "comment": "Ghidra protocol connector"
      },
      "throws": [
        {
          "type_long": "java.net.MalformedURLException",
          "type_short": "MalformedURLException",
          "comment": "if URL is invalid"
        }
      ]
    }
  ]
}
