{
  "name": "DefaultGhidraProtocolConnector",
  "comment": "DefaultGhidraProtocolConnector provides support for the\n Ghidra URL protocol without extension for accessing the legacy Ghidra Server \n over an RMI interface.",
  "javadoc": "\u003ccode\u003eDefaultGhidraProtocolConnector\u003c/code\u003e provides support for the\n Ghidra URL protocol without extension for accessing the legacy Ghidra Server \n over an RMI interface.",
  "static": false,
  "implements": [],
  "extends": "ghidra.framework.protocol.ghidra.GhidraProtocolConnector",
  "fields": [
    {
      "name": "readOnly",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a protocol connector for use with a legacy Ghidra Server \n repository (RMI-based server)",
      "javadoc": "Construct a protocol connector for use with a legacy Ghidra Server \n repository (RMI-based server)\n@param ghidraURL Ghidra Server repository URL (ghidra://server/repo/...)\n@throws MalformedURLException if URL is invalid",
      "static": false,
      "params": [
        {
          "name": "ghidraURL",
          "type_long": "java.net.URL",
          "type_short": "URL",
          "comment": "Ghidra Server repository URL (ghidra://server/repo/...)"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.net.MalformedURLException",
          "type_short": "MalformedURLException",
          "comment": "if URL is invalid"
        }
      ]
    },
    {
      "name": "isReadOnly",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.framework.client.NotConnectedException",
          "type_short": "NotConnectedException",
          "comment": ""
        }
      ]
    },
    {
      "name": "connect",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "readOnlyAccess",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getRepositoryRootGhidraURL",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.net.URL",
        "type_short": "URL",
        "comment": ""
      },
      "throws": []
    }
  ]
}
