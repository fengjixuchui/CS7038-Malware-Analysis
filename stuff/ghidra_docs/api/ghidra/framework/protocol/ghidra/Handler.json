{
  "name": "Handler",
  "comment": "Handler provides a \"ghidra\" URL protocol handler which\n corresponds to the GhidraURLConnection implementation.",
  "javadoc": "\u003ccode\u003eHandler\u003c/code\u003e provides a \"ghidra\" URL protocol handler which\n corresponds to the \u003ccode\u003eGhidraURLConnection\u003c/code\u003e implementation.",
  "static": false,
  "implements": [],
  "extends": "java.net.URLStreamHandler",
  "fields": [
    {
      "name": "MY_PARENT_PACKAGE",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"ghidra.framework.protocol\""
    },
    {
      "name": "PROTOCOL_HANDLER_PKGS_PROPERTY",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"java.protocol.handler.pkgs\""
    },
    {
      "name": "protocolHandlers",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.util.Collection\u003cghidra.framework.protocol.ghidra.GhidraProtocolHandler\u003e",
      "type_short": "Collection",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "registerHandler",
      "comment": "Register the \"ghidra\" URL protocol Handler.\n Alternatively, the protocol handler can be explicitly used when instantiating \n a ghidra URL:\n \n   URL url \u003d new URL(null, \"ghidra://myGhidraServer/Test\", new ghidra.framework.protocol.ghidra.Handler());\n \n It is also important that a ClientAuthenticator also be registered.",
      "javadoc": "Register the \"ghidra\" URL protocol Handler.\n Alternatively, the protocol handler can be explicitly used when instantiating \n a ghidra URL:\n \u003cpre\u003e\n   URL url \u003d new URL(null, \"ghidra://myGhidraServer/Test\", new ghidra.framework.protocol.ghidra.Handler());\n \u003c/pre\u003e\n It is also important that a \u003ccode\u003eClientAuthenticator\u003c/code\u003e also be registered.\n@see ClientUtil#setClientAuthenticator(ghidra.framework.client.ClientAuthenticator)",
      "static": true,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isSupportedURL",
      "comment": "Determine if the specified url is supported and that any required \n protocol extensions are recognized.",
      "javadoc": "Determine if the specified url is supported and that any required \n protocol extensions are recognized.\n@param url\n@return true if support ghidra URL",
      "static": true,
      "params": [
        {
          "name": "url",
          "type_long": "java.net.URL",
          "type_short": "URL",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if support ghidra URL"
      },
      "throws": []
    },
    {
      "name": "getProtocolExtensionHandler",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "url",
          "type_long": "java.net.URL",
          "type_short": "URL",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.framework.protocol.ghidra.GhidraProtocolHandler",
        "type_short": "GhidraProtocolHandler",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.net.MalformedURLException",
          "type_short": "MalformedURLException",
          "comment": ""
        },
        {
          "type_long": "ghidra.util.exception.NotFoundException",
          "type_short": "NotFoundException",
          "comment": ""
        }
      ]
    },
    {
      "name": "openConnection",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "url",
          "type_long": "java.net.URL",
          "type_short": "URL",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.net.URLConnection",
        "type_short": "URLConnection",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "loadGhidraProtocolHandlers",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "findGhidraProtocolHandler",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "extensionName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.framework.protocol.ghidra.GhidraProtocolHandler",
        "type_short": "GhidraProtocolHandler",
        "comment": ""
      },
      "throws": []
    }
  ]
}
