{
  "name": "FVTableModel",
  "comment": "The model that backs the FVTable table. This model defines 4 columns: date,\n time, log level, and the message.",
  "javadoc": "The model that backs the {@link FVTable} table. This model defines 4 columns: date,\n time, log level, and the message.",
  "static": false,
  "implements": [],
  "extends": "javax.swing.table.AbstractTableModel",
  "fields": [
    {
      "name": "DATE_COL",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "0"
    },
    {
      "name": "TIME_COL",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "1"
    },
    {
      "name": "LEVEL_COL",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "2"
    },
    {
      "name": "MESSAGE_COL",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "3"
    },
    {
      "name": "dateRegex",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.util.regex.Pattern",
      "type_short": "Pattern",
      "constant_value": null
    },
    {
      "name": "spaceRegex",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"\\s+\""
    },
    {
      "name": "timeRegex",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.util.regex.Pattern",
      "type_short": "Pattern",
      "constant_value": null
    },
    {
      "name": "levelRegex",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.util.regex.Pattern",
      "type_short": "Pattern",
      "constant_value": null
    },
    {
      "name": "dates",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cjava.lang.String\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "times",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cjava.lang.String\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "levels",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cjava.lang.String\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "messages",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cjava.lang.String\u003e",
      "type_short": "List",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getRowCount",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getColumnCount",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getColumnName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "column",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getColumnClass",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "columnIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.Class\u003c?\u003e",
        "type_short": "Class",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getValueAt",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "rowIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "columnIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.Object",
        "type_short": "Object",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addRow",
      "comment": "Adds a row to the model.",
      "javadoc": "Adds a row to the model.\n@param row the data to add\n@param notify if true, a notification will be sent to subscribers",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the data to add"
        },
        {
          "name": "notify",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "if true, a notification will be sent to subscribers"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addRow",
      "comment": "Adds a row to the model",
      "javadoc": "Adds a row to the model\n@param row the data to add\n@param index the position within the model to add this to\n@param notify if true, a notification will be sent to subscribers",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the data to add"
        },
        {
          "name": "index",
          "type_long": "int",
          "type_short": "int",
          "comment": "the position within the model to add this to"
        },
        {
          "name": "notify",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "if true, a notification will be sent to subscribers"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addRowsToTop",
      "comment": "Adds a list of rows to the model and fires off a notification.",
      "javadoc": "Adds a list of rows to the model and fires off a notification.\n@param rows",
      "static": false,
      "params": [
        {
          "name": "rows",
          "type_long": "java.util.List\u003cjava.lang.String\u003e",
          "type_short": "List",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addRowsToBottom",
      "comment": "Adds a list of rows to the model and fires off a notification.",
      "javadoc": "Adds a list of rows to the model and fires off a notification.\n@param rows",
      "static": false,
      "params": [
        {
          "name": "rows",
          "type_long": "java.util.List\u003cjava.lang.String\u003e",
          "type_short": "List",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeRowsFromBottom",
      "comment": "Removes a set of rows from the bottom of the view.",
      "javadoc": "Removes a set of rows from the bottom of the view.\n@param count the number of rows to remove",
      "static": false,
      "params": [
        {
          "name": "count",
          "type_long": "int",
          "type_short": "int",
          "comment": "the number of rows to remove"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeRowsFromTop",
      "comment": "Removes a set of rows from the top of the view.",
      "javadoc": "Removes a set of rows from the top of the view.\n@param count the number of rows to remove",
      "static": false,
      "params": [
        {
          "name": "count",
          "type_long": "int",
          "type_short": "int",
          "comment": "the number of rows to remove"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "clear",
      "comment": "Clears all lines from the model and fires off a notification.",
      "javadoc": "Clears all lines from the model and fires off a notification.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDate",
      "comment": "Returns the date portion of the given string.",
      "javadoc": "Returns the date portion of the given string.\n@param row the row data\n@return the date, or empty string if not present",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the row data"
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the date, or empty string if not present"
      },
      "throws": []
    },
    {
      "name": "getLevel",
      "comment": "Returns the log level portion of the given string.",
      "javadoc": "Returns the log level portion of the given string.\n@param row the row data\n@return the log level, or empty string if not present",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the row data"
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the log level, or empty string if not present"
      },
      "throws": []
    },
    {
      "name": "getTime",
      "comment": "Returns the time portion of the given string.",
      "javadoc": "Returns the time portion of the given string.\n@param row the row data\n@return the time, or empty string if not present",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the row data"
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the time, or empty string if not present"
      },
      "throws": []
    }
  ]
}
