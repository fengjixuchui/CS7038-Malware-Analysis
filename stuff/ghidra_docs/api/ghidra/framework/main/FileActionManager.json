{
  "name": "FileActionManager",
  "comment": "Helper class to manage actions on the File menu.",
  "javadoc": "Helper class to manage actions on the File menu.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "NEW_ACCELERATOR",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "78"
    },
    {
      "name": "OPEN_ACCELERATOR",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "79"
    },
    {
      "name": "CLOSE_ACCELERATOR",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "87"
    },
    {
      "name": "SAVE_ACCELERATOR",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "83"
    },
    {
      "name": "NEW_PROJECT_ICON",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "javax.swing.Icon",
      "type_short": "Icon",
      "constant_value": null
    },
    {
      "name": "LAST_SELECTED_PROJECT_DIRECTORY",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"LastSelectedProjectDirectory\""
    },
    {
      "name": "DISPLAY_DATA",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"DISPLAY_DATA\""
    },
    {
      "name": "tool",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.main.FrontEndTool",
      "type_short": "FrontEndTool",
      "constant_value": null
    },
    {
      "name": "plugin",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.main.FrontEndPlugin",
      "type_short": "FrontEndPlugin",
      "constant_value": null
    },
    {
      "name": "newAction",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.action.DockingAction",
      "type_short": "DockingAction",
      "constant_value": null
    },
    {
      "name": "openAction",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.action.DockingAction",
      "type_short": "DockingAction",
      "constant_value": null
    },
    {
      "name": "closeProjectAction",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.action.DockingAction",
      "type_short": "DockingAction",
      "constant_value": null
    },
    {
      "name": "deleteAction",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.action.DockingAction",
      "type_short": "DockingAction",
      "constant_value": null
    },
    {
      "name": "saveAction",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.action.DockingAction",
      "type_short": "DockingAction",
      "constant_value": null
    },
    {
      "name": "reopenList",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cghidra.framework.main.ViewInfo\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "fileChooser",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.widgets.filechooser.GhidraFileChooser",
      "type_short": "GhidraFileChooser",
      "constant_value": null
    },
    {
      "name": "firingProjectOpened",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "plugin",
          "type_long": "ghidra.framework.main.FrontEndPlugin",
          "type_short": "FrontEndPlugin",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createActions",
      "comment": "creates all the menu items for the File menu",
      "javadoc": "creates all the menu items for the File menu",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "buildRecentProjectsMenu",
      "comment": "creates the recent projects menu",
      "javadoc": "creates the recent projects menu",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "newProject",
      "comment": "Create a new project using a wizard to get the project information.",
      "javadoc": "Create a new project using a wizard to get the project information.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "openProject",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "openProject",
      "comment": "Opens the given project in a task that will show a dialog to block input while opening\n the project in the swing thread.",
      "javadoc": "Opens the given project in a task that will show a dialog to block input while opening\n the project in the swing thread.\n@param projectLocator the project locator\n@return true if the project was opened",
      "static": false,
      "params": [
        {
          "name": "projectLocator",
          "type_long": "ghidra.framework.model.ProjectLocator",
          "type_short": "ProjectLocator",
          "comment": "the project locator"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the project was opened"
      },
      "throws": []
    },
    {
      "name": "doOpenProject",
      "comment": "Open an existing project, using a file chooser to specify where the\n existing project folder is stored.",
      "javadoc": "Open an existing project, using a file chooser to specify where the\n existing project folder is stored.\n@param projectLocator the project locator\n@return true if the project was opened",
      "static": false,
      "params": [
        {
          "name": "projectLocator",
          "type_long": "ghidra.framework.model.ProjectLocator",
          "type_short": "ProjectLocator",
          "comment": "the project locator"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the project was opened"
      },
      "throws": []
    },
    {
      "name": "lockDomainObjects",
      "comment": "Obtain domain objects from files and lock.  If unable to lock \n one or more of the files, none are locked and null is returned.",
      "javadoc": "Obtain domain objects from files and lock.  If unable to lock \n one or more of the files, none are locked and null is returned.\n@param files the files\n@return locked domain objects, or null if unable to lock\n all domain objects.",
      "static": false,
      "params": [
        {
          "name": "files",
          "type_long": "java.util.List\u003cghidra.framework.model.DomainFile\u003e",
          "type_short": "List",
          "comment": "the files"
        }
      ],
      "return": {
        "type_long": "ghidra.framework.model.DomainObject[]",
        "type_short": "ghidra.framework.model.DomainObject[]",
        "comment": "locked domain objects, or null if unable to lock\n all domain objects."
      },
      "throws": []
    },
    {
      "name": "closeProject",
      "comment": "menu listener for File | Close Project...\n \n This method will always save the FrontEndTool and project, but not the data unless \n confirmClose is called.",
      "javadoc": "menu listener for File | Close Project...\n \u003cp\u003e\n This method will always save the FrontEndTool and project, but not the data unless \n \u003ctt\u003econfirmClose\u003c/tt\u003e is called.\n@param isExiting true if we are closing the project because \n Ghidra is exiting\n@return false if user cancels the close operation",
      "static": false,
      "params": [
        {
          "name": "isExiting",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true if we are closing the project because \n Ghidra is exiting"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "false if user cancels the close operation"
      },
      "throws": []
    },
    {
      "name": "doSaveProject",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "project",
          "type_long": "ghidra.framework.model.Project",
          "type_short": "Project",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "openProjectAndNotify",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "project",
          "type_long": "ghidra.framework.model.Project",
          "type_short": "Project",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "doRestoreProject",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "project",
          "type_long": "ghidra.framework.model.Project",
          "type_short": "Project",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "saveChangedData",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "activeProject",
          "type_long": "ghidra.framework.model.Project",
          "type_short": "Project",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getChangedFiles",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "data",
          "type_long": "java.util.List\u003cghidra.framework.model.DomainFile\u003e",
          "type_short": "List",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.List\u003cghidra.framework.model.DomainFile\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setActiveProject",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "activeProject",
          "type_long": "ghidra.framework.model.Project",
          "type_short": "Project",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "saveProject",
      "comment": "menu listener for File | Save Project",
      "javadoc": "menu listener for File | Save Project",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "allowDelete",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "activeProject",
          "type_long": "ghidra.framework.model.Project",
          "type_short": "Project",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "deleteProject",
      "comment": "menu listener for File | Delete Project...",
      "javadoc": "menu listener for File | Delete Project...",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isOpenProjectView",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "projectLocator",
          "type_long": "ghidra.framework.model.ProjectLocator",
          "type_short": "ProjectLocator",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "enableActions",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "enabled",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "checkReadOnlyFiles",
      "comment": "Checks the list for read-only files; if any are found, pops up\n a dialog for whether to save now or lose changes.",
      "javadoc": "Checks the list for read-only files; if any are found, pops up\n a dialog for whether to save now or lose changes.\n@param objs list of files which correspond to modified \n domain objects.\n@return true if there are no read only files OR if the user\n wants to lose his changes; false if the user wants to save the\n files now, so don\u0027t continue.",
      "static": false,
      "params": [
        {
          "name": "objs",
          "type_long": "ghidra.framework.model.DomainObject[]",
          "type_short": "ghidra.framework.model.DomainObject[]",
          "comment": "list of files which correspond to modified \n domain objects."
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if there are no read only files OR if the user\n wants to lose his changes; false if the user wants to save the\n files now, so don\u0027t continue."
      },
      "throws": []
    },
    {
      "name": "fireProjectOpened",
      "comment": "Fire the project opened event",
      "javadoc": "Fire the project opened event\n@param project project being opened",
      "static": false,
      "params": [
        {
          "name": "project",
          "type_long": "ghidra.framework.model.Project",
          "type_short": "Project",
          "comment": "project being opened"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "fireProjectClosed",
      "comment": "Fire the project closed event.",
      "javadoc": "Fire the project closed event.\n@param project project being closed",
      "static": false,
      "params": [
        {
          "name": "project",
          "type_long": "ghidra.framework.model.Project",
          "type_short": "Project",
          "comment": "project being closed"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
