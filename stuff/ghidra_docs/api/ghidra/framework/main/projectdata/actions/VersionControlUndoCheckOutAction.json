{
  "name": "VersionControlUndoCheckOutAction",
  "comment": "Action to undo checkouts for domain files in the repository.",
  "javadoc": "Action to undo checkouts for domain files in the repository.",
  "static": false,
  "implements": [],
  "extends": "ghidra.framework.main.projectdata.actions.VersionControlAction",
  "fields": [],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Creates an action to undo checkouts for domain files in the repository.",
      "javadoc": "Creates an action to undo checkouts for domain files in the repository.\n@param plugin the plug-in that owns this action.",
      "static": false,
      "params": [
        {
          "name": "plugin",
          "type_long": "ghidra.framework.plugintool.Plugin",
          "type_short": "Plugin",
          "comment": "the plug-in that owns this action."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "actionPerformed",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "context",
          "type_long": "ghidra.framework.main.datatable.DomainFileContext",
          "type_short": "DomainFileContext",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isEnabledForContext",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "context",
          "type_long": "ghidra.framework.main.datatable.DomainFileContext",
          "type_short": "DomainFileContext",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "undoCheckOut",
      "comment": "Gets the domain files from the provider and then undoes the checkout on any that are \n checked out.",
      "javadoc": "Gets the domain files from the provider and then undoes the checkout on any that are \n checked out.",
      "static": false,
      "params": [
        {
          "name": "domainFiles",
          "type_long": "java.util.List\u003cghidra.framework.model.DomainFile\u003e",
          "type_short": "List",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "undoCheckOuts",
      "comment": "Displays the undo checkout confirmation dialog for each checked out file and then \n undoes the checkout while keeping a copy of the working version of the file if the \n user chooses to do so.\n All unmodified checkouts will be undone. Only modified checkouts the user chooses\n will be undone.",
      "javadoc": "Displays the undo checkout confirmation dialog for each checked out file and then \n undoes the checkout while keeping a copy of the working version of the file if the \n user chooses to do so.\u003cbr\u003e\n All unmodified checkouts will be undone. Only modified checkouts the user chooses\n will be undone.\n@param unmodifiedCheckOutsList the list of unmodified checked out files\n@param modifiedCheckOutsList the list of checked out files that have been modified",
      "static": false,
      "params": [
        {
          "name": "unmodifiedCheckOutsList",
          "type_long": "java.util.List\u003cghidra.framework.model.DomainFile\u003e",
          "type_short": "List",
          "comment": "the list of unmodified checked out files"
        },
        {
          "name": "modifiedCheckOutsList",
          "type_long": "java.util.List\u003cghidra.framework.model.DomainFile\u003e",
          "type_short": "List",
          "comment": "the list of checked out files that have been modified"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
