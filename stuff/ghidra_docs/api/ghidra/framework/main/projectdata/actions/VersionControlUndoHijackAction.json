{
  "name": "VersionControlUndoHijackAction",
  "comment": "Action to undo hijacked domain files in the project.",
  "javadoc": "Action to undo hijacked domain files in the project.",
  "static": false,
  "implements": [],
  "extends": "ghidra.framework.main.projectdata.actions.VersionControlAction",
  "fields": [],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Creates an action to undo hijacked domain files in the project.",
      "javadoc": "Creates an action to undo hijacked domain files in the project.\n@param plugin the plug-in that owns this action.",
      "static": false,
      "params": [
        {
          "name": "plugin",
          "type_long": "ghidra.framework.plugintool.Plugin",
          "type_short": "Plugin",
          "comment": "the plug-in that owns this action."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "actionPerformed",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "context",
          "type_long": "ghidra.framework.main.datatable.DomainFileContext",
          "type_short": "DomainFileContext",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isEnabledForContext",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "context",
          "type_long": "ghidra.framework.main.datatable.DomainFileContext",
          "type_short": "DomainFileContext",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "undoHijackedFiles",
      "comment": "Gets the domain files from the provider and then undoes the hijack on any that are hijacked.",
      "javadoc": "Gets the domain files from the provider and then undoes the hijack on any that are hijacked.",
      "static": false,
      "params": [
        {
          "name": "domainFiles",
          "type_long": "java.util.List\u003cghidra.framework.model.DomainFile\u003e",
          "type_short": "List",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "undoHijack",
      "comment": "Displays the undo hijack confirmation dialog for each hijacked file and then \n undoes the hijack while keeping a copy of the hijacked file if the user chooses to do so.",
      "javadoc": "Displays the undo hijack confirmation dialog for each hijacked file and then \n undoes the hijack while keeping a copy of the hijacked file if the user chooses to do so.\n@param hijackList the list of hijacked domain files.",
      "static": false,
      "params": [
        {
          "name": "hijackList",
          "type_long": "java.util.List\u003cghidra.framework.model.DomainFile\u003e",
          "type_short": "List",
          "comment": "the list of hijacked domain files."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getKeepName",
      "comment": "Determines a unique keep file name for saving a copy of the hijack file \n when its hijack is undone.",
      "javadoc": "Determines a unique keep file name for saving a copy of the hijack file \n when its hijack is undone.\n@param parent the domain folder where the hijacked file exists.\n@param name the name of the hijacked file.\n@return the unique keep file name.",
      "static": false,
      "params": [
        {
          "name": "parent",
          "type_long": "ghidra.framework.model.DomainFolder",
          "type_short": "DomainFolder",
          "comment": "the domain folder where the hijacked file exists."
        },
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of the hijacked file."
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the unique keep file name."
      },
      "throws": []
    }
  ]
}
