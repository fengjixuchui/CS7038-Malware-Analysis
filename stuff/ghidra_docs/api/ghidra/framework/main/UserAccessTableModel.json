{
  "name": "UserAccessTableModel",
  "comment": "Table model for managing a list of Ghidra users associated with a project, and\n their access permissions. The permissions (read-only, read/write, admin) are rendered\n as checkboxes that can be selected by users, provided they have admin access.",
  "javadoc": "Table model for managing a list of Ghidra users associated with a project, and\n their access permissions. The permissions (read-only, read/write, admin) are rendered\n as checkboxes that can be selected by users, provided they have admin access.",
  "static": false,
  "implements": [],
  "extends": "docking.widgets.table.GDynamicColumnTableModel",
  "fields": [
    {
      "name": "users",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cghidra.framework.remote.User\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "currentUser",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "USERS_COL",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "0"
    },
    {
      "name": "READ_ONLY_COL",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "1"
    },
    {
      "name": "READ_WRITE_COL",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "2"
    },
    {
      "name": "ADMIN_COL",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "3"
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new table model.",
      "javadoc": "Constructs a new table model.\n@param currentUser the name of the current user\n@param userList list of all users associated with the current project\n@param serviceProvider the service provider",
      "static": false,
      "params": [
        {
          "name": "currentUser",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of the current user"
        },
        {
          "name": "userList",
          "type_long": "java.util.List\u003cghidra.framework.remote.User\u003e",
          "type_short": "List",
          "comment": "list of all users associated with the current project"
        },
        {
          "name": "serviceProvider",
          "type_long": "ghidra.framework.plugintool.ServiceProvider",
          "type_short": "ServiceProvider",
          "comment": "the service provider"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setValueAt",
      "comment": "Invoked when the user has changed one of the access rights checkboxes. When this\n happens we have to update the associated User data.",
      "javadoc": "Invoked when the user has changed one of the access rights checkboxes. When this\n happens we have to update the associated User data.",
      "static": false,
      "params": [
        {
          "name": "aValue",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        },
        {
          "name": "rowIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "columnIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isCellEditable",
      "comment": "The permissions columns in the table should be editable as long as the user\n is an admin and is not trying to adjust his/her own permissions.",
      "javadoc": "The permissions columns in the table should be editable as long as the user\n is an admin and is not trying to adjust his/her own permissions.",
      "static": false,
      "params": [
        {
          "name": "rowIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "columnIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createTableColumnDescriptor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.widgets.table.TableColumnDescriptor\u003cghidra.framework.remote.User\u003e",
        "type_short": "TableColumnDescriptor",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDataSource",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cghidra.framework.remote.User\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setUserList",
      "comment": "Replaces the contents of this model with a given list of users.",
      "javadoc": "Replaces the contents of this model with a given list of users.\n@param users the user list",
      "static": false,
      "params": [
        {
          "name": "users",
          "type_long": "java.util.List\u003cghidra.framework.remote.User\u003e",
          "type_short": "List",
          "comment": "the user list"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeUsers",
      "comment": "Remove a list of users from the table.",
      "javadoc": "Remove a list of users from the table.\n@param list list of User objects",
      "static": false,
      "params": [
        {
          "name": "users",
          "type_long": "java.util.ArrayList\u003cghidra.framework.remote.User\u003e",
          "type_short": "ArrayList",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addUsers",
      "comment": "Add a list of users to the table.",
      "javadoc": "Add a list of users to the table.\n@param users list of User objects",
      "static": false,
      "params": [
        {
          "name": "users",
          "type_long": "java.util.ArrayList\u003cghidra.framework.remote.User\u003e",
          "type_short": "ArrayList",
          "comment": "list of User objects"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getCurrentUser",
      "comment": "Returns the User currently using the dialog.",
      "javadoc": "Returns the {@link User} currently using the dialog.\n@return the current user or null if not found",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.framework.remote.User",
        "type_short": "User",
        "comment": "the current user or null if not found"
      },
      "throws": []
    },
    {
      "name": "getModelData",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cghidra.framework.remote.User\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    }
  ]
}
