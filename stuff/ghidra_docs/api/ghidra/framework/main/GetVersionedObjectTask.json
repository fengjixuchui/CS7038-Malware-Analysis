{
  "name": "GetVersionedObjectTask",
  "comment": "A modal task that gets a domain object for a specific version.",
  "javadoc": "A modal task that gets a domain object for a specific version.",
  "static": false,
  "implements": [],
  "extends": "ghidra.util.task.Task",
  "fields": [
    {
      "name": "consumer",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.Object",
      "type_short": "Object",
      "constant_value": null
    },
    {
      "name": "domainFile",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.model.DomainFile",
      "type_short": "DomainFile",
      "constant_value": null
    },
    {
      "name": "versionNumber",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "versionedObj",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.model.DomainObject",
      "type_short": "DomainObject",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor; task will get a read only domain object",
      "javadoc": "Constructor; task will get a read only domain object\n@param consumer consumer of the domain object\n@param domainFile domain file\n@param versionNumber version",
      "static": false,
      "params": [
        {
          "name": "consumer",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": "consumer of the domain object"
        },
        {
          "name": "domainFile",
          "type_long": "ghidra.framework.model.DomainFile",
          "type_short": "DomainFile",
          "comment": "domain file"
        },
        {
          "name": "versionNumber",
          "type_long": "int",
          "type_short": "int",
          "comment": "version"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor",
      "javadoc": "Constructor\n@param consumer consumer of the domain object\n@param domainFile domain file\n@param versionNumber version\n@param readOnly true if the object should be read only versus\n immutable",
      "static": false,
      "params": [
        {
          "name": "consumer",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": "consumer of the domain object"
        },
        {
          "name": "domainFile",
          "type_long": "ghidra.framework.model.DomainFile",
          "type_short": "DomainFile",
          "comment": "domain file"
        },
        {
          "name": "versionNumber",
          "type_long": "int",
          "type_short": "int",
          "comment": "version"
        },
        {
          "name": "readOnly",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true if the object should be read only versus\n immutable"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "run",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getVersionedObject",
      "comment": "Return the versioned domain object.",
      "javadoc": "Return the versioned domain object.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.framework.model.DomainObject",
        "type_short": "DomainObject",
        "comment": ""
      },
      "throws": []
    }
  ]
}
