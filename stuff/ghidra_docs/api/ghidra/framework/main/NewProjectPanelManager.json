{
  "name": "NewProjectPanelManager",
  "comment": "Manage the panels for the \"New Project\" wizard. The wizard handles \n creating a local project and a \"shared\" project.\n If the project is shared, the panel order is \n (1) Server Info\n (2) Repository panel\n (3) Project access panel (if user has admin privileges AND user is \n      creating a new repository)\n (4) Specify Project Location panel.\n If the project is not shared, the only other panel to show is the\n Specify Project Location panel.",
  "javadoc": "Manage the panels for the \"New Project\" wizard. The wizard handles \n creating a local project and a \"shared\" project.\n If the project is shared, the panel order is \n (1) Server Info\n (2) Repository panel\n (3) Project access panel (if user has admin privileges AND user is \n      creating a new repository)\n (4) Specify Project Location panel.\n If the project is not shared, the only other panel to show is the\n Specify Project Location panel.",
  "static": false,
  "implements": [
    "docking.wizard.PanelManager"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "wizardMgr",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.wizard.WizardManager",
      "type_short": "WizardManager",
      "constant_value": null
    },
    {
      "name": "knownUsers",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String[]",
      "type_short": "java.lang.String[]",
      "constant_value": null
    },
    {
      "name": "projectTypePanel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.main.ProjectTypePanel",
      "type_short": "ProjectTypePanel",
      "constant_value": null
    },
    {
      "name": "selectProjectPanel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.main.SelectProjectPanel",
      "type_short": "SelectProjectPanel",
      "constant_value": null
    },
    {
      "name": "serverPanel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.main.ServerInfoPanel",
      "type_short": "ServerInfoPanel",
      "constant_value": null
    },
    {
      "name": "repositoryPanel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.main.RepositoryPanel",
      "type_short": "RepositoryPanel",
      "constant_value": null
    },
    {
      "name": "projectAccessPanel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.main.ProjectAccessPanel",
      "type_short": "ProjectAccessPanel",
      "constant_value": null
    },
    {
      "name": "currentWizardPanel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.wizard.WizardPanel",
      "type_short": "WizardPanel",
      "constant_value": null
    },
    {
      "name": "includeAnonymousAccessControl",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "projectMgr",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.model.ProjectManager",
      "type_short": "ProjectManager",
      "constant_value": null
    },
    {
      "name": "server",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.client.RepositoryServerAdapter",
      "type_short": "RepositoryServerAdapter",
      "constant_value": null
    },
    {
      "name": "repository",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.client.RepositoryAdapter",
      "type_short": "RepositoryAdapter",
      "constant_value": null
    },
    {
      "name": "serverInfo",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.model.ServerInfo",
      "type_short": "ServerInfo",
      "constant_value": null
    },
    {
      "name": "newProjectLocator",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.model.ProjectLocator",
      "type_short": "ProjectLocator",
      "constant_value": null
    },
    {
      "name": "statusMessage",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "tool",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.plugintool.PluginTool",
      "type_short": "PluginTool",
      "constant_value": null
    },
    {
      "name": "EMPTY_BORDER",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "javax.swing.border.Border",
      "type_short": "Border",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "tool",
          "type_long": "ghidra.framework.main.FrontEndTool",
          "type_short": "FrontEndTool",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "canFinish",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hasNextPanel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hasPreviousPanel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getInitialPanel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.wizard.WizardPanel",
        "type_short": "WizardPanel",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getNextPanel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.wizard.WizardPanel",
        "type_short": "WizardPanel",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "checkNewRepositoryAccessPanel",
      "comment": "Build repository access panel for new repository only.",
      "javadoc": "Build repository access panel for new repository only.\n@throws IOException",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPreviousPanel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.wizard.WizardPanel",
        "type_short": "WizardPanel",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getStatusMessage",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "finish",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "cancel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "initialize",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPanelSize",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Dimension",
        "type_short": "Dimension",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setWizardManager",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "wm",
          "type_long": "docking.wizard.WizardManager",
          "type_short": "WizardManager",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getWizardManager",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.wizard.WizardManager",
        "type_short": "WizardManager",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getNewProjectLocation",
      "comment": "Get the project that was created.",
      "javadoc": "Get the project that was created.\n@return null if no project was created",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.framework.model.ProjectLocator",
        "type_short": "ProjectLocator",
        "comment": "null if no project was created"
      },
      "throws": []
    },
    {
      "name": "getProjectRepository",
      "comment": "Get the repository adapter associated with the new project.\n After displaying this panel, this method should be invoked to obtain the \n repository which will be opended for shared projects.  If the repository is\n not used to create a new project, its disconnect method should be invoked.",
      "javadoc": "Get the repository adapter associated with the new project.\n After displaying this panel, this method should be invoked to obtain the \n repository which will be opended for shared projects.  If the repository is\n not used to create a new project, its disconnect method should be invoked.\n@return null if project is not shared",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.framework.client.RepositoryAdapter",
        "type_short": "RepositoryAdapter",
        "comment": "null if project is not shared"
      },
      "throws": []
    },
    {
      "name": "getProjectRepositoryName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isSharedProject",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isServerInfoValid",
      "comment": "Return true if a connection could be established using the given\n server name and port number.",
      "javadoc": "Return true if a connection could be established using the given\n server name and port number.",
      "static": false,
      "params": [
        {
          "name": "serverName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "portNumber",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getMyPanelSize",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.awt.Dimension",
        "type_short": "Dimension",
        "comment": ""
      },
      "throws": []
    }
  ]
}
