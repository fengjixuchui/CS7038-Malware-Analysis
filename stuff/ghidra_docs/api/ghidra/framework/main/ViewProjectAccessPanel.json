{
  "name": "ViewProjectAccessPanel",
  "comment": "Extension of the ProjectAccessPanel that only shows the user access list.",
  "javadoc": "Extension of the {@link ProjectAccessPanel} that only shows the user access list.",
  "static": false,
  "implements": [],
  "extends": "ghidra.framework.main.ProjectAccessPanel",
  "fields": [],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a new panel.",
      "javadoc": "Construct a new panel.\n@param repository handle to the repository adapter\n@param tool the plugin tool\n@throws IOException if there\u0027s an error processing repository information",
      "static": false,
      "params": [
        {
          "name": "repository",
          "type_long": "ghidra.framework.client.RepositoryAdapter",
          "type_short": "RepositoryAdapter",
          "comment": "handle to the repository adapter"
        },
        {
          "name": "tool",
          "type_long": "ghidra.framework.plugintool.PluginTool",
          "type_short": "PluginTool",
          "comment": "the plugin tool"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if there\u0027s an error processing repository information"
        }
      ]
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new panel.",
      "javadoc": "Constructs a new panel.\n@param knownUsers names of the users that are known to the remote server\n@param currentUser the current user\n@param allUsers all users known to the repository\n@param repositoryName the name of the repository\n@param anonymousServerAccessAllowed true if the server allows anonymous access\n@param anonymousAccessEnabled true if the repository allows anonymous access \n (ignored if anonymousServerAccessAllowed is false)\n@param tool the current tool",
      "static": false,
      "params": [
        {
          "name": "knownUsers",
          "type_long": "java.lang.String[]",
          "type_short": "java.lang.String[]",
          "comment": "names of the users that are known to the remote server"
        },
        {
          "name": "currentUser",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the current user"
        },
        {
          "name": "allUsers",
          "type_long": "java.util.List\u003cghidra.framework.remote.User\u003e",
          "type_short": "List",
          "comment": "all users known to the repository"
        },
        {
          "name": "repositoryName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of the repository"
        },
        {
          "name": "anonymousServerAccessAllowed",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true if the server allows anonymous access"
        },
        {
          "name": "anonymousAccessEnabled",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true if the repository allows anonymous access \n (ignored if anonymousServerAccessAllowed is false)"
        },
        {
          "name": "tool",
          "type_long": "ghidra.framework.plugintool.PluginTool",
          "type_short": "PluginTool",
          "comment": "the current tool"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createMainPanel",
      "comment": "Creates the main gui panel, containing the known users, button, and user access \n panels.",
      "javadoc": "Creates the main gui panel, containing the known users, button, and user access \n panels.",
      "static": false,
      "params": [
        {
          "name": "knownUsers",
          "type_long": "java.lang.String[]",
          "type_short": "java.lang.String[]",
          "comment": ""
        },
        {
          "name": "anonymousServerAccessAllowed",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
