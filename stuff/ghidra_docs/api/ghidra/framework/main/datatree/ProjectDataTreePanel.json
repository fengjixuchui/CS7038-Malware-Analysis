{
  "name": "ProjectDataTreePanel",
  "comment": "Panel that contains a DataTree for showing project data.\n Controls whether the data tree supports drag and drop operations.",
  "javadoc": "Panel that contains a DataTree for showing project data.\n Controls whether the data tree supports drag and drop operations.",
  "static": false,
  "implements": [],
  "extends": "javax.swing.JPanel",
  "fields": [
    {
      "name": "EXPANDED_PATHS_SEPARATOR",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\":\""
    },
    {
      "name": "MAX_PROJECT_SIZE_TO_SEARCH",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "1000"
    },
    {
      "name": "tree",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.main.datatree.DataTree",
      "type_short": "DataTree",
      "constant_value": null
    },
    {
      "name": "projectData",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.model.ProjectData",
      "type_short": "ProjectData",
      "constant_value": null
    },
    {
      "name": "root",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.widgets.tree.GTreeNode",
      "type_short": "GTreeNode",
      "constant_value": null
    },
    {
      "name": "filter",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.model.DomainFileFilter",
      "type_short": "DomainFileFilter",
      "constant_value": null
    },
    {
      "name": "changeMgr",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.main.datatree.ChangeManager",
      "type_short": "ChangeManager",
      "constant_value": null
    },
    {
      "name": "isActiveProject",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "tool",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.main.FrontEndTool",
      "type_short": "FrontEndTool",
      "constant_value": null
    },
    {
      "name": "plugin",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.main.FrontEndPlugin",
      "type_short": "FrontEndPlugin",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct an empty panel that is going to be used as the active panel",
      "javadoc": "Construct an empty panel that is going to be used as the active panel\n@param plugin front end plugin",
      "static": false,
      "params": [
        {
          "name": "plugin",
          "type_long": "ghidra.framework.main.FrontEndPlugin",
          "type_short": "FrontEndPlugin",
          "comment": "front end plugin"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor",
      "javadoc": "Constructor\n@param projectName name of project\n@param isActiveProject true if the project is active, and the\n data tree may be modified\n@param plugin front end plugin; will be null if the panel is used in a dialog\n@param filter optional filter that is used to hide programs from view",
      "static": false,
      "params": [
        {
          "name": "projectName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "name of project"
        },
        {
          "name": "isActiveProject",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true if the project is active, and the\n data tree may be modified"
        },
        {
          "name": "plugin",
          "type_long": "ghidra.framework.main.FrontEndPlugin",
          "type_short": "FrontEndPlugin",
          "comment": "front end plugin; will be null if the panel is used in a dialog"
        },
        {
          "name": "filter",
          "type_long": "ghidra.framework.model.DomainFileFilter",
          "type_short": "DomainFileFilter",
          "comment": "optional filter that is used to hide programs from view"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getTreeSelectionModel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "javax.swing.tree.TreeSelectionModel",
        "type_short": "TreeSelectionModel",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setProjectData",
      "comment": "Set the project data for this data tree and populate it with\n nodes for the users in the project.",
      "javadoc": "Set the project data for this data tree and populate it with\n nodes for the users in the project.\n@param projectName name of project\n@param projectData data that has the root folder for the project",
      "static": false,
      "params": [
        {
          "name": "projectName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "name of project"
        },
        {
          "name": "projectData",
          "type_long": "ghidra.framework.model.ProjectData",
          "type_short": "ProjectData",
          "comment": "data that has the root folder for the project"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "updateProjectName",
      "comment": "Update the project name",
      "javadoc": "Update the project name\n@param newName the new name",
      "static": false,
      "params": [
        {
          "name": "newName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the new name"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "closeRootFolder",
      "comment": "Close the root folder for this data tree.",
      "javadoc": "Close the root folder for this data tree.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "selectRootDataFolder",
      "comment": "Select the root data folder (not root node in the tree which\n shows the project name).",
      "javadoc": "Select the root data folder (not root node in the tree which\n shows the project name).",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "selectDomainFolder",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "domainFolder",
          "type_long": "ghidra.framework.model.DomainFolder",
          "type_short": "DomainFolder",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "selectDomainFiles",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "files",
          "type_long": "java.util.Set\u003cghidra.framework.model.DomainFile\u003e",
          "type_short": "Set",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "doSelectDomainFiles",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "files",
          "type_long": "java.util.Set\u003cghidra.framework.model.DomainFile\u003e",
          "type_short": "Set",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getNodesForFiles",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "files",
          "type_long": "java.util.Set\u003cghidra.framework.model.DomainFile\u003e",
          "type_short": "Set",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.List\u003cdocking.widgets.tree.GTreeNode\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "selectDomainFile",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "domainFile",
          "type_long": "ghidra.framework.model.DomainFile",
          "type_short": "DomainFile",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setHelpLocation",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "helpLocation",
          "type_long": "ghidra.util.HelpLocation",
          "type_short": "HelpLocation",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setDomainFileFilter",
      "comment": "Set the filter on this data tree.",
      "javadoc": "Set the filter on this data tree.\n@param filter determines what should be included in the data tree",
      "static": false,
      "params": [
        {
          "name": "filter",
          "type_long": "ghidra.framework.model.DomainFileFilter",
          "type_short": "DomainFileFilter",
          "comment": "determines what should be included in the data tree"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSelectedItemCount",
      "comment": "Get the number of selected items in the tree.  These could be either files or folders.",
      "javadoc": "Get the number of selected items in the tree.  These could be either files or folders.\n@return the number of selected items in the tree.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the number of selected items in the tree."
      },
      "throws": []
    },
    {
      "name": "getSelectedDomainFolder",
      "comment": "Get the last selected domain folder.",
      "javadoc": "Get the last selected domain folder.\n@return null if no domain folder is selected.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.framework.model.DomainFolder",
        "type_short": "DomainFolder",
        "comment": "null if no domain folder is selected."
      },
      "throws": []
    },
    {
      "name": "getSelectedDomainFile",
      "comment": "Get the last selected domain file.",
      "javadoc": "Get the last selected domain file.\n@return null if no domain file is selected.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.framework.model.DomainFile",
        "type_short": "DomainFile",
        "comment": "null if no domain file is selected."
      },
      "throws": []
    },
    {
      "name": "addTreeSelectionListener",
      "comment": "Add the tree selection listener to the data tree. When the\n listener is notified of the selection change, it should\n call getSelectedDomainFolder() and\n getSelectedDomainFile() to get the last selected\n object.",
      "javadoc": "Add the tree selection listener to the data tree. When the\n listener is notified of the selection change, it should\n call \u003ccode\u003egetSelectedDomainFolder()\u003c/code\u003e and\n \u003ccode\u003egetSelectedDomainFile()\u003c/code\u003e to get the last selected\n object.\n@param l listener to add",
      "static": false,
      "params": [
        {
          "name": "l",
          "type_long": "docking.widgets.tree.support.GTreeSelectionListener",
          "type_short": "GTreeSelectionListener",
          "comment": "listener to add"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeTreeSelectionListener",
      "comment": "Remove the tree selection listener from the data tree.",
      "javadoc": "Remove the tree selection listener from the data tree.\n@param l listener to remove",
      "static": false,
      "params": [
        {
          "name": "l",
          "type_long": "docking.widgets.tree.support.GTreeSelectionListener",
          "type_short": "GTreeSelectionListener",
          "comment": "listener to remove"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addTreeMouseListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "l",
          "type_long": "java.awt.event.MouseListener",
          "type_short": "MouseListener",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeTreeMouseListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "l",
          "type_long": "java.awt.event.MouseListener",
          "type_short": "MouseListener",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setPreferredTreePanelSize",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "d",
          "type_long": "java.awt.Dimension",
          "type_short": "Dimension",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getProjectData",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.framework.model.ProjectData",
        "type_short": "ProjectData",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "projectRenamed",
      "comment": "Notification that the project was renamed; update the root node name\n and reload the node",
      "javadoc": "Notification that the project was renamed; update the root node name\n and reload the node\n@param newName the new project name",
      "static": false,
      "params": [
        {
          "name": "newName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the new project name"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "dispose",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getActionContext",
      "comment": "Get the data tree node that is selected",
      "javadoc": "Get the data tree node that is selected\n@param provider the provider with which to construct the new context\n@param e mouse event for the popup; may be null if this is being called as a result of \n        the key binding pressed\n@return the new context; null if there is no selection",
      "static": false,
      "params": [
        {
          "name": "provider",
          "type_long": "docking.ComponentProvider",
          "type_short": "ComponentProvider",
          "comment": "the provider with which to construct the new context"
        },
        {
          "name": "e",
          "type_long": "java.awt.event.MouseEvent",
          "type_short": "MouseEvent",
          "comment": "mouse event for the popup; may be null if this is being called as a result of \n        the key binding pressed"
        }
      ],
      "return": {
        "type_long": "docking.ActionContext",
        "type_short": "ActionContext",
        "comment": "the new context; null if there is no selection"
      },
      "throws": []
    },
    {
      "name": "getDataTree",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.framework.main.datatree.DataTree",
        "type_short": "DataTree",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setTreeFilterEnabled",
      "comment": "Adds or removes the filter from the tree.",
      "javadoc": "Adds or removes the filter from the tree.\n@param enabled Tree adds the filter; false removes it",
      "static": false,
      "params": [
        {
          "name": "enabled",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "Tree adds the filter; false removes it"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getExpandedPathsByNodeName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String[]",
        "type_short": "java.lang.String[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setExpandedPathsByNodeName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "stringPaths",
          "type_long": "java.lang.String[]",
          "type_short": "java.lang.String[]",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFolderTreePathForStringPath",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "pathParts",
          "type_long": "java.lang.String[]",
          "type_short": "java.lang.String[]",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "javax.swing.tree.TreePath",
        "type_short": "TreePath",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "findFolderNodeChild",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "node",
          "type_long": "docking.widgets.tree.GTreeNode",
          "type_short": "GTreeNode",
          "comment": ""
        },
        {
          "name": "text",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.widgets.tree.GTreeNode",
        "type_short": "GTreeNode",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "create",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "projectName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "domainChange",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createRootNode",
      "comment": "Create the root node for this data tree.",
      "javadoc": "Create the root node for this data tree.",
      "static": false,
      "params": [
        {
          "name": "projectName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.widgets.tree.GTreeNode",
        "type_short": "GTreeNode",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "checkOpen",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "e",
          "type_long": "java.awt.event.MouseEvent",
          "type_short": "MouseEvent",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "findAndSelect",
      "comment": "Find a node that has the given name and select it.",
      "javadoc": "Find a node that has the given name and select it.\n@param s node name",
      "static": false,
      "params": [
        {
          "name": "s",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "node name"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
