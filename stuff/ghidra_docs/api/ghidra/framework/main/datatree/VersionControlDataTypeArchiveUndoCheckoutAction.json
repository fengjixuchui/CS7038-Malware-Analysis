{
  "name": "VersionControlDataTypeArchiveUndoCheckoutAction",
  "comment": "Action to undo checkouts for domain files in the repository.",
  "javadoc": "Action to undo checkouts for domain files in the repository.",
  "static": false,
  "implements": [],
  "extends": "ghidra.framework.main.projectdata.actions.VersionControlAction",
  "fields": [
    {
      "name": "dtmPlugin",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.plugin.core.datamgr.DataTypeManagerPlugin",
      "type_short": "DataTypeManagerPlugin",
      "constant_value": null
    },
    {
      "name": "archiveProvider",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.main.datatree.ArchiveProvider",
      "type_short": "ArchiveProvider",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Creates an action to undo checkouts for domain files in the repository.",
      "javadoc": "Creates an action to undo checkouts for domain files in the repository.\n@param plugin the plug-in that owns this action.\n@param provider provides a list of domain files to be affected by this action.",
      "static": false,
      "params": [
        {
          "name": "plugin",
          "type_long": "ghidra.app.plugin.core.datamgr.DataTypeManagerPlugin",
          "type_short": "DataTypeManagerPlugin",
          "comment": "the plug-in that owns this action."
        },
        {
          "name": "provider",
          "type_long": "ghidra.framework.main.datatree.ArchiveProvider",
          "type_short": "ArchiveProvider",
          "comment": "provides a list of domain files to be affected by this action."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "actionPerformed",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "context",
          "type_long": "ghidra.framework.main.datatable.DomainFileContext",
          "type_short": "DomainFileContext",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isEnabledForContext",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "context",
          "type_long": "ghidra.framework.main.datatable.DomainFileContext",
          "type_short": "DomainFileContext",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "undoCheckOut",
      "comment": "Gets the domain files from the provider and then undoes the checkout on any that are \n checked out.",
      "javadoc": "Gets the domain files from the provider and then undoes the checkout on any that are \n checked out.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "closeEditorsForUndoCheckOut",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "undoCheckOuts",
      "comment": "Displays the undo checkout confirmation dialog for each checked out file and then \n undoes the checkout while keeping a copy of the working version of the file if the \n user chooses to do so.\n All unmodified checkouts will be undone. Only modified checkouts the user chooses\n will be undone.",
      "javadoc": "Displays the undo checkout confirmation dialog for each checked out file and then \n undoes the checkout while keeping a copy of the working version of the file if the \n user chooses to do so.\u003cbr\u003e\n All unmodified checkouts will be undone. Only modified checkouts the user chooses\n will be undone.\n@param unmodifiedArchivesList the list of unmodified archives\n@param modifiedArchivesList the list of archives that have been modified\n@throws CancelledException if canclled",
      "static": false,
      "params": [
        {
          "name": "unmodifiedArchivesList",
          "type_long": "java.util.List\u003cghidra.app.plugin.core.datamgr.archive.DomainFileArchive\u003e",
          "type_short": "List",
          "comment": "the list of unmodified archives"
        },
        {
          "name": "modifiedArchivesList",
          "type_long": "java.util.List\u003cghidra.app.plugin.core.datamgr.archive.DomainFileArchive\u003e",
          "type_short": "List",
          "comment": "the list of archives that have been modified"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": "if canclled"
        }
      ]
    },
    {
      "name": "getMatchingArchives",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "archivesList",
          "type_long": "java.util.List\u003cghidra.app.plugin.core.datamgr.archive.DomainFileArchive\u003e",
          "type_short": "List",
          "comment": ""
        },
        {
          "name": "selectedFiles",
          "type_long": "ghidra.framework.model.DomainFile[]",
          "type_short": "ghidra.framework.model.DomainFile[]",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.List\u003cghidra.app.plugin.core.datamgr.archive.DomainFileArchive\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getArchiveForDomainFile",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "archivesList",
          "type_long": "java.util.List\u003cghidra.app.plugin.core.datamgr.archive.DomainFileArchive\u003e",
          "type_short": "List",
          "comment": ""
        },
        {
          "name": "domainFile",
          "type_long": "ghidra.framework.model.DomainFile",
          "type_short": "DomainFile",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.app.plugin.core.datamgr.archive.DomainFileArchive",
        "type_short": "DomainFileArchive",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDomainFileList",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "modifiedArchivesList",
          "type_long": "java.util.List\u003cghidra.app.plugin.core.datamgr.archive.DomainFileArchive\u003e",
          "type_short": "List",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.List\u003cghidra.framework.model.DomainFile\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "saveCheckOutChanges",
      "comment": "Saves all checked out changes.",
      "javadoc": "Saves all checked out changes.\n@param changedList the list of changes\n@throws CancelledException if cancelled",
      "static": false,
      "params": [
        {
          "name": "changedList",
          "type_long": "java.util.List\u003cghidra.framework.model.DomainFile\u003e",
          "type_short": "List",
          "comment": "the list of changes"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": "if cancelled"
        }
      ]
    }
  ]
}
