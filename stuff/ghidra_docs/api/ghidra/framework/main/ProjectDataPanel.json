{
  "name": "ProjectDataPanel",
  "comment": "Manages the data tree for the active project, and the trees for the\n project views.",
  "javadoc": "Manages the data tree for the active project, and the trees for the\n project views.",
  "static": false,
  "implements": [],
  "extends": "javax.swing.JSplitPane",
  "fields": [
    {
      "name": "BORDER_PREFIX",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Active Project: \""
    },
    {
      "name": "READ_ONLY_BORDER",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"READ-ONLY Project Data\""
    },
    {
      "name": "TYPICAL_NUM_VIEWS",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "2"
    },
    {
      "name": "DIVIDER_SIZE",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "2"
    },
    {
      "name": "DIVIDER_LOCATION",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "double",
      "type_short": "double",
      "constant_value": "0.5"
    },
    {
      "name": "EXPANDED_PATHS",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"EXPANDED_PATHS\""
    },
    {
      "name": "frontEndPlugin",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.main.FrontEndPlugin",
      "type_short": "FrontEndPlugin",
      "constant_value": null
    },
    {
      "name": "projectTab",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.JTabbedPane",
      "type_short": "JTabbedPane",
      "constant_value": null
    },
    {
      "name": "readOnlyTab",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.JTabbedPane",
      "type_short": "JTabbedPane",
      "constant_value": null
    },
    {
      "name": "readOnlyViews",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.Map\u003cghidra.framework.model.ProjectLocator,ghidra.framework.main.datatree.ProjectDataTreePanel\u003e",
      "type_short": "Map",
      "constant_value": null
    },
    {
      "name": "tool",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.main.FrontEndTool",
      "type_short": "FrontEndTool",
      "constant_value": null
    },
    {
      "name": "treePanel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.main.datatree.ProjectDataTreePanel",
      "type_short": "ProjectDataTreePanel",
      "constant_value": null
    },
    {
      "name": "tablePanel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.main.datatable.ProjectDataTablePanel",
      "type_short": "ProjectDataTablePanel",
      "constant_value": null
    },
    {
      "name": "bugFixPanel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.JPanel",
      "type_short": "JPanel",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "plugin",
          "type_long": "ghidra.framework.main.FrontEndPlugin",
          "type_short": "FrontEndPlugin",
          "comment": ""
        },
        {
          "name": "activePanel",
          "type_long": "ghidra.framework.main.datatree.ProjectDataTreePanel",
          "type_short": "ProjectDataTreePanel",
          "comment": ""
        },
        {
          "name": "tablePanel",
          "type_long": "ghidra.framework.main.datatable.ProjectDataTablePanel",
          "type_short": "ProjectDataTablePanel",
          "comment": ""
        },
        {
          "name": "projectName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setHelpOnReadOnlyTab",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "populateReadOnlyViews",
      "comment": "Populates the project views data tree panel(s) whenever a project is\n made active.\n If no project views are open, the tabbed pane is not visible.",
      "javadoc": "Populates the project views data tree panel(s) whenever a project is\n made active.\n If no project views are open, the tabbed pane is not visible.",
      "static": false,
      "params": [
        {
          "name": "project",
          "type_long": "ghidra.framework.model.Project",
          "type_short": "Project",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "clearReadOnlyViews",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setViewsVisible",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "visible",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "openView",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "projectView",
          "type_long": "java.net.URL",
          "type_short": "URL",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getProjectViews",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.framework.model.ProjectLocator[]",
        "type_short": "ghidra.framework.model.ProjectLocator[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getProjectData",
      "comment": "Get the project data for the given project view",
      "javadoc": "Get the project data for the given project view\n@param projectView the locator for the project to retrieve\n@return null if project view was not found",
      "static": false,
      "params": [
        {
          "name": "projectView",
          "type_long": "ghidra.framework.model.ProjectLocator",
          "type_short": "ProjectLocator",
          "comment": "the locator for the project to retrieve"
        }
      ],
      "return": {
        "type_long": "ghidra.framework.model.ProjectData",
        "type_short": "ProjectData",
        "comment": "null if project view was not found"
      },
      "throws": []
    },
    {
      "name": "closeView",
      "comment": "remove (close) the specified project view",
      "javadoc": "remove (close) the specified project view\n@param projectView the url for the view to close",
      "static": false,
      "params": [
        {
          "name": "projectView",
          "type_long": "java.net.URL",
          "type_short": "URL",
          "comment": "the url for the view to close"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getViewPanel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "projectView",
          "type_long": "java.net.URL",
          "type_short": "URL",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.framework.main.datatree.ProjectDataTreePanel",
        "type_short": "ProjectDataTreePanel",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeViewPanel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "projectView",
          "type_long": "java.net.URL",
          "type_short": "URL",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getCurrentView",
      "comment": "returns the ProjectURL for the current active view; null if no views open",
      "javadoc": "returns the ProjectURL for the current active view; null if no views open\n@return the ProjectURL for the current active view; null if no views open",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.net.URL",
        "type_short": "URL",
        "comment": "the ProjectURL for the current active view; null if no views open"
      },
      "throws": []
    },
    {
      "name": "getProjectURL",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "panel",
          "type_long": "ghidra.framework.main.datatree.ProjectDataTreePanel",
          "type_short": "ProjectDataTreePanel",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.net.URL",
        "type_short": "URL",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "viewRemoved",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "view",
          "type_long": "java.awt.Component",
          "type_short": "Component",
          "comment": ""
        },
        {
          "name": "url",
          "type_long": "java.net.URL",
          "type_short": "URL",
          "comment": ""
        },
        {
          "name": "notify",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setActiveProject",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "project",
          "type_long": "ghidra.framework.model.Project",
          "type_short": "Project",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setBorder",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "projectName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getActionContext",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "provider",
          "type_long": "docking.ComponentProvider",
          "type_short": "ComponentProvider",
          "comment": ""
        },
        {
          "name": "e",
          "type_long": "java.awt.event.MouseEvent",
          "type_short": "MouseEvent",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.ActionContext",
        "type_short": "ActionContext",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "writeDataState",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "saveState",
          "type_long": "ghidra.framework.options.SaveState",
          "type_short": "SaveState",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "readDataState",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "saveState",
          "type_long": "ghidra.framework.options.SaveState",
          "type_short": "SaveState",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "showTable",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isTableShowing",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    }
  ]
}
