{
  "name": "ProjectAccessPanel",
  "comment": "Panel that shows the users for a given repository and the users associated with the current\n shared project. There are 3 main sub-panels:\n \n \n Known Users Panel: Displays all users in the repository\n Button Panel: Provides buttons for adding/removing users from the project\n User Access Panel: Displays all users on the project, and their access permissions\n \n \n If the current user is an admin, he may change user permissions and add/remove them \n from the project. If not, only the User Access Panel will be visible and it will\n be read-only.",
  "javadoc": "Panel that shows the users for a given repository and the users associated with the current\n shared project. There are 3 main sub-panels:\n \u003cp\u003e\n \u003cul\u003e\n \u003cli\u003eKnown Users Panel: Displays all users in the repository\u003c/li\u003e\n \u003cli\u003eButton Panel: Provides buttons for adding/removing users from the project\u003c/li\u003e\n \u003cli\u003eUser Access Panel: Displays all users on the project, and their access permissions\u003c/li\u003e\n \u003c/ul\u003e\n \u003cp\u003e\n If the current user is an admin, he may change user permissions and add/remove them \n from the project. If not, only the User Access Panel will be visible and it will\n be read-only.",
  "static": false,
  "implements": [],
  "extends": "docking.wizard.AbstractWizardJPanel",
  "fields": [
    {
      "name": "knownUsersPanel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.main.ProjectAccessPanel.KnownUsersPanel",
      "type_short": "KnownUsersPanel",
      "constant_value": null
    },
    {
      "name": "userAccessPanel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.main.ProjectAccessPanel.UserAccessPanel",
      "type_short": "UserAccessPanel",
      "constant_value": null
    },
    {
      "name": "addRemoveButtonPanel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.main.ProjectAccessPanel.ButtonPanel",
      "type_short": "ButtonPanel",
      "constant_value": null
    },
    {
      "name": "anonymousAccessCB",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.JCheckBox",
      "type_short": "JCheckBox",
      "constant_value": null
    },
    {
      "name": "currentUser",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "origProjectUserList",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cghidra.framework.remote.User\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "origAnonymousAccessEnabled",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "repositoryName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "helpLoc",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.HelpLocation",
      "type_short": "HelpLocation",
      "constant_value": null
    },
    {
      "name": "SELECTION_BG_COLOR",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.awt.Color",
      "type_short": "Color",
      "constant_value": null
    },
    {
      "name": "SELECTION_FG_COLOR",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.awt.Color",
      "type_short": "Color",
      "constant_value": null
    },
    {
      "name": "tool",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.plugintool.PluginTool",
      "type_short": "PluginTool",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a new panel from a RepositoryAdapter instance.",
      "javadoc": "Construct a new panel from a {@link RepositoryAdapter} instance.\n@param knownUsers names of the users that are known to the remote server\n@param repository the repository adapter instance\n@param tool the current tool\n@throws IOException if there\u0027s an error processing the repository user list",
      "static": false,
      "params": [
        {
          "name": "knownUsers",
          "type_long": "java.lang.String[]",
          "type_short": "java.lang.String[]",
          "comment": "names of the users that are known to the remote server"
        },
        {
          "name": "repository",
          "type_long": "ghidra.framework.client.RepositoryAdapter",
          "type_short": "RepositoryAdapter",
          "comment": "the repository adapter instance"
        },
        {
          "name": "tool",
          "type_long": "ghidra.framework.plugintool.PluginTool",
          "type_short": "PluginTool",
          "comment": "the current tool"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if there\u0027s an error processing the repository user list"
        }
      ]
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new panel from the given arguments.",
      "javadoc": "Constructs a new panel from the given arguments.\n@param knownUsers names of the users that are known to the remote server\n@param currentUser the current user\n@param allUsers all users known to the repository\n@param repositoryName the name of the repository\n@param anonymousServerAccessAllowed true if the server allows anonymous access\n@param anonymousAccessEnabled true if the repository allows anonymous access \n (ignored if anonymousServerAccessAllowed is false)\n@param tool the current tool",
      "static": false,
      "params": [
        {
          "name": "knownUsers",
          "type_long": "java.lang.String[]",
          "type_short": "java.lang.String[]",
          "comment": "names of the users that are known to the remote server"
        },
        {
          "name": "currentUser",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the current user"
        },
        {
          "name": "allUsers",
          "type_long": "java.util.List\u003cghidra.framework.remote.User\u003e",
          "type_short": "List",
          "comment": "all users known to the repository"
        },
        {
          "name": "repositoryName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of the repository"
        },
        {
          "name": "anonymousServerAccessAllowed",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true if the server allows anonymous access"
        },
        {
          "name": "anonymousAccessEnabled",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true if the repository allows anonymous access \n (ignored if anonymousServerAccessAllowed is false)"
        },
        {
          "name": "tool",
          "type_long": "ghidra.framework.plugintool.PluginTool",
          "type_short": "PluginTool",
          "comment": "the current tool"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isValidInformation",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getTitle",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "initialize",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getHelpLocation",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.util.HelpLocation",
        "type_short": "HelpLocation",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setHelpLocation",
      "comment": "Sets the help location.",
      "javadoc": "Sets the help location.\n@param helpLoc the help location",
      "static": false,
      "params": [
        {
          "name": "helpLoc",
          "type_long": "ghidra.util.HelpLocation",
          "type_short": "HelpLocation",
          "comment": "the help location"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getProjectUsers",
      "comment": "Returns a list of all users with permission to access the project.",
      "javadoc": "Returns a list of all users with permission to access the project.\n@return the list of users",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.framework.remote.User[]",
        "type_short": "ghidra.framework.remote.User[]",
        "comment": "the list of users"
      },
      "throws": []
    },
    {
      "name": "allowAnonymousAccess",
      "comment": "Returns true if anonymous access is allowed by the repository.",
      "javadoc": "Returns true if anonymous access is allowed by the repository.\n@return true if allowed",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if allowed"
      },
      "throws": []
    },
    {
      "name": "getRepositoryName",
      "comment": "Returns the repository name.",
      "javadoc": "Returns the repository name.\n@return the repository name",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the repository name"
      },
      "throws": []
    },
    {
      "name": "createMainPanel",
      "comment": "Creates the main gui panel, containing the known users, button, and user access \n panels.",
      "javadoc": "Creates the main gui panel, containing the known users, button, and user access \n panels.",
      "static": false,
      "params": [
        {
          "name": "knownUsers",
          "type_long": "java.lang.String[]",
          "type_short": "java.lang.String[]",
          "comment": ""
        },
        {
          "name": "anonymousServerAccessAllowed",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
