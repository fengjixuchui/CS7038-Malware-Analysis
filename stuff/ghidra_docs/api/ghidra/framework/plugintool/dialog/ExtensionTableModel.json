{
  "name": "ExtensionTableModel",
  "comment": "Model for the ExtensionTablePanel. This defines 5 columns for displaying information in\n ExtensionDetails objects:\n \n \n \t\t- Installed (checkbox)\n \t\t- Name\n \t\t- Description\n \t\t- Installation directory (hidden)\n \t\t- Archive directory (hidden)\n \n \n All columns are for display purposes only, except for the installed column, which \n is a checkbox allowing users to install/uninstall a particular extension.",
  "javadoc": "Model for the {@link ExtensionTablePanel}. This defines 5 columns for displaying information in\n {@link ExtensionDetails} objects:\n \u003cp\u003e\n \u003cpre\u003e\n \t\t- Installed (checkbox)\n \t\t- Name\n \t\t- Description\n \t\t- Installation directory (hidden)\n \t\t- Archive directory (hidden)\n \u003c/pre\u003e\n \u003cp\u003e\n All columns are for display purposes only, except for the \u003ccode\u003einstalled\u003c/code\u003e column, which \n is a checkbox allowing users to install/uninstall a particular extension.",
  "static": false,
  "implements": [],
  "extends": "docking.widgets.table.threaded.ThreadedTableModel",
  "fields": [
    {
      "name": "INSTALLED_COL",
      "comment": "We don\u0027t care about the ordering of other columns, but the install/uninstall checkbox should be \n\t the first one and the name col is our initial sort column.",
      "javadoc": "We don\u0027t care about the ordering of other columns, but the install/uninstall checkbox should be \n\t the first one and the name col is our initial sort column.",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "0"
    },
    {
      "name": "NAME_COL",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "1"
    },
    {
      "name": "extensions",
      "comment": "This is the data source for the model. Whatever is here will be displayed in the table.",
      "javadoc": "This is the data source for the model. Whatever is here will be displayed in the table.",
      "static": false,
      "type_long": "java.util.List\u003cghidra.framework.plugintool.dialog.ExtensionDetails\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "modelChanged",
      "comment": "Indicates if the model has changed due to an install or uninstall.",
      "javadoc": "Indicates if the model has changed due to an install or uninstall.",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor.",
      "javadoc": "Constructor.\n@param serviceProvider the tool providing the extensions table",
      "static": false,
      "params": [
        {
          "name": "serviceProvider",
          "type_long": "ghidra.framework.plugintool.ServiceProvider",
          "type_short": "ServiceProvider",
          "comment": "the tool providing the extensions table"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createTableColumnDescriptor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.widgets.table.TableColumnDescriptor\u003cghidra.framework.plugintool.dialog.ExtensionDetails\u003e",
        "type_short": "TableColumnDescriptor",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPrimarySortColumnIndex",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isCellEditable",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "rowIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "columnIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setValueAt",
      "comment": "Overridden to handle the case where a user has toggled the installation column\n checkbox.",
      "javadoc": "Overridden to handle the case where a user has toggled the installation column\n checkbox.",
      "static": false,
      "params": [
        {
          "name": "aValue",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        },
        {
          "name": "rowIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "columnIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isValidVersion",
      "comment": "Returns true if the extension version is valid for this version of Ghidra.",
      "javadoc": "Returns true if the extension version is valid for this version of Ghidra.\n@param details the extension to check\n@return true if extension version is valid for this version of Ghidra",
      "static": false,
      "params": [
        {
          "name": "details",
          "type_long": "ghidra.framework.plugintool.dialog.ExtensionDetails",
          "type_short": "ExtensionDetails",
          "comment": "the extension to check"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if extension version is valid for this version of Ghidra"
      },
      "throws": []
    },
    {
      "name": "getDataSource",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cghidra.framework.plugintool.dialog.ExtensionDetails\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "doLoad",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "accumulator",
          "type_long": "ghidra.util.datastruct.Accumulator\u003cghidra.framework.plugintool.dialog.ExtensionDetails\u003e",
          "type_short": "Accumulator",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": ""
        }
      ]
    },
    {
      "name": "hasModelChanged",
      "comment": "Returns true if the model has changed as a result of installing or uninstalling an extension.",
      "javadoc": "Returns true if the model has changed as a result of installing or uninstalling an extension.\n@return true if the model has changed as a result of installing or uninstalling an extension.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the model has changed as a result of installing or uninstalling an extension."
      },
      "throws": []
    },
    {
      "name": "setModelData",
      "comment": "Replaces the table model data with the given list.",
      "javadoc": "Replaces the table model data with the given list.\n@param model the list to use as the model",
      "static": false,
      "params": [
        {
          "name": "model",
          "type_long": "java.util.List\u003cghidra.framework.plugintool.dialog.ExtensionDetails\u003e",
          "type_short": "List",
          "comment": "the list to use as the model"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "refreshTable",
      "comment": "Gets a new set of extensions and reloads the table.",
      "javadoc": "Gets a new set of extensions and reloads the table.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSelectedExtension",
      "comment": "Returns the selected extension. \n \n Note that this table is single-selection only, so this will only\n ever return 1 item.",
      "javadoc": "Returns the selected extension. \n \u003cp\u003e\n Note that this table is single-selection only, so this will only\n ever return 1 item.\n@param row the selected row\n@return the selected extension, or null if nothing is selected",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "the selected row"
        }
      ],
      "return": {
        "type_long": "ghidra.framework.plugintool.dialog.ExtensionDetails",
        "type_short": "ExtensionDetails",
        "comment": "the selected extension, or null if nothing is selected"
      },
      "throws": []
    }
  ]
}
