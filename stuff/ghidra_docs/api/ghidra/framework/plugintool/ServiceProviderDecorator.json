{
  "name": "ServiceProviderDecorator",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [
    "ghidra.framework.plugintool.ServiceProvider"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "delegate",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.plugintool.ServiceProvider",
      "type_short": "ServiceProvider",
      "constant_value": null
    },
    {
      "name": "overriddenServices",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.Map\u003cjava.lang.Class\u003c?\u003e,java.lang.Object\u003e",
      "type_short": "Map",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "decorate",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "delegate",
          "type_long": "ghidra.framework.plugintool.ServiceProvider",
          "type_short": "ServiceProvider",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.framework.plugintool.ServiceProviderDecorator",
        "type_short": "ServiceProviderDecorator",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createEmptyDecorator",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [],
      "return": {
        "type_long": "ghidra.framework.plugintool.ServiceProviderDecorator",
        "type_short": "ServiceProviderDecorator",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "delegate",
          "type_long": "ghidra.framework.plugintool.ServiceProvider",
          "type_short": "ServiceProvider",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "overrideService",
      "comment": "Adds a service that will override any service contained in the delegate \n ServiceProvider. \n \n Note: this will not notify any clients that services have been changed.  This means \n that you should call this method before passing this service provider on to your clients.",
      "javadoc": "Adds a service that will override any service contained in the delegate \n {@link ServiceProvider}. \n \n \u003cP\u003eNote: this will not notify any clients that services have been changed.  This means \n that you should call this method before passing this service provider on to your clients.\n@param serviceClass the service class\n@param service the service implementation",
      "static": false,
      "params": [
        {
          "name": "serviceClass",
          "type_long": "java.lang.Class\u003cT\u003e",
          "type_short": "Class",
          "comment": "the service class"
        },
        {
          "name": "service",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": "the service implementation"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getService",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "serviceClass",
          "type_long": "java.lang.Class\u003cT\u003e",
          "type_short": "Class",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "T",
        "type_short": "T",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addServiceListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "ghidra.framework.plugintool.util.ServiceListener",
          "type_short": "ServiceListener",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeServiceListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "ghidra.framework.plugintool.util.ServiceListener",
          "type_short": "ServiceListener",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
