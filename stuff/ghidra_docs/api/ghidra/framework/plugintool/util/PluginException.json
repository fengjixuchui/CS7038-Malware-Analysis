{
  "name": "PluginException",
  "comment": "Exception thrown if plugin was not found.",
  "javadoc": "Exception thrown if plugin was not found.",
  "static": false,
  "implements": [],
  "extends": "ghidra.util.exception.UsrException",
  "fields": [],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct PluginException with a detail message.",
      "javadoc": "Construct PluginException with a detail message.\n@param className class name of the plugin\n@param details the reason the addPlugin failed.",
      "static": false,
      "params": [
        {
          "name": "className",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "class name of the plugin"
        },
        {
          "name": "details",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the reason the addPlugin failed."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a PluginException with the given message.",
      "javadoc": "Construct a PluginException with the given message.\n@param message message that is returned in the getMessage() method",
      "static": false,
      "params": [
        {
          "name": "message",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "message that is returned in the getMessage() method"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a PluginException with the given message and cause.",
      "javadoc": "Construct a PluginException with the given message and cause.\n@param message the exception message\n@param cause the exception cause",
      "static": false,
      "params": [
        {
          "name": "message",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the exception message"
        },
        {
          "name": "cause",
          "type_long": "java.lang.Throwable",
          "type_short": "Throwable",
          "comment": "the exception cause"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPluginException",
      "comment": "Creates a new PluginException by appending the message from \n this exception to the message of the given exception if it\n is not null. If e is null, returns this exception.",
      "javadoc": "Creates a new PluginException by appending the message from \n this exception to the message of the given exception if it\n is not null. If e is null, returns this exception.\n@param e exception whose message will be appended to this\n exceptions message if e is not null\n@return this exception if e is null, or a new exception",
      "static": false,
      "params": [
        {
          "name": "e",
          "type_long": "ghidra.framework.plugintool.util.PluginException",
          "type_short": "PluginException",
          "comment": "exception whose message will be appended to this\n exceptions message if e is not null"
        }
      ],
      "return": {
        "type_long": "ghidra.framework.plugintool.util.PluginException",
        "type_short": "PluginException",
        "comment": "this exception if e is null, or a new exception"
      },
      "throws": []
    }
  ]
}
