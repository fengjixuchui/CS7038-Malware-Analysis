{
  "name": "MemoryPage",
  "comment": "MemoryPage is allows the contents/data of a memory page\n to be maintained along with an initializedMask.  Each bit within the\n initializedMask corresponds to a data byte within the page.  A null\n mask indicates that all data within the page is initialized.  A one-bit\n within the mask indicates that the corresponding data byte is initialized.",
  "javadoc": "\u003ccode\u003eMemoryPage\u003c/code\u003e is allows the contents/data of a memory page\n to be maintained along with an initializedMask.  Each bit within the\n initializedMask corresponds to a data byte within the page.  A null\n mask indicates that all data within the page is initialized.  A one-bit\n within the mask indicates that the corresponding data byte is initialized.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "data",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "byte[]",
      "type_short": "byte[]",
      "constant_value": null
    },
    {
      "name": "initializedMask",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "byte[]",
      "type_short": "byte[]",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a new fully initialized page containing\n all zero (0) byte data.",
      "javadoc": "Construct a new fully initialized page containing\n all zero (0) byte data.",
      "static": false,
      "params": [
        {
          "name": "pageSize",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a memory page with an existing data bytes buffer",
      "javadoc": "Construct a memory page with an existing data bytes buffer\n@param bytes buffer",
      "static": false,
      "params": [
        {
          "name": "bytes",
          "type_long": "byte[]",
          "type_short": "byte[]",
          "comment": "buffer"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getInitializedMask",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "byte[]",
        "type_short": "byte[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setUninitialized",
      "comment": "Mark entire page as uninitialized",
      "javadoc": "Mark entire page as uninitialized",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setInitialized",
      "comment": "Mark entire page as uninitialized",
      "javadoc": "Mark entire page as uninitialized",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setInitialized",
      "comment": "Update initialization mask",
      "javadoc": "Update initialization mask\n@param pageOffset\n@param size\n@param maskUpdate",
      "static": false,
      "params": [
        {
          "name": "pageOffset",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "size",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "maskUpdate",
          "type_long": "byte[]",
          "type_short": "byte[]",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setInitialized",
      "comment": "Mark specified page region as initialized.",
      "javadoc": "Mark specified page region as initialized.\n@param pageOffset\n@param size",
      "static": false,
      "params": [
        {
          "name": "pageOffset",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "size",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setUninitialized",
      "comment": "Mark specified page region as uninitialized.",
      "javadoc": "Mark specified page region as uninitialized.\n@param pageOffset\n@param size",
      "static": false,
      "params": [
        {
          "name": "pageOffset",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "size",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getInitializedByteCount",
      "comment": "Get number of leading bytes within page range which have been \n initialized.",
      "javadoc": "Get number of leading bytes within page range which have been \n initialized.\n@param pageOffset\n@param size\n@return number of leading bytes within page range which have been \n initialized.",
      "static": false,
      "params": [
        {
          "name": "pageOffset",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "size",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "number of leading bytes within page range which have been \n initialized."
      },
      "throws": []
    },
    {
      "name": "getInitializedMask",
      "comment": "Generate an initialized mask for the specified page size",
      "javadoc": "Generate an initialized mask for the specified page size\n@param pageSize\n@param initialized\n@return ",
      "static": true,
      "params": [
        {
          "name": "pageSize",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "initialized",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "byte[]",
        "type_short": "byte[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getInitializedMask",
      "comment": "Generate an initialized mask for the specified page size.\n The region is identified by offset and size.  The remaining portions\n of the mask will be set based upon !initialized.",
      "javadoc": "Generate an initialized mask for the specified page size.\n The region is identified by offset and size.  The remaining portions\n of the mask will be set based upon !initialized.\n@param pageSize\n@param offset\n@param size\n@param initialized\n@return ",
      "static": true,
      "params": [
        {
          "name": "pageSize",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "offset",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "size",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "initialized",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "byte[]",
        "type_short": "byte[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setInitialized",
      "comment": "Mark specified page region as initialized.",
      "javadoc": "Mark specified page region as initialized.\n@param initializedMask\n@param pageOffset\n@param size",
      "static": true,
      "params": [
        {
          "name": "initializedMask",
          "type_long": "byte[]",
          "type_short": "byte[]",
          "comment": ""
        },
        {
          "name": "pageOffset",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "size",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setUninitialized",
      "comment": "Mark specified page region as uninitialized.",
      "javadoc": "Mark specified page region as uninitialized.\n@param initializedMask\n@param pageOffset\n@param size",
      "static": true,
      "params": [
        {
          "name": "initializedMask",
          "type_long": "byte[]",
          "type_short": "byte[]",
          "comment": ""
        },
        {
          "name": "pageOffset",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "size",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getInitializedByteCount",
      "comment": "Determine how many leading bytes of a specified page region is marked as\n initialized.  Valid page region defined by pageOffset and size is assumed.",
      "javadoc": "Determine how many leading bytes of a specified page region is marked as\n initialized.  Valid page region defined by pageOffset and size is assumed.\n@param initializedMask\n@param pageOffset\n@param size\n@return number of leading bytes at pageOffset (upto size) are initialized.",
      "static": true,
      "params": [
        {
          "name": "initializedMask",
          "type_long": "byte[]",
          "type_short": "byte[]",
          "comment": ""
        },
        {
          "name": "pageOffset",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "size",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "number of leading bytes at pageOffset (upto size) are initialized."
      },
      "throws": []
    }
  ]
}
