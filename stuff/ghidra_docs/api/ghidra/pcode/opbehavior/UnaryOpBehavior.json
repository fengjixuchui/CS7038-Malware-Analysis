{
  "name": "UnaryOpBehavior",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "extends": "ghidra.pcode.opbehavior.OpBehavior",
  "fields": [],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "opcode",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "evaluateUnary",
      "comment": "Evaluate the unary operation using long data",
      "javadoc": "Evaluate the unary operation using long data\n@param sizeout intended output size (bytes)\n@param sizein in1 size (bytes)\n@param unsignedIn1 unsigned input 1\n@return operation result.  NOTE: if the operation overflows bits may be\n set beyond the specified sizeout.  Even though results should be treated\n as unsigned it may be returned as a signed long value.  It is expected that the \n returned result always be properly truncated by the caller since the evaluation\n may not - this is done to conserve emulation cycles.\n@see Utils#longToBytes(long, int, boolean)\n@see Utils#bytesToLong(byte[], int, boolean)",
      "static": false,
      "params": [
        {
          "name": "sizeout",
          "type_long": "int",
          "type_short": "int",
          "comment": "intended output size (bytes)"
        },
        {
          "name": "sizein",
          "type_long": "int",
          "type_short": "int",
          "comment": "in1 size (bytes)"
        },
        {
          "name": "unsignedIn1",
          "type_long": "long",
          "type_short": "long",
          "comment": "unsigned input 1"
        }
      ],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": "operation result.  NOTE: if the operation overflows bits may be\n set beyond the specified sizeout.  Even though results should be treated\n as unsigned it may be returned as a signed long value.  It is expected that the \n returned result always be properly truncated by the caller since the evaluation\n may not - this is done to conserve emulation cycles."
      },
      "throws": []
    },
    {
      "name": "evaluateUnary",
      "comment": "Evaluate the unary operation using BigInteger data",
      "javadoc": "Evaluate the unary operation using BigInteger data\n@param sizeout intended output size (bytes)\n@param sizein in1 size (bytes)\n@param unsignedIn1 unsigned input 1\n@return operation result.  NOTE: if the operation overflows bits may be\n set beyond the specified sizeout.  Even though results should be treated\n as unsigned it may be returned as a signed value.  It is expected that the \n returned result always be properly truncated by the caller since the evaluation\n may not - this is done to conserve emulation cycles.\n@see Utils#bigIntegerToBytes(BigInteger, int, boolean)\n@see Utils#bytesToBigInteger(byte[], int, boolean, boolean)",
      "static": false,
      "params": [
        {
          "name": "sizeout",
          "type_long": "int",
          "type_short": "int",
          "comment": "intended output size (bytes)"
        },
        {
          "name": "sizein",
          "type_long": "int",
          "type_short": "int",
          "comment": "in1 size (bytes)"
        },
        {
          "name": "unsignedIn1",
          "type_long": "java.math.BigInteger",
          "type_short": "BigInteger",
          "comment": "unsigned input 1"
        }
      ],
      "return": {
        "type_long": "java.math.BigInteger",
        "type_short": "BigInteger",
        "comment": "operation result.  NOTE: if the operation overflows bits may be\n set beyond the specified sizeout.  Even though results should be treated\n as unsigned it may be returned as a signed value.  It is expected that the \n returned result always be properly truncated by the caller since the evaluation\n may not - this is done to conserve emulation cycles."
      },
      "throws": []
    }
  ]
}
