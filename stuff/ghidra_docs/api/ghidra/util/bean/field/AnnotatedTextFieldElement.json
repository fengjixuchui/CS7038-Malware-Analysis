{
  "name": "AnnotatedTextFieldElement",
  "comment": "A subclass of FieldElement that allows for mouse handling callbacks via the \n #handleMouseClicked(Navigatable, ServiceProvider) method.  This class\n is based upon Annotation objects, which are elements that perform actions when the \n use clicks an instance of this class in the display.",
  "javadoc": "A subclass of {@link FieldElement} that allows for mouse handling callbacks via the \n {@link #handleMouseClicked(Navigatable, ServiceProvider)} method.  This class\n is based upon {@link Annotation} objects, which are elements that perform actions when the \n use clicks an instance of this class in the display.",
  "static": false,
  "implements": [],
  "extends": "docking.widgets.fieldpanel.field.AbstractTextFieldElement",
  "fields": [
    {
      "name": "annotation",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.viewer.field.Annotation",
      "type_short": "Annotation",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "annotation",
          "type_long": "ghidra.app.util.viewer.field.Annotation",
          "type_short": "Annotation",
          "comment": ""
        },
        {
          "name": "displayString",
          "type_long": "docking.widgets.fieldpanel.field.AttributedString",
          "type_short": "AttributedString",
          "comment": ""
        },
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "column",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor that initializes this text field element with the given annotation and row\n and column information.  The text of this element is the text returned from\n Annotation#getDisplayString().",
      "javadoc": "Constructor that initializes this text field element with the given annotation and row\n and column information.  The text of this element is the text returned from\n {@link Annotation#getDisplayString()}.\n@param annotation The Annotation that this element is describing.\n@param row The row that this element is on\n@param column The column value of this element (the column index where this element starts)",
      "static": false,
      "params": [
        {
          "name": "annotation",
          "type_long": "ghidra.app.util.viewer.field.Annotation",
          "type_short": "Annotation",
          "comment": "The Annotation that this element is describing."
        },
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "The row that this element is on"
        },
        {
          "name": "column",
          "type_long": "int",
          "type_short": "int",
          "comment": "The column value of this element (the column index where this element starts)"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getRawText",
      "comment": "Returns the original annotation text in the data model, which will differ from the display\n text.",
      "javadoc": "Returns the original annotation text in the data model, which will differ from the display\n text.\n@return the original annotation text in the data model.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the original annotation text in the data model."
      },
      "throws": []
    },
    {
      "name": "handleMouseClicked",
      "comment": "This method is designed to be called when a mouse click has occurred for a given \n ProgramLocation.",
      "javadoc": "This method is designed to be called when a mouse click has occurred for a given \n {@link ProgramLocation}.\n@param sourceNavigatable The source Navigatable\n@param serviceProvider A service provider from which system resources can be retrieved\n@return true if this string handles the mouse click.",
      "static": false,
      "params": [
        {
          "name": "sourceNavigatable",
          "type_long": "ghidra.app.nav.Navigatable",
          "type_short": "Navigatable",
          "comment": "The source Navigatable"
        },
        {
          "name": "serviceProvider",
          "type_long": "ghidra.framework.plugintool.ServiceProvider",
          "type_short": "ServiceProvider",
          "comment": "A service provider from which system resources can be retrieved"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if this string handles the mouse click."
      },
      "throws": []
    },
    {
      "name": "getDataLocationForCharacterIndex",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "characterIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.widgets.fieldpanel.support.RowColLocation",
        "type_short": "RowColLocation",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getCharacterIndexForDataLocation",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "dataRow",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "dataColumn",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "substring",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "start",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "end",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.widgets.fieldpanel.field.FieldElement",
        "type_short": "FieldElement",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "replaceAll",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "targets",
          "type_long": "char[]",
          "type_short": "char[]",
          "comment": ""
        },
        {
          "name": "replacement",
          "type_long": "char",
          "type_short": "char",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.widgets.fieldpanel.field.FieldElement",
        "type_short": "FieldElement",
        "comment": ""
      },
      "throws": []
    }
  ]
}
