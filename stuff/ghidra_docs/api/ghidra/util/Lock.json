{
  "name": "Lock",
  "comment": "Ghidra synchronization lock. This class allows creation of named locks for\n synchroniing modification of multiple tables in the Ghidra database.",
  "javadoc": "Ghidra synchronization lock. This class allows creation of named locks for\n synchroniing modification of multiple tables in the Ghidra database.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "owner",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.Thread",
      "type_short": "Thread",
      "constant_value": null
    },
    {
      "name": "lockAquireCount",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "waiterCount",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "name",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Creates an instance of a lock for synchronization within Ghidra.",
      "javadoc": "Creates an instance of a lock for synchronization within Ghidra.\n@param name the name of this lock",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of this lock"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "acquire",
      "comment": "Acquire this synchronization lock. (i.e. begin synchronizing on this named\n lock.)",
      "javadoc": "Acquire this synchronization lock. (i.e. begin synchronizing on this named\n lock.)",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "release",
      "comment": "Releases this lock, since you are through with the code that needed\n synchronization.",
      "javadoc": "Releases this lock, since you are through with the code that needed\n synchronization.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getOwner",
      "comment": "Gets the thread that currently owns the lock.",
      "javadoc": "Gets the thread that currently owns the lock.\n@return the thread that owns the lock or null.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.Thread",
        "type_short": "Thread",
        "comment": "the thread that owns the lock or null."
      },
      "throws": []
    }
  ]
}
