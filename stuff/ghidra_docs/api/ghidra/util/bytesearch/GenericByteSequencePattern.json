{
  "name": "GenericByteSequencePattern",
  "comment": "Templated simple DittedBitSequence Pattern for a byte/mask pattern and associated action.\n The DittedBitSequence is provided by value and mask in byte arrays.\n \n This class is normally used to find some number of SequencePatterns within a seqence of bytes.\n When the byte/mask pattern is matched, the GenericMatchAction will be \"applied\".",
  "javadoc": "Templated simple DittedBitSequence Pattern for a byte/mask pattern and associated action.\n The DittedBitSequence is provided by value and mask in byte arrays.\n \n This class is normally used to find some number of SequencePatterns within a seqence of bytes.\n When the byte/mask pattern is matched, the GenericMatchAction will be \"applied\".\n@param \u003cT\u003e the class of match action, used to specify a specialized momento to be used by the action when it is \"applied\".",
  "static": false,
  "implements": [],
  "extends": "ghidra.util.bytesearch.Pattern",
  "fields": [],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a sequence of bytes with no mask, and associated action\n to be called if this pattern matches.",
      "javadoc": "Construct a sequence of bytes with no mask, and associated action\n to be called if this pattern matches.\n@param bytesSequence sequence of bytes to match\n@param action action to apply if the match succeeds",
      "static": false,
      "params": [
        {
          "name": "bytesSequence",
          "type_long": "byte[]",
          "type_short": "byte[]",
          "comment": "sequence of bytes to match"
        },
        {
          "name": "action",
          "type_long": "ghidra.util.bytesearch.GenericMatchAction\u003cT\u003e",
          "type_short": "GenericMatchAction",
          "comment": "action to apply if the match succeeds"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a sequence of bytes with a mask, and associated action\n to be called if this pattern matches.",
      "javadoc": "Construct a sequence of bytes with a mask, and associated action\n to be called if this pattern matches.\n@param bytesSequence sequence of bytes to match\n@param mask mask, bits that are 1 must match the byteSequence bits\n@param action to apply if the match succeeds",
      "static": false,
      "params": [
        {
          "name": "bytesSequence",
          "type_long": "byte[]",
          "type_short": "byte[]",
          "comment": "sequence of bytes to match"
        },
        {
          "name": "mask",
          "type_long": "byte[]",
          "type_short": "byte[]",
          "comment": "mask, bits that are 1 must match the byteSequence bits"
        },
        {
          "name": "action",
          "type_long": "ghidra.util.bytesearch.GenericMatchAction\u003cghidra.program.model.data.DataType\u003e",
          "type_short": "GenericMatchAction",
          "comment": "to apply if the match succeeds"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
