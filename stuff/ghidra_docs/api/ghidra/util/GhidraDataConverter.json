{
  "name": "GhidraDataConverter",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [
    "ghidra.util.DataConverter"
  ],
  "fields": [],
  "methods": [
    {
      "name": "getInstance",
      "comment": "Returns the correct GhidraDataConverter static instance for the requested endian-ness.",
      "javadoc": "Returns the correct GhidraDataConverter static instance for the requested endian-ness.\n@param isBigEndian boolean flag, true means big endian\n@return static GhidraDataConverter instance",
      "static": true,
      "params": [
        {
          "name": "isBigEndian",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "boolean flag, true means big endian"
        }
      ],
      "return": {
        "type_long": "ghidra.util.GhidraDataConverter",
        "type_short": "GhidraDataConverter",
        "comment": "static GhidraDataConverter instance"
      },
      "throws": []
    },
    {
      "name": "getShort",
      "comment": "Generate a short value by invoking buf.getBytes at the specified offset.",
      "javadoc": "Generate a short value by invoking buf.getBytes at the specified offset.\n@param buf MemBuffer source of bytes\n@param offset offset in mem buffer to read\n@return short value\n@throws MemoryAccessException if failed to read 2-bytes at the specified offset",
      "static": false,
      "params": [
        {
          "name": "buf",
          "type_long": "ghidra.program.model.mem.MemBuffer",
          "type_short": "MemBuffer",
          "comment": "MemBuffer source of bytes"
        },
        {
          "name": "offset",
          "type_long": "int",
          "type_short": "int",
          "comment": "offset in mem buffer to read"
        }
      ],
      "return": {
        "type_long": "short",
        "type_short": "short",
        "comment": "short value"
      },
      "throws": [
        {
          "type_long": "ghidra.program.model.mem.MemoryAccessException",
          "type_short": "MemoryAccessException",
          "comment": "if failed to read 2-bytes at the specified offset"
        }
      ]
    },
    {
      "name": "getInt",
      "comment": "Generate a int value by invoking buf.getBytes at the specified offset.",
      "javadoc": "Generate a int value by invoking buf.getBytes at the specified offset.\n@param buf MemBuffer source of bytes\n@param offset offset in mem buffer to read\n@return int value\n@throws MemoryAccessException if failed to read 4-bytes at the specified offset",
      "static": false,
      "params": [
        {
          "name": "buf",
          "type_long": "ghidra.program.model.mem.MemBuffer",
          "type_short": "MemBuffer",
          "comment": "MemBuffer source of bytes"
        },
        {
          "name": "offset",
          "type_long": "int",
          "type_short": "int",
          "comment": "offset in mem buffer to read"
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "int value"
      },
      "throws": [
        {
          "type_long": "ghidra.program.model.mem.MemoryAccessException",
          "type_short": "MemoryAccessException",
          "comment": "if failed to read 4-bytes at the specified offset"
        }
      ]
    },
    {
      "name": "getLong",
      "comment": "Generate a long value by invoking buf.getBytes at the specified offset.",
      "javadoc": "Generate a long value by invoking buf.getBytes at the specified offset.\n@param buf MemBuffer source of bytes\n@param offset offset in mem buffer to read\n@return long value\n@throws MemoryAccessException if failed to read 8-bytes at the specified offset",
      "static": false,
      "params": [
        {
          "name": "buf",
          "type_long": "ghidra.program.model.mem.MemBuffer",
          "type_short": "MemBuffer",
          "comment": "MemBuffer source of bytes"
        },
        {
          "name": "offset",
          "type_long": "int",
          "type_short": "int",
          "comment": "offset in mem buffer to read"
        }
      ],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": "long value"
      },
      "throws": [
        {
          "type_long": "ghidra.program.model.mem.MemoryAccessException",
          "type_short": "MemoryAccessException",
          "comment": "if failed to read 8-bytes at the specified offset"
        }
      ]
    },
    {
      "name": "getBigInteger",
      "comment": "Generate a BigInteger value by invoking buf.getBytes at the specified offset.",
      "javadoc": "Generate a BigInteger value by invoking buf.getBytes at the specified offset.\n@param buf MemBuffer source of bytes\n@param offset offset in mem buffer to read\n@param size number of bytes\n@param signed boolean flag\n@return BigInteger value\n@throws MemoryAccessException if failed to read specified number of bytes\n at the specified offset",
      "static": false,
      "params": [
        {
          "name": "buf",
          "type_long": "ghidra.program.model.mem.MemBuffer",
          "type_short": "MemBuffer",
          "comment": "MemBuffer source of bytes"
        },
        {
          "name": "offset",
          "type_long": "int",
          "type_short": "int",
          "comment": "offset in mem buffer to read"
        },
        {
          "name": "size",
          "type_long": "int",
          "type_short": "int",
          "comment": "number of bytes"
        },
        {
          "name": "signed",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "boolean flag"
        }
      ],
      "return": {
        "type_long": "java.math.BigInteger",
        "type_short": "BigInteger",
        "comment": "BigInteger value"
      },
      "throws": [
        {
          "type_long": "ghidra.program.model.mem.MemoryAccessException",
          "type_short": "MemoryAccessException",
          "comment": "if failed to read specified number of bytes\n at the specified offset"
        }
      ]
    }
  ]
}
