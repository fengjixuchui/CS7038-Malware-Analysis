{
  "name": "NumberUtil",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "UNSIGNED_BYTE_MASK",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "255"
    },
    {
      "name": "UNSIGNED_SHORT_MASK",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "65535"
    },
    {
      "name": "UNSIGNED_INT_MASK",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "long",
      "type_short": "long",
      "constant_value": "4294967295"
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getUnsignedValue",
      "comment": "Get the unsigned value of a number.",
      "javadoc": "Get the unsigned value of a number.\n@param value the value stored in a signed number\n@return the unsigned value of the number",
      "static": true,
      "params": [
        {
          "name": "value",
          "type_long": "java.lang.Number",
          "type_short": "Number",
          "comment": "the value stored in a signed number"
        }
      ],
      "return": {
        "type_long": "java.lang.Number",
        "type_short": "Number",
        "comment": "the unsigned value of the number"
      },
      "throws": []
    },
    {
      "name": "equalsMaxUnsignedValue",
      "comment": "Compare to the maximum unsigned value that the current number is holding.",
      "javadoc": "Compare to the maximum unsigned value that the current number is holding.\n@param value the value stored in a signed number\n@return true if equal to the maximum and false otherwise",
      "static": true,
      "params": [
        {
          "name": "value",
          "type_long": "java.lang.Number",
          "type_short": "Number",
          "comment": "the value stored in a signed number"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if equal to the maximum and false otherwise"
      },
      "throws": []
    }
  ]
}
