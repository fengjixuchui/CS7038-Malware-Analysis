{
  "name": "GTimer",
  "comment": "A class to schedule Runnables to run after some delay, optionally repeating.  This class\n uses a Timer internally to schedule work.   Clients of this class are given a monitor\n that allows them to check on the state of the runnable, as well as to cancel the runnable.",
  "javadoc": "A class to schedule {@link Runnable}s to run after some delay, optionally repeating.  This class\n uses a {@link Timer} internally to schedule work.   Clients of this class are given a monitor\n that allows them to check on the state of the runnable, as well as to cancel the runnable.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "timer",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.util.Timer",
      "type_short": "Timer",
      "constant_value": null
    },
    {
      "name": "DO_NOTHING_MONITOR",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.util.timer.GTimerMonitor",
      "type_short": "GTimerMonitor",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "scheduleRunnable",
      "comment": "Schedules a runnable for execution after the specified delay.   A delay value less than 0\n will cause this timer to schedule nothing.  This allows clients to use this timer class\n with no added logic for managing timer enablement.",
      "javadoc": "Schedules a runnable for execution after the specified delay.   A delay value less than 0\n will cause this timer to schedule nothing.  This allows clients to use this timer class\n with no added logic for managing timer enablement.\n@param delay the time (in milliseconds) to wait before executing the runnable.  A negative\n        value signals not to run the timer--the callback will not be executed\n@param callback the runnable to be executed.\n@return a GTimerMonitor which allows the caller to cancel the timer and check its status.",
      "static": true,
      "params": [
        {
          "name": "delay",
          "type_long": "long",
          "type_short": "long",
          "comment": "the time (in milliseconds) to wait before executing the runnable.  A negative\n        value signals not to run the timer--the callback will not be executed"
        },
        {
          "name": "callback",
          "type_long": "java.lang.Runnable",
          "type_short": "Runnable",
          "comment": "the runnable to be executed."
        }
      ],
      "return": {
        "type_long": "ghidra.util.timer.GTimerMonitor",
        "type_short": "GTimerMonitor",
        "comment": "a GTimerMonitor which allows the caller to cancel the timer and check its status."
      },
      "throws": []
    },
    {
      "name": "scheduleRepeatingRunnable",
      "comment": "Schedules a runnable for repeated execution after the specified delay. A delay value\n less than 0 will cause this timer to schedule nothing.  This allows clients to use this\n timer class with no added logic for managing timer enablement.",
      "javadoc": "Schedules a runnable for \u003cb\u003erepeated\u003c/b\u003e execution after the specified delay. A delay value\n less than 0 will cause this timer to schedule nothing.  This allows clients to use this\n timer class with no added logic for managing timer enablement.\n@param delay the time (in milliseconds) to wait before executing the runnable.   A negative\n        value signals not to run the timer--the callback will not be executed\n@param period time in milliseconds between successive runnable executions\n@param callback the runnable to be executed\n@return a GTimerMonitor which allows the caller to cancel the timer and check its status\n@throws IllegalArgumentException if {@code period \u003c\u003d 0}",
      "static": true,
      "params": [
        {
          "name": "delay",
          "type_long": "long",
          "type_short": "long",
          "comment": "the time (in milliseconds) to wait before executing the runnable.   A negative\n        value signals not to run the timer--the callback will not be executed"
        },
        {
          "name": "period",
          "type_long": "long",
          "type_short": "long",
          "comment": "time in milliseconds between successive runnable executions"
        },
        {
          "name": "callback",
          "type_long": "java.lang.Runnable",
          "type_short": "Runnable",
          "comment": "the runnable to be executed"
        }
      ],
      "return": {
        "type_long": "ghidra.util.timer.GTimerMonitor",
        "type_short": "GTimerMonitor",
        "comment": "a GTimerMonitor which allows the caller to cancel the timer and check its status"
      },
      "throws": []
    },
    {
      "name": "getTimer",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [],
      "return": {
        "type_long": "java.util.Timer",
        "type_short": "Timer",
        "comment": ""
      },
      "throws": []
    }
  ]
}
