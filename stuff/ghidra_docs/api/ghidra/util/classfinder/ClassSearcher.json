{
  "name": "ClassSearcher",
  "comment": "This class is a collection of static methods used to discover classes that implement a\n particular interface or extend a particular base class.\n \n Warning: Using the search feature of this class will trigger other classes to be loaded.\n Thus, clients should not make calls to this class inside of static initializer blocks\n\n Note: if your application is not using a module structure for its release build, then\n your application must create the following file, with the required entries,\n in order to find extension points:\n \n \tinstall dir/data/ExtensionPoint.manifest\n ",
  "javadoc": "This class is a collection of static methods used to discover classes that implement a\n particular interface or extend a particular base class.\n \u003cp\u003e\n \u003cb\u003eWarning: Using the search feature of this class will trigger other classes to be loaded.\n Thus, clients should not make calls to this class inside of static initializer blocks\u003c/b\u003e\n\n \u003cp\u003eNote: if your application is not using a module structure for its release build, then\n your application must create the following file, with the required entries,\n in order to find extension points:\n \u003cpre\u003e\n \t\u0026lt;install dir\u0026gt;/data/ExtensionPoint.manifest\n \u003c/pre\u003e",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "SEARCH_ALL_JARS_PROPERTY",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"class.searcher.search.all.jars\""
    },
    {
      "name": "SEARCH_ALL_JARS_PROPERTY_VALUE",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "SEARCH_ALL_JARS",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "log",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "org.apache.logging.log4j.Logger",
      "type_short": "Logger",
      "constant_value": null
    },
    {
      "name": "searcher",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.util.classfinder.ClassFinder",
      "type_short": "ClassFinder",
      "constant_value": null
    },
    {
      "name": "extensionPoints",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.util.List\u003cjava.lang.Class\u003c?\u003e\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "listenerList",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.util.datastruct.WeakSet\u003cjavax.swing.event.ChangeListener\u003e",
      "type_short": "WeakSet",
      "constant_value": null
    },
    {
      "name": "extensionPointSuffixPattern",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.util.regex.Pattern",
      "type_short": "Pattern",
      "constant_value": null
    },
    {
      "name": "hasSearched",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "isSearching",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "DO_NOTHING_FILTER",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.util.classfinder.ClassFilter",
      "type_short": "ClassFilter",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getClasses",
      "comment": "Get ExtensionPointProperties#priority() classes that implement or\n derive from the given class",
      "javadoc": "Get {@link ExtensionPointProperties#priority() priority-sorted} classes that implement or\n derive from the given class\n@param c the filter class\n@return set of classes that implement or extend T",
      "static": true,
      "params": [
        {
          "name": "c",
          "type_long": "java.lang.Class\u003cT\u003e",
          "type_short": "Class",
          "comment": "the filter class"
        }
      ],
      "return": {
        "type_long": "java.util.List\u003cjava.lang.Class\u003c? extends T\u003e\u003e",
        "type_short": "List",
        "comment": "set of classes that implement or extend T"
      },
      "throws": []
    },
    {
      "name": "getClasses",
      "comment": "Get ExtensionPointProperties#priority() classes that\n implement or derive from the given class",
      "javadoc": "Get {@link ExtensionPointProperties#priority() priority-sorted} classes that\n implement or derive from the given class\n@param c the filter class\n@param classFilter A Predicate that tests class objects (that are already of type T)\n \t\t\tfor further filtering, \u003ccode\u003enull\u003c/code\u003e is equivalent to \"return true\"\n@return {@link ExtensionPointProperties#priority() priority-sorted} list of\n \t\t\tclasses that implement or extend T and pass the filtering test performed by the\n \t\t\tpredicate",
      "static": true,
      "params": [
        {
          "name": "c",
          "type_long": "java.lang.Class\u003cT\u003e",
          "type_short": "Class",
          "comment": "the filter class"
        },
        {
          "name": "classFilter",
          "type_long": "java.util.function.Predicate\u003cjava.lang.Class\u003c? extends T\u003e\u003e",
          "type_short": "Predicate",
          "comment": "A Predicate that tests class objects (that are already of type T)\n \t\t\tfor further filtering, null is equivalent to \"return true\""
        }
      ],
      "return": {
        "type_long": "java.util.List\u003cjava.lang.Class\u003c? extends T\u003e\u003e",
        "type_short": "List",
        "comment": "ExtensionPointProperties#priority() list of\n \t\t\tclasses that implement or extend T and pass the filtering test performed by the\n \t\t\tpredicate"
      },
      "throws": []
    },
    {
      "name": "getInstances",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "c",
          "type_long": "java.lang.Class\u003cT\u003e",
          "type_short": "Class",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.List\u003cT\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getInstances",
      "comment": "Get ExtensionPointProperties#priority() classes\n instances that implement or derive from the given class",
      "javadoc": "Get {@link ExtensionPointProperties#priority() priority-sorted} classes\n instances that implement or derive from the given class\n@param c the filter class\n@param filter A Predicate that tests class objects (that are already of type T)\n \t\t\tfor further filtering, \u003ccode\u003enull\u003c/code\u003e is equivalent to \"return true\"\n@return {@link ExtensionPointProperties#priority() priority-sorted} list of\n \t\t\tclasses instances that implement or extend T and pass the filtering test performed by\n          the predicate",
      "static": true,
      "params": [
        {
          "name": "c",
          "type_long": "java.lang.Class\u003cT\u003e",
          "type_short": "Class",
          "comment": "the filter class"
        },
        {
          "name": "filter",
          "type_long": "ghidra.util.classfinder.ClassFilter",
          "type_short": "ClassFilter",
          "comment": "A Predicate that tests class objects (that are already of type T)\n \t\t\tfor further filtering, null is equivalent to \"return true\""
        }
      ],
      "return": {
        "type_long": "java.util.List\u003cT\u003e",
        "type_short": "List",
        "comment": "ExtensionPointProperties#priority() list of\n \t\t\tclasses instances that implement or extend T and pass the filtering test performed by\n          the predicate"
      },
      "throws": []
    },
    {
      "name": "addChangeListener",
      "comment": "Add a change listener that will be notified when the classpath\n is searched for new classes.\n Note: The listener list is implemented\n using WeakReferences. Therefore, the caller must maintain a handle to\n the listener being added, or else it will be garbage collected and\n never called.",
      "javadoc": "Add a change listener that will be notified when the classpath\n is searched for new classes.\n \u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e The listener list is implemented\n using WeakReferences. Therefore, the caller must maintain a handle to\n the listener being added, or else it will be garbage collected and\n never called.\u003c/p\u003e\n@param l the listener to add",
      "static": true,
      "params": [
        {
          "name": "l",
          "type_long": "javax.swing.event.ChangeListener",
          "type_short": "ChangeListener",
          "comment": "the listener to add"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeChangeListener",
      "comment": "Remove the change listener",
      "javadoc": "Remove the change listener\n@param l the listener to remove",
      "static": true,
      "params": [
        {
          "name": "l",
          "type_long": "javax.swing.event.ChangeListener",
          "type_short": "ChangeListener",
          "comment": "the listener to remove"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "search",
      "comment": "This deprecated method is now simply a pass-through for #search(TaskMonitor).",
      "javadoc": "This deprecated method is now simply a pass-through for {@link #search(TaskMonitor)}.\n@param forceRefresh ignored\n@param monitor the task monitor\n@throws CancelledException if cancelled\n@deprecated use {@link #search(TaskMonitor)} instead",
      "static": true,
      "params": [
        {
          "name": "forceRefresh",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "ignored"
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": "the task monitor"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": "if cancelled"
        }
      ]
    },
    {
      "name": "search",
      "comment": "Searches the classpath and updates the list of available classes which\n satisfy the class filter.  Classes which\n data types, and language providers. When the search completes and was\n not cancelled, the change listeners are notified.",
      "javadoc": "Searches the classpath and updates the list of available classes which\n satisfy the class filter.  Classes which\n data types, and language providers. When the search completes and was\n not cancelled, the change listeners are notified.\n@param monitor the progress monitor for the search.\n@throws CancelledException if the operation is cancelled",
      "static": true,
      "params": [
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": "the progress monitor for the search."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": "if the operation is cancelled"
        }
      ]
    },
    {
      "name": "gatherSearchPaths",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cjava.lang.String\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "canonicalizePaths",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "paths",
          "type_long": "java.util.Collection\u003cjava.lang.String\u003e",
          "type_short": "Collection",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.List\u003cjava.lang.String\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "normalize",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "path",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "loadExtensionClassesFromJar",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "loadExtensionPointSuffixes",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isExtensionPointName",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "fireClassListChanged",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
