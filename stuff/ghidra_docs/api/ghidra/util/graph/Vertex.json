{
  "name": "Vertex",
  "comment": "An implementation of vertices for use in ghidra.util.graph.",
  "javadoc": "An implementation of vertices for use in ghidra.util.graph.",
  "static": false,
  "implements": [
    "ghidra.util.graph.KeyedObject",
    "java.lang.Comparable"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "key",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "referent",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.Object",
      "type_short": "Object",
      "constant_value": null
    },
    {
      "name": "vf",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.util.graph.KeyedObjectFactory",
      "type_short": "KeyedObjectFactory",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Creates a vertex tied to a referent object. The object the key refers\n to can be obtained from the vertex factory using the key of the vertex.\n If there is already a vertex having the same key as returned by\n KeyedObjectFactory.getInstance().getKeyForThisObject( Object o ), then a\n DuplicateKeyException is thrown and no vertex is created.",
      "javadoc": "Creates a vertex tied to a referent object. The object the key refers\n to can be obtained from the vertex factory using the key of the vertex.\n If there is already a vertex having the same key as returned by\n KeyedObjectFactory.getInstance().getKeyForThisObject( Object o ), then a\n DuplicateKeyException is thrown and no vertex is created.",
      "static": false,
      "params": [
        {
          "name": "referent",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "key",
      "comment": "",
      "javadoc": "@return The key of this vertex.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": "The key of this vertex."
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "equals",
      "comment": "",
      "javadoc": "@return true iff and only if the given object is a Vertex with the same\n key.",
      "static": false,
      "params": [
        {
          "name": "o",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true iff and only if the given object is a Vertex with the same\n key."
      },
      "throws": []
    },
    {
      "name": "referent",
      "comment": "",
      "javadoc": "@return The Object this vertex refers to specified at creation time.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.Object",
        "type_short": "Object",
        "comment": "The Object this vertex refers to specified at creation time."
      },
      "throws": []
    },
    {
      "name": "hashCode",
      "comment": "",
      "javadoc": "@see java.lang.Object#hashCode() Overides hashCode() to use the key of this Vertex.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "compareTo",
      "comment": "Compares two vertices by keys. If the specified object o is not a Vertex a\n ClassCastException will be thrown.",
      "javadoc": "Compares two vertices by keys. If the specified object o is not a Vertex a\n ClassCastException will be thrown.",
      "static": false,
      "params": [
        {
          "name": "v",
          "type_long": "ghidra.util.graph.Vertex",
          "type_short": "Vertex",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "name",
      "comment": "Return the name of this vertex. If the Vertex has a referent, the \n referent\u0027s toString() method will be used to create the name. If\n the Vertex has a null referent, then the key will be used to determine\n the name.",
      "javadoc": "Return the name of this vertex. If the Vertex has a referent, the \n referent\u0027s toString() method will be used to create the name. If\n the Vertex has a null referent, then the key will be used to determine\n the name.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    }
  ]
}
