{
  "name": "VertexSet",
  "comment": "VertexSet is a container class for objects of type Vertex. It is\n designed to be used in conjunction with EdgeSet as part of DirectedGraph.",
  "javadoc": "VertexSet is a container class for objects of type Vertex. It is\n designed to be used in conjunction with EdgeSet as part of DirectedGraph.",
  "static": false,
  "implements": [
    "ghidra.util.graph.KeyIndexableSet"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "parentGraph",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.graph.DirectedGraph",
      "type_short": "DirectedGraph",
      "constant_value": null
    },
    {
      "name": "modificationNumber",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "capacity",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "nextIndex",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "keyIndices",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.datastruct.LongIntHashtable",
      "type_short": "LongIntHashtable",
      "constant_value": null
    },
    {
      "name": "firstOutgoingEdge",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.graph.Edge[]",
      "type_short": "ghidra.util.graph.Edge[]",
      "constant_value": null
    },
    {
      "name": "firstIncomingEdge",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.graph.Edge[]",
      "type_short": "ghidra.util.graph.Edge[]",
      "constant_value": null
    },
    {
      "name": "lastOutgoingEdge",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.graph.Edge[]",
      "type_short": "ghidra.util.graph.Edge[]",
      "constant_value": null
    },
    {
      "name": "lastIncomingEdge",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.graph.Edge[]",
      "type_short": "ghidra.util.graph.Edge[]",
      "constant_value": null
    },
    {
      "name": "vertices",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.graph.Vertex[]",
      "type_short": "ghidra.util.graph.Vertex[]",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor",
      "javadoc": "Constructor\n@param parent The DirectedGraph this is a VertexSet of.\n@param capacity number of vertices that may be held without invoking grow()",
      "static": false,
      "params": [
        {
          "name": "parent",
          "type_long": "ghidra.util.graph.DirectedGraph",
          "type_short": "DirectedGraph",
          "comment": "The DirectedGraph this is a VertexSet of."
        },
        {
          "name": "capacity",
          "type_long": "int",
          "type_short": "int",
          "comment": "number of vertices that may be held without invoking grow()"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "index",
      "comment": "Return the internal index of the given vertex within this edge set.",
      "javadoc": "Return the internal index of the given vertex within this edge set.\n@return the internal index of o.\n@throws ClassCastException if the object is not a Vertex.\n@throws NoValueException if the KeyedObject is not in the VertexSet.",
      "static": false,
      "params": [
        {
          "name": "v",
          "type_long": "ghidra.util.graph.Vertex",
          "type_short": "Vertex",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the internal index of o."
      },
      "throws": []
    },
    {
      "name": "add",
      "comment": "Adds the given vertex to the vertex set, if it does not already contain\n it.",
      "javadoc": "Adds the given vertex to the vertex set, if it does not already contain\n it.\n@return true if and only if the vertex was sucessfully added.",
      "static": false,
      "params": [
        {
          "name": "v",
          "type_long": "ghidra.util.graph.Vertex",
          "type_short": "Vertex",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if and only if the vertex was sucessfully added."
      },
      "throws": []
    },
    {
      "name": "remove",
      "comment": "Removes the given vertex from this vertex set if it contains it.",
      "javadoc": "Removes the given vertex from this vertex set if it contains it.\n@return true if and only if the vertex was sucessfully removed.",
      "static": false,
      "params": [
        {
          "name": "v",
          "type_long": "ghidra.util.graph.Vertex",
          "type_short": "Vertex",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if and only if the vertex was sucessfully removed."
      },
      "throws": []
    },
    {
      "name": "size",
      "comment": "Return The number of vertices in this VertexSet.",
      "javadoc": "Return The number of vertices in this VertexSet.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "contains",
      "comment": "Return true iff the specified KeyedObject is contained in\n this VertexSet.",
      "javadoc": "Return true iff the specified KeyedObject is contained in\n this VertexSet.",
      "static": false,
      "params": [
        {
          "name": "v",
          "type_long": "ghidra.util.graph.Vertex",
          "type_short": "Vertex",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getByIndex",
      "comment": "Return the Vertex at the specified index. May be null.",
      "javadoc": "Return the Vertex at the specified index. May be null.",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.util.graph.Vertex",
        "type_short": "Vertex",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "numSources",
      "comment": "Return the number of sources.\n This equals the number of vertices with no incoming\n edges in the VertexSet.",
      "javadoc": "Return the number of sources.\n This equals the number of vertices with no incoming\n edges in the VertexSet.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "numSinks",
      "comment": "Return the number of sinks.  \n This equals the number of vertices with no outgoing\n edges in the VertexSet.",
      "javadoc": "Return the number of sinks.  \n This equals the number of vertices with no outgoing\n edges in the VertexSet.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSources",
      "comment": "Return a Vertex[] containing all vertices in the VertexSet that\n have no incoming edges. If there are none an array of length 0 \n will be returned.",
      "javadoc": "Return a Vertex[] containing all vertices in the VertexSet that\n have no incoming edges. If there are none an array of length 0 \n will be returned.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.util.graph.Vertex[]",
        "type_short": "ghidra.util.graph.Vertex[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSinks",
      "comment": "Return a Vertex[] containing all vertices in the VertexSet that\n have no outgoing edges. If there are none an array of length 0 \n will be returned.",
      "javadoc": "Return a Vertex[] containing all vertices in the VertexSet that\n have no outgoing edges. If there are none an array of length 0 \n will be returned.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.util.graph.Vertex[]",
        "type_short": "ghidra.util.graph.Vertex[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFirstOutgoingEdge",
      "comment": "Get the first outgoing edge in the internal structures for this \n VertexSet for the parent DirectedGraph.",
      "javadoc": "Get the first outgoing edge in the internal structures for this \n VertexSet for the parent DirectedGraph.",
      "static": false,
      "params": [
        {
          "name": "v",
          "type_long": "ghidra.util.graph.Vertex",
          "type_short": "Vertex",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.util.graph.Edge",
        "type_short": "Edge",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLastOutgoingEdge",
      "comment": "Get the last outgoing edge in the internal structures for this \n VertexSet for the parent DirectedGraph.",
      "javadoc": "Get the last outgoing edge in the internal structures for this \n VertexSet for the parent DirectedGraph.",
      "static": false,
      "params": [
        {
          "name": "v",
          "type_long": "ghidra.util.graph.Vertex",
          "type_short": "Vertex",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.util.graph.Edge",
        "type_short": "Edge",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFirstIncomingEdge",
      "comment": "Get the first incoming edge in the internal structures for this \n VertexSet for the parent DirectedGraph.",
      "javadoc": "Get the first incoming edge in the internal structures for this \n VertexSet for the parent DirectedGraph.",
      "static": false,
      "params": [
        {
          "name": "v",
          "type_long": "ghidra.util.graph.Vertex",
          "type_short": "Vertex",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.util.graph.Edge",
        "type_short": "Edge",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLastIncomingEdge",
      "comment": "Get the last incoming edge in the internal structures for this \n VertexSet for the parent DirectedGraph.",
      "javadoc": "Get the last incoming edge in the internal structures for this \n VertexSet for the parent DirectedGraph.",
      "static": false,
      "params": [
        {
          "name": "v",
          "type_long": "ghidra.util.graph.Vertex",
          "type_short": "Vertex",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.util.graph.Edge",
        "type_short": "Edge",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setFirstOutgoingEdge",
      "comment": "Set the first outgoing edge of v to be e. \n It is assumed that v has already been added to the graph.",
      "javadoc": "Set the first outgoing edge of v to be e. \n It is assumed that v has already been added to the graph.",
      "static": false,
      "params": [
        {
          "name": "v",
          "type_long": "ghidra.util.graph.Vertex",
          "type_short": "Vertex",
          "comment": ""
        },
        {
          "name": "e",
          "type_long": "ghidra.util.graph.Edge",
          "type_short": "Edge",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setLastOutgoingEdge",
      "comment": "Set the last outgoing edge of v to be e. \n It is assumed that v has already been added to the graph.",
      "javadoc": "Set the last outgoing edge of v to be e. \n It is assumed that v has already been added to the graph.",
      "static": false,
      "params": [
        {
          "name": "v",
          "type_long": "ghidra.util.graph.Vertex",
          "type_short": "Vertex",
          "comment": ""
        },
        {
          "name": "e",
          "type_long": "ghidra.util.graph.Edge",
          "type_short": "Edge",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setFirstIncomingEdge",
      "comment": "Set the first incoming edge of v to be e. \n It is assumed that v has already been added to the graph.",
      "javadoc": "Set the first incoming edge of v to be e. \n It is assumed that v has already been added to the graph.",
      "static": false,
      "params": [
        {
          "name": "v",
          "type_long": "ghidra.util.graph.Vertex",
          "type_short": "Vertex",
          "comment": ""
        },
        {
          "name": "e",
          "type_long": "ghidra.util.graph.Edge",
          "type_short": "Edge",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setLastIncomingEdge",
      "comment": "Set the last incoming edge of v to be e. \n It is assumed that v has already been added to the graph.",
      "javadoc": "Set the last incoming edge of v to be e. \n It is assumed that v has already been added to the graph.",
      "static": false,
      "params": [
        {
          "name": "v",
          "type_long": "ghidra.util.graph.Vertex",
          "type_short": "Vertex",
          "comment": ""
        },
        {
          "name": "e",
          "type_long": "ghidra.util.graph.Edge",
          "type_short": "Edge",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "clear",
      "comment": "Remove all of the vertices from this VertexSet without changing\n the capacity. Much faster than removing each vertex individually.\n The EdgeSet for this graph gets cleared first.",
      "javadoc": "Remove all of the vertices from this VertexSet without changing\n the capacity. Much faster than removing each vertex individually.\n The EdgeSet for this graph gets cleared first.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getKeyedObject",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "key",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.util.graph.Vertex",
        "type_short": "Vertex",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "capacity",
      "comment": "Return the number of vertices this VertexSet may hold without growing.",
      "javadoc": "Return the number of vertices this VertexSet may hold without growing.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "grow",
      "comment": "Increases the capacity of the VertexSet so additional vertices\n can be added.",
      "javadoc": "Increases the capacity of the VertexSet so additional vertices\n can be added.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "tighten",
      "comment": "Clean up the internal storage of the VertexSet.",
      "javadoc": "Clean up the internal storage of the VertexSet.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getModificationNumber",
      "comment": "Get the number of times this VertexSet has changed",
      "javadoc": "Get the number of times this VertexSet has changed",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "iterator",
      "comment": "Return an iterator over all of the vertices in this VertexSet.\n The iterator becomes invalid and throws a ConcurrentModificationException\n if any changes are made to the VertexSet after the iterator is created.",
      "javadoc": "Return an iterator over all of the vertices in this VertexSet.\n The iterator becomes invalid and throws a ConcurrentModificationException\n if any changes are made to the VertexSet after the iterator is created.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.util.graph.GraphIterator\u003cghidra.util.graph.Vertex\u003e",
        "type_short": "GraphIterator",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toSet",
      "comment": "Return the elements of this VertexSet as a java.util.Set.",
      "javadoc": "Return the elements of this VertexSet as a java.util.Set.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Set\u003cghidra.util.graph.Vertex\u003e",
        "type_short": "Set",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toArray",
      "comment": "Return the elements of this VertexSet as an Vertex[].",
      "javadoc": "Return the elements of this VertexSet as an Vertex[].",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.util.graph.Vertex[]",
        "type_short": "ghidra.util.graph.Vertex[]",
        "comment": ""
      },
      "throws": []
    }
  ]
}
