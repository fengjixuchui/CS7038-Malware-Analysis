{
  "name": "EdgeSet",
  "comment": "Container class for a set of edges (ghidra.util.graph.Edge).",
  "javadoc": "Container class for a set of edges (ghidra.util.graph.Edge).",
  "static": false,
  "implements": [
    "ghidra.util.graph.KeyIndexableSet"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "parentGraph",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.graph.DirectedGraph",
      "type_short": "DirectedGraph",
      "constant_value": null
    },
    {
      "name": "modificationNumber",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "capacity",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "nextIndex",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "edgeIndices",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.graph.AddableLongIntHashtable",
      "type_short": "AddableLongIntHashtable",
      "constant_value": null
    },
    {
      "name": "edges",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.graph.Edge[]",
      "type_short": "ghidra.util.graph.Edge[]",
      "constant_value": null
    },
    {
      "name": "previousEdgeWithSameFrom",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.graph.Edge[]",
      "type_short": "ghidra.util.graph.Edge[]",
      "constant_value": null
    },
    {
      "name": "previousEdgeWithSameTo",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.graph.Edge[]",
      "type_short": "ghidra.util.graph.Edge[]",
      "constant_value": null
    },
    {
      "name": "nextEdgeWithSameFrom",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.graph.Edge[]",
      "type_short": "ghidra.util.graph.Edge[]",
      "constant_value": null
    },
    {
      "name": "nextEdgeWithSameTo",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.graph.Edge[]",
      "type_short": "ghidra.util.graph.Edge[]",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor",
      "javadoc": "Constructor\n@param parent The DirectedGraph that this EdgeSet belongs to.\n@param capacity The initial number of edges this edge set can have\n without growing.",
      "static": false,
      "params": [
        {
          "name": "parent",
          "type_long": "ghidra.util.graph.DirectedGraph",
          "type_short": "DirectedGraph",
          "comment": "The DirectedGraph that this EdgeSet belongs to."
        },
        {
          "name": "capacity",
          "type_long": "int",
          "type_short": "int",
          "comment": "The initial number of edges this edge set can have\n without growing."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getByIndex",
      "comment": "Returns the edge at the specified index in the internal arrays.",
      "javadoc": "Returns the edge at the specified index in the internal arrays.",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.util.graph.Edge",
        "type_short": "Edge",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "remove",
      "comment": "Removes an edge from this EdgeSet. Returns true if and only if the\n   edge was in the EdgeSet and was sucessfully removed.",
      "javadoc": "Removes an edge from this EdgeSet. Returns true if and only if the\n   edge was in the EdgeSet and was sucessfully removed.",
      "static": false,
      "params": [
        {
          "name": "e",
          "type_long": "ghidra.util.graph.Edge",
          "type_short": "Edge",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "add",
      "comment": "Adds an edge to the graph. If either endpoint is not in the graph add it.\n   If the edge is already in the graph return false and do nothing.",
      "javadoc": "Adds an edge to the graph. If either endpoint is not in the graph add it.\n   If the edge is already in the graph return false and do nothing.\n@return true if and only if the edge was sucessfully added.",
      "static": false,
      "params": [
        {
          "name": "e",
          "type_long": "ghidra.util.graph.Edge",
          "type_short": "Edge",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if and only if the edge was sucessfully added."
      },
      "throws": []
    },
    {
      "name": "contains",
      "comment": "Return true if and only if the edge is contained in this EdgeSet.",
      "javadoc": "Return true if and only if the edge is contained in this EdgeSet.",
      "static": false,
      "params": [
        {
          "name": "edge",
          "type_long": "ghidra.util.graph.Edge",
          "type_short": "Edge",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "index",
      "comment": "Returns the internal index of the given edge within this edge set.\n  Throws a class cast exception if the object is not an edge.",
      "javadoc": "Returns the internal index of the given edge within this edge set.\n  Throws a class cast exception if the object is not an edge.",
      "static": false,
      "params": [
        {
          "name": "e",
          "type_long": "ghidra.util.graph.Edge",
          "type_short": "Edge",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getNextEdgeWithSameFrom",
      "comment": "Returns the next edge having the same \u0027from\u0027 if it exists. Otherwise\n      returns null.",
      "javadoc": "Returns the next edge having the same \u0027from\u0027 if it exists. Otherwise\n      returns null.",
      "static": false,
      "params": [
        {
          "name": "e",
          "type_long": "ghidra.util.graph.Edge",
          "type_short": "Edge",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.util.graph.Edge",
        "type_short": "Edge",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getNextEdgeWithSameTo",
      "comment": "Returns next edge having the same \u0027to\u0027 if it exists. Otherwise returns\n      null.",
      "javadoc": "Returns next edge having the same \u0027to\u0027 if it exists. Otherwise returns\n      null.",
      "static": false,
      "params": [
        {
          "name": "e",
          "type_long": "ghidra.util.graph.Edge",
          "type_short": "Edge",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.util.graph.Edge",
        "type_short": "Edge",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPreviousEdgeWithSameFrom",
      "comment": "Returns the previous edge having the same \u0027from\u0027 if it exists. Otherwise\n      returns null.",
      "javadoc": "Returns the previous edge having the same \u0027from\u0027 if it exists. Otherwise\n      returns null.",
      "static": false,
      "params": [
        {
          "name": "e",
          "type_long": "ghidra.util.graph.Edge",
          "type_short": "Edge",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.util.graph.Edge",
        "type_short": "Edge",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPreviousEdgeWithSameTo",
      "comment": "Returns previous edge having the same \u0027to\u0027 if it exists. Otherwise returns\n      null.",
      "javadoc": "Returns previous edge having the same \u0027to\u0027 if it exists. Otherwise returns\n      null.",
      "static": false,
      "params": [
        {
          "name": "e",
          "type_long": "ghidra.util.graph.Edge",
          "type_short": "Edge",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.util.graph.Edge",
        "type_short": "Edge",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setNextEdgeWithSameFrom",
      "comment": "Helper method for maintaining internal data structures.",
      "javadoc": "Helper method for maintaining internal data structures.",
      "static": false,
      "params": [
        {
          "name": "e",
          "type_long": "ghidra.util.graph.Edge",
          "type_short": "Edge",
          "comment": ""
        },
        {
          "name": "nextEdge",
          "type_long": "ghidra.util.graph.Edge",
          "type_short": "Edge",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setNextEdgeWithSameTo",
      "comment": "Helper method for maintaining internal data structures.",
      "javadoc": "Helper method for maintaining internal data structures.",
      "static": false,
      "params": [
        {
          "name": "e",
          "type_long": "ghidra.util.graph.Edge",
          "type_short": "Edge",
          "comment": ""
        },
        {
          "name": "nextEdge",
          "type_long": "ghidra.util.graph.Edge",
          "type_short": "Edge",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setPreviousEdgeWithSameFrom",
      "comment": "Helper method for maintaining internal data structures.",
      "javadoc": "Helper method for maintaining internal data structures.",
      "static": false,
      "params": [
        {
          "name": "e",
          "type_long": "ghidra.util.graph.Edge",
          "type_short": "Edge",
          "comment": ""
        },
        {
          "name": "previousEdge",
          "type_long": "ghidra.util.graph.Edge",
          "type_short": "Edge",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setPreviousEdgeWithSameTo",
      "comment": "Helper method for maintaining internal data structures.",
      "javadoc": "Helper method for maintaining internal data structures.",
      "static": false,
      "params": [
        {
          "name": "e",
          "type_long": "ghidra.util.graph.Edge",
          "type_short": "Edge",
          "comment": ""
        },
        {
          "name": "previousEdge",
          "type_long": "ghidra.util.graph.Edge",
          "type_short": "Edge",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "size",
      "comment": "Returns the current number of edges within this edge set.",
      "javadoc": "Returns the current number of edges within this edge set.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "clear",
      "comment": "Empties out the edge set while leaving the capacity alone. Much faster\n      than removing the edges one by one.",
      "javadoc": "Empties out the edge set while leaving the capacity alone. Much faster\n      than removing the edges one by one.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "capacity",
      "comment": "Returns the number of edges this edge set can hold without growing.",
      "javadoc": "Returns the number of edges this edge set can hold without growing.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "grow",
      "comment": "Either compacts the edge set by removing vacant positions if there are\n      many or grows the edge set so that there is additional space.",
      "javadoc": "Either compacts the edge set by removing vacant positions if there are\n      many or grows the edge set so that there is additional space.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "tighten",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "iterator",
      "comment": "Returns an iterator for this EdgeSet.",
      "javadoc": "Returns an iterator for this EdgeSet.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.util.graph.GraphIterator\u003cghidra.util.graph.Edge\u003e",
        "type_short": "GraphIterator",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getModificationNumber",
      "comment": "Used to test if edges have been added or removed from this edge set.",
      "javadoc": "Used to test if edges have been added or removed from this edge set.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getKeyedObject",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "key",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.util.graph.Edge",
        "type_short": "Edge",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toSet",
      "comment": "Get the edges in this EdgeSet as a java.util.Set.",
      "javadoc": "Get the edges in this EdgeSet as a java.util.Set.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Set\u003cghidra.util.graph.Edge\u003e",
        "type_short": "Set",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toArray",
      "comment": "",
      "javadoc": "@return array of Edges contained in this EdgeSet",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.util.graph.Edge[]",
        "type_short": "ghidra.util.graph.Edge[]",
        "comment": "array of Edges contained in this EdgeSet"
      },
      "throws": []
    }
  ]
}
