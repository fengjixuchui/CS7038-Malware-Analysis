{
  "name": "Edge",
  "comment": "An Edge joins a pair of vertices. \n The from and to vertex of an edge can not be changed.",
  "javadoc": "An Edge joins a pair of vertices. \n The from and to vertex of an edge can not be changed.",
  "static": false,
  "implements": [
    "ghidra.util.graph.KeyedObject",
    "java.lang.Comparable"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "key",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "kof",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.util.graph.KeyedObjectFactory",
      "type_short": "KeyedObjectFactory",
      "constant_value": null
    },
    {
      "name": "from",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.graph.Vertex",
      "type_short": "Vertex",
      "constant_value": null
    },
    {
      "name": "to",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.graph.Vertex",
      "type_short": "Vertex",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "@param from The from or parent vertex.\n@param to The to or child vertex.",
      "static": false,
      "params": [
        {
          "name": "from",
          "type_long": "ghidra.util.graph.Vertex",
          "type_short": "Vertex",
          "comment": "The from or parent vertex."
        },
        {
          "name": "to",
          "type_long": "ghidra.util.graph.Vertex",
          "type_short": "Vertex",
          "comment": "The to or child vertex."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getNextKey",
      "comment": "Returns next key",
      "javadoc": "Returns next key",
      "static": true,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "from",
      "comment": "Returns from vertex.",
      "javadoc": "Returns from vertex.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.util.graph.Vertex",
        "type_short": "Vertex",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "to",
      "comment": "Returns to vertex.",
      "javadoc": "Returns to vertex.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.util.graph.Vertex",
        "type_short": "Vertex",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "key",
      "comment": "Returns the key of this edge.",
      "javadoc": "Returns the key of this edge.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "compareTo",
      "comment": "Compare one edge to another. Based on time of creation.",
      "javadoc": "Compare one edge to another. Based on time of creation.",
      "static": false,
      "params": [
        {
          "name": "edge",
          "type_long": "ghidra.util.graph.Edge",
          "type_short": "Edge",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "equals",
      "comment": "Overides equals method by comparing keys.",
      "javadoc": "Overides equals method by comparing keys.",
      "static": false,
      "params": [
        {
          "name": "obj",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hashCode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    }
  ]
}
