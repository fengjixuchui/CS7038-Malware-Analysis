{
  "name": "WeightedDigraph",
  "comment": "DirectedGraph with edge weights. Weights are assumed to be 0.0 by default.",
  "javadoc": "DirectedGraph with edge weights. Weights are assumed to be 0.0 by default.",
  "static": false,
  "implements": [],
  "extends": "ghidra.util.graph.DirectedGraph",
  "fields": [
    {
      "name": "defaultValue",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "double",
      "type_short": "double",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Create weighted directed graph with default edge weight of 0.0\n and room for vertexCapicity vertices and edgeCapacity edges.",
      "javadoc": "Create weighted directed graph with default edge weight of 0.0\n and room for vertexCapicity vertices and edgeCapacity edges.",
      "static": false,
      "params": [
        {
          "name": "vertexCapacity",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "edgeCapacity",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "weights",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.util.graph.attributes.DoubleAttribute\u003cghidra.util.graph.Edge\u003e",
        "type_short": "DoubleAttribute",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Create a weighted directed graph. Use the defaultEdgeWeight for any edges whose\n  weights have not been set.",
      "javadoc": "Create a weighted directed graph. Use the defaultEdgeWeight for any edges whose\n  weights have not been set.",
      "static": false,
      "params": [
        {
          "name": "vertexCapacity",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "edgeCapacity",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "defaultEdgeWeight",
          "type_long": "double",
          "type_short": "double",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Default constructor",
      "javadoc": "Default constructor",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "inDegree",
      "comment": "Returns the weighted in-degree of this vertex. The in-degree is the\n sum of weights of all enges entering this vertex.",
      "javadoc": "Returns the weighted in-degree of this vertex. The in-degree is the\n sum of weights of all enges entering this vertex.",
      "static": false,
      "params": [
        {
          "name": "v",
          "type_long": "ghidra.util.graph.Vertex",
          "type_short": "Vertex",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "double",
        "type_short": "double",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "outDegree",
      "comment": "Returns the weighted out-degree of this vertex. The out-degree is the\n sum of weights of all enges entering this vertex.",
      "javadoc": "Returns the weighted out-degree of this vertex. The out-degree is the\n sum of weights of all enges entering this vertex.",
      "static": false,
      "params": [
        {
          "name": "v",
          "type_long": "ghidra.util.graph.Vertex",
          "type_short": "Vertex",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "double",
        "type_short": "double",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "selfDegree",
      "comment": "Returns the weighted self-degree of this vertex. The self-degree is the\n sum of weights of all loops at this vertex.",
      "javadoc": "Returns the weighted self-degree of this vertex. The self-degree is the\n sum of weights of all loops at this vertex.",
      "static": false,
      "params": [
        {
          "name": "v",
          "type_long": "ghidra.util.graph.Vertex",
          "type_short": "Vertex",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "double",
        "type_short": "double",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "degree",
      "comment": "Returns the weighted degree of this vertex. The degree is the\n sum of weights of all edges entering and leaving this vertex.",
      "javadoc": "Returns the weighted degree of this vertex. The degree is the\n sum of weights of all edges entering and leaving this vertex.",
      "static": false,
      "params": [
        {
          "name": "v",
          "type_long": "ghidra.util.graph.Vertex",
          "type_short": "Vertex",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "double",
        "type_short": "double",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getWeight",
      "comment": "Returns the weight of the specified edge.",
      "javadoc": "Returns the weight of the specified edge.",
      "static": false,
      "params": [
        {
          "name": "e",
          "type_long": "ghidra.util.graph.Edge",
          "type_short": "Edge",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "double",
        "type_short": "double",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setWeight",
      "comment": "Sets the weight of the specified edge.",
      "javadoc": "Sets the weight of the specified edge.",
      "static": false,
      "params": [
        {
          "name": "e",
          "type_long": "ghidra.util.graph.Edge",
          "type_short": "Edge",
          "comment": ""
        },
        {
          "name": "value",
          "type_long": "double",
          "type_short": "double",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDefaultEdgeWeight",
      "comment": "Gets the defaultEdgeWeight of this graph specified at creation\n time.",
      "javadoc": "Gets the defaultEdgeWeight of this graph specified at creation\n time.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "double",
        "type_short": "double",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "add",
      "comment": "Add an edge. If successful (i.e. that edge does not already appear\n in the graph), set the weight to the default value",
      "javadoc": "Add an edge. If successful (i.e. that edge does not already appear\n in the graph), set the weight to the default value\n@return true if edge added succesfuly.",
      "static": false,
      "params": [
        {
          "name": "e",
          "type_long": "ghidra.util.graph.Edge",
          "type_short": "Edge",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if edge added succesfuly."
      },
      "throws": []
    },
    {
      "name": "add",
      "comment": "Add an edge. If successful (i.e. that edge does not appear in the graph),\n then set the weight to the specified value.",
      "javadoc": "Add an edge. If successful (i.e. that edge does not appear in the graph),\n then set the weight to the specified value.\n@return true if edge added succesfuly.",
      "static": false,
      "params": [
        {
          "name": "e",
          "type_long": "ghidra.util.graph.Edge",
          "type_short": "Edge",
          "comment": ""
        },
        {
          "name": "weight",
          "type_long": "double",
          "type_short": "double",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if edge added succesfuly."
      },
      "throws": []
    },
    {
      "name": "getEdgeWeights",
      "comment": "Get the edge weights for this graph.",
      "javadoc": "Get the edge weights for this graph.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.util.graph.attributes.DoubleAttribute\u003cghidra.util.graph.Edge\u003e",
        "type_short": "DoubleAttribute",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "copy",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.util.graph.DirectedGraph",
        "type_short": "DirectedGraph",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "intersectionWith",
      "comment": "Creates intersection of graphs in place by adding all vertices and edges of\n other graph to this graph. This method used to return a different graph\n as the intersection but now does not.",
      "javadoc": "Creates intersection of graphs in place by adding all vertices and edges of\n other graph to this graph. This method used to return a different graph\n as the intersection but now does not.",
      "static": false,
      "params": [
        {
          "name": "otherGraph",
          "type_long": "ghidra.util.graph.DirectedGraph",
          "type_short": "DirectedGraph",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "unionWith",
      "comment": "Creates union of graphs in place by adding all vertices and edges of\n other graph to this graph. This method used to return a different graph\n as the union but now does not.",
      "javadoc": "Creates union of graphs in place by adding all vertices and edges of\n other graph to this graph. This method used to return a different graph\n as the union but now does not.",
      "static": false,
      "params": [
        {
          "name": "otherGraph",
          "type_long": "ghidra.util.graph.DirectedGraph",
          "type_short": "DirectedGraph",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
