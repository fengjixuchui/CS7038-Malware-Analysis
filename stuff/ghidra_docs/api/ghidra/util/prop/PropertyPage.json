{
  "name": "PropertyPage",
  "comment": "Manages property values of type int, String, Object, and\n \"void\"  for a page of possible addresses. Void serves as a marker \n for whether an address has a property. The derived class for each type holds\n the actual value of the property, and overrides the\n appropriate add() and get() methods.",
  "javadoc": "Manages property values of type int, String, Object, and\n \"void\"  for a page of possible addresses. Void serves as a marker \n for whether an address has a property. The derived class for each type holds\n the actual value of the property, and overrides the\n appropriate add() and get() methods.",
  "static": false,
  "implements": [
    "java.io.Serializable"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "serialVersionUID",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "long",
      "type_short": "long",
      "constant_value": "1"
    },
    {
      "name": "indexer",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.datastruct.ShortKeyIndexer",
      "type_short": "ShortKeyIndexer",
      "constant_value": null
    },
    {
      "name": "keySet",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.datastruct.ShortKeySet",
      "type_short": "ShortKeySet",
      "constant_value": null
    },
    {
      "name": "table",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.datastruct.DataTable",
      "type_short": "DataTable",
      "constant_value": null
    },
    {
      "name": "pageSize",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "short",
      "type_short": "short",
      "constant_value": null
    },
    {
      "name": "switchSize",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "objectClass",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.Class\u003c?\u003e",
      "type_short": "Class",
      "constant_value": null
    },
    {
      "name": "noValueException",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.exception.NoValueException",
      "type_short": "NoValueException",
      "constant_value": null
    },
    {
      "name": "threshold",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor",
      "javadoc": "Constructor\n@param pageSize max number of properties on this page\n@param pageID page identifier",
      "static": false,
      "params": [
        {
          "name": "pageSize",
          "type_long": "short",
          "type_short": "short",
          "comment": "max number of properties on this page"
        },
        {
          "name": "pageID",
          "type_long": "long",
          "type_short": "long",
          "comment": "page identifier"
        },
        {
          "name": "valueSize",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "objectClass",
          "type_long": "java.lang.Class\u003c?\u003e",
          "type_short": "Class",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getNext",
      "comment": "Returns the next offset after the given offset that has a property\n   value.",
      "javadoc": "Returns the next offset after the given offset that has a property\n   value.\n@param offset offset into the page",
      "static": false,
      "params": [
        {
          "name": "offset",
          "type_long": "short",
          "type_short": "short",
          "comment": "offset into the page"
        }
      ],
      "return": {
        "type_long": "short",
        "type_short": "short",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addKey",
      "comment": "Adds the key to the keySet. If all values are set,\n use FullBitSet.",
      "javadoc": "Adds the key to the keySet. If all values are set,\n use FullBitSet.\n@param key The key to be added to the set.",
      "static": false,
      "params": [
        {
          "name": "key",
          "type_long": "short",
          "type_short": "short",
          "comment": "The key to be added to the set."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addKeys",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "startKey",
          "type_long": "short",
          "type_short": "short",
          "comment": ""
        },
        {
          "name": "endKey",
          "type_long": "short",
          "type_short": "short",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPrevious",
      "comment": "Return the previous offset (before offset) that has a\n property.",
      "javadoc": "Return the previous offset (before offset) that has a\n property.\n@param offset offset into the page",
      "static": false,
      "params": [
        {
          "name": "offset",
          "type_long": "short",
          "type_short": "short",
          "comment": "offset into the page"
        }
      ],
      "return": {
        "type_long": "short",
        "type_short": "short",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFirst",
      "comment": "Return the first offset that has a property.",
      "javadoc": "Return the first offset that has a property.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "short",
        "type_short": "short",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLast",
      "comment": "Return the last offset that has a property.",
      "javadoc": "Return the last offset that has a property.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "short",
        "type_short": "short",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isEmpty",
      "comment": "Return whether this page has any offset with\n a property.",
      "javadoc": "Return whether this page has any offset with\n a property.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hasProperty",
      "comment": "Return whether the given offset has a property.",
      "javadoc": "Return whether the given offset has a property.\n@param offset offset into the page",
      "static": false,
      "params": [
        {
          "name": "offset",
          "type_long": "short",
          "type_short": "short",
          "comment": "offset into the page"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getRow",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "offset",
          "type_long": "short",
          "type_short": "short",
          "comment": ""
        },
        {
          "name": "forceRow",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSaveableObject",
      "comment": "Get the object property at the given offset.",
      "javadoc": "Get the object property at the given offset.\n@param offset offset into the page\n@exception TypeMismatchException thrown if the page\n does not support object values for properties",
      "static": false,
      "params": [
        {
          "name": "offset",
          "type_long": "short",
          "type_short": "short",
          "comment": "offset into the page"
        }
      ],
      "return": {
        "type_long": "ghidra.util.Saveable",
        "type_short": "Saveable",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addSaveableObject",
      "comment": "Add the object property at the given offset.",
      "javadoc": "Add the object property at the given offset.\n@param offset offset into the page\n@exception TypeMismatchException thrown if the page\n does not support object values for properties",
      "static": false,
      "params": [
        {
          "name": "offset",
          "type_long": "short",
          "type_short": "short",
          "comment": "offset into the page"
        },
        {
          "name": "value",
          "type_long": "ghidra.util.Saveable",
          "type_short": "Saveable",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getObject",
      "comment": "Get the object property at the given offset.",
      "javadoc": "Get the object property at the given offset.\n@param offset offset into the page\n@exception TypeMismatchException thrown if the page\n does not support object values for properties",
      "static": false,
      "params": [
        {
          "name": "offset",
          "type_long": "short",
          "type_short": "short",
          "comment": "offset into the page"
        }
      ],
      "return": {
        "type_long": "java.lang.Object",
        "type_short": "Object",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addObject",
      "comment": "Add the object property at the given offset.",
      "javadoc": "Add the object property at the given offset.\n@param offset offset into the page\n@exception TypeMismatchException thrown if the page\n does not support object values for properties",
      "static": false,
      "params": [
        {
          "name": "offset",
          "type_long": "short",
          "type_short": "short",
          "comment": "offset into the page"
        },
        {
          "name": "value",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getString",
      "comment": "Get the String property at the given offset.",
      "javadoc": "Get the String property at the given offset.\n@param offset offset into the page\n@exception TypeMismatchException thrown if the page\n does not support String values for properties",
      "static": false,
      "params": [
        {
          "name": "offset",
          "type_long": "short",
          "type_short": "short",
          "comment": "offset into the page"
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addString",
      "comment": "Add the String property at the given offset.",
      "javadoc": "Add the String property at the given offset.\n@param offset offset into the page\n@exception TypeMismatchException thrown if the page\n does not support String values for properties",
      "static": false,
      "params": [
        {
          "name": "offset",
          "type_long": "short",
          "type_short": "short",
          "comment": "offset into the page"
        },
        {
          "name": "value",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getInt",
      "comment": "Get the int property at the given offset.",
      "javadoc": "Get the int property at the given offset.\n@param offset offset into the page\n@exception TypeMismatchException thrown if the page\n does not support int values for properties",
      "static": false,
      "params": [
        {
          "name": "offset",
          "type_long": "short",
          "type_short": "short",
          "comment": "offset into the page"
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.NoValueException",
          "type_short": "NoValueException",
          "comment": ""
        }
      ]
    },
    {
      "name": "addInt",
      "comment": "Add the int property at the given offset.",
      "javadoc": "Add the int property at the given offset.\n@param offset offset into the page\n@exception TypeMismatchException thrown if the page\n does not support int values for properties",
      "static": false,
      "params": [
        {
          "name": "offset",
          "type_long": "short",
          "type_short": "short",
          "comment": "offset into the page"
        },
        {
          "name": "value",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLong",
      "comment": "Get the long property at the given offset.",
      "javadoc": "Get the long property at the given offset.\n@param offset offset into the page\n@exception TypeMismatchException thrown if the page\n does not support long values for properties",
      "static": false,
      "params": [
        {
          "name": "offset",
          "type_long": "short",
          "type_short": "short",
          "comment": "offset into the page"
        }
      ],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.NoValueException",
          "type_short": "NoValueException",
          "comment": ""
        }
      ]
    },
    {
      "name": "addLong",
      "comment": "Add the long property at the given offset.",
      "javadoc": "Add the long property at the given offset.\n@param offset offset into the page\n@exception TypeMismatchException thrown if the page\n does not support int values for properties",
      "static": false,
      "params": [
        {
          "name": "offset",
          "type_long": "short",
          "type_short": "short",
          "comment": "offset into the page"
        },
        {
          "name": "value",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getShort",
      "comment": "Get the short property at the given offset.",
      "javadoc": "Get the short property at the given offset.\n@param offset offset into the page\n@exception TypeMismatchException thrown if the page\n does not support long values for properties",
      "static": false,
      "params": [
        {
          "name": "offset",
          "type_long": "short",
          "type_short": "short",
          "comment": "offset into the page"
        }
      ],
      "return": {
        "type_long": "short",
        "type_short": "short",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.NoValueException",
          "type_short": "NoValueException",
          "comment": ""
        }
      ]
    },
    {
      "name": "addShort",
      "comment": "Add the short property at the given offset.",
      "javadoc": "Add the short property at the given offset.\n@param offset offset into the page\n@exception TypeMismatchException thrown if the page\n does not support int values for properties",
      "static": false,
      "params": [
        {
          "name": "offset",
          "type_long": "short",
          "type_short": "short",
          "comment": "offset into the page"
        },
        {
          "name": "value",
          "type_long": "short",
          "type_short": "short",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getByte",
      "comment": "Get the long property at the given offset.",
      "javadoc": "Get the long property at the given offset.\n@param offset offset into the page\n@exception TypeMismatchException thrown if the page\n does not support long values for properties",
      "static": false,
      "params": [
        {
          "name": "offset",
          "type_long": "short",
          "type_short": "short",
          "comment": "offset into the page"
        }
      ],
      "return": {
        "type_long": "byte",
        "type_short": "byte",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.NoValueException",
          "type_short": "NoValueException",
          "comment": ""
        }
      ]
    },
    {
      "name": "addByte",
      "comment": "Add the byte property at the given offset.",
      "javadoc": "Add the byte property at the given offset.\n@param offset offset into the page\n@exception TypeMismatchException thrown if the page\n does not support int values for properties",
      "static": false,
      "params": [
        {
          "name": "offset",
          "type_long": "short",
          "type_short": "short",
          "comment": "offset into the page"
        },
        {
          "name": "value",
          "type_long": "byte",
          "type_short": "byte",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "add",
      "comment": "Mark the given offset as having a property.",
      "javadoc": "Mark the given offset as having a property.\n@param offset offset into the page\n@exception TypeMismatchException thrown if the page\n does not support \"void\" properties",
      "static": false,
      "params": [
        {
          "name": "offset",
          "type_long": "short",
          "type_short": "short",
          "comment": "offset into the page"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addRange",
      "comment": "Mark the given offset ranges as having a property.",
      "javadoc": "Mark the given offset ranges as having a property.\n@param startOffset first offset.\n@param endOffset last offset.\n@exception TypeMismatchException thrown if the page\n does not support \"void\" properties",
      "static": false,
      "params": [
        {
          "name": "startOffset",
          "type_long": "short",
          "type_short": "short",
          "comment": "first offset."
        },
        {
          "name": "endOffset",
          "type_long": "short",
          "type_short": "short",
          "comment": "last offset."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSize",
      "comment": "Get the number of properties on this page.",
      "javadoc": "Get the number of properties on this page.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "remove",
      "comment": "Remove the property at the given offset.",
      "javadoc": "Remove the property at the given offset.\n@param offset offset into the page\n@return true if the property was removed; return false\n if there was not a property at offset",
      "static": false,
      "params": [
        {
          "name": "offset",
          "type_long": "short",
          "type_short": "short",
          "comment": "offset into the page"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the property was removed; return false\n if there was not a property at offset"
      },
      "throws": []
    }
  ]
}
