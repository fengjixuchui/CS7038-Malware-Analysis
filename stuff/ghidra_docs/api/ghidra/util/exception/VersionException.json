{
  "name": "VersionException",
  "comment": "Exception thrown when an object\u0027s version does not match its expected version.",
  "javadoc": "Exception thrown when an object\u0027s version does not match its expected version.",
  "static": false,
  "implements": [],
  "extends": "ghidra.util.exception.UsrException",
  "fields": [
    {
      "name": "UNKNOWN_VERSION",
      "comment": "Object created with unknown software version.",
      "javadoc": "Object created with unknown software version.",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "0"
    },
    {
      "name": "OLDER_VERSION",
      "comment": "Object created with older software version.",
      "javadoc": "Object created with older software version.",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "1"
    },
    {
      "name": "NEWER_VERSION",
      "comment": "Object created with newer software version.",
      "javadoc": "Object created with newer software version.",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "2"
    },
    {
      "name": "upgradeable",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "versionIndicator",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "detailMessage",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor - not upgradeable",
      "javadoc": "Constructor - not upgradeable",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor - not upgradeable",
      "javadoc": "Constructor - not upgradeable\n@param msg detailed message",
      "static": false,
      "params": [
        {
          "name": "msg",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "detailed message"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor.",
      "javadoc": "Constructor.\n@param upgradable true indicates that an upgrade is possible.\n If true the version indicator value is set to OLDER_VERSION, if false\n it is set to UNKNOWN_VERSION.",
      "static": false,
      "params": [
        {
          "name": "upgradable",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true indicates that an upgrade is possible.\n If true the version indicator value is set to OLDER_VERSION, if false\n it is set to UNKNOWN_VERSION."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor.",
      "javadoc": "Constructor.\n@param versionIndicator OLDER_VERSION, NEWER_VERSION or UNKNOWN_VERSION\n@param upgradable true indicates that an upgrade is possible.",
      "static": false,
      "params": [
        {
          "name": "versionIndicator",
          "type_long": "int",
          "type_short": "int",
          "comment": "OLDER_VERSION, NEWER_VERSION or UNKNOWN_VERSION"
        },
        {
          "name": "upgradable",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true indicates that an upgrade is possible."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor.",
      "javadoc": "Constructor.\n@param msg detailed message\n@param versionIndicator OLDER_VERSION, NEWER_VERSION or UNKNOWN_VERSION\n@param upgradable true indicates that an upgrade is possible.",
      "static": false,
      "params": [
        {
          "name": "msg",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "detailed message"
        },
        {
          "name": "versionIndicator",
          "type_long": "int",
          "type_short": "int",
          "comment": "OLDER_VERSION, NEWER_VERSION or UNKNOWN_VERSION"
        },
        {
          "name": "upgradable",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true indicates that an upgrade is possible."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDefaultMessage",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "upgradable",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isUpgradable",
      "comment": "Return true if the file can be upgraded to the current version.",
      "javadoc": "Return true if the file can be upgraded to the current version.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getVersionIndicator",
      "comment": "Return a version indicator (OLDER_VERSION, NEWER_VERSION or UNKNOWN_VERSION).\n Only an OLDER_VERSION has the possibility of being upgradeable.",
      "javadoc": "Return a version indicator (OLDER_VERSION, NEWER_VERSION or UNKNOWN_VERSION).\n Only an OLDER_VERSION has the possibility of being upgradeable.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "combine",
      "comment": "Combine another VersionException with this one.",
      "javadoc": "Combine another VersionException with this one.\n@param ve another version exception\n@return this combined version exception",
      "static": false,
      "params": [
        {
          "name": "ve",
          "type_long": "ghidra.util.exception.VersionException",
          "type_short": "VersionException",
          "comment": "another version exception"
        }
      ],
      "return": {
        "type_long": "ghidra.util.exception.VersionException",
        "type_short": "VersionException",
        "comment": "this combined version exception"
      },
      "throws": []
    },
    {
      "name": "setDetailMessage",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "message",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDetailMessage",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    }
  ]
}
