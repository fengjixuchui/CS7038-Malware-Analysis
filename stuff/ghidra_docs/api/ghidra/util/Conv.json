{
  "name": "Conv",
  "comment": "Helper methods for converting between\n number data types without negative\n promotion.",
  "javadoc": "Helper methods for converting between\n number data types without negative\n promotion.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "BYTE_MASK",
      "comment": "A byte mask.",
      "javadoc": "A byte mask.",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "255"
    },
    {
      "name": "SHORT_MASK",
      "comment": "A short mask.",
      "javadoc": "A short mask.",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "65535"
    },
    {
      "name": "INT_MASK",
      "comment": "An integer mask.",
      "javadoc": "An integer mask.",
      "static": true,
      "type_long": "long",
      "type_short": "long",
      "constant_value": "4294967295"
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "byteToShort",
      "comment": "Converts a byte to a short.",
      "javadoc": "Converts a byte to a short.\n@param b the byte\n@return the short equivalent of the byte",
      "static": true,
      "params": [
        {
          "name": "b",
          "type_long": "byte",
          "type_short": "byte",
          "comment": "the byte"
        }
      ],
      "return": {
        "type_long": "short",
        "type_short": "short",
        "comment": "the short equivalent of the byte"
      },
      "throws": []
    },
    {
      "name": "byteToInt",
      "comment": "Converts a byte to an integer.",
      "javadoc": "Converts a byte to an integer.\n@param b the byte\n@return the integer equivalent of the byte",
      "static": true,
      "params": [
        {
          "name": "b",
          "type_long": "byte",
          "type_short": "byte",
          "comment": "the byte"
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the integer equivalent of the byte"
      },
      "throws": []
    },
    {
      "name": "byteToLong",
      "comment": "Converts a byte to a long.",
      "javadoc": "Converts a byte to a long.\n@param b the byte\n@return the long equivalent of the byte",
      "static": true,
      "params": [
        {
          "name": "b",
          "type_long": "byte",
          "type_short": "byte",
          "comment": "the byte"
        }
      ],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": "the long equivalent of the byte"
      },
      "throws": []
    },
    {
      "name": "shortToInt",
      "comment": "Converts a short to an integer.",
      "javadoc": "Converts a short to an integer.\n@param s the short\n@return the integer equivalent of the short",
      "static": true,
      "params": [
        {
          "name": "s",
          "type_long": "short",
          "type_short": "short",
          "comment": "the short"
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the integer equivalent of the short"
      },
      "throws": []
    },
    {
      "name": "shortToLong",
      "comment": "Converts a short to a long.",
      "javadoc": "Converts a short to a long.\n@param s the short\n@return the long eqivalent of the short",
      "static": true,
      "params": [
        {
          "name": "s",
          "type_long": "short",
          "type_short": "short",
          "comment": "the short"
        }
      ],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": "the long eqivalent of the short"
      },
      "throws": []
    },
    {
      "name": "intToLong",
      "comment": "Converts an integer to a long.",
      "javadoc": "Converts an integer to a long.\n@param i the integer\n@return the long equivalent of the long",
      "static": true,
      "params": [
        {
          "name": "i",
          "type_long": "int",
          "type_short": "int",
          "comment": "the integer"
        }
      ],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": "the long equivalent of the long"
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "array",
          "type_long": "byte[]",
          "type_short": "byte[]",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toHexString",
      "comment": "Converts a byte into a padded hex string.",
      "javadoc": "Converts a byte into a padded hex string.\n@param b the byte\n@return the padded hex string",
      "static": true,
      "params": [
        {
          "name": "b",
          "type_long": "byte",
          "type_short": "byte",
          "comment": "the byte"
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the padded hex string"
      },
      "throws": []
    },
    {
      "name": "toHexString",
      "comment": "Converts a short into a padded hex string.",
      "javadoc": "Converts a short into a padded hex string.\n@param s the short\n@return the padded hex string",
      "static": true,
      "params": [
        {
          "name": "s",
          "type_long": "short",
          "type_short": "short",
          "comment": "the short"
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the padded hex string"
      },
      "throws": []
    },
    {
      "name": "toHexString",
      "comment": "Converts an integer into a padded hex string.",
      "javadoc": "Converts an integer into a padded hex string.\n@param i the integer\n@return the padded hex string",
      "static": true,
      "params": [
        {
          "name": "i",
          "type_long": "int",
          "type_short": "int",
          "comment": "the integer"
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the padded hex string"
      },
      "throws": []
    },
    {
      "name": "toHexString",
      "comment": "Converts a long into a padded hex string.",
      "javadoc": "Converts a long into a padded hex string.\n@param l the long\n@return the padded hex string",
      "static": true,
      "params": [
        {
          "name": "l",
          "type_long": "long",
          "type_short": "long",
          "comment": "the long"
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the padded hex string"
      },
      "throws": []
    },
    {
      "name": "zeropad",
      "comment": "Returns a string that is extended to \n length len with zeroes.",
      "javadoc": "Returns a string that is extended to \n length len with zeroes.\n@param s The string to pad\n@param len The length of the return string\n@return A string that has been padded to be of legnth len",
      "static": true,
      "params": [
        {
          "name": "s",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "The string to pad"
        },
        {
          "name": "len",
          "type_long": "int",
          "type_short": "int",
          "comment": "The length of the return string"
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "A string that has been padded to be of legnth len"
      },
      "throws": []
    },
    {
      "name": "main",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "args",
          "type_long": "java.lang.String[]",
          "type_short": "java.lang.String[]",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
