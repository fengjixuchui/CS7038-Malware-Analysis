{
  "name": "GhidraTableCellRenderer",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "extends": "docking.widgets.table.GTableCellRenderer",
  "fields": [
    {
      "name": "BAD_REF_ADDR_COLOR",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.awt.Color",
      "type_short": "Color",
      "constant_value": null
    },
    {
      "name": "EXT_REF_RESOLVED_COLOR",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.awt.Color",
      "type_short": "Color",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new GhidraTableCellRenderer using the specified font.",
      "javadoc": "Constructs a new GhidraTableCellRenderer using the specified font.\n@param f the font to use when rendering text in the table cells",
      "static": false,
      "params": [
        {
          "name": "f",
          "type_long": "java.awt.Font",
          "type_short": "Font",
          "comment": "the font to use when rendering text in the table cells"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getText",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "value",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setForegroundColor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "table",
          "type_long": "javax.swing.JTable",
          "type_short": "JTable",
          "comment": ""
        },
        {
          "name": "model",
          "type_long": "javax.swing.table.TableModel",
          "type_short": "TableModel",
          "comment": ""
        },
        {
          "name": "value",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isExternalAdress",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "value",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isResolvedExternalAddress",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "model",
          "type_long": "javax.swing.table.TableModel",
          "type_short": "TableModel",
          "comment": ""
        },
        {
          "name": "extAddr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isValueOutOfMemoryAddress",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "model",
          "type_long": "javax.swing.table.TableModel",
          "type_short": "TableModel",
          "comment": ""
        },
        {
          "name": "value",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    }
  ]
}
