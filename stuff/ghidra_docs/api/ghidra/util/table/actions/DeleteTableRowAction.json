{
  "name": "DeleteTableRowAction",
  "comment": "An action to delete data from a table.   If your model is a ThreadedTableModel, then\n this class is self-contained.  If you have some other kind of model, then you must \n override #removeSelectedItems() in order to remove items from your model when the \n action is executed.\n \n Note: deleting a row object is simply removing it from the given table/model.  This code is\n not altering the database.\n \n Tip: if you are a plugin that uses transient providers, then use \n #registerDummy(PluginTool, String) at creation time to install a dummy representative of\n this action in the Tool\u0027s options so that user\u0027s can update keybindings, regardless of whether\n they have ever shown one of your transient providers.",
  "javadoc": "An action to delete data from a table.   If your model is a {@link ThreadedTableModel}, then\n this class is self-contained.  If you have some other kind of model, then you must \n override {@link #removeSelectedItems()} in order to remove items from your model when the \n action is executed.\n \u003cp\u003e\n Note: deleting a row object is simply removing it from the given table/model.  This code is\n not altering the database.\n \u003cp\u003e\n Tip: if you are a plugin that uses transient providers, then use \n {@link #registerDummy(PluginTool, String)} at creation time to install a dummy representative of\n this action in the Tool\u0027s options so that user\u0027s can update keybindings, regardless of whether\n they have ever shown one of your transient providers.",
  "static": false,
  "implements": [],
  "extends": "docking.action.DockingAction",
  "fields": [
    {
      "name": "DEFAULT_KEYSTROKE",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "javax.swing.KeyStroke",
      "type_short": "KeyStroke",
      "constant_value": null
    },
    {
      "name": "ICON",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "javax.swing.ImageIcon",
      "type_short": "ImageIcon",
      "constant_value": null
    },
    {
      "name": "NAME",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Remove Items\""
    },
    {
      "name": "table",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.widgets.table.GTable",
      "type_short": "GTable",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "registerDummy",
      "comment": "A special method that triggers the registration of this action\u0027s shared/dummy keybinding.\n This is needed for plugins that produce transient component providers that do not exist\n at the time the plugin is loaded.",
      "javadoc": "A special method that triggers the registration of this action\u0027s shared/dummy keybinding.\n This is needed for plugins that produce transient component providers that do not exist\n at the time the plugin is loaded.\n@param tool the tool whose options will updated with a dummy keybinding\n@param owner the owner of the action that may be installed",
      "static": true,
      "params": [
        {
          "name": "tool",
          "type_long": "ghidra.framework.plugintool.PluginTool",
          "type_short": "PluginTool",
          "comment": "the tool whose options will updated with a dummy keybinding"
        },
        {
          "name": "owner",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the owner of the action that may be installed"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "table",
          "type_long": "docking.widgets.table.GTable",
          "type_short": "GTable",
          "comment": ""
        },
        {
          "name": "owner",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "owner",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "defaultkeyStroke",
          "type_long": "javax.swing.KeyStroke",
          "type_short": "KeyStroke",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "initKeyStroke",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "keyStroke",
          "type_long": "javax.swing.KeyStroke",
          "type_short": "KeyStroke",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isEnabledForContext",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "context",
          "type_long": "docking.ActionContext",
          "type_short": "ActionContext",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "actionPerformed",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "context",
          "type_long": "docking.ActionContext",
          "type_short": "ActionContext",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeSelectedItems",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeRowObjects",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "model",
          "type_long": "javax.swing.table.TableModel",
          "type_short": "TableModel",
          "comment": ""
        },
        {
          "name": "itemsToRemove",
          "type_long": "java.util.List\u003cjava.lang.Object\u003e",
          "type_short": "List",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "checkForBusy",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "model",
          "type_long": "javax.swing.table.TableModel",
          "type_short": "TableModel",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "selectRow",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "model",
          "type_long": "javax.swing.table.TableModel",
          "type_short": "TableModel",
          "comment": ""
        },
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
