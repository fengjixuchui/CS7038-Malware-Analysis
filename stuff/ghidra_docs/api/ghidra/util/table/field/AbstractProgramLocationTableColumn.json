{
  "name": "AbstractProgramLocationTableColumn",
  "comment": "A convenience class that allows subclasses to signal that they implement \n ProgramLocationTableColumn, but they do not want to be ExtensionPoints.  For\n those wishing to be ExtensionPoints, see ProgramLocationTableColumnExtensionPoint.",
  "javadoc": "A convenience class that allows subclasses to signal that they implement \n {@link ProgramLocationTableColumn}, but they do not want to be {@link ExtensionPoint}s.  For\n those wishing to be ExtensionPoints, see {@link ProgramLocationTableColumnExtensionPoint}.\n@see ProgramLocationTableColumnExtensionPoint",
  "static": false,
  "implements": [
    "ghidra.util.table.field.ProgramLocationTableColumn"
  ],
  "extends": "ghidra.util.table.field.AbstractProgramBasedDynamicTableColumn",
  "fields": [],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
