{
  "name": "ProgramLocationTableColumnExtensionPoint",
  "comment": "A convenience class that allows subclasses to signal that they implement \n ProgramLocationTableColumn and that they are ExtensionPoints.\n \n If you do not wish to be an extension point, but do wish to provide ProgramLocation objects,\n then you can just implement ProgramLocationTableColumn or extend \n AbstractProgramLocationTableColumn.",
  "javadoc": "A convenience class that allows subclasses to signal that they implement \n {@link ProgramLocationTableColumn} and that they are {@link ExtensionPoint}s.\n \u003cp\u003e\n If you do not wish to be an extension point, but do wish to provide ProgramLocation objects,\n then you can just implement {@link ProgramLocationTableColumn} or extend \n {@link AbstractProgramLocationTableColumn}.\n@see ProgramLocationTableColumn\n@see AbstractProgramLocationTableColumn\n@param \u003cROW_TYPE\u003e The row object class supported by this column\n@param \u003cCOLUMN_TYPE\u003e The column object class supported by this column",
  "static": false,
  "implements": [
    "ghidra.util.table.field.ProgramLocationTableColumn"
  ],
  "extends": "docking.widgets.table.DynamicTableColumnExtensionPoint",
  "fields": [],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
