{
  "name": "AbstractGColumnRenderer",
  "comment": "A convenience base class that combines the GTableCellRenderer with the \n GColumnRenderer interface.\n \n Table columns that wish to provider a renderer will have to implement the \n GColumnRenderer interface.  Rather then implement that interface and extend\n the GTableCellRenderer, clients can simply extends this class.",
  "javadoc": "A convenience base class that combines the {@link GTableCellRenderer} with the \n {@link GColumnRenderer} interface.\n \n \u003cP\u003eTable columns that wish to provider a renderer will have to implement the \n {@link GColumnRenderer} interface.  Rather then implement that interface and extend\n the {@link GTableCellRenderer}, clients can simply extends this class.\n@param \u003cT\u003e the column type",
  "static": false,
  "implements": [
    "ghidra.util.table.column.GColumnRenderer"
  ],
  "extends": "docking.widgets.table.GTableCellRenderer",
  "fields": [],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
