{
  "name": "TriConsumer",
  "comment": "Patterned after BiConsumer.",
  "javadoc": "Patterned after {@link BiConsumer}.\n@param \u003cT\u003e\n@param \u003cU\u003e\n@param \u003cV\u003e",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "accept",
      "comment": "Performs this operation on the given arguments.",
      "javadoc": "Performs this operation on the given arguments.\n@param t the first input argument\n@param u the second input argument\n@param v the third input argument",
      "static": false,
      "params": [
        {
          "name": "t",
          "type_long": "T",
          "type_short": "T",
          "comment": "the first input argument"
        },
        {
          "name": "u",
          "type_long": "U",
          "type_short": "U",
          "comment": "the second input argument"
        },
        {
          "name": "v",
          "type_long": "V",
          "type_short": "V",
          "comment": "the third input argument"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
