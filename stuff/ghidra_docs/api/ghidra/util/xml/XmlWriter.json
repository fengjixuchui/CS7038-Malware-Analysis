{
  "name": "XmlWriter",
  "comment": "A class for creating XML files.",
  "javadoc": "A class for creating XML files.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "writer",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.io.PrintWriter",
      "type_short": "PrintWriter",
      "constant_value": null
    },
    {
      "name": "indentLevel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "incompleteLine",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "addedText",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "counter",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.xml.Counter",
      "type_short": "Counter",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new XML writer.",
      "javadoc": "Constructs a new XML writer.\n@param file the name of the output XML file\n@param dtdName the name of the DTD\n@throws IOException if an i/o error occurs",
      "static": false,
      "params": [
        {
          "name": "file",
          "type_long": "java.io.File",
          "type_short": "File",
          "comment": "the name of the output XML file"
        },
        {
          "name": "dtdName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of the DTD"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if an i/o error occurs"
        }
      ]
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new XML writer.",
      "javadoc": "Constructs a new XML writer.\n@param out the output stream\n@param dtdName the name of the DTD\n@throws IOException if an i/o error occurs",
      "static": false,
      "params": [
        {
          "name": "out",
          "type_long": "java.io.OutputStream",
          "type_short": "OutputStream",
          "comment": "the output stream"
        },
        {
          "name": "dtdName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of the DTD"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if an i/o error occurs"
        }
      ]
    },
    {
      "name": "getCounter",
      "comment": "Returns the XML summary string.",
      "javadoc": "Returns the XML summary string.\n@return the XML summary string",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.util.xml.Counter",
        "type_short": "Counter",
        "comment": "the XML summary string"
      },
      "throws": []
    },
    {
      "name": "close",
      "comment": "Closes this XML writer.",
      "javadoc": "Closes this XML writer.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "writeDTD",
      "comment": "Writes the specified DTD into the file.",
      "javadoc": "Writes the specified DTD into the file.\n@param dtdName the name of the DTD\n@throws IOException if an i/o error occurs",
      "static": false,
      "params": [
        {
          "name": "dtdName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of the DTD"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if an i/o error occurs"
        }
      ]
    },
    {
      "name": "startElement",
      "comment": "Writes the specified start element.",
      "javadoc": "Writes the specified start element.\n@param name the name of the start element",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of the start element"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "startElement",
      "comment": "Writes the specified start element with the attributes.",
      "javadoc": "Writes the specified start element with the attributes.\n@param name the name of the start element\n@param attrs the attributes of the start element",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of the start element"
        },
        {
          "name": "attrs",
          "type_long": "ghidra.util.xml.XmlAttributes",
          "type_short": "XmlAttributes",
          "comment": "the attributes of the start element"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "startElement",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "attrs",
          "type_long": "ghidra.util.xml.XmlAttributes",
          "type_short": "XmlAttributes",
          "comment": ""
        },
        {
          "name": "text",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "endElement",
      "comment": "Writes the specified end element.",
      "javadoc": "Writes the specified end element.\n@param name the name of the end element",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of the end element"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "writeElement",
      "comment": "Writes the specified element with the attributes.",
      "javadoc": "Writes the specified element with the attributes.\n@param name the name of the start element\n@param attrs the attributes of the start element",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of the start element"
        },
        {
          "name": "attrs",
          "type_long": "ghidra.util.xml.XmlAttributes",
          "type_short": "XmlAttributes",
          "comment": "the attributes of the start element"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "writeElement",
      "comment": "Writes the specified element with the attributes and text.",
      "javadoc": "Writes the specified element with the attributes and text.\n@param name the name of the element\n@param attrs the attributes of the element\n@param text the text of the element",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of the element"
        },
        {
          "name": "attrs",
          "type_long": "ghidra.util.xml.XmlAttributes",
          "type_short": "XmlAttributes",
          "comment": "the attributes of the element"
        },
        {
          "name": "text",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the text of the element"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "indent",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
