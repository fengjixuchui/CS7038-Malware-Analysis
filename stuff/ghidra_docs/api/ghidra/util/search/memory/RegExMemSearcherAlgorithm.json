{
  "name": "RegExMemSearcherAlgorithm",
  "comment": "Search memory using the provided regular expression.",
  "javadoc": "Search memory using the provided regular expression.",
  "static": false,
  "implements": [
    "ghidra.util.search.memory.MemorySearchAlgorithm"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "searchInfo",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.search.memory.SearchInfo",
      "type_short": "SearchInfo",
      "constant_value": null
    },
    {
      "name": "searchSet",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.address.AddressSetView",
      "type_short": "AddressSetView",
      "constant_value": null
    },
    {
      "name": "program",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.listing.Program",
      "type_short": "Program",
      "constant_value": null
    },
    {
      "name": "spanAddressGaps",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "alignment",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "codeUnitSearchInfo",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.search.memory.CodeUnitSearchInfo",
      "type_short": "CodeUnitSearchInfo",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "searchInfo",
          "type_long": "ghidra.util.search.memory.SearchInfo",
          "type_short": "SearchInfo",
          "comment": ""
        },
        {
          "name": "searchSet",
          "type_long": "ghidra.program.model.address.AddressSetView",
          "type_short": "AddressSetView",
          "comment": ""
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "searchAcrossAddressGaps",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "search",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "accumulator",
          "type_long": "ghidra.util.datastruct.Accumulator\u003cghidra.util.search.memory.MemSearchResult\u003e",
          "type_short": "Accumulator",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "searchAddressSet",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "addressSet",
          "type_long": "ghidra.program.model.address.AddressSetView",
          "type_short": "AddressSetView",
          "comment": ""
        },
        {
          "name": "accumulator",
          "type_long": "ghidra.util.datastruct.Accumulator\u003cghidra.util.search.memory.MemSearchResult\u003e",
          "type_short": "Accumulator",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        },
        {
          "name": "progressCount",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "breakSetsByMemoryBlock",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "addressSet",
          "type_long": "ghidra.program.model.address.AddressSetView",
          "type_short": "AddressSetView",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.List\u003cghidra.program.model.address.AddressSet\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "searchSubAddressSet",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "addressSet",
          "type_long": "ghidra.program.model.address.AddressSetView",
          "type_short": "AddressSetView",
          "comment": ""
        },
        {
          "name": "accumulator",
          "type_long": "ghidra.util.datastruct.Accumulator\u003cghidra.util.search.memory.MemSearchResult\u003e",
          "type_short": "Accumulator",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        },
        {
          "name": "progressCount",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isMatchingAddress",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "address",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "matchSize",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    }
  ]
}
