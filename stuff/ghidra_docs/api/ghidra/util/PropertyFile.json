{
  "name": "PropertyFile",
  "comment": "Class that represents a file of property names and values. The file\n extension used is PROPERTY_EXT.",
  "javadoc": "Class that represents a file of property names and values. The file\n extension used is PROPERTY_EXT.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "PROPERTY_EXT",
      "comment": "File extension indicating the file is a property file.",
      "javadoc": "File extension indicating the file is a property file.",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\".prp\""
    },
    {
      "name": "FILE_ID",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"FILE_ID\""
    },
    {
      "name": "propertyFile",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.io.File",
      "type_short": "File",
      "constant_value": null
    },
    {
      "name": "storageName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "parentPath",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "name",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "map",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.HashMap\u003cjava.lang.String,generic.stl.Pair\u003cghidra.util.PropertyFile.PropertyEntryType,java.lang.String\u003e\u003e",
      "type_short": "HashMap",
      "constant_value": null
    },
    {
      "name": "HANDLER",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "org.xml.sax.ErrorHandler",
      "type_short": "ErrorHandler",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a new or existing PropertyFile.\n This form ignores retained property values for NAME and PARENT path.",
      "javadoc": "Construct a new or existing PropertyFile.\n This form ignores retained property values for NAME and PARENT path.\n@param dir parent directory\n@param storageName stored property file name (without extension)\n@param parentPath path to parent\n@param name name of the property file\n@throws IOException",
      "static": false,
      "params": [
        {
          "name": "dir",
          "type_long": "java.io.File",
          "type_short": "File",
          "comment": "parent directory"
        },
        {
          "name": "storageName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "stored property file name (without extension)"
        },
        {
          "name": "parentPath",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "path to parent"
        },
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "name of the property file"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getName",
      "comment": "Return the name of this PropertyFile.  A null value may be returned\n if this is an older property file and the name was not specified at\n time of construction.",
      "javadoc": "Return the name of this PropertyFile.  A null value may be returned\n if this is an older property file and the name was not specified at\n time of construction.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isReadOnly",
      "comment": "Returns true if file is writable",
      "javadoc": "Returns true if file is writable",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPath",
      "comment": "Return the path to this PropertyFile.  A null value may be returned\n if this is an older property file and the name and parentPath was not specified at\n time of construction.",
      "javadoc": "Return the path to this PropertyFile.  A null value may be returned\n if this is an older property file and the name and parentPath was not specified at\n time of construction.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getParentPath",
      "comment": "Return the path to the parent of this PropertyFile.",
      "javadoc": "Return the path to the parent of this PropertyFile.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFolder",
      "comment": "Return the parent file to this PropertyFile.",
      "javadoc": "Return the parent file to this PropertyFile.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.io.File",
        "type_short": "File",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getStorageName",
      "comment": "Return the storage name of this PropertyFile.  This name does not include the property\n file extension (.prp)",
      "javadoc": "Return the storage name of this PropertyFile.  This name does not include the property\n file extension (.prp)",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFileID",
      "comment": "Returns the FileID associated with this file.",
      "javadoc": "Returns the FileID associated with this file.\n@return FileID associated with this file",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "FileID associated with this file"
      },
      "throws": []
    },
    {
      "name": "setFileID",
      "comment": "Set the FileID associated with this file.",
      "javadoc": "Set the FileID associated with this file.\n@param fileId",
      "static": false,
      "params": [
        {
          "name": "fileId",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getInt",
      "comment": "Return the int value with the given propertyName.",
      "javadoc": "Return the int value with the given propertyName.\n@param propertyName name of property that is an int\n@param defaultValue value to use if the property does not exist\n@return int value",
      "static": false,
      "params": [
        {
          "name": "propertyName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "name of property that is an int"
        },
        {
          "name": "defaultValue",
          "type_long": "int",
          "type_short": "int",
          "comment": "value to use if the property does not exist"
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "int value"
      },
      "throws": []
    },
    {
      "name": "putInt",
      "comment": "Assign the int value to the given propertyName.",
      "javadoc": "Assign the int value to the given propertyName.\n@param propertyName name of property to set\n@param value value to set",
      "static": false,
      "params": [
        {
          "name": "propertyName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "name of property to set"
        },
        {
          "name": "value",
          "type_long": "int",
          "type_short": "int",
          "comment": "value to set"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLong",
      "comment": "Return the long value with the given propertyName.",
      "javadoc": "Return the long value with the given propertyName.\n@param propertyName name of property that is a long\n@param defaultValue value to use if the property does not exist\n@return long value",
      "static": false,
      "params": [
        {
          "name": "propertyName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "name of property that is a long"
        },
        {
          "name": "defaultValue",
          "type_long": "long",
          "type_short": "long",
          "comment": "value to use if the property does not exist"
        }
      ],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": "long value"
      },
      "throws": []
    },
    {
      "name": "putLong",
      "comment": "Assign the long value to the given propertyName.",
      "javadoc": "Assign the long value to the given propertyName.\n@param propertyName name of property to set\n@param value value to set",
      "static": false,
      "params": [
        {
          "name": "propertyName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "name of property to set"
        },
        {
          "name": "value",
          "type_long": "long",
          "type_short": "long",
          "comment": "value to set"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getString",
      "comment": "Return the string value with the given propertyName.",
      "javadoc": "Return the string value with the given propertyName.\n@param propertyName name of property that is a string\n@param defaultValue value to use if the property does not exist\n@return string value",
      "static": false,
      "params": [
        {
          "name": "propertyName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "name of property that is a string"
        },
        {
          "name": "defaultValue",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "value to use if the property does not exist"
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "string value"
      },
      "throws": []
    },
    {
      "name": "putString",
      "comment": "Assign the string value to the given propertyName.",
      "javadoc": "Assign the string value to the given propertyName.\n@param propertyName name of property to set\n@param value value to set",
      "static": false,
      "params": [
        {
          "name": "propertyName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "name of property to set"
        },
        {
          "name": "value",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "value to set"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getBoolean",
      "comment": "Return the boolean value with the given propertyName.",
      "javadoc": "Return the boolean value with the given propertyName.\n@param propertyName name of property that is a boolean\n@param defaultValue value to use if the property does not exist\n@return boolean value",
      "static": false,
      "params": [
        {
          "name": "propertyName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "name of property that is a boolean"
        },
        {
          "name": "defaultValue",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "value to use if the property does not exist"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "boolean value"
      },
      "throws": []
    },
    {
      "name": "putBoolean",
      "comment": "Assign the boolean value to the given propertyName.",
      "javadoc": "Assign the boolean value to the given propertyName.\n@param propertyName name of property to set\n@param value value to set",
      "static": false,
      "params": [
        {
          "name": "propertyName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "name of property to set"
        },
        {
          "name": "value",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "value to set"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "remove",
      "comment": "Remove the specified property",
      "javadoc": "Remove the specified property\n@param propertyName",
      "static": false,
      "params": [
        {
          "name": "propertyName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "lastModified",
      "comment": "Return the time of last modification in number of milliseconds.",
      "javadoc": "Return the time of last modification in number of milliseconds.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "writeState",
      "comment": "Write the contents of this PropertyFile.",
      "javadoc": "Write the contents of this PropertyFile.\n@throws IOException thrown if there was a problem writing the file",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "thrown if there was a problem writing the file"
        }
      ]
    },
    {
      "name": "readState",
      "comment": "Read in this PropertyFile into a SaveState object.",
      "javadoc": "Read in this PropertyFile into a SaveState object.\n@throws IOException thrown if there was a problem reading the file",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "thrown if there was a problem reading the file"
        }
      ]
    },
    {
      "name": "moveTo",
      "comment": "Move this PropertyFile to the newParent file.",
      "javadoc": "Move this PropertyFile to the newParent file.\n@param newParent new parent of the file\n@param newStorageName new storage name\n@param newParentPath parent path of the new parent\n@param newName new name for this PropertyFile\n@throws IOException thrown if there was a problem accessing the\n@throws DuplicateFileException thrown if a file with the newName\n already exists",
      "static": false,
      "params": [
        {
          "name": "newParent",
          "type_long": "java.io.File",
          "type_short": "File",
          "comment": "new parent of the file"
        },
        {
          "name": "newStorageName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "new storage name"
        },
        {
          "name": "newParentPath",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "parent path of the new parent"
        },
        {
          "name": "newName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "new name for this PropertyFile"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.DuplicateFileException",
          "type_short": "DuplicateFileException",
          "comment": "thrown if a file with the newName\n already exists"
        },
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "thrown if there was a problem accessing the"
        }
      ]
    },
    {
      "name": "exists",
      "comment": "Return whether the file for this PropertyFile exists.",
      "javadoc": "Return whether the file for this PropertyFile exists.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "delete",
      "comment": "Delete the file for this PropertyFile.",
      "javadoc": "Delete the file for this PropertyFile.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hashCode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "equals",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "obj",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    }
  ]
}
