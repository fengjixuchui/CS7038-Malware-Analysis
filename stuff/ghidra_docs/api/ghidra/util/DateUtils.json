{
  "name": "DateUtils",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "DATE_TIME_FORMAT_STRING",
      "comment": "Example: Oct 31, 2019 03:24 PM",
      "javadoc": "Example: Oct 31, 2019 03:24 PM",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"MMM dd, yyyy hh:mm a\""
    },
    {
      "name": "DATE_FORMAT_STRING",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"MM/dd/yyyy\""
    },
    {
      "name": "TIME_FORMAT_STRING",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"h:mm\""
    },
    {
      "name": "DATE_TIME_FORMATTER",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.time.format.DateTimeFormatter",
      "type_short": "DateTimeFormatter",
      "constant_value": null
    },
    {
      "name": "DATE_FORMATTER",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.time.format.DateTimeFormatter",
      "type_short": "DateTimeFormatter",
      "constant_value": null
    },
    {
      "name": "TIME_FORMATTER",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.time.format.DateTimeFormatter",
      "type_short": "DateTimeFormatter",
      "constant_value": null
    },
    {
      "name": "MS_PER_SEC",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "long",
      "type_short": "long",
      "constant_value": "1000"
    },
    {
      "name": "MS_PER_MIN",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "long",
      "type_short": "long",
      "constant_value": "60000"
    },
    {
      "name": "MS_PER_HOUR",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "long",
      "type_short": "long",
      "constant_value": "3600000"
    },
    {
      "name": "MS_PER_DAY",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "long",
      "type_short": "long",
      "constant_value": "86400000"
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getHolidays",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "year",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.List\u003cjava.util.Date\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isHoliday",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "date",
          "type_long": "java.util.Date",
          "type_short": "Date",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getNormalizedToday",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [],
      "return": {
        "type_long": "java.util.Date",
        "type_short": "Date",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getChristmasHoliday",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "year",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.Date",
        "type_short": "Date",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getThanksgivingDay",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "year",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.Date",
        "type_short": "Date",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getVeterensDay",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "year",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.Date",
        "type_short": "Date",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getColumbusDay",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "year",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.Date",
        "type_short": "Date",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLaborDay",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "year",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.Date",
        "type_short": "Date",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getIndependanceHoliday",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "year",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.Date",
        "type_short": "Date",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getMemorialDay",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "year",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.Date",
        "type_short": "Date",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPresidentsDay",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "year",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.Date",
        "type_short": "Date",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getMLKDay",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "year",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.Date",
        "type_short": "Date",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getNewYearsHoliday",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "year",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.Date",
        "type_short": "Date",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFirstDayOfWeekInMonth",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "year",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "month",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "dayOfWeek",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.Calendar",
        "type_short": "Calendar",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "adjustForWeekend",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "cal",
          "type_long": "java.util.Calendar",
          "type_short": "Calendar",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLastDayOfWeekInMonth",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "year",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "month",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "dayOfWeek",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.Calendar",
        "type_short": "Calendar",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isHoliday",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "cal",
          "type_long": "java.util.Calendar",
          "type_short": "Calendar",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isWeekend",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "cal",
          "type_long": "java.util.Calendar",
          "type_short": "Calendar",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "normalizeDate",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "date",
          "type_long": "java.util.Date",
          "type_short": "Date",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.Date",
        "type_short": "Date",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "formatDate",
      "comment": "Formats the given date into a string.   This is in contrast to \n #formatDateTimestamp(Date), which will also return the time portion of the date.",
      "javadoc": "Formats the given date into a string.   This is in contrast to \n {@link #formatDateTimestamp(Date)}, which will also return the time portion of the date.\n@param date the date to format\n@return the date string",
      "static": true,
      "params": [
        {
          "name": "date",
          "type_long": "java.util.Date",
          "type_short": "Date",
          "comment": "the date to format"
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the date string"
      },
      "throws": []
    },
    {
      "name": "formatDateTimestamp",
      "comment": "Formats the given date into a string that contains the date and time.  This is in \n contrast to #formatDate(Date), which only returns a date string.",
      "javadoc": "Formats the given date into a string that contains the date and time.  This is in \n contrast to {@link #formatDate(Date)}, which only returns a date string.\n@param date the date to format\n@return the date and time string",
      "static": true,
      "params": [
        {
          "name": "date",
          "type_long": "java.util.Date",
          "type_short": "Date",
          "comment": "the date to format"
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the date and time string"
      },
      "throws": []
    },
    {
      "name": "formatCurrentTime",
      "comment": "Returns the current local time zone time-of-day as simple time string. \n See .",
      "javadoc": "Returns the current local time zone time-of-day as simple time string. \n See {@value #TIME_FORMAT_STRING}.\n@return current time-of-day a a string",
      "static": true,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "current time-of-day a a string"
      },
      "throws": []
    },
    {
      "name": "toLocalDate",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "d",
          "type_long": "java.util.Date",
          "type_short": "Date",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.time.LocalDateTime",
        "type_short": "LocalDateTime",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toDate",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "ld",
          "type_long": "java.time.LocalDate",
          "type_short": "LocalDate",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.Date",
        "type_short": "Date",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDate",
      "comment": "Returns a date for the given numeric values",
      "javadoc": "Returns a date for the given numeric values\n@param year the year\n@param month the month; 0-based\n@param day the day of month; 1-based\n@return the date",
      "static": true,
      "params": [
        {
          "name": "year",
          "type_long": "int",
          "type_short": "int",
          "comment": "the year"
        },
        {
          "name": "month",
          "type_long": "int",
          "type_short": "int",
          "comment": "the month; 0-based"
        },
        {
          "name": "day",
          "type_long": "int",
          "type_short": "int",
          "comment": "the day of month; 1-based"
        }
      ],
      "return": {
        "type_long": "java.util.Date",
        "type_short": "Date",
        "comment": "the date"
      },
      "throws": []
    },
    {
      "name": "getDaysBetween",
      "comment": "Returns all days between the two dates.  Returns 0 if the same date is passed for both\n parameters.  The order of the dates does not matter.",
      "javadoc": "Returns all days between the two dates.  Returns 0 if the same date is passed for both\n parameters.  The order of the dates does not matter.\n@param date1 the first date\n@param date2 the second date\n@return the number of days",
      "static": true,
      "params": [
        {
          "name": "date1",
          "type_long": "java.util.Date",
          "type_short": "Date",
          "comment": "the first date"
        },
        {
          "name": "date2",
          "type_long": "java.util.Date",
          "type_short": "Date",
          "comment": "the second date"
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the number of days"
      },
      "throws": []
    },
    {
      "name": "getBusinessDaysBetween",
      "comment": "Returns the business days between the two dates.  Returns 0 if the same date is \n passed for both parameters.  The order of the dates does not matter.",
      "javadoc": "Returns the \u003cb\u003ebusiness days\u003c/b\u003e between the two dates.  Returns 0 if the same date is \n passed for both parameters.  The order of the dates does not matter.\n@param date1 the first date\n@param date2 the second date\n@return the number of days",
      "static": true,
      "params": [
        {
          "name": "date1",
          "type_long": "java.util.Date",
          "type_short": "Date",
          "comment": "the first date"
        },
        {
          "name": "date2",
          "type_long": "java.util.Date",
          "type_short": "Date",
          "comment": "the second date"
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the number of days"
      },
      "throws": []
    },
    {
      "name": "anyDay",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "c",
          "type_long": "java.util.Calendar",
          "type_short": "Calendar",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isBusinessDay",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "c",
          "type_long": "java.util.Calendar",
          "type_short": "Calendar",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "doGetDaysBetween",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "date1",
          "type_long": "java.util.Date",
          "type_short": "Date",
          "comment": ""
        },
        {
          "name": "date2",
          "type_long": "java.util.Date",
          "type_short": "Date",
          "comment": ""
        },
        {
          "name": "dayFilter",
          "type_long": "java.util.function.Predicate\u003cjava.util.Calendar\u003e",
          "type_short": "Predicate",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "formatDuration",
      "comment": "Formats a millisecond duration as a English string expressing the number of\n hours, minutes and seconds in the duration",
      "javadoc": "Formats a millisecond duration as a English string expressing the number of\n hours, minutes and seconds in the duration\n@param millis Count of milliseconds of an elapsed duration.\n@return String such as \"5 hours, 3 mins, 22 secs\".",
      "static": true,
      "params": [
        {
          "name": "millis",
          "type_long": "long",
          "type_short": "long",
          "comment": "Count of milliseconds of an elapsed duration."
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "String such as \"5 hours, 3 mins, 22 secs\"."
      },
      "throws": []
    }
  ]
}
