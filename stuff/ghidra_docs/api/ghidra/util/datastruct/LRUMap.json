{
  "name": "LRUMap",
  "comment": "A LRU (Least Recently Used) map that maintains access-order (newest to oldest)\n  iteration over the elements.  \n This map is limited to the given size.  \n As new items are added, the older items will be removed from this map.\n \n If you need to be notified of removals, then you can override \n  #eldestEntryRemoved(java.util.Map.Entry).\n \n If you don\u0027t want the eldest removed, override  \n  #removeEldestEntry(java.util.Map.Entry) and return false;\n \n If you would like to have the iteration order of your LRU structure be based upon access, \n but want it to iterate from least recently used to most recently used, then you should see\n FixedSizeHashMap.",
  "javadoc": "A LRU (Least Recently Used) map that maintains \u003ci\u003eaccess-order\u003c/i\u003e (newest to oldest)\n  iteration over the elements.  \n This map is limited to the given size.  \n As new items are added, the older items will be removed from this map.\n \u003cp\u003e\n If you need to be notified of removals, then you can override \n  {@link #eldestEntryRemoved(java.util.Map.Entry)}.\n \u003cp\u003e\n If you don\u0027t want the eldest removed, override  \n  {@link #removeEldestEntry(java.util.Map.Entry)} and return false;\n \u003cp\u003e\n If you would like to have the iteration order of your LRU structure be based upon access, \n but want it to iterate from least recently used to most recently used, then you should see\n {@link FixedSizeHashMap}.\n@param \u003cK\u003e the key type\n@param \u003cV\u003e the value type\n@see LinkedHashMap\n@see FixedSizeHashMap",
  "static": false,
  "implements": [
    "java.util.Map"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "DEFAULT_LOAD_FACTOR",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "float",
      "type_short": "float",
      "constant_value": "0.75"
    },
    {
      "name": "map",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.HashMap\u003cK,ghidra.util.datastruct.LRUMap.Entry\u003cK,V\u003e\u003e",
      "type_short": "HashMap",
      "constant_value": null
    },
    {
      "name": "cacheSize",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "head",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.datastruct.LRUMap.Entry\u003cK,V\u003e",
      "type_short": "Entry",
      "constant_value": null
    },
    {
      "name": "modificationID",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "cacheSize",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "size",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isEmpty",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "containsKey",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "key",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "containsValue",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "value",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "get",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "key",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "V",
        "type_short": "V",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "put",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "key",
          "type_long": "K",
          "type_short": "K",
          "comment": ""
        },
        {
          "name": "value",
          "type_long": "V",
          "type_short": "V",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "V",
        "type_short": "V",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "remove",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "key",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "V",
        "type_short": "V",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "putAll",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "m",
          "type_long": "java.util.Map\u003c? extends K,? extends V\u003e",
          "type_short": "Map",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "clear",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "keySet",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Set\u003cK\u003e",
        "type_short": "Set",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "values",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Collection\u003cV\u003e",
        "type_short": "Collection",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "entrySet",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Set\u003cjava.util.Map.Entry\u003cK,V\u003e\u003e",
        "type_short": "Set",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeOldEntries",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addToTop",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "entry",
          "type_long": "ghidra.util.datastruct.LRUMap.Entry\u003cK,V\u003e",
          "type_short": "Entry",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeEntry",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "entry",
          "type_long": "ghidra.util.datastruct.LRUMap.Entry\u003cK,V\u003e",
          "type_short": "Entry",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeEldestEntry",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "eldest",
          "type_long": "java.util.Map.Entry\u003cK,V\u003e",
          "type_short": "Entry",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "eldestEntryRemoved",
      "comment": "This is called after an item has been removed from the cache.",
      "javadoc": "This is called after an item has been removed from the cache.\n@param eldest the item being removed",
      "static": false,
      "params": [
        {
          "name": "eldest",
          "type_long": "java.util.Map.Entry\u003cK,V\u003e",
          "type_short": "Entry",
          "comment": "the item being removed"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    }
  ]
}
