{
  "name": "IntArrayList",
  "comment": "An ArrayList type object for ints.",
  "javadoc": "An ArrayList type object for ints.",
  "static": false,
  "implements": [
    "java.io.Serializable",
    "ghidra.util.Saveable"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "serialVersionUID",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "long",
      "type_short": "long",
      "constant_value": "1"
    },
    {
      "name": "MIN_SIZE",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "4"
    },
    {
      "name": "ints",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int[]",
      "type_short": "int[]",
      "constant_value": null
    },
    {
      "name": "size",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "classes",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.Class\u003c?\u003e[]",
      "type_short": "java.lang.Class\u003c?\u003e[]",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Creates new intArrayList",
      "javadoc": "Creates new intArrayList",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Creates a new intArrayList using the values in the given array",
      "javadoc": "Creates a new intArrayList using the values in the given array\n@param arr array of ints to initialize to.",
      "static": false,
      "params": [
        {
          "name": "arr",
          "type_long": "int[]",
          "type_short": "int[]",
          "comment": "array of ints to initialize to."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "add",
      "comment": "Adds a new int value at the end of the list.",
      "javadoc": "Adds a new int value at the end of the list.\n@param value the int value to add.",
      "static": false,
      "params": [
        {
          "name": "value",
          "type_long": "int",
          "type_short": "int",
          "comment": "the int value to add."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "add",
      "comment": "Puts the given int value in the int array at\n the given index",
      "javadoc": "Puts the given int value in the int array at\n the given index\n@param index Index into the array.\n@param value value to store\n@throws IndexOutOfBoundsException if the index is negative OR index \u0026gt; size",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "int",
          "type_short": "int",
          "comment": "Index into the array."
        },
        {
          "name": "value",
          "type_long": "int",
          "type_short": "int",
          "comment": "value to store"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeValueAt",
      "comment": "Removes the value at the given index decreasing the array list size by 1.",
      "javadoc": "Removes the value at the given index decreasing the array list size by 1.\n@param index the index to remove.\n@throws IndexOutOfBoundsException if the index is negative",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "int",
          "type_short": "int",
          "comment": "the index to remove."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeValue",
      "comment": "Removes the first occurrence of the given\n value.",
      "javadoc": "Removes the first occurrence of the given\n value.\n@param value the value to be removed.",
      "static": false,
      "params": [
        {
          "name": "value",
          "type_long": "int",
          "type_short": "int",
          "comment": "the value to be removed."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "get",
      "comment": "Returns the int at the given index",
      "javadoc": "Returns the int at the given index\n@param index index into the array\n@return The int value at the given index. A 0 will\n be returned for any index not initialized to\n another value.\n@throws IndexOutOfBoundsException if the index is negative or greater than the list size.",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "int",
          "type_short": "int",
          "comment": "index into the array"
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "The int value at the given index. A 0 will\n be returned for any index not initialized to\n another value."
      },
      "throws": []
    },
    {
      "name": "set",
      "comment": "Sets the array value at index to value.",
      "javadoc": "Sets the array value at index to value.\n@param index the index to set.\n@param value the value to store.",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "int",
          "type_short": "int",
          "comment": "the index to set."
        },
        {
          "name": "value",
          "type_long": "int",
          "type_short": "int",
          "comment": "the value to store."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "clear",
      "comment": "Clears the entire array of data.",
      "javadoc": "Clears the entire array of data.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "size",
      "comment": "Returns the size of this virtual array.",
      "javadoc": "Returns the size of this virtual array.\n@return int the size of this virtual array.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "int the size of this virtual array."
      },
      "throws": []
    },
    {
      "name": "toArray",
      "comment": "Converts to a primitive array.",
      "javadoc": "Converts to a primitive array.\n@return int[] int array for results.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int[]",
        "type_short": "int[]",
        "comment": "int[] int array for results."
      },
      "throws": []
    },
    {
      "name": "growArray",
      "comment": "Doubles the size of the array.",
      "javadoc": "Doubles the size of the array.\n@param size The new capacity of the array.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "shrinkArray",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "restore",
      "comment": "",
      "javadoc": "@see Saveable#restore(ObjectStorage)",
      "static": false,
      "params": [
        {
          "name": "objStorage",
          "type_long": "ghidra.util.ObjectStorage",
          "type_short": "ObjectStorage",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "save",
      "comment": "",
      "javadoc": "@see Saveable#save(ObjectStorage)",
      "static": false,
      "params": [
        {
          "name": "objStorage",
          "type_long": "ghidra.util.ObjectStorage",
          "type_short": "ObjectStorage",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getObjectStorageFields",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.Class\u003c?\u003e[]",
        "type_short": "java.lang.Class\u003c?\u003e[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSchemaVersion",
      "comment": "",
      "javadoc": "@see ghidra.util.Saveable#getSchemaVersion()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isUpgradeable",
      "comment": "",
      "javadoc": "@see ghidra.util.Saveable#isUpgradeable(int)",
      "static": false,
      "params": [
        {
          "name": "oldSchemaVersion",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "upgrade",
      "comment": "",
      "javadoc": "@see ghidra.util.Saveable#upgrade(ghidra.util.ObjectStorage, int, ghidra.util.ObjectStorage)",
      "static": false,
      "params": [
        {
          "name": "oldObjStorage",
          "type_long": "ghidra.util.ObjectStorage",
          "type_short": "ObjectStorage",
          "comment": ""
        },
        {
          "name": "oldSchemaVersion",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "currentObjStorage",
          "type_long": "ghidra.util.ObjectStorage",
          "type_short": "ObjectStorage",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isPrivate",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    }
  ]
}
