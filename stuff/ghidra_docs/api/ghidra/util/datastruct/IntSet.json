{
  "name": "IntSet",
  "comment": "Class for storing a set of integers",
  "javadoc": "Class for storing a set of integers",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "indexer",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.datastruct.IntKeyIndexer",
      "type_short": "IntKeyIndexer",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new empty int set",
      "javadoc": "Constructs a new empty int set\n@param capacity the initial storage size, the set will grow if needed.",
      "static": false,
      "params": [
        {
          "name": "capacity",
          "type_long": "int",
          "type_short": "int",
          "comment": "the initial storage size, the set will grow if needed."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new IntSet and populates it with the given array of ints.",
      "javadoc": "Constructs a new IntSet and populates it with the given array of ints.\n@param values the array if ints to add to the set.",
      "static": false,
      "params": [
        {
          "name": "values",
          "type_long": "int[]",
          "type_short": "int[]",
          "comment": "the array if ints to add to the set."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "size",
      "comment": "Returns the number of ints in the set.",
      "javadoc": "Returns the number of ints in the set.\n@return the number of ints in the set.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the number of ints in the set."
      },
      "throws": []
    },
    {
      "name": "isEmpty",
      "comment": "Returns true if the set is empty",
      "javadoc": "Returns true if the set is empty",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "contains",
      "comment": "Returns true if the set contains the given value.",
      "javadoc": "Returns true if the set contains the given value.\n@param value the value to test if it is in the set.\n@return true if the value is in the set.",
      "static": false,
      "params": [
        {
          "name": "value",
          "type_long": "int",
          "type_short": "int",
          "comment": "the value to test if it is in the set."
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the value is in the set."
      },
      "throws": []
    },
    {
      "name": "add",
      "comment": "Add the int value to the set.",
      "javadoc": "Add the int value to the set.\n@param value the value to add to the set.",
      "static": false,
      "params": [
        {
          "name": "value",
          "type_long": "int",
          "type_short": "int",
          "comment": "the value to add to the set."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "remove",
      "comment": "Removes the int value from the set.",
      "javadoc": "Removes the int value from the set.\n@param value the value to remove from the set.\n@return true if the value was in the set, false otherwise.",
      "static": false,
      "params": [
        {
          "name": "value",
          "type_long": "int",
          "type_short": "int",
          "comment": "the value to remove from the set."
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the value was in the set, false otherwise."
      },
      "throws": []
    },
    {
      "name": "clear",
      "comment": "Removes all values from the set.",
      "javadoc": "Removes all values from the set.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getValues",
      "comment": "Returns an array with all the values in the set.",
      "javadoc": "Returns an array with all the values in the set.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int[]",
        "type_short": "int[]",
        "comment": ""
      },
      "throws": []
    }
  ]
}
