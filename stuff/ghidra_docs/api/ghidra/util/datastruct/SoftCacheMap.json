{
  "name": "SoftCacheMap",
  "comment": "Class to manage a \"soft\" HaspMap that keeps its keys as soft references so\n they can be reclaimed if needed. Useful for caching.",
  "javadoc": "Class to manage a \"soft\" HaspMap that keeps its keys as soft references so\n they can be reclaimed if needed. Useful for caching.",
  "static": false,
  "implements": [
    "java.util.Map"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "cacheSize",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "map",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.LinkedHashMap\u003cK,ghidra.util.datastruct.SoftCacheMap\u003cK,V\u003e.MySoftReference\u003e",
      "type_short": "LinkedHashMap",
      "constant_value": null
    },
    {
      "name": "refQueue",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.ref.ReferenceQueue\u003c? super V\u003e",
      "type_short": "ReferenceQueue",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new SoftCacheMap that has at most cacheSize entries.",
      "javadoc": "Constructs a new SoftCacheMap that has at most cacheSize entries.\n@param cacheSize the max number of entries to cache.",
      "static": false,
      "params": [
        {
          "name": "cacheSize",
          "type_long": "int",
          "type_short": "int",
          "comment": "the max number of entries to cache."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "put",
      "comment": "",
      "javadoc": "@see java.util.Map#put(java.lang.Object, java.lang.Object)",
      "static": false,
      "params": [
        {
          "name": "key",
          "type_long": "K",
          "type_short": "K",
          "comment": ""
        },
        {
          "name": "value",
          "type_long": "V",
          "type_short": "V",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "V",
        "type_short": "V",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "get",
      "comment": "",
      "javadoc": "@see java.util.Map#get(java.lang.Object)",
      "static": false,
      "params": [
        {
          "name": "key",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "V",
        "type_short": "V",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "size",
      "comment": "",
      "javadoc": "@see java.util.Map#size()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "clear",
      "comment": "",
      "javadoc": "@see java.util.Map#clear()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isEmpty",
      "comment": "",
      "javadoc": "@see java.util.Map#isEmpty()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "containsKey",
      "comment": "",
      "javadoc": "@see java.util.Map#containsKey(java.lang.Object)",
      "static": false,
      "params": [
        {
          "name": "key",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "containsValue",
      "comment": "",
      "javadoc": "@see java.util.Map#containsValue(java.lang.Object)",
      "static": false,
      "params": [
        {
          "name": "value",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "values",
      "comment": "",
      "javadoc": "@see java.util.Map#values()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Collection\u003cV\u003e",
        "type_short": "Collection",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "putAll",
      "comment": "",
      "javadoc": "@see java.util.Map#putAll(java.util.Map)",
      "static": false,
      "params": [
        {
          "name": "t",
          "type_long": "java.util.Map\u003c? extends K,? extends V\u003e",
          "type_short": "Map",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "entrySet",
      "comment": "",
      "javadoc": "@see java.util.Map#entrySet()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Set\u003cjava.util.Map.Entry\u003cK,V\u003e\u003e",
        "type_short": "Set",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "keySet",
      "comment": "",
      "javadoc": "@see java.util.Map#keySet()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Set\u003cK\u003e",
        "type_short": "Set",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "remove",
      "comment": "",
      "javadoc": "@see java.util.Map#remove(java.lang.Object)",
      "static": false,
      "params": [
        {
          "name": "key",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "V",
        "type_short": "V",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "processQueue",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
