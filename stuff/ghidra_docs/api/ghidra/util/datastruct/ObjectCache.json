{
  "name": "ObjectCache",
  "comment": "ObjectClass provides a fixed-size long-key-based object cache.\n Both a hard and weak cache are maintained, where the weak cache is only\n limited by available memory.  This cache mechanism is useful in ensuring that\n only a single object instance for a given key exists.\n \n The weak cache is keyed, while the hard cache simply maintains the presence of\n an object in the weak cache.",
  "javadoc": "\u003ccode\u003eObjectClass\u003c/code\u003e provides a fixed-size long-key-based object cache.\n Both a hard and weak cache are maintained, where the weak cache is only\n limited by available memory.  This cache mechanism is useful in ensuring that\n only a single object instance for a given key exists.\n \u003cp\u003e\n The weak cache is keyed, while the hard cache simply maintains the presence of\n an object in the weak cache.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "hashTable",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.Map\u003cjava.lang.Long,ghidra.util.datastruct.ObjectCache.KeyedSoftReference\u003c?\u003e\u003e",
      "type_short": "Map",
      "constant_value": null
    },
    {
      "name": "refQueue",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.ref.ReferenceQueue\u003cjava.lang.Object\u003e",
      "type_short": "ReferenceQueue",
      "constant_value": null
    },
    {
      "name": "hardCache",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.LinkedList\u003cjava.lang.Object\u003e",
      "type_short": "LinkedList",
      "constant_value": null
    },
    {
      "name": "hardCacheSize",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a keyed-object cache of size hardCacheSize.",
      "javadoc": "Construct a keyed-object cache of size hardCacheSize.\n@param hardCacheSize hard cache size.",
      "static": false,
      "params": [
        {
          "name": "hardCacheSize",
          "type_long": "int",
          "type_short": "int",
          "comment": "hard cache size."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "contains",
      "comment": "Determine if the keyed-object exists in the cache.",
      "javadoc": "Determine if the keyed-object exists in the cache.\n@param key object key\n@return true if object is cached",
      "static": false,
      "params": [
        {
          "name": "key",
          "type_long": "long",
          "type_short": "long",
          "comment": "object key"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if object is cached"
      },
      "throws": []
    },
    {
      "name": "get",
      "comment": "Get the object from cache which corresponds to the specified key.",
      "javadoc": "Get the object from cache which corresponds to the specified key.\n@param key object key\n@return cached object",
      "static": false,
      "params": [
        {
          "name": "key",
          "type_long": "long",
          "type_short": "long",
          "comment": "object key"
        }
      ],
      "return": {
        "type_long": "java.lang.Object",
        "type_short": "Object",
        "comment": "cached object"
      },
      "throws": []
    },
    {
      "name": "size",
      "comment": "Return the hard cache size",
      "javadoc": "Return the hard cache size\n@return the hard cache size",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the hard cache size"
      },
      "throws": []
    },
    {
      "name": "setHardCacheSize",
      "comment": "Adjust the hard cache size",
      "javadoc": "Adjust the hard cache size\n@param size new hard cache size",
      "static": false,
      "params": [
        {
          "name": "size",
          "type_long": "int",
          "type_short": "int",
          "comment": "new hard cache size"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "put",
      "comment": "Add an object to the cache",
      "javadoc": "Add an object to the cache\n@param key object key\n@param obj the object",
      "static": false,
      "params": [
        {
          "name": "key",
          "type_long": "long",
          "type_short": "long",
          "comment": "object key"
        },
        {
          "name": "obj",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": "the object"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "remove",
      "comment": "Remove the specified keyed object from both hard and weak caches.\n An object should be removed from the cache when it becomes invalid.",
      "javadoc": "Remove the specified keyed object from both hard and weak caches.\n An object should be removed from the cache when it becomes invalid.\n@param key object key",
      "static": false,
      "params": [
        {
          "name": "key",
          "type_long": "long",
          "type_short": "long",
          "comment": "object key"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addToHardCache",
      "comment": "Add the specified object to the hard cache.",
      "javadoc": "Add the specified object to the hard cache.\n@param obj object",
      "static": false,
      "params": [
        {
          "name": "obj",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": "object"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "processQueue",
      "comment": "Cleanup weak cache",
      "javadoc": "Cleanup weak cache",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
