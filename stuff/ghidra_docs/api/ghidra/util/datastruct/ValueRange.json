{
  "name": "ValueRange",
  "comment": "Associates an integer value with a numeric range.",
  "javadoc": "Associates an integer value with a numeric range.",
  "static": false,
  "implements": [
    "java.lang.Comparable"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "start",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "end",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "value",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor for numeric range with an associated value.",
      "javadoc": "Constructor for numeric range with an associated value.\n@param start beginning of the range\n@param end end of the range\n@param value the value to associate with the range.",
      "static": false,
      "params": [
        {
          "name": "start",
          "type_long": "long",
          "type_short": "long",
          "comment": "beginning of the range"
        },
        {
          "name": "end",
          "type_long": "long",
          "type_short": "long",
          "comment": "end of the range"
        },
        {
          "name": "value",
          "type_long": "int",
          "type_short": "int",
          "comment": "the value to associate with the range."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getStart",
      "comment": "Returns the beginning of the range.",
      "javadoc": "Returns the beginning of the range.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getEnd",
      "comment": "Returns the end of the range.",
      "javadoc": "Returns the end of the range.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getValue",
      "comment": "Returns the value associated with the range.",
      "javadoc": "Returns the value associated with the range.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "contains",
      "comment": "Determines whether or not the indicated index is in the range.",
      "javadoc": "Determines whether or not the indicated index is in the range.\n@param index the index to check\n@return true if the index is in this range.",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "long",
          "type_short": "long",
          "comment": "the index to check"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the index is in this range."
      },
      "throws": []
    },
    {
      "name": "compareTo",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "otherRange",
          "type_long": "ghidra.util.datastruct.ValueRange",
          "type_short": "ValueRange",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    }
  ]
}
