{
  "name": "DataTable",
  "comment": "Table for managing rows and columns of data.",
  "javadoc": "Table for managing rows and columns of data.",
  "static": false,
  "implements": [
    "java.io.Serializable"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "serialVersionUID",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "long",
      "type_short": "long",
      "constant_value": "1"
    },
    {
      "name": "dataColumns",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.datastruct.Array[]",
      "type_short": "ghidra.util.datastruct.Array[]",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Creates a new DataTable.",
      "javadoc": "Creates a new DataTable.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeRow",
      "comment": "Removes the given row from the table.",
      "javadoc": "Removes the given row from the table.\n@param row The row to be removed",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "The row to be removed"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "copyRowTo",
      "comment": "Copy one row to another row.",
      "javadoc": "Copy one row to another row.\n@param row source row\n@param table table containing the data\n@param toRow destination row",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "source row"
        },
        {
          "name": "table",
          "type_long": "ghidra.util.datastruct.DataTable",
          "type_short": "DataTable",
          "comment": "table containing the data"
        },
        {
          "name": "toRow",
          "type_long": "int",
          "type_short": "int",
          "comment": "destination row"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "putBoolean",
      "comment": "Stores a boolean value in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.",
      "javadoc": "Stores a boolean value in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@param value The value to store.",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "The row into the table (specifies which object)"
        },
        {
          "name": "col",
          "type_long": "int",
          "type_short": "int",
          "comment": "The column of the table.  (specifies which field)"
        },
        {
          "name": "value",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "The value to store."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getBoolean",
      "comment": "Returns the boolean at the given row, column.",
      "javadoc": "Returns the boolean at the given row, column.\n@param row the row in the table\n@param col the column in the table (field num)\n@return the boolean value in the table",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "the row in the table"
        },
        {
          "name": "col",
          "type_long": "int",
          "type_short": "int",
          "comment": "the column in the table (field num)"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "the boolean value in the table"
      },
      "throws": []
    },
    {
      "name": "putByte",
      "comment": "Stores a byte value in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.",
      "javadoc": "Stores a byte value in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@param value The value to store.",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "The row into the table (specifies which object)"
        },
        {
          "name": "col",
          "type_long": "int",
          "type_short": "int",
          "comment": "The column of the table.  (specifies which field)"
        },
        {
          "name": "value",
          "type_long": "byte",
          "type_short": "byte",
          "comment": "The value to store."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getByte",
      "comment": "Returns the byte at the given row, column.",
      "javadoc": "Returns the byte at the given row, column.\n@param row the row in the table\n@param col the column in the table (field num)\n@return the byte value in the table",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "the row in the table"
        },
        {
          "name": "col",
          "type_long": "int",
          "type_short": "int",
          "comment": "the column in the table (field num)"
        }
      ],
      "return": {
        "type_long": "byte",
        "type_short": "byte",
        "comment": "the byte value in the table"
      },
      "throws": []
    },
    {
      "name": "putShort",
      "comment": "Stores a short value in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.",
      "javadoc": "Stores a short value in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@param value The value to store.",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "The row into the table (specifies which object)"
        },
        {
          "name": "col",
          "type_long": "int",
          "type_short": "int",
          "comment": "The column of the table.  (specifies which field)"
        },
        {
          "name": "value",
          "type_long": "short",
          "type_short": "short",
          "comment": "The value to store."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getShort",
      "comment": "Returns the short at the given row, column.",
      "javadoc": "Returns the short at the given row, column.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@return the short value.",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "The row into the table (specifies which object)"
        },
        {
          "name": "col",
          "type_long": "int",
          "type_short": "int",
          "comment": "The column of the table.  (specifies which field)"
        }
      ],
      "return": {
        "type_long": "short",
        "type_short": "short",
        "comment": "the short value."
      },
      "throws": []
    },
    {
      "name": "putInt",
      "comment": "Stores an int value in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.",
      "javadoc": "Stores an int value in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@param value The value to store.",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "The row into the table (specifies which object)"
        },
        {
          "name": "col",
          "type_long": "int",
          "type_short": "int",
          "comment": "The column of the table.  (specifies which field)"
        },
        {
          "name": "value",
          "type_long": "int",
          "type_short": "int",
          "comment": "The value to store."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getInt",
      "comment": "Returns the int at the given row, column.",
      "javadoc": "Returns the int at the given row, column.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@return the int value.",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "The row into the table (specifies which object)"
        },
        {
          "name": "col",
          "type_long": "int",
          "type_short": "int",
          "comment": "The column of the table.  (specifies which field)"
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the int value."
      },
      "throws": []
    },
    {
      "name": "putLong",
      "comment": "Stores a long value in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.",
      "javadoc": "Stores a long value in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@param value The value to store.",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "The row into the table (specifies which object)"
        },
        {
          "name": "col",
          "type_long": "int",
          "type_short": "int",
          "comment": "The column of the table.  (specifies which field)"
        },
        {
          "name": "value",
          "type_long": "long",
          "type_short": "long",
          "comment": "The value to store."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "putDouble",
      "comment": "Stores a double value in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.",
      "javadoc": "Stores a double value in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@param value The value to store.",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "The row into the table (specifies which object)"
        },
        {
          "name": "col",
          "type_long": "int",
          "type_short": "int",
          "comment": "The column of the table.  (specifies which field)"
        },
        {
          "name": "value",
          "type_long": "double",
          "type_short": "double",
          "comment": "The value to store."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "putFloat",
      "comment": "Stores a float value in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.",
      "javadoc": "Stores a float value in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@param value The value to store.",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "The row into the table (specifies which object)"
        },
        {
          "name": "col",
          "type_long": "int",
          "type_short": "int",
          "comment": "The column of the table.  (specifies which field)"
        },
        {
          "name": "value",
          "type_long": "float",
          "type_short": "float",
          "comment": "The value to store."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLong",
      "comment": "Returns the long at the given row, column.",
      "javadoc": "Returns the long at the given row, column.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@return the long value.",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "The row into the table (specifies which object)"
        },
        {
          "name": "col",
          "type_long": "int",
          "type_short": "int",
          "comment": "The column of the table.  (specifies which field)"
        }
      ],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": "the long value."
      },
      "throws": []
    },
    {
      "name": "getFloat",
      "comment": "Returns the float at the given row, column.",
      "javadoc": "Returns the float at the given row, column.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@return the float value.",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "The row into the table (specifies which object)"
        },
        {
          "name": "col",
          "type_long": "int",
          "type_short": "int",
          "comment": "The column of the table.  (specifies which field)"
        }
      ],
      "return": {
        "type_long": "float",
        "type_short": "float",
        "comment": "the float value."
      },
      "throws": []
    },
    {
      "name": "getDouble",
      "comment": "Returns the double at the given row, column.",
      "javadoc": "Returns the double at the given row, column.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@return the double value.",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "The row into the table (specifies which object)"
        },
        {
          "name": "col",
          "type_long": "int",
          "type_short": "int",
          "comment": "The column of the table.  (specifies which field)"
        }
      ],
      "return": {
        "type_long": "double",
        "type_short": "double",
        "comment": "the double value."
      },
      "throws": []
    },
    {
      "name": "putString",
      "comment": "Stores a String in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.",
      "javadoc": "Stores a String in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@param value The value to store.",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "The row into the table (specifies which object)"
        },
        {
          "name": "col",
          "type_long": "int",
          "type_short": "int",
          "comment": "The column of the table.  (specifies which field)"
        },
        {
          "name": "value",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "The value to store."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "putObject",
      "comment": "Stores an Object in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.",
      "javadoc": "Stores an Object in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@param value The value to store.",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "The row into the table (specifies which object)"
        },
        {
          "name": "col",
          "type_long": "int",
          "type_short": "int",
          "comment": "The column of the table.  (specifies which field)"
        },
        {
          "name": "value",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": "The value to store."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getString",
      "comment": "Returns the string at the given row, column.",
      "javadoc": "Returns the string at the given row, column.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@return the int value.",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "The row into the table (specifies which object)"
        },
        {
          "name": "col",
          "type_long": "int",
          "type_short": "int",
          "comment": "The column of the table.  (specifies which field)"
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the int value."
      },
      "throws": []
    },
    {
      "name": "getObject",
      "comment": "Returns the Object at the given row, column.",
      "javadoc": "Returns the Object at the given row, column.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@return the Object value.",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "The row into the table (specifies which object)"
        },
        {
          "name": "col",
          "type_long": "int",
          "type_short": "int",
          "comment": "The column of the table.  (specifies which field)"
        }
      ],
      "return": {
        "type_long": "java.lang.Object",
        "type_short": "Object",
        "comment": "the Object value."
      },
      "throws": []
    },
    {
      "name": "putByteArray",
      "comment": "Stores an byte array in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.",
      "javadoc": "Stores an byte array in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@param value The value to store.",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "The row into the table (specifies which object)"
        },
        {
          "name": "col",
          "type_long": "int",
          "type_short": "int",
          "comment": "The column of the table.  (specifies which field)"
        },
        {
          "name": "value",
          "type_long": "byte[]",
          "type_short": "byte[]",
          "comment": "The value to store."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getByteArray",
      "comment": "Returns the byte array at the given row, column.",
      "javadoc": "Returns the byte array at the given row, column.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@return the int value.",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "The row into the table (specifies which object)"
        },
        {
          "name": "col",
          "type_long": "int",
          "type_short": "int",
          "comment": "The column of the table.  (specifies which field)"
        }
      ],
      "return": {
        "type_long": "byte[]",
        "type_short": "byte[]",
        "comment": "the int value."
      },
      "throws": []
    },
    {
      "name": "putShortArray",
      "comment": "Stores an short array in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.",
      "javadoc": "Stores an short array in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@param value The value to store.",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "The row into the table (specifies which object)"
        },
        {
          "name": "col",
          "type_long": "int",
          "type_short": "int",
          "comment": "The column of the table.  (specifies which field)"
        },
        {
          "name": "value",
          "type_long": "short[]",
          "type_short": "short[]",
          "comment": "The value to store."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getShortArray",
      "comment": "Returns the short array at the given row, column.",
      "javadoc": "Returns the short array at the given row, column.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@return the int value.",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "The row into the table (specifies which object)"
        },
        {
          "name": "col",
          "type_long": "int",
          "type_short": "int",
          "comment": "The column of the table.  (specifies which field)"
        }
      ],
      "return": {
        "type_long": "short[]",
        "type_short": "short[]",
        "comment": "the int value."
      },
      "throws": []
    },
    {
      "name": "putIntArray",
      "comment": "Stores an int array in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.",
      "javadoc": "Stores an int array in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@param value The value to store.",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "The row into the table (specifies which object)"
        },
        {
          "name": "col",
          "type_long": "int",
          "type_short": "int",
          "comment": "The column of the table.  (specifies which field)"
        },
        {
          "name": "value",
          "type_long": "int[]",
          "type_short": "int[]",
          "comment": "The value to store."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "putFloatArray",
      "comment": "Stores a float array in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.",
      "javadoc": "Stores a float array in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@param value The value to store.",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "The row into the table (specifies which object)"
        },
        {
          "name": "col",
          "type_long": "int",
          "type_short": "int",
          "comment": "The column of the table.  (specifies which field)"
        },
        {
          "name": "value",
          "type_long": "float[]",
          "type_short": "float[]",
          "comment": "The value to store."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "putDoubleArray",
      "comment": "Stores a double array in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.",
      "javadoc": "Stores a double array in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@param value The value to store.",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "The row into the table (specifies which object)"
        },
        {
          "name": "col",
          "type_long": "int",
          "type_short": "int",
          "comment": "The column of the table.  (specifies which field)"
        },
        {
          "name": "value",
          "type_long": "double[]",
          "type_short": "double[]",
          "comment": "The value to store."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getIntArray",
      "comment": "Returns the int array at the given row, column.",
      "javadoc": "Returns the int array at the given row, column.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@return the int value.",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "The row into the table (specifies which object)"
        },
        {
          "name": "col",
          "type_long": "int",
          "type_short": "int",
          "comment": "The column of the table.  (specifies which field)"
        }
      ],
      "return": {
        "type_long": "int[]",
        "type_short": "int[]",
        "comment": "the int value."
      },
      "throws": []
    },
    {
      "name": "putLongArray",
      "comment": "Stores an long array in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.",
      "javadoc": "Stores an long array in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@param value The value to store.",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "The row into the table (specifies which object)"
        },
        {
          "name": "col",
          "type_long": "int",
          "type_short": "int",
          "comment": "The column of the table.  (specifies which field)"
        },
        {
          "name": "value",
          "type_long": "long[]",
          "type_short": "long[]",
          "comment": "The value to store."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLongArray",
      "comment": "Returns the long array at the given row, column.",
      "javadoc": "Returns the long array at the given row, column.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@return the long[] value.",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "The row into the table (specifies which object)"
        },
        {
          "name": "col",
          "type_long": "int",
          "type_short": "int",
          "comment": "The column of the table.  (specifies which field)"
        }
      ],
      "return": {
        "type_long": "long[]",
        "type_short": "long[]",
        "comment": "the long[] value."
      },
      "throws": []
    },
    {
      "name": "getFloatArray",
      "comment": "Returns the float array at the given row, column.",
      "javadoc": "Returns the float array at the given row, column.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@return the float[] value.",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "The row into the table (specifies which object)"
        },
        {
          "name": "col",
          "type_long": "int",
          "type_short": "int",
          "comment": "The column of the table.  (specifies which field)"
        }
      ],
      "return": {
        "type_long": "float[]",
        "type_short": "float[]",
        "comment": "the float[] value."
      },
      "throws": []
    },
    {
      "name": "getDoubleArray",
      "comment": "Returns the double array at the given row, column.",
      "javadoc": "Returns the double array at the given row, column.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@return the int value.",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "The row into the table (specifies which object)"
        },
        {
          "name": "col",
          "type_long": "int",
          "type_short": "int",
          "comment": "The column of the table.  (specifies which field)"
        }
      ],
      "return": {
        "type_long": "double[]",
        "type_short": "double[]",
        "comment": "the int value."
      },
      "throws": []
    },
    {
      "name": "putStringArray",
      "comment": "Stores a String array in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.",
      "javadoc": "Stores a String array in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@param value The value to store.",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "The row into the table (specifies which object)"
        },
        {
          "name": "col",
          "type_long": "int",
          "type_short": "int",
          "comment": "The column of the table.  (specifies which field)"
        },
        {
          "name": "value",
          "type_long": "java.lang.String[]",
          "type_short": "java.lang.String[]",
          "comment": "The value to store."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getStringArray",
      "comment": "Returns the String array at the given row, column.",
      "javadoc": "Returns the String array at the given row, column.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@return the String[] value.",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "The row into the table (specifies which object)"
        },
        {
          "name": "col",
          "type_long": "int",
          "type_short": "int",
          "comment": "The column of the table.  (specifies which field)"
        }
      ],
      "return": {
        "type_long": "java.lang.String[]",
        "type_short": "java.lang.String[]",
        "comment": "the String[] value."
      },
      "throws": []
    },
    {
      "name": "growTable",
      "comment": "increases the number of columns in the table",
      "javadoc": "increases the number of columns in the table\n@param numCols The number of columns needed in the table",
      "static": false,
      "params": [
        {
          "name": "numCols",
          "type_long": "int",
          "type_short": "int",
          "comment": "The number of columns needed in the table"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
