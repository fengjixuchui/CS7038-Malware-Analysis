{
  "name": "CaseInsensitiveDuplicateStringComparator",
  "comment": "Comparator for sorting Strings in a case insensitive way except that case insensitive duplicates\n are then sub-sorted by reverse case so that lower case is before upper case.\n\n Example:   the strings \"abc\", \"bob\", \"Bob\", \"zzz\" would always sort as shown.  In a normal case \n insensitive sort, the \"bob\" and \"Bob\" order would be arbitrary.",
  "javadoc": "Comparator for sorting Strings in a case insensitive way except that case insensitive duplicates\n are then sub-sorted by reverse case so that lower case is before upper case.\n\n Example:   the strings \"abc\", \"bob\", \"Bob\", \"zzz\" would always sort as shown.  In a normal case \n insensitive sort, the \"bob\" and \"Bob\" order would be arbitrary.",
  "static": false,
  "implements": [
    "java.util.Comparator"
  ],
  "extends": "java.lang.Object",
  "fields": [],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "compare",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "name1",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "name2",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    }
  ]
}
