{
  "name": "FixedSizeHashMap",
  "comment": "A simple implementation of a LRU map that will throw away entries that exceed the given\n maximum size.\n\n If you would like a LRU based upon access-order, then use the LRUMap.",
  "javadoc": "A simple implementation of a LRU map that will throw away entries that exceed the given\n maximum size.\n\n \u003cP\u003eIf you would like a LRU based upon \u003ci\u003eaccess-order\u003c/i\u003e, then use the {@link LRUMap}.\n@param \u003cK\u003e the key type\n@param \u003cV\u003e the value type",
  "static": false,
  "implements": [],
  "extends": "java.util.LinkedHashMap",
  "fields": [
    {
      "name": "maxSize",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "maxSize",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "initialSize",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "maxSize",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeEldestEntry",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "eldest",
          "type_long": "java.util.Map.Entry\u003cK,V\u003e",
          "type_short": "Entry",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    }
  ]
}
