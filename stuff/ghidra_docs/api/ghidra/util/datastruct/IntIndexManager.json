{
  "name": "IntIndexManager",
  "comment": "Class to generate int indexes to be used for arrays or tables.  If a location\n or entry in a table becomes available, the index for that location is released.\n This class manages the use and reuse of those indexes.",
  "javadoc": "Class to generate int indexes to be used for arrays or tables.  If a location\n or entry in a table becomes available, the index for that location is released.\n This class manages the use and reuse of those indexes.",
  "static": false,
  "implements": [
    "java.io.Serializable"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "serialVersionUID",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "long",
      "type_short": "long",
      "constant_value": "1"
    },
    {
      "name": "nextIndex",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "freeList",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.ArrayList\u003cjava.lang.Integer\u003e",
      "type_short": "ArrayList",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs an IntIndexManager.",
      "javadoc": "Constructs an IntIndexManager.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "allocate",
      "comment": "Returns the smallest unused index value.",
      "javadoc": "Returns the smallest unused index value.\n@exception IndexOutOfBoundsException thrown if there are no unused\n indexes.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "deallocate",
      "comment": "Returns the index value so that it can be reused.",
      "javadoc": "Returns the index value so that it can be reused.\n@param index the index to be free\u0027d for reuse.",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "int",
          "type_short": "int",
          "comment": "the index to be free\u0027d for reuse."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "clear",
      "comment": "frees all index values.",
      "javadoc": "frees all index values.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
