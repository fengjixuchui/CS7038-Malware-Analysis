{
  "name": "Stack",
  "comment": "\n The Stack class represents a last-in-first-out (LIFO) stack of objects.\n It extends class ArrayList with five operations that allow an array list\n to be treated as a stack. The usual push and pop operations are provided,\n as well as a method to peek at the top item on the stack, a\n method to test for whether the stack is empty, and a method to search\n the stack for an item and discover how far it is from the top.\n \n \n When a stack is first created, it contains no items.\n \n \n Note: This implementation is not synchronized!\n ",
  "javadoc": "\u003cp\u003e\n The Stack class represents a last-in-first-out (LIFO) stack of objects.\n It extends class ArrayList with five operations that allow an array list\n to be treated as a stack. The usual push and pop operations are provided,\n as well as a method to peek at the top item on the stack, a\n method to test for whether the stack is empty, and a method to search\n the stack for an item and discover how far it is from the top.\n \u003c/p\u003e\n \u003cp\u003e\n When a stack is first created, it contains no items.\n \u003c/p\u003e\n \u003cp\u003e\n \u003cb\u003eNote: This implementation is not synchronized!\u003c/b\u003e\n \u003c/p\u003e",
  "static": false,
  "implements": [
    "java.lang.Iterable"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "list",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cE\u003e",
      "type_short": "List",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Creates an empty Stack.",
      "javadoc": "Creates an empty Stack.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Creates an empty Stack with specified capacity.",
      "javadoc": "Creates an empty Stack with specified capacity.\n@param initialCapacity the initial capacity.",
      "static": false,
      "params": [
        {
          "name": "initialCapacity",
          "type_long": "int",
          "type_short": "int",
          "comment": "the initial capacity."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Copy Constructor.\n Creates a new stack using the items of the given stack.\n Only a shallow copy is performed.",
      "javadoc": "Copy Constructor.\n Creates a new stack using the items of the given stack.\n Only a shallow copy is performed.\n@param stack the stack to copy",
      "static": false,
      "params": [
        {
          "name": "stack",
          "type_long": "ghidra.util.datastruct.Stack\u003cE\u003e",
          "type_short": "Stack",
          "comment": "the stack to copy"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isEmpty",
      "comment": "Tests if this stack is empty.",
      "javadoc": "Tests if this stack is empty.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "peek",
      "comment": "Looks at the object at the top of this stack without removing it from the stack.",
      "javadoc": "Looks at the object at the top of this stack without removing it from the stack.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "E",
        "type_short": "E",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "pop",
      "comment": "Removes the object at the top of this stack and returns that object as the value of this function.",
      "javadoc": "Removes the object at the top of this stack and returns that object as the value of this function.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "E",
        "type_short": "E",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "push",
      "comment": "Pushes an item onto the top of this stack.",
      "javadoc": "Pushes an item onto the top of this stack.\n@param item the object to push onto the stack.",
      "static": false,
      "params": [
        {
          "name": "item",
          "type_long": "E",
          "type_short": "E",
          "comment": "the object to push onto the stack."
        }
      ],
      "return": {
        "type_long": "E",
        "type_short": "E",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "search",
      "comment": "Returns the position where an object is on this stack.",
      "javadoc": "Returns the position where an object is on this stack.\n@param o the object to search for.",
      "static": false,
      "params": [
        {
          "name": "o",
          "type_long": "E",
          "type_short": "E",
          "comment": "the object to search for."
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "size",
      "comment": "Returns the number of elements in this stack.",
      "javadoc": "Returns the number of elements in this stack.\n@return the number of elements in this stack",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the number of elements in this stack"
      },
      "throws": []
    },
    {
      "name": "get",
      "comment": "Returns the element at the specified depth in this stack.\n 0 indicates the bottom of the stack.\n size()-1 indicates the top of the stack.",
      "javadoc": "Returns the element at the specified depth in this stack.\n 0 indicates the bottom of the stack.\n size()-1 indicates the top of the stack.\n@param depth the depth in the stack.\n@return the element at the specified depth in this stack",
      "static": false,
      "params": [
        {
          "name": "depth",
          "type_long": "int",
          "type_short": "int",
          "comment": "the depth in the stack."
        }
      ],
      "return": {
        "type_long": "E",
        "type_short": "E",
        "comment": "the element at the specified depth in this stack"
      },
      "throws": []
    },
    {
      "name": "add",
      "comment": "Appends the given item to the top of the stack.",
      "javadoc": "Appends the given item to the top of the stack.\n@param item the new top of the stack",
      "static": false,
      "params": [
        {
          "name": "item",
          "type_long": "E",
          "type_short": "E",
          "comment": "the new top of the stack"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "clear",
      "comment": "Clears the stack. All items will be removed.",
      "javadoc": "Clears the stack. All items will be removed.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "iterator",
      "comment": "Returns an iterator over the items of the stack.\n The iterator starts from the bottom of the stack.",
      "javadoc": "Returns an iterator over the items of the stack.\n The iterator starts from the bottom of the stack.\n@return an iterator over the items of the stack",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Iterator\u003cE\u003e",
        "type_short": "Iterator",
        "comment": "an iterator over the items of the stack"
      },
      "throws": []
    },
    {
      "name": "stream",
      "comment": "Returns a stream over this collection.",
      "javadoc": "Returns a stream over this collection.\n@return a stream over this collection.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.stream.Stream\u003cE\u003e",
        "type_short": "Stream",
        "comment": "a stream over this collection."
      },
      "throws": []
    },
    {
      "name": "hashCode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "equals",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "obj",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    }
  ]
}
