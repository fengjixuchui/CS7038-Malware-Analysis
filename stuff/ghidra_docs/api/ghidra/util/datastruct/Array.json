{
  "name": "Array",
  "comment": "Base interface for Defining methods for managing a \"virtual\" array of some data type.\n Any access of an Array with an index that has never been set will return 0 \n (or something like that depending on the data type)",
  "javadoc": "Base interface for Defining methods for managing a \"virtual\" array of some data type.\n Any access of an Array with an index that has never been set will return 0 \n (or something like that depending on the data type)",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "remove",
      "comment": "Removes the value at that index.  If the array is of primitive type (int, short, etc),\n then \"removing\" the value is equivilent to setting the value to 0;",
      "javadoc": "Removes the value at that index.  If the array is of primitive type (int, short, etc),\n then \"removing\" the value is equivilent to setting the value to 0;\n@param index int index into the array to remove.",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "int",
          "type_short": "int",
          "comment": "int index into the array to remove."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLastNonEmptyIndex",
      "comment": "Returns the index of the last non-null or non-zero element in the array.",
      "javadoc": "Returns the index of the last non-null or non-zero element in the array.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "copyDataTo",
      "comment": "Copies the underlying value for this array at the given index to the\n data table at the given index and column.  The data type at the column in\n the data table must be the same as the data in this array.",
      "javadoc": "Copies the underlying value for this array at the given index to the\n data table at the given index and column.  The data type at the column in\n the data table must be the same as the data in this array.\n@param index index into this array to copy the value from.\n@param table the data table object to copy the data to.\n@param toIndex the index into the destination data table to copy the\n value.\n@param toCol the data table column to store the value.  Must be the same\n type as this array.",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "int",
          "type_short": "int",
          "comment": "index into this array to copy the value from."
        },
        {
          "name": "table",
          "type_long": "ghidra.util.datastruct.DataTable",
          "type_short": "DataTable",
          "comment": "the data table object to copy the data to."
        },
        {
          "name": "toIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": "the index into the destination data table to copy the\n value."
        },
        {
          "name": "toCol",
          "type_long": "int",
          "type_short": "int",
          "comment": "the data table column to store the value.  Must be the same\n type as this array."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
