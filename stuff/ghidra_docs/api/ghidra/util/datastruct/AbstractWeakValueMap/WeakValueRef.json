{
  "name": "WeakValueRef",
  "comment": "A weak value ref that also knows its key in the map.\n \n \n Used for processing the reference queue, so we know which keys to remove.",
  "javadoc": "A weak value ref that also knows its key in the map.\n \n \u003cp\u003e\n Used for processing the reference queue, so we know which keys to remove.\n@param \u003cK\u003e the type of key\n@param \u003cV\u003e the type of value",
  "static": true,
  "implements": [],
  "extends": "java.lang.ref.WeakReference",
  "fields": [
    {
      "name": "key",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "K",
      "type_short": "K",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "key",
          "type_long": "K",
          "type_short": "K",
          "comment": ""
        },
        {
          "name": "value",
          "type_long": "V",
          "type_short": "V",
          "comment": ""
        },
        {
          "name": "refQueue",
          "type_long": "java.lang.ref.ReferenceQueue\u003cV\u003e",
          "type_short": "ReferenceQueue",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
