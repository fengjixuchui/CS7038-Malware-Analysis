{
  "name": "SizeLimitedAccumulatorWrapper",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [
    "ghidra.util.datastruct.Accumulator"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "accumulator",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.datastruct.Accumulator\u003cT\u003e",
      "type_short": "Accumulator",
      "constant_value": null
    },
    {
      "name": "maxSize",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor.",
      "javadoc": "Constructor.\n@param accumulator the accumulator to pass items to\n@param maxSize the maximum number of items this accumulator will hold",
      "static": false,
      "params": [
        {
          "name": "accumulator",
          "type_long": "ghidra.util.datastruct.Accumulator\u003cT\u003e",
          "type_short": "Accumulator",
          "comment": "the accumulator to pass items to"
        },
        {
          "name": "maxSize",
          "type_long": "int",
          "type_short": "int",
          "comment": "the maximum number of items this accumulator will hold"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "iterator",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Iterator\u003cT\u003e",
        "type_short": "Iterator",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "add",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "t",
          "type_long": "T",
          "type_short": "T",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addAll",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "collection",
          "type_long": "java.util.Collection\u003cT\u003e",
          "type_short": "Collection",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "contains",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "t",
          "type_long": "T",
          "type_short": "T",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "get",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Collection\u003cT\u003e",
        "type_short": "Collection",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "size",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hasReachedSizeLimit",
      "comment": "Returns true if this size of this accumulator is greater than or equal to the given \n maximum size",
      "javadoc": "Returns true if this size of this accumulator is greater than or equal to the given \n maximum size\n@return true if the max size has been reachged",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the max size has been reachged"
      },
      "throws": []
    }
  ]
}
