{
  "name": "Switch",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getCaseAddress",
      "comment": "Returns address corresponding to the specified caseIndexValue.",
      "javadoc": "Returns address corresponding to the specified caseIndexValue.\n@param caseIndexValue index value for specific case\n@return case address\n@throws MemoryAccessException\n@throws AddressOutOfBoundsException",
      "static": false,
      "params": [
        {
          "name": "caseIndexValue",
          "type_long": "int",
          "type_short": "int",
          "comment": "index value for specific case"
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": "case address"
      },
      "throws": [
        {
          "type_long": "ghidra.program.model.mem.MemoryAccessException",
          "type_short": "MemoryAccessException",
          "comment": ""
        },
        {
          "type_long": "ghidra.program.model.address.AddressOutOfBoundsException",
          "type_short": "AddressOutOfBoundsException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getIndexValue",
      "comment": "Returns the Varnode or VarnodeOperation which corresponds to the case index value for a switch.",
      "javadoc": "Returns the Varnode or VarnodeOperation which corresponds to the case index value for a switch.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.pcode.Varnode",
        "type_short": "Varnode",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getIndirectJumpSwitch",
      "comment": "Qualify IndirectJumpSwitch\n and return IndirectJumpSwitch object if qualified or null if not.",
      "javadoc": "Qualify IndirectJumpSwitch\n and return IndirectJumpSwitch object if qualified or null if not.\n@param program\n@param v potential input value which corresponds to a indirect destination\n@return IndirectJumpSwitch object or null if v failed qualification",
      "static": true,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "v",
          "type_long": "ghidra.program.model.pcode.Varnode",
          "type_short": "Varnode",
          "comment": "potential input value which corresponds to a indirect destination"
        }
      ],
      "return": {
        "type_long": "ghidra.util.state.analysis.Switch",
        "type_short": "Switch",
        "comment": "IndirectJumpSwitch object or null if v failed qualification"
      },
      "throws": []
    }
  ]
}
