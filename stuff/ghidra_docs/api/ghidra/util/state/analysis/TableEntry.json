{
  "name": "TableEntry",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "extends": "ghidra.util.state.analysis.Switch",
  "fields": [
    {
      "name": "program",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.listing.Program",
      "type_short": "Program",
      "constant_value": null
    },
    {
      "name": "tableEntryAddress",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.state.analysis.TableEntryAddress",
      "type_short": "TableEntryAddress",
      "constant_value": null
    },
    {
      "name": "size",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "signExtend",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "tableEntryAddress",
          "type_long": "ghidra.util.state.analysis.TableEntryAddress",
          "type_short": "TableEntryAddress",
          "comment": ""
        },
        {
          "name": "entrySize",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "signExtend",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getTableEntrySize",
      "comment": "Returns table entry size in bytes",
      "javadoc": "Returns table entry size in bytes",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getIndexValue",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.pcode.Varnode",
        "type_short": "Varnode",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getTableEntryValue",
      "comment": "Returns table entry value for specified caseIndexValue.",
      "javadoc": "Returns table entry value for specified caseIndexValue.\n@param caseIndexValue index value for specific case\n@param scaleFactor scale factor, generally this should be 1\n@param createTableData if true an attempt will be made to create associated Data in table\n@return value loaded from the table entry in memory which corresponds to the specified caseIndexValue.\n@throws MemoryAccessException",
      "static": false,
      "params": [
        {
          "name": "caseIndexValue",
          "type_long": "int",
          "type_short": "int",
          "comment": "index value for specific case"
        },
        {
          "name": "scaleFactor",
          "type_long": "int",
          "type_short": "int",
          "comment": "scale factor, generally this should be 1"
        },
        {
          "name": "createTableData",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "if true an attempt will be made to create associated Data in table"
        }
      ],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": "value loaded from the table entry in memory which corresponds to the specified caseIndexValue."
      },
      "throws": [
        {
          "type_long": "ghidra.program.model.mem.MemoryAccessException",
          "type_short": "MemoryAccessException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getTableEntryAsAddress",
      "comment": "Returns table entry value as pointer for specified caseIndexValue.",
      "javadoc": "Returns table entry value as pointer for specified caseIndexValue.\n@param caseIndexValue index value for specific case\n@param scaleFactor scale factor, generally this should be 1\n@param createTableData if true an attempt will be made to create associated Data in table\n@return pointer loaded from the table entry in memory which corresponds to the specified caseIndexValue.\n@throws MemoryAccessException\n@throws AddressOutOfBoundsException",
      "static": false,
      "params": [
        {
          "name": "caseIndexValue",
          "type_long": "int",
          "type_short": "int",
          "comment": "index value for specific case"
        },
        {
          "name": "scaleFactor",
          "type_long": "int",
          "type_short": "int",
          "comment": "scale factor, generally this should be 1"
        },
        {
          "name": "createTableData",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "if true an attempt will be made to create associated Data in table"
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": "pointer loaded from the table entry in memory which corresponds to the specified caseIndexValue."
      },
      "throws": [
        {
          "type_long": "ghidra.program.model.mem.MemoryAccessException",
          "type_short": "MemoryAccessException",
          "comment": ""
        },
        {
          "type_long": "ghidra.program.model.address.AddressOutOfBoundsException",
          "type_short": "AddressOutOfBoundsException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getCaseAddress",
      "comment": "Returns table entry value as pointer for specified caseIndexValue.",
      "javadoc": "Returns table entry value as pointer for specified caseIndexValue.\n@param caseIndexValue index value for specific case\n@return pointer loaded from the table entry in memory which corresponds to the specified caseIndexValue.\n@throws MemoryAccessException\n@throws AddressOutOfBoundsException",
      "static": false,
      "params": [
        {
          "name": "caseIndexValue",
          "type_long": "int",
          "type_short": "int",
          "comment": "index value for specific case"
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": "pointer loaded from the table entry in memory which corresponds to the specified caseIndexValue."
      },
      "throws": [
        {
          "type_long": "ghidra.program.model.mem.MemoryAccessException",
          "type_short": "MemoryAccessException",
          "comment": ""
        },
        {
          "type_long": "ghidra.program.model.address.AddressOutOfBoundsException",
          "type_short": "AddressOutOfBoundsException",
          "comment": ""
        }
      ]
    },
    {
      "name": "createPointer",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "entryAddr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "scaleFactor",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createData",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "listing",
          "type_long": "ghidra.program.model.listing.Listing",
          "type_short": "Listing",
          "comment": ""
        },
        {
          "name": "entryAddr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLongValue",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "entryAddr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "scaleFactor",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "size",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "signExtend",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.program.model.mem.MemoryAccessException",
          "type_short": "MemoryAccessException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getTableEntry",
      "comment": "Qualify TableEntry as LOAD(table-entry-address)\n and return TableEntry if qualified or null if not.",
      "javadoc": "Qualify TableEntry as LOAD(table-entry-address)\n and return TableEntry if qualified or null if not.\n@param program\n@param v potential input value which corresponds to a switch table entry\n@return TableEntry object or null if v failed qualification",
      "static": true,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "v",
          "type_long": "ghidra.program.model.pcode.Varnode",
          "type_short": "Varnode",
          "comment": "potential input value which corresponds to a switch table entry"
        }
      ],
      "return": {
        "type_long": "ghidra.util.state.analysis.TableEntry",
        "type_short": "TableEntry",
        "comment": "TableEntry object or null if v failed qualification"
      },
      "throws": []
    }
  ]
}
