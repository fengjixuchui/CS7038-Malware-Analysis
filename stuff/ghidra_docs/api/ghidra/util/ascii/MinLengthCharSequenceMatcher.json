{
  "name": "MinLengthCharSequenceMatcher",
  "comment": "Instances of this class will find sequences of characters that are in the given char set and\n of a minimum length.  Characters a fed one at a time into this object. Adding a char may trigger\n the discovery of a sequence if the char is a 0 or not in the char set and we already have seen\n a sequence of included chars at least as long as the minimum length.",
  "javadoc": "Instances of this class will find sequences of characters that are in the given char set and\n of a minimum length.  Characters a fed one at a time into this object. Adding a char may trigger\n the discovery of a sequence if the char is a 0 or not in the char set and we already have seen\n a sequence of included chars at least as long as the minimum length.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "minimumSequenceLength",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "sequenceStartIndex",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "currentIndex",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "inAsciiSequence",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "charSet",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.ascii.CharSetRecognizer",
      "type_short": "CharSetRecognizer",
      "constant_value": null
    },
    {
      "name": "lastSequence",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.ascii.Sequence",
      "type_short": "Sequence",
      "constant_value": null
    },
    {
      "name": "alignment",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "minimumSequenceLength",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "charSet",
          "type_long": "ghidra.util.ascii.CharSetRecognizer",
          "type_short": "CharSetRecognizer",
          "comment": ""
        },
        {
          "name": "alignment",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addChar",
      "comment": "Adds a character to this sequence matcher.",
      "javadoc": "Adds a character to this sequence matcher.\n@param c the character to add.\n@return a Sequence if the added char triggered an end of a valid sequence, otherwise null.",
      "static": false,
      "params": [
        {
          "name": "c",
          "type_long": "int",
          "type_short": "int",
          "comment": "the character to add."
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "a Sequence if the added char triggered an end of a valid sequence, otherwise null."
      },
      "throws": []
    },
    {
      "name": "meetsAlignmentRequirement",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "endSequence",
      "comment": "Indicates there are no more contiguous chars to add to this matcher.  If a minimum or more\n number of included chars have been seen before this call, then a sequence is returned.",
      "javadoc": "Indicates there are no more contiguous chars to add to this matcher.  If a minimum or more\n number of included chars have been seen before this call, then a sequence is returned.\n@return a Sequence if there was a sequence of chars \u0026gt;\u003d the min length just before this call.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "a Sequence if there was a sequence of chars \u003d the min length just before this call."
      },
      "throws": []
    },
    {
      "name": "reset",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSequence",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.util.ascii.Sequence",
        "type_short": "Sequence",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "checkSequence",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "start",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        },
        {
          "name": "end",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        },
        {
          "name": "nullTerminated",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    }
  ]
}
