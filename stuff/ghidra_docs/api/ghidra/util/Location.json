{
  "name": "Location",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "getStringRepresentation",
      "comment": "Returns a displayable representation of this location.",
      "javadoc": "Returns a displayable representation of this location.\n@return a displayable representation of this location.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "a displayable representation of this location."
      },
      "throws": []
    },
    {
      "name": "getDescription",
      "comment": "Returns a description for the location.  This should probably describe the significance of the\n location.  For example, if this location is from an Issue, then what is its relationship to the\n issue.",
      "javadoc": "Returns a description for the location.  This should probably describe the significance of the\n location.  For example, if this location is from an Issue, then what is its relationship to the\n issue.\n@return a descrition for the location.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "a descrition for the location."
      },
      "throws": []
    },
    {
      "name": "go",
      "comment": "Will attempt to navigate to the location as appropriate.  For example, it may use the goto service\n to navigate the code browser to a progam and and address.  Or it could launch a browser and\n display a web page.",
      "javadoc": "Will attempt to navigate to the location as appropriate.  For example, it may use the goto service\n to navigate the code browser to a progam and and address.  Or it could launch a browser and\n display a web page.\n@param provider a service provider that this location can use to find a service to help with\n navigation.\n@return true if the navigation was successful, false otherwise.",
      "static": false,
      "params": [
        {
          "name": "provider",
          "type_long": "ghidra.framework.plugintool.ServiceProvider",
          "type_short": "ServiceProvider",
          "comment": "a service provider that this location can use to find a service to help with\n navigation."
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the navigation was successful, false otherwise."
      },
      "throws": []
    }
  ]
}
