{
  "name": "GhidraFileFilter",
  "comment": "A interface that filters out all files \n except for those type extensions that it knows about.\n Extensions are of the type \".foo\", which is typically found on\n Windows and Unix boxes, but not on Macinthosh. Case is ignored.",
  "javadoc": "A interface that filters out all files \n except for those type extensions that it knows about.\n Extensions are of the type \".foo\", which is typically found on\n Windows and Unix boxes, but not on Macinthosh. Case is ignored.",
  "static": false,
  "implements": [],
  "fields": [
    {
      "name": "ALL",
      "comment": "A default implementation that shows all files.",
      "javadoc": "A default implementation that shows all files.",
      "static": true,
      "type_long": "ghidra.util.filechooser.GhidraFileFilter",
      "type_short": "GhidraFileFilter",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "accept",
      "comment": "Tests whether or not the specified abstract pathname should be\n included in a pathname list.",
      "javadoc": "Tests whether or not the specified abstract pathname should be\n included in a pathname list.\n@param pathname The abstract pathname to be tested\n@param model The underlying file chooser model\n@return \u003ccode\u003etrue\u003c/code\u003e if and only if \u003ccode\u003epathname\u003c/code\u003e\n          should be included",
      "static": false,
      "params": [
        {
          "name": "pathname",
          "type_long": "java.io.File",
          "type_short": "File",
          "comment": "The abstract pathname to be tested"
        },
        {
          "name": "model",
          "type_long": "ghidra.util.filechooser.GhidraFileChooserModel",
          "type_short": "GhidraFileChooserModel",
          "comment": "The underlying file chooser model"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if and only if pathname\n          should be included"
      },
      "throws": []
    },
    {
      "name": "getDescription",
      "comment": "Returns the description of this filter.",
      "javadoc": "Returns the description of this filter.\n@return the description of this filter",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the description of this filter"
      },
      "throws": []
    }
  ]
}
