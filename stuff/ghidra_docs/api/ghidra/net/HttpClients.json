{
  "name": "HttpClients",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "client",
      "comment": "Note: java.net.http.HttpClient instances can allocate system resources (file handles),\n and frequently creating a new HttpClient could exhaust system resources.\n \n There is no \"close()\" on a HttpClient to release resources.  The system resources \n allocated by HttpClient instances will be released when the instance is gc\u0027d.\n However, since the resources in question (filehandles) are not tied to memory pressure,\n its possible a gc() won\u0027t happen before running out of file handles if a few hundred\n HttpClient instances have been created / discarded.  \n \n Also note, there is no per-connection ability to disable hostname verification in a\n SSL/TLS connection.  There is a global flag:\n -Djdk.internal.httpclient.disableHostnameVerification",
      "javadoc": "Note: java.net.http.HttpClient instances can allocate system resources (file handles),\n and frequently creating a new HttpClient could exhaust system resources.\n \u003cp\u003e\n There is no \"close()\" on a HttpClient to release resources.  The system resources \n allocated by HttpClient instances will be released when the instance is gc\u0027d.\n However, since the resources in question (filehandles) are not tied to memory pressure,\n its possible a gc() won\u0027t happen before running out of file handles if a few hundred\n HttpClient instances have been created / discarded.  \n \u003cp\u003e\n Also note, there is no per-connection ability to disable hostname verification in a\n SSL/TLS connection.  There is a global flag:\n -Djdk.internal.httpclient.disableHostnameVerification",
      "static": true,
      "type_long": "java.net.http.HttpClient",
      "type_short": "HttpClient",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "newHttpClientBuilder",
      "comment": "Creates a HttpClient Builder using Ghidra SSL/TLS context info.",
      "javadoc": "Creates a HttpClient Builder using Ghidra SSL/TLS context info.\n@return a new HttpClient Builder\n@throws IOException if error in PKI settings or crypto configuration",
      "static": true,
      "params": [],
      "return": {
        "type_long": "java.net.http.HttpClient.Builder",
        "type_short": "Builder",
        "comment": "a new HttpClient Builder"
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if error in PKI settings or crypto configuration"
        }
      ]
    },
    {
      "name": "getHttpClient",
      "comment": "Returns a shared, plain (no special options) HttpClient.",
      "javadoc": "Returns a shared, plain (no special options) {@link HttpClient}.\n@return a {@link HttpClient}\n@throws IOException if error in PKI settings or crypto configuration",
      "static": true,
      "params": [],
      "return": {
        "type_long": "java.net.http.HttpClient",
        "type_short": "HttpClient",
        "comment": "a HttpClient"
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if error in PKI settings or crypto configuration"
        }
      ]
    },
    {
      "name": "clearHttpClient",
      "comment": "Clears the currently cached HttpClient, forcing it to be\n rebuilt during the next call to #getHttpClient().",
      "javadoc": "Clears the currently cached {@link HttpClient}, forcing it to be\n rebuilt during the next call to {@link #getHttpClient()}.",
      "static": true,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
