{
  "name": "GhidraClassLoader",
  "comment": "Custom Ghidra URL class loader which exposes the addURL method so we can add to the classpath\n at runtime.  \n \n This class loader must be installed by setting the \"java.system.class.loader\" \n system property prior to launch (i.e., the JVM should be launched with the following argument:\n -Djava.system.class.loader\u003dghidra.GhidraClassLoader.",
  "javadoc": "Custom Ghidra URL class loader which exposes the addURL method so we can add to the classpath\n at runtime.  \n \u003cp\u003e\n This class loader must be installed by setting the \"java.system.class.loader\" \n system property prior to launch (i.e., the JVM should be launched with the following argument:\n -Djava.system.class.loader\u003dghidra.GhidraClassLoader.",
  "static": false,
  "implements": [],
  "extends": "java.net.URLClassLoader",
  "fields": [
    {
      "name": "CP",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"java.class.path\""
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "This one-argument constructor is required for the JVM to successfully use this class loader\n via the java.system.class.loader system property.",
      "javadoc": "This one-argument constructor is required for the JVM to successfully use this class loader\n via the java.system.class.loader system property.\n@param parent The parent class loader for delegation",
      "static": false,
      "params": [
        {
          "name": "parent",
          "type_long": "java.lang.ClassLoader",
          "type_short": "ClassLoader",
          "comment": "The parent class loader for delegation"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addURL",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "url",
          "type_long": "java.net.URL",
          "type_short": "URL",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addPath",
      "comment": "Converts the specified path to a URL and adds it to the classpath.",
      "javadoc": "Converts the specified path to a {@link URL} and adds it to the classpath.\n@param path The path to be added.\n@return True if the path was successfully added; otherwise, false.  Failure can occur if the \n   path is not able to be converted to a URL.\n@see #addURL(URL)",
      "static": false,
      "params": [
        {
          "name": "path",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "The path to be added."
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "True if the path was successfully added; otherwise, false.  Failure can occur if the \n   path is not able to be converted to a URL."
      },
      "throws": []
    },
    {
      "name": "appendToClassPathForInstrumentation",
      "comment": "VisualVM calls this to dynamically add things to the classpath.  \n \n NOTE: It is not required to be public.",
      "javadoc": "VisualVM calls this to dynamically add things to the classpath.  \n \u003cp\u003e\n NOTE: It is not required to be public.\n@param path The path to be added to the search path of URLs.\n@see Instrumentation#appendToSystemClassLoaderSearch",
      "static": false,
      "params": [
        {
          "name": "path",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "The path to be added to the search path of URLs."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
