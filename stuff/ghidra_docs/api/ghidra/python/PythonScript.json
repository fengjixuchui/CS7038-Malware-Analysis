{
  "name": "PythonScript",
  "comment": "A Python version of a GhidraScript.",
  "javadoc": "A Python version of a {@link GhidraScript}.",
  "static": false,
  "implements": [],
  "extends": "ghidra.app.script.GhidraScript",
  "fields": [
    {
      "name": "PYTHON_INTERPRETER",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"ghidra.python.interpreter\""
    },
    {
      "name": "interpreterRunning",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.concurrent.atomic.AtomicBoolean",
      "type_short": "AtomicBoolean",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "run",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "runScript",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "scriptName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "scriptState",
          "type_long": "ghidra.app.script.GhidraState",
          "type_short": "GhidraState",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.lang.Exception",
          "type_short": "Exception",
          "comment": ""
        }
      ]
    },
    {
      "name": "runInExistingEnvironment",
      "comment": "Runs this script in an existing interpreter environment.",
      "javadoc": "Runs this script in an existing interpreter environment.\n@param interpreter The existing interpreter to execute from.",
      "static": false,
      "params": [
        {
          "name": "interpreter",
          "type_long": "ghidra.python.GhidraPythonInterpreter",
          "type_short": "GhidraPythonInterpreter",
          "comment": "The existing interpreter to execute from."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "runInNewEnvironment",
      "comment": "Runs this script in a new interpreter environment and sticks the new interpreter\n in the script state so it can be retrieved by scripts called from this script.",
      "javadoc": "Runs this script in a new interpreter environment and sticks the new interpreter\n in the script state so it can be retrieved by scripts called from this script.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getStdOut",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.io.PrintWriter",
        "type_short": "PrintWriter",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getStdErr",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.io.PrintWriter",
        "type_short": "PrintWriter",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "sleep100millis",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getCategory",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    }
  ]
}
