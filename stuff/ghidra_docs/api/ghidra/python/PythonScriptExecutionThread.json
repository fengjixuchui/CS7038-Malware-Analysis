{
  "name": "PythonScriptExecutionThread",
  "comment": "Thread responsible for executing a python script from a file.",
  "javadoc": "Thread responsible for executing a python script from a file.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Thread",
  "fields": [
    {
      "name": "script",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.python.PythonScript",
      "type_short": "PythonScript",
      "constant_value": null
    },
    {
      "name": "interpreter",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.python.GhidraPythonInterpreter",
      "type_short": "GhidraPythonInterpreter",
      "constant_value": null
    },
    {
      "name": "interpreterRunning",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.concurrent.atomic.AtomicBoolean",
      "type_short": "AtomicBoolean",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Creates a new python script execution thread that executes the given python script.",
      "javadoc": "Creates a new python script execution thread that executes the given python script.\n@param script The python script to execute.\n@param interpreter The python interpreter to use for execution.\n@param interpreterRunning Gets set to indicate whether or not the interpreter is still running the script.",
      "static": false,
      "params": [
        {
          "name": "script",
          "type_long": "ghidra.python.PythonScript",
          "type_short": "PythonScript",
          "comment": "The python script to execute."
        },
        {
          "name": "interpreter",
          "type_long": "ghidra.python.GhidraPythonInterpreter",
          "type_short": "GhidraPythonInterpreter",
          "comment": "The python interpreter to use for execution."
        },
        {
          "name": "interpreterRunning",
          "type_long": "java.util.concurrent.atomic.AtomicBoolean",
          "type_short": "AtomicBoolean",
          "comment": "Gets set to indicate whether or not the interpreter is still running the script."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "run",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
