{
  "name": "PythonScriptProvider",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "extends": "ghidra.app.script.GhidraScriptProvider",
  "fields": [
    {
      "name": "BLOCK_COMMENT",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.util.regex.Pattern",
      "type_short": "Pattern",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createNewScript",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "newScript",
          "type_long": "generic.jar.ResourceFile",
          "type_short": "ResourceFile",
          "comment": ""
        },
        {
          "name": "category",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getBlockCommentStart",
      "comment": "Returns a Pattern that matches block comment openings.\n In Python this is a triple single quote sequence, \"\u0027\u0027\u0027\".",
      "javadoc": "Returns a Pattern that matches block comment openings.\n In Python this is a triple single quote sequence, \"\u0027\u0027\u0027\".\n@return the Pattern for Python block comment openings",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.regex.Pattern",
        "type_short": "Pattern",
        "comment": "the Pattern for Python block comment openings"
      },
      "throws": []
    },
    {
      "name": "getBlockCommentEnd",
      "comment": "Returns a Pattern that matches block comment closings.\n In Python this is a triple single quote sequence, \"\u0027\u0027\u0027\".",
      "javadoc": "Returns a Pattern that matches block comment closings.\n In Python this is a triple single quote sequence, \"\u0027\u0027\u0027\".\n@return the Pattern for Python block comment openings",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.regex.Pattern",
        "type_short": "Pattern",
        "comment": "the Pattern for Python block comment openings"
      },
      "throws": []
    },
    {
      "name": "getCommentCharacter",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getCertifyHeaderStart",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getCertificationBodyPrefix",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getCertifyHeaderEnd",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDescription",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getExtension",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getScriptInstance",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "sourceFile",
          "type_long": "generic.jar.ResourceFile",
          "type_short": "ResourceFile",
          "comment": ""
        },
        {
          "name": "writer",
          "type_long": "java.io.PrintWriter",
          "type_short": "PrintWriter",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.app.script.GhidraScript",
        "type_short": "GhidraScript",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.lang.ClassNotFoundException",
          "type_short": "ClassNotFoundException",
          "comment": ""
        },
        {
          "type_long": "java.lang.InstantiationException",
          "type_short": "InstantiationException",
          "comment": ""
        },
        {
          "type_long": "java.lang.IllegalAccessException",
          "type_short": "IllegalAccessException",
          "comment": ""
        }
      ]
    }
  ]
}
