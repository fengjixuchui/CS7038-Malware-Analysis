{
  "name": "GraphJob",
  "comment": "A graph job is an item of work that needs to be performed.",
  "javadoc": "A graph job is an item of work that needs to be performed.\n@see GraphJobRunner",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "execute",
      "comment": "Tells this job to do its work.  This call will be on the Swing thread.  It is required\n that the given listener be called on the Swing thread when the job is finished.",
      "javadoc": "Tells this job to do its work.  This call will be on the Swing thread.  It is required\n that the given listener be called on the Swing thread when the job is finished.\n@param listener the listener this job is expected to call when its work is finished",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "ghidra.graph.job.GraphJobListener",
          "type_short": "GraphJobListener",
          "comment": "the listener this job is expected to call when its work is finished"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "canShortcut",
      "comment": "Returns true if the job can be told to stop running, but to still perform any final \n work before being done.",
      "javadoc": "Returns true if the job can be told to stop running, but to still perform any final \n work before being done.\n@return true if the job can be shortcut",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the job can be shortcut"
      },
      "throws": []
    },
    {
      "name": "shortcut",
      "comment": "Tells this job to stop running, but to still perform any final work before being done.\n \n Note: if your job is multi-threaded, then you must make sure to end your thread and\n work before returning from this method.  If that cannot be done in a timely manner, then\n your #canShortcut() should return false.",
      "javadoc": "Tells this job to stop running, but to still perform any final work before being done.\n \n \u003cP\u003eNote: if your job is multi-threaded, then you must make sure to end your thread and\n work before returning from this method.  If that cannot be done in a timely manner, then\n your {@link #canShortcut()} should return false.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isFinished",
      "comment": "Returns true if this job has finished its work",
      "javadoc": "Returns true if this job has finished its work\n@return true if this job has finished its work",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if this job has finished its work"
      },
      "throws": []
    },
    {
      "name": "dispose",
      "comment": "Call to immediately stop this job, ignoring any exceptions or state issues that arise.",
      "javadoc": "Call to immediately stop this job, ignoring any exceptions or state issues that arise.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
