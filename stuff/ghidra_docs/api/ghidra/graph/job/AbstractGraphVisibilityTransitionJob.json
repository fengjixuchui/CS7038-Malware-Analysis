{
  "name": "AbstractGraphVisibilityTransitionJob",
  "comment": "A job that provides an animator and callbacks for transitioning the visibility of \n graph vertices.  The opacity value will change from 0 to 1 over the course of the job. \n Subclasses can decide how to use the opacity value as it changes.   For example, a \n subclass can fade in or out the vertices provided to the job.",
  "javadoc": "A job that provides an animator and callbacks for transitioning the visibility of \n graph vertices.  The opacity value will change from 0 to 1 over the course of the job. \n Subclasses can decide how to use the opacity value as it changes.   For example, a \n subclass can fade in or out the vertices provided to the job.\n@param \u003cV\u003e the vertex type\n@param \u003cE\u003e the edge type",
  "static": false,
  "implements": [],
  "extends": "ghidra.graph.job.AbstractAnimatorJob",
  "fields": [
    {
      "name": "NORMAL_DURATION",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "1500"
    },
    {
      "name": "FAST_DURATION",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "700"
    },
    {
      "name": "duration",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "viewer",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.graph.viewer.GraphViewer\u003cV,E\u003e",
      "type_short": "GraphViewer",
      "constant_value": null
    },
    {
      "name": "graph",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.graph.VisualGraph\u003cV,E\u003e",
      "type_short": "VisualGraph",
      "constant_value": null
    },
    {
      "name": "useAnimation",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "viewer",
          "type_long": "ghidra.graph.viewer.GraphViewer\u003cV,E\u003e",
          "type_short": "GraphViewer",
          "comment": ""
        },
        {
          "name": "useAnimation",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isTooBigToAnimate",
      "comment": "Returns true if the graph is too large for animation (usually due to performance issues).",
      "javadoc": "Returns true if the graph is too large for animation (usually due to performance issues).\n@return true if the graph is too large for animation",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the graph is too large for animation"
      },
      "throws": []
    },
    {
      "name": "setPercentComplete",
      "comment": "Callback from our animator.",
      "javadoc": "Callback from our animator.",
      "static": false,
      "params": [
        {
          "name": "percentComplete",
          "type_long": "double",
          "type_short": "double",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createAnimator",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "org.jdesktop.animation.timing.Animator",
        "type_short": "Animator",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "finished",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "updateOpacity",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "percentComplete",
          "type_long": "double",
          "type_short": "double",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getEdges",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "vertices",
          "type_long": "java.util.Collection\u003cV\u003e",
          "type_short": "Collection",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.Set\u003cE\u003e",
        "type_short": "Set",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getEdges",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "vertex",
          "type_long": "V",
          "type_short": "V",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.Collection\u003cE\u003e",
        "type_short": "Collection",
        "comment": ""
      },
      "throws": []
    }
  ]
}
