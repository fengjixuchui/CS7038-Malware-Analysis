{
  "name": "VisualGraphFeaturette",
  "comment": "An interface that represents a sub-feature of a VisualGraphComponentProvider.  This\n allows the base provider to have a set of features ready to be installed by subclasses.",
  "javadoc": "An interface that represents a sub-feature of a {@link VisualGraphComponentProvider}.  This\n allows the base provider to have a set of features ready to be installed by subclasses.",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "init",
      "comment": "Called to initialize this feature when the provider and view are ready",
      "javadoc": "Called to initialize this feature when the provider and view are ready\n@param provider the provider associated with this feature",
      "static": false,
      "params": [
        {
          "name": "provider",
          "type_long": "ghidra.graph.VisualGraphComponentProvider\u003cV,E,G\u003e",
          "type_short": "VisualGraphComponentProvider",
          "comment": "the provider associated with this feature"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "writeConfigState",
      "comment": "Called when the client wishes to save configuration state.  Features can add any state\n they wish to be persisted over tool launches.",
      "javadoc": "Called when the client wishes to save configuration state.  Features can add any state\n they wish to be persisted over tool launches.\n@param state the container for state information",
      "static": false,
      "params": [
        {
          "name": "state",
          "type_long": "ghidra.framework.options.SaveState",
          "type_short": "SaveState",
          "comment": "the container for state information"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "readConfigState",
      "comment": "Called when the client wishes to restore configuration state.  Features can read state\n previously saved from a call to #writeConfigState(SaveState).",
      "javadoc": "Called when the client wishes to restore configuration state.  Features can read state\n previously saved from a call to {@link #writeConfigState(SaveState)}.\n@param saveState the container for state information",
      "static": false,
      "params": [
        {
          "name": "saveState",
          "type_long": "ghidra.framework.options.SaveState",
          "type_short": "SaveState",
          "comment": "the container for state information"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "providerOpened",
      "comment": "Called when the client provider is opened",
      "javadoc": "Called when the client provider is opened\n@param provider the provider",
      "static": false,
      "params": [
        {
          "name": "provider",
          "type_long": "ghidra.graph.VisualGraphComponentProvider\u003cV,E,G\u003e",
          "type_short": "VisualGraphComponentProvider",
          "comment": "the provider"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "providerClosed",
      "comment": "Called when the client provider is closed",
      "javadoc": "Called when the client provider is closed\n@param provider the provider",
      "static": false,
      "params": [
        {
          "name": "provider",
          "type_long": "ghidra.graph.VisualGraphComponentProvider\u003cV,E,G\u003e",
          "type_short": "VisualGraphComponentProvider",
          "comment": "the provider"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "remove",
      "comment": "Called when the provider is being disposed",
      "javadoc": "Called when the provider is being disposed",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
