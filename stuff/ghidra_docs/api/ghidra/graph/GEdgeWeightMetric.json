{
  "name": "GEdgeWeightMetric",
  "comment": "A callback to get the weight of an edge\n \n Analogous to Java\u0027s Comparator, this provides a means to override the weight of an edge\n in a graph, or provide a weight in the absence of a natural weight, when executing various graph\n algorithms, e.g., shortest path.",
  "javadoc": "A callback to get the weight of an edge\n \n Analogous to Java\u0027s {@link Comparator}, this provides a means to override the weight of an edge\n in a graph, or provide a weight in the absence of a natural weight, when executing various graph\n algorithms, e.g., shortest path.\n@param \u003cE\u003e the type of the edge",
  "static": false,
  "implements": [],
  "fields": [
    {
      "name": "UNIT_METRIC",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.graph.GEdgeWeightMetric\u003c?\u003e",
      "type_short": "GEdgeWeightMetric",
      "constant_value": null
    },
    {
      "name": "NATURAL_METRIC",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.graph.GEdgeWeightMetric\u003c?\u003e",
      "type_short": "GEdgeWeightMetric",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "unitMetric",
      "comment": "Measure every edge as having a weight of 1",
      "javadoc": "Measure every edge as having a weight of 1\n@return the metric",
      "static": true,
      "params": [],
      "return": {
        "type_long": "ghidra.graph.GEdgeWeightMetric\u003cE\u003e",
        "type_short": "GEdgeWeightMetric",
        "comment": "the metric"
      },
      "throws": []
    },
    {
      "name": "naturalMetric",
      "comment": "Use the natural weight of each edge\n \n The metric assumes every edge is a GWeightedEdge. If not, you will likely encounter\n a ClassCastException.",
      "javadoc": "Use the natural weight of each edge\n \n The metric assumes every edge is a {@link GWeightedEdge}. If not, you will likely encounter\n a {@link ClassCastException}.\n@return the metric",
      "static": true,
      "params": [],
      "return": {
        "type_long": "ghidra.graph.GEdgeWeightMetric\u003cE\u003e",
        "type_short": "GEdgeWeightMetric",
        "comment": "the metric"
      },
      "throws": []
    },
    {
      "name": "computeWeight",
      "comment": "Compute or retrieve the weight of the given edge",
      "javadoc": "Compute or retrieve the weight of the given edge\n@param e the edge\n@return the weight",
      "static": false,
      "params": [
        {
          "name": "e",
          "type_long": "E",
          "type_short": "E",
          "comment": "the edge"
        }
      ],
      "return": {
        "type_long": "double",
        "type_short": "double",
        "comment": "the weight"
      },
      "throws": []
    }
  ]
}
