{
  "name": "GroupingVisualGraph",
  "comment": "A visual graph with methods needed to facilitate grouping of vertices.",
  "javadoc": "A visual graph with methods needed to facilitate grouping of vertices.\n@param \u003cV\u003e the vertex type\n@param \u003cE\u003e the edge type",
  "static": false,
  "implements": [],
  "extends": "ghidra.graph.graphs.DefaultVisualGraph",
  "fields": [],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "findMatchingVertex",
      "comment": "Finds a vertex that matches the given vertex.  \n \n Grouping can trigger vertex adds and removals.  This method is a way for subclasses\n to search for a vertex that matches the given vertex, but may or may not be the same \n instance.",
      "javadoc": "Finds a vertex that matches the given vertex.  \n \n \u003cP\u003eGrouping can trigger vertex adds and removals.  This method is a way for subclasses\n to search for a vertex that matches the given vertex, but may or may not be the same \n instance.\n@param v the vertex\n@return the matching vertex or null",
      "static": false,
      "params": [
        {
          "name": "v",
          "type_long": "V",
          "type_short": "V",
          "comment": "the vertex"
        }
      ],
      "return": {
        "type_long": "V",
        "type_short": "V",
        "comment": "the matching vertex or null"
      },
      "throws": []
    },
    {
      "name": "findMatchingVertex",
      "comment": "The same as #findMatchingVertex(VisualVertex), except that you can provide a\n collection of vertices to be ignored.\n \n This is useful during graph transformations when duplicate vertices may be in the \n graph at the same time.",
      "javadoc": "The same as {@link #findMatchingVertex(VisualVertex)}, except that you can provide a\n collection of vertices to be ignored.\n \n \u003cP\u003eThis is useful during graph transformations when duplicate vertices may be in the \n graph at the same time.\n@param v the vertex\n@param ignore vertices to ignore when searching\n@return the matching vertex or null",
      "static": false,
      "params": [
        {
          "name": "v",
          "type_long": "V",
          "type_short": "V",
          "comment": "the vertex"
        },
        {
          "name": "ignore",
          "type_long": "java.util.Collection\u003cV\u003e",
          "type_short": "Collection",
          "comment": "vertices to ignore when searching"
        }
      ],
      "return": {
        "type_long": "V",
        "type_short": "V",
        "comment": "the matching vertex or null"
      },
      "throws": []
    }
  ]
}
