{
  "name": "VisualEdgeArrowRenderingSupport",
  "comment": "Basic class to calculate the position of an edge arrow",
  "javadoc": "Basic class to calculate the position of an edge arrow\n@param \u003cV\u003e the vertex type\n@param \u003cE\u003e the edge type",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createArrowTransform",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "rc",
          "type_long": "edu.uci.ics.jung.visualization.RenderContext\u003cV,E\u003e",
          "type_short": "RenderContext",
          "comment": ""
        },
        {
          "name": "edgeShape",
          "type_long": "java.awt.Shape",
          "type_short": "Shape",
          "comment": ""
        },
        {
          "name": "vertexShape",
          "type_long": "java.awt.Shape",
          "type_short": "Shape",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.awt.geom.AffineTransform",
        "type_short": "AffineTransform",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "doCreateArrowTransform",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "arrowPlacementTolerance",
          "type_long": "double",
          "type_short": "double",
          "comment": ""
        },
        {
          "name": "edgeShape",
          "type_long": "java.awt.Shape",
          "type_short": "Shape",
          "comment": ""
        },
        {
          "name": "vertexShape",
          "type_long": "java.awt.Shape",
          "type_short": "Shape",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.awt.geom.AffineTransform",
        "type_short": "AffineTransform",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "findClosestLineSegment",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "arrowPlacementTolerance",
          "type_long": "double",
          "type_short": "double",
          "comment": ""
        },
        {
          "name": "line",
          "type_long": "java.awt.geom.Line2D",
          "type_short": "Line2D",
          "comment": ""
        },
        {
          "name": "vertexShape",
          "type_long": "java.awt.Shape",
          "type_short": "Shape",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.awt.geom.Line2D",
        "type_short": "Line2D",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "lengthSquared",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "line",
          "type_long": "java.awt.geom.Line2D",
          "type_short": "Line2D",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "double",
        "type_short": "double",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "bisect",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "src",
          "type_long": "java.awt.geom.Line2D",
          "type_short": "Line2D",
          "comment": ""
        },
        {
          "name": "left",
          "type_long": "java.awt.geom.Line2D",
          "type_short": "Line2D",
          "comment": ""
        },
        {
          "name": "right",
          "type_long": "java.awt.geom.Line2D",
          "type_short": "Line2D",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createArrowTransformFromLine",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "line",
          "type_long": "java.awt.geom.Line2D",
          "type_short": "Line2D",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.awt.geom.AffineTransform",
        "type_short": "AffineTransform",
        "comment": ""
      },
      "throws": []
    }
  ]
}
