{
  "name": "VertexClickListener",
  "comment": "A listener that allows clients to be notified of vertex clicks.  Normal \n mouse processing is handled by the VisualGraphMousePlugin class.  This is a\n convenience method so that clients do not have to deal with the mouse plugin.",
  "javadoc": "A listener that allows clients to be notified of vertex clicks.  Normal \n mouse processing is handled by the {@link VisualGraphMousePlugin} class.  This is a\n convenience method so that clients do not have to deal with the mouse plugin.\n@param \u003cV\u003e the vertex type\n@param \u003cE\u003e the edge type\n@see VertexFocusListener",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "vertexDoubleClicked",
      "comment": "Called when a vertex is double-clicked",
      "javadoc": "Called when a vertex is double-clicked\n@param v the clicked vertex\n@param mouseInfo the info object that contains mouse information for the graph and \n        the low-level vertex\u0027s clicked component\n@return true if this call wants to stop all further mouse event processing",
      "static": false,
      "params": [
        {
          "name": "v",
          "type_long": "V",
          "type_short": "V",
          "comment": "the clicked vertex"
        },
        {
          "name": "mouseInfo",
          "type_long": "ghidra.graph.viewer.event.mouse.VertexMouseInfo\u003cV,E\u003e",
          "type_short": "VertexMouseInfo",
          "comment": "the info object that contains mouse information for the graph and \n        the low-level vertex\u0027s clicked component"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if this call wants to stop all further mouse event processing"
      },
      "throws": []
    }
  ]
}
