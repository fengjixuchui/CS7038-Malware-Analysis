{
  "name": "GPickedState",
  "comment": "This picked-state is a wrapper for PickedState that allows us to broadcast events\n with the trigger of that event.",
  "javadoc": "This picked-state is a wrapper for {@link PickedState} that allows us to broadcast events\n with the trigger of that event.\n@param \u003cV\u003e the vertex type",
  "static": false,
  "implements": [
    "edu.uci.ics.jung.visualization.picking.PickedState"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "listeners",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.Set\u003cghidra.graph.viewer.event.picking.PickListener\u003cV\u003e\u003e",
      "type_short": "Set",
      "constant_value": null
    },
    {
      "name": "pickedStateDelegate",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "edu.uci.ics.jung.visualization.picking.MultiPickedState\u003cV\u003e",
      "type_short": "MultiPickedState",
      "constant_value": null
    },
    {
      "name": "pendingEventSource",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.graph.viewer.event.picking.PickListener.EventSource",
      "type_short": "EventSource",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "pickedState",
          "type_long": "edu.uci.ics.jung.visualization.picking.MultiPickedState\u003cV\u003e",
          "type_short": "MultiPickedState",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "notifyVerticesPicked",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "selectedVertices",
          "type_long": "java.lang.Object[]",
          "type_short": "java.lang.Object[]",
          "comment": ""
        },
        {
          "name": "source",
          "type_long": "ghidra.graph.viewer.event.picking.PickListener.EventSource",
          "type_short": "EventSource",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSet",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "vertices",
          "type_long": "java.lang.Object[]",
          "type_short": "java.lang.Object[]",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.Set\u003cV\u003e",
        "type_short": "Set",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addPickingListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "pickListener",
          "type_long": "ghidra.graph.viewer.event.picking.PickListener\u003cV\u003e",
          "type_short": "PickListener",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removePickingListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "pickListener",
          "type_long": "ghidra.graph.viewer.event.picking.PickListener\u003cV\u003e",
          "type_short": "PickListener",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "pickToSync",
      "comment": "Picks the given vertex, but signals that the pick is really just to make sure that the \n vertex is picked in order to match the graph\u0027s notion of the current location.  To pick a \n vertex and signal that the location has changed, call #pick(Object, boolean). \n Calling this method is the same as calling \n pickToSync(vertex, false);",
      "javadoc": "Picks the given vertex, but signals that the pick is really just to make sure that the \n vertex is picked in order to match the graph\u0027s notion of the current location.  To pick a \n vertex and signal that the location has changed, call {@link #pick(Object, boolean)}. \n Calling this method is the same as calling \n \u003cpre\u003epickToSync(vertex, false);\u003c/pre\u003e\n@param vertex the vertex to pick",
      "static": false,
      "params": [
        {
          "name": "vertex",
          "type_long": "V",
          "type_short": "V",
          "comment": "the vertex to pick"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "pickToSync",
      "comment": "Picks the given vertex, but signals that the pick is really just to make sure that the \n vertex is picked in order to match the graph\u0027s notion of the current location.  To pick a \n vertex and signal that the location has changed, call #pick(Object, boolean)",
      "javadoc": "Picks the given vertex, but signals that the pick is really just to make sure that the \n vertex is picked in order to match the graph\u0027s notion of the current location.  To pick a \n vertex and signal that the location has changed, call {@link #pick(Object, boolean)}\n@param vertex the vertex to pick\n@param addToSelection true signals that the given vertex should be picked, but not to \n                       remove any other picked vertices; false signals to pick the given\n                       vertex and to clear any other picked vertices",
      "static": false,
      "params": [
        {
          "name": "vertex",
          "type_long": "V",
          "type_short": "V",
          "comment": "the vertex to pick"
        },
        {
          "name": "addToSelection",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true signals that the given vertex should be picked, but not to \n                       remove any other picked vertices; false signals to pick the given\n                       vertex and to clear any other picked vertices"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "pickToActivate",
      "comment": "A convenience method to clear the current selected vertices and select the given vertex",
      "javadoc": "A convenience method to clear the current selected vertices and select the given vertex\n@param vertex the vertex to pick",
      "static": false,
      "params": [
        {
          "name": "vertex",
          "type_long": "V",
          "type_short": "V",
          "comment": "the vertex to pick"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "pick",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "vertex",
          "type_long": "V",
          "type_short": "V",
          "comment": ""
        },
        {
          "name": "b",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "clear",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPicked",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Set\u003cV\u003e",
        "type_short": "Set",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isPicked",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "vertex",
          "type_long": "V",
          "type_short": "V",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSelectedObjects",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.Object[]",
        "type_short": "java.lang.Object[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addItemListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "l",
          "type_long": "java.awt.event.ItemListener",
          "type_short": "ItemListener",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeItemListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "l",
          "type_long": "java.awt.event.ItemListener",
          "type_short": "ItemListener",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
