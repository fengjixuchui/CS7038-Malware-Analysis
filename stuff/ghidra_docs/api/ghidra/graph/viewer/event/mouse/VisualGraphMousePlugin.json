{
  "name": "VisualGraphMousePlugin",
  "comment": "An interface to provide a common set of methods for classes that could not otherwise \n extend an abstract class.  This interface signals that the implementer is a VisualGraph\n mouse plugin.\n \n Note: The implementors of this interface still use the deprecated \n MouseEvent#getModifiers() method, since many of those classes extends from \n 3rd-party classes that still use them, such as PickingGraphMousePlugin.   We will need\n to update the library (if/when possible), or rewrite our code so that it does not use the \n old 3rd-party algorithms.",
  "javadoc": "An interface to provide a common set of methods for classes that could not otherwise \n extend an abstract class.  This interface signals that the implementer is a {@link VisualGraph}\n mouse plugin.\n \n \u003cP\u003eNote: The implementors of this interface still use the deprecated \n {@link MouseEvent#getModifiers()} method, since many of those classes extends from \n 3rd-party classes that still use them, such as {@link PickingGraphMousePlugin}.   We will need\n to update the library (if/when possible), or rewrite our code so that it does not use the \n old 3rd-party algorithms.\n@param \u003cV\u003e the vertex\n@param \u003cE\u003e the edge",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "getViewer",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "e",
          "type_long": "java.awt.event.MouseEvent",
          "type_short": "MouseEvent",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "edu.uci.ics.jung.visualization.VisualizationViewer\u003cV,E\u003e",
        "type_short": "VisualizationViewer",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getGraphViewer",
      "comment": "Returns the primary/master graph viewer.",
      "javadoc": "Returns the \u003cb\u003eprimary/master\u003c/b\u003e graph viewer.\n@param e the mouse event from which to get the viewer\n@return the viewer",
      "static": false,
      "params": [
        {
          "name": "e",
          "type_long": "java.awt.event.MouseEvent",
          "type_short": "MouseEvent",
          "comment": "the mouse event from which to get the viewer"
        }
      ],
      "return": {
        "type_long": "ghidra.graph.viewer.GraphViewer\u003cV,E\u003e",
        "type_short": "GraphViewer",
        "comment": "the viewer"
      },
      "throws": []
    },
    {
      "name": "getSatelliteGraphViewer",
      "comment": "Returns the satellite graph viewer.  This assumes that the mouse event originated from \n the satellite viewer.",
      "javadoc": "Returns the satellite graph viewer.  This assumes that the mouse event originated from \n the satellite viewer.\n@param e the mouse event from which to get the viewer\n@return the viewer",
      "static": false,
      "params": [
        {
          "name": "e",
          "type_long": "java.awt.event.MouseEvent",
          "type_short": "MouseEvent",
          "comment": "the mouse event from which to get the viewer"
        }
      ],
      "return": {
        "type_long": "ghidra.graph.viewer.SatelliteGraphViewer\u003cV,E\u003e",
        "type_short": "SatelliteGraphViewer",
        "comment": "the viewer"
      },
      "throws": []
    },
    {
      "name": "getViewUpdater",
      "comment": "Returns the updater that is used to modify the primary graph viewer.",
      "javadoc": "Returns the updater that is used to modify the primary graph viewer.\n@param e the mouse event from which to get the viewer\n@return the updater",
      "static": false,
      "params": [
        {
          "name": "e",
          "type_long": "java.awt.event.MouseEvent",
          "type_short": "MouseEvent",
          "comment": "the mouse event from which to get the viewer"
        }
      ],
      "return": {
        "type_long": "ghidra.graph.viewer.VisualGraphViewUpdater\u003cV,E\u003e",
        "type_short": "VisualGraphViewUpdater",
        "comment": "the updater"
      },
      "throws": []
    },
    {
      "name": "getViewUpdater",
      "comment": "Returns the updater that is used to modify the primary graph viewer.",
      "javadoc": "Returns the updater that is used to modify the primary graph viewer.\n@param viewer the viewer\n@return the updater",
      "static": false,
      "params": [
        {
          "name": "viewer",
          "type_long": "ghidra.graph.viewer.GraphViewer\u003cV,E\u003e",
          "type_short": "GraphViewer",
          "comment": "the viewer"
        }
      ],
      "return": {
        "type_long": "ghidra.graph.viewer.VisualGraphViewUpdater\u003cV,E\u003e",
        "type_short": "VisualGraphViewUpdater",
        "comment": "the updater"
      },
      "throws": []
    },
    {
      "name": "dispose",
      "comment": "Signals to perform any cleanup when this plugin is going away",
      "javadoc": "Signals to perform any cleanup when this plugin is going away",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
