{
  "name": "GraphNavigator",
  "comment": "The methods on this interface are meant to enable graph traversal in a way that allows \n the underlying graph to be walked from top-down or bottom-up.",
  "javadoc": "The methods on this interface are meant to enable graph traversal in a way that allows \n the underlying graph to be walked from top-down or bottom-up.\n@param \u003cV\u003e the vertex type\n@param \u003cE\u003e the edge type",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "isTopDown",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "topDownNavigator",
      "comment": "Creates a top-down navigator, which is one that traverses the graph from the source\n to the sink.",
      "javadoc": "Creates a top-down navigator, which is one that traverses the graph from the source\n to the sink.\n@return the navigator",
      "static": true,
      "params": [],
      "return": {
        "type_long": "ghidra.graph.algo.GraphNavigator\u003cV,E\u003e",
        "type_short": "GraphNavigator",
        "comment": "the navigator"
      },
      "throws": []
    },
    {
      "name": "bottomUpNavigator",
      "comment": "Creates a bottom-down navigator, which is one that traverses the graph from the sink \n to the source.",
      "javadoc": "Creates a bottom-down navigator, which is one that traverses the graph from the sink \n to the source.\n@return the navigator",
      "static": true,
      "params": [],
      "return": {
        "type_long": "ghidra.graph.algo.GraphNavigator\u003cV,E\u003e",
        "type_short": "GraphNavigator",
        "comment": "the navigator"
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "isTopDown",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getEdges",
      "comment": "Gets all edges leaving the given vertex, depending upon the direction of this navigator.",
      "javadoc": "Gets all edges leaving the given vertex, depending upon the direction of this navigator.\n@param graph the graph\n@param v the vertex\n@return the edges",
      "static": false,
      "params": [
        {
          "name": "graph",
          "type_long": "ghidra.graph.GDirectedGraph\u003cV,E\u003e",
          "type_short": "GDirectedGraph",
          "comment": "the graph"
        },
        {
          "name": "v",
          "type_long": "V",
          "type_short": "V",
          "comment": "the vertex"
        }
      ],
      "return": {
        "type_long": "java.util.Collection\u003cE\u003e",
        "type_short": "Collection",
        "comment": "the edges"
      },
      "throws": []
    },
    {
      "name": "isTopDown",
      "comment": "Returns true if this navigator processes nodes from the top down; false if nodes are\n processed from the bottom up.",
      "javadoc": "Returns true if this navigator processes nodes from the top down; false if nodes are\n processed from the bottom up.\n@return true if this navigator processes nodes from the top down; false if nodes are\n \t\t   processed from the bottom up.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if this navigator processes nodes from the top down; false if nodes are\n \t\t   processed from the bottom up."
      },
      "throws": []
    },
    {
      "name": "getSuccessors",
      "comment": "Gets all child vertices of the given vertex, depending upon the direction of the \n navigator.",
      "javadoc": "Gets all child vertices of the given vertex, depending upon the direction of the \n navigator.\n@param graph the graph\n@param v the vertex\n@return the vertices",
      "static": false,
      "params": [
        {
          "name": "graph",
          "type_long": "ghidra.graph.GDirectedGraph\u003cV,E\u003e",
          "type_short": "GDirectedGraph",
          "comment": "the graph"
        },
        {
          "name": "v",
          "type_long": "V",
          "type_short": "V",
          "comment": "the vertex"
        }
      ],
      "return": {
        "type_long": "java.util.Collection\u003cV\u003e",
        "type_short": "Collection",
        "comment": "the vertices"
      },
      "throws": []
    },
    {
      "name": "getPredecessors",
      "comment": "Gets all parent vertices of the given vertex, depending upon the direction of the \n navigator.",
      "javadoc": "Gets all parent vertices of the given vertex, depending upon the direction of the \n navigator.\n@param graph the graph\n@param v the vertex\n@return the vertices",
      "static": false,
      "params": [
        {
          "name": "graph",
          "type_long": "ghidra.graph.GDirectedGraph\u003cV,E\u003e",
          "type_short": "GDirectedGraph",
          "comment": "the graph"
        },
        {
          "name": "v",
          "type_long": "V",
          "type_short": "V",
          "comment": "the vertex"
        }
      ],
      "return": {
        "type_long": "java.util.Collection\u003cV\u003e",
        "type_short": "Collection",
        "comment": "the vertices"
      },
      "throws": []
    },
    {
      "name": "getEnd",
      "comment": "Gets the vertex at the end of the given edge, where the \u0027end\u0027 of the edge depends on the\n start vertex.",
      "javadoc": "Gets the vertex at the end of the given edge, where the \u0027end\u0027 of the edge depends on the\n start vertex.\n@param e the edge\n@return the vertex",
      "static": false,
      "params": [
        {
          "name": "e",
          "type_long": "E",
          "type_short": "E",
          "comment": "the edge"
        }
      ],
      "return": {
        "type_long": "V",
        "type_short": "V",
        "comment": "the vertex"
      },
      "throws": []
    },
    {
      "name": "getSources",
      "comment": "Gets the root vertices of the given graph.  If this is a top-down navigator, then the\n sources are returned; otherwise, the sinks are returned.",
      "javadoc": "Gets the root vertices of the given graph.  If this is a top-down navigator, then the\n sources are returned; otherwise, the sinks are returned.\n@param graph the graph\n@return the roots",
      "static": false,
      "params": [
        {
          "name": "graph",
          "type_long": "ghidra.graph.GDirectedGraph\u003cV,E\u003e",
          "type_short": "GDirectedGraph",
          "comment": "the graph"
        }
      ],
      "return": {
        "type_long": "java.util.Set\u003cV\u003e",
        "type_short": "Set",
        "comment": "the roots"
      },
      "throws": []
    },
    {
      "name": "getSinks",
      "comment": "Gets the exit vertices of the given graph.  If this is a top-down navigator, then the\n sinks are returned; otherwise, the sources are returned.",
      "javadoc": "Gets the exit vertices of the given graph.  If this is a top-down navigator, then the\n sinks are returned; otherwise, the sources are returned.\n@param graph the graph\n@return the exits",
      "static": false,
      "params": [
        {
          "name": "graph",
          "type_long": "ghidra.graph.GDirectedGraph\u003cV,E\u003e",
          "type_short": "GDirectedGraph",
          "comment": "the graph"
        }
      ],
      "return": {
        "type_long": "java.util.Set\u003cV\u003e",
        "type_short": "Set",
        "comment": "the exits"
      },
      "throws": []
    },
    {
      "name": "getVerticesInPostOrder",
      "comment": "Returns all vertices in the given graph in the depth-first order.   The order will \n be post-order for a top-down navigator and pre-order for a bottom-up navigator.",
      "javadoc": "Returns all vertices in the given graph in the depth-first order.   The order will \n be post-order for a top-down navigator and pre-order for a bottom-up navigator.\n@param graph the graph\n@return the ordered vertices",
      "static": false,
      "params": [
        {
          "name": "graph",
          "type_long": "ghidra.graph.GDirectedGraph\u003cV,E\u003e",
          "type_short": "GDirectedGraph",
          "comment": "the graph"
        }
      ],
      "return": {
        "type_long": "java.util.List\u003cV\u003e",
        "type_short": "List",
        "comment": "the ordered vertices"
      },
      "throws": []
    }
  ]
}
