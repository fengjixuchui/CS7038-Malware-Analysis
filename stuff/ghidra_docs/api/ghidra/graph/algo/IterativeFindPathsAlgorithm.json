{
  "name": "IterativeFindPathsAlgorithm",
  "comment": "Finds all paths between two vertices for a given graph.\n \n Note: this algorithm is based on the JohnsonCircuitsAlgorithm, modified to be\n iterative instead of recursive.",
  "javadoc": "Finds all paths between two vertices for a given graph.\n \n \u003cP\u003eNote: this algorithm is based on the {@link JohnsonCircuitsAlgorithm}, modified to be\n iterative instead of recursive.\n@param \u003cV\u003e the vertex type\n@param \u003cE\u003e the edge type",
  "static": false,
  "implements": [
    "ghidra.graph.algo.FindPathsAlgorithm"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "g",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.graph.GDirectedGraph\u003cV,E\u003e",
      "type_short": "GDirectedGraph",
      "constant_value": null
    },
    {
      "name": "start",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "V",
      "type_short": "V",
      "constant_value": null
    },
    {
      "name": "end",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "V",
      "type_short": "V",
      "constant_value": null
    },
    {
      "name": "blockedSet",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.Set\u003cV\u003e",
      "type_short": "Set",
      "constant_value": null
    },
    {
      "name": "blockedBackEdgesMap",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.Map\u003cV,java.util.Set\u003cV\u003e\u003e",
      "type_short": "Map",
      "constant_value": null
    },
    {
      "name": "listener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.graph.algo.GraphAlgorithmStatusListener\u003cV\u003e",
      "type_short": "GraphAlgorithmStatusListener",
      "constant_value": null
    },
    {
      "name": "monitor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.task.TaskMonitor",
      "type_short": "TaskMonitor",
      "constant_value": null
    },
    {
      "name": "accumulator",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.datastruct.Accumulator\u003cjava.util.List\u003cV\u003e\u003e",
      "type_short": "Accumulator",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setStatusListener",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "listener",
          "type_long": "ghidra.graph.algo.GraphAlgorithmStatusListener\u003cV\u003e",
          "type_short": "GraphAlgorithmStatusListener",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "findPaths",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "g",
          "type_long": "ghidra.graph.GDirectedGraph\u003cV,E\u003e",
          "type_short": "GDirectedGraph",
          "comment": ""
        },
        {
          "name": "start",
          "type_long": "V",
          "type_short": "V",
          "comment": ""
        },
        {
          "name": "end",
          "type_long": "V",
          "type_short": "V",
          "comment": ""
        },
        {
          "name": "accumulator",
          "type_long": "ghidra.util.datastruct.Accumulator\u003cjava.util.List\u003cV\u003e\u003e",
          "type_short": "Accumulator",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": ""
        }
      ]
    },
    {
      "name": "find",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": ""
        }
      ]
    },
    {
      "name": "unblock",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "v",
          "type_long": "V",
          "type_short": "V",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "doUnblock",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "v",
          "type_long": "V",
          "type_short": "V",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.Set\u003cV\u003e",
        "type_short": "Set",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "blockBackEdge",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "u",
          "type_long": "V",
          "type_short": "V",
          "comment": ""
        },
        {
          "name": "v",
          "type_long": "V",
          "type_short": "V",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "outputCircuit",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "stack",
          "type_long": "java.util.Stack\u003cghidra.graph.algo.IterativeFindPathsAlgorithm\u003cV,E\u003e.Node\u003e",
          "type_short": "Stack",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": ""
        }
      ]
    },
    {
      "name": "setStatus",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "path",
          "type_long": "java.util.List\u003cV\u003e",
          "type_short": "List",
          "comment": ""
        },
        {
          "name": "s",
          "type_long": "ghidra.graph.algo.GraphAlgorithmStatusListener.STATUS",
          "type_short": "STATUS",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setStatus",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "v",
          "type_long": "V",
          "type_short": "V",
          "comment": ""
        },
        {
          "name": "s",
          "type_long": "ghidra.graph.algo.GraphAlgorithmStatusListener.STATUS",
          "type_short": "STATUS",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getOutEdges",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "v",
          "type_long": "V",
          "type_short": "V",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.Collection\u003cE\u003e",
        "type_short": "Collection",
        "comment": ""
      },
      "throws": []
    }
  ]
}
