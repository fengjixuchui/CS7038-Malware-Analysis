{
  "name": "ChkPostDominanceAlgorithm",
  "comment": "This is ChkDominanceAlgorithm with reverse graph traversal, which allows the\n algorithm to calculate post dominance.",
  "javadoc": "This is {@link ChkDominanceAlgorithm} with reverse graph traversal, which allows the\n algorithm to calculate post dominance.\n@param \u003cV\u003e the vertex type\n@param \u003cE\u003e the edge type",
  "static": false,
  "implements": [],
  "extends": "ghidra.graph.algo.ChkDominanceAlgorithm",
  "fields": [],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor.",
      "javadoc": "Constructor.\n@param g the graph\n@param monitor the monitor\n@throws CancelledException if the algorithm is cancelled",
      "static": false,
      "params": [
        {
          "name": "g",
          "type_long": "ghidra.graph.GDirectedGraph\u003cV,E\u003e",
          "type_short": "GDirectedGraph",
          "comment": "the graph"
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": "the monitor"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": "if the algorithm is cancelled"
        }
      ]
    }
  ]
}
