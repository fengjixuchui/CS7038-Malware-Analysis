{
  "name": "GraphPath",
  "comment": "Class for storing paths with fast \"contains\" method.\n \n Note: a path can only contain a vertex once.",
  "javadoc": "Class for storing paths with fast \"contains\" method.\n \n Note: a path can only contain a vertex once.\n@param \u003cV\u003e",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "pathSet",
      "comment": "a set for performing quick contains checks",
      "javadoc": "a set for performing quick contains checks",
      "static": false,
      "type_long": "java.util.Set\u003cV\u003e",
      "type_short": "Set",
      "constant_value": null
    },
    {
      "name": "pathList",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cV\u003e",
      "type_short": "List",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "v",
          "type_long": "V",
          "type_short": "V",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "copy",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.graph.GraphPath\u003cV\u003e",
        "type_short": "GraphPath",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "startsWith",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "otherPath",
          "type_long": "ghidra.graph.GraphPath\u003cV\u003e",
          "type_short": "GraphPath",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getCommonStartPath",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "other",
          "type_long": "ghidra.graph.GraphPath\u003cV\u003e",
          "type_short": "GraphPath",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.graph.GraphPath\u003cV\u003e",
        "type_short": "GraphPath",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "size",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "contains",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "v",
          "type_long": "V",
          "type_short": "V",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "add",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "v",
          "type_long": "V",
          "type_short": "V",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLast",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "V",
        "type_short": "V",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "depth",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "v",
          "type_long": "V",
          "type_short": "V",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "get",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "depth",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "V",
        "type_short": "V",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeLast",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "V",
        "type_short": "V",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPredecessors",
      "comment": "Returns all entries that are before the given vertex in this path.  The results will\n include the vertex.",
      "javadoc": "Returns all entries that are before the given vertex in this path.  The results will\n include the vertex.\n@param v the vertex\n@return the predecessors",
      "static": false,
      "params": [
        {
          "name": "v",
          "type_long": "V",
          "type_short": "V",
          "comment": "the vertex"
        }
      ],
      "return": {
        "type_long": "java.util.Set\u003cV\u003e",
        "type_short": "Set",
        "comment": "the predecessors"
      },
      "throws": []
    },
    {
      "name": "getSuccessors",
      "comment": "Returns all entries that are later in this path than the given vertex.  The results will\n include the vertex.",
      "javadoc": "Returns all entries that are later in this path than the given vertex.  The results will\n include the vertex.\n@param v the vertex\n@return the successors",
      "static": false,
      "params": [
        {
          "name": "v",
          "type_long": "V",
          "type_short": "V",
          "comment": "the vertex"
        }
      ],
      "return": {
        "type_long": "java.util.Set\u003cV\u003e",
        "type_short": "Set",
        "comment": "the successors"
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "subPath",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "start",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "end",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.graph.GraphPath\u003cV\u003e",
        "type_short": "GraphPath",
        "comment": ""
      },
      "throws": []
    }
  ]
}
