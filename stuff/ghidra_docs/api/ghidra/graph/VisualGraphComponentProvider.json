{
  "name": "VisualGraphComponentProvider",
  "comment": "A base component provider for displaying VisualGraphs\n \n This class will provide many optional sub-features, enabled as desired by calling the\n various addXyzFeature() methods.  \n \n Implementation Notes:   to get full functionality, you must:\n \n  Have your plugin call #readConfigState(SaveState) and \n  #writeConfigState(SaveState) to save user settings.\n  \n  Enable features you desire after calling your #addToTool() method.\n  \n ",
  "javadoc": "A base component provider for displaying {@link VisualGraph}s\n \n \u003cp\u003eThis class will provide many optional sub-features, enabled as desired by calling the\n various \u003ccode\u003eaddXyzFeature()\u003c/code\u003e methods.  \n \n \u003cp\u003eImplementation Notes:   to get full functionality, you must:\n \u003cul\u003e\n  \u003cli\u003eHave your plugin call {@link #readConfigState(SaveState)} and \n  {@link #writeConfigState(SaveState)} to save user settings.\n  \u003c/li\u003e\n  \u003cli\u003eEnable features you desire after calling your {@link #addToTool()} method.\n  \u003c/li\u003e\n \u003c/ul\u003e\n@param \u003cV\u003e the vertex type\n@param \u003cE\u003e the edge type\n@param \u003cG\u003e the graph type",
  "static": false,
  "implements": [],
  "extends": "docking.ComponentProvider",
  "fields": [
    {
      "name": "subFeatures",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cghidra.graph.featurette.VisualGraphFeaturette\u003cV,E,G\u003e\u003e",
      "type_short": "List",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "tool",
          "type_long": "docking.Tool",
          "type_short": "Tool",
          "comment": ""
        },
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "owner",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "tool",
          "type_long": "docking.Tool",
          "type_short": "Tool",
          "comment": ""
        },
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "owner",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "contextType",
          "type_long": "java.lang.Class\u003c?\u003e",
          "type_short": "Class",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getView",
      "comment": "You must return your graph view from this method",
      "javadoc": "You must return your graph view from this method\n@return your graph view",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.graph.viewer.VisualGraphView\u003cV,E,G\u003e",
        "type_short": "VisualGraphView",
        "comment": "your graph view"
      },
      "throws": []
    },
    {
      "name": "componentHidden",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "componentShown",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isSatelliteShowing",
      "comment": "Returns true if the satellite is showing, whether in the graph or undocked",
      "javadoc": "Returns true if the satellite is showing, whether in the graph or undocked\n@return true if the satellite is showing, whether in the graph or undocked",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the satellite is showing, whether in the graph or undocked"
      },
      "throws": []
    },
    {
      "name": "isSatelliteDocked",
      "comment": "Returns true if the satellite is embedded in the graph view, whether it is showing or not",
      "javadoc": "Returns true if the satellite is embedded in the graph view, whether it is showing or not\n@return true if the satellite is embedded in the graph view, whether it is showing or not",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the satellite is embedded in the graph view, whether it is showing or not"
      },
      "throws": []
    },
    {
      "name": "getSelectedVertices",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Set\u003cV\u003e",
        "type_short": "Set",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSatelliteProvider",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.ComponentProvider",
        "type_short": "ComponentProvider",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSatelliteFeature",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.graph.featurette.VgSatelliteFeaturette\u003cV,E,G\u003e",
        "type_short": "VgSatelliteFeaturette",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addSatelliteFeature",
      "comment": "Adds the satellite viewer functionality to this provider",
      "javadoc": "Adds the satellite viewer functionality to this provider",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "dispose",
      "comment": "To be called at the end of this provider\u0027s lifecycle",
      "javadoc": "To be called at the end of this provider\u0027s lifecycle",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "writeConfigState",
      "comment": "Writes this providers saveable state to the given state object",
      "javadoc": "Writes this providers saveable state to the given state object\n@param saveState the state object into which state is to be written",
      "static": false,
      "params": [
        {
          "name": "saveState",
          "type_long": "ghidra.framework.options.SaveState",
          "type_short": "SaveState",
          "comment": "the state object into which state is to be written"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "readConfigState",
      "comment": "Reads previously saved state from the given state object",
      "javadoc": "Reads previously saved state from the given state object\n@param saveState the state object that may contain state information for this provider",
      "static": false,
      "params": [
        {
          "name": "saveState",
          "type_long": "ghidra.framework.options.SaveState",
          "type_short": "SaveState",
          "comment": "the state object that may contain state information for this provider"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getActionContext",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "event",
          "type_long": "java.awt.event.MouseEvent",
          "type_short": "MouseEvent",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "docking.ActionContext",
        "type_short": "ActionContext",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getVertexUnderMouse",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "event",
          "type_long": "java.awt.event.MouseEvent",
          "type_short": "MouseEvent",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "V",
        "type_short": "V",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPrimaryGraphViewer",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "source",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.graph.viewer.GraphViewer\u003cV,E\u003e",
        "type_short": "GraphViewer",
        "comment": ""
      },
      "throws": []
    }
  ]
}
