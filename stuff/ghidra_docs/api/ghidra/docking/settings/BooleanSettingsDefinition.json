{
  "name": "BooleanSettingsDefinition",
  "comment": "The inteface for SettingsDefinitions that have boolean values.  SettingsDefinitions\n objects are used as keys into Settings objects that contain the values using a name-value\n type storage mechanism.",
  "javadoc": "The inteface for SettingsDefinitions that have boolean values.  SettingsDefinitions\n objects are used as keys into Settings objects that contain the values using a name-value\n type storage mechanism.",
  "static": false,
  "implements": [
    "ghidra.docking.settings.SettingsDefinition"
  ],
  "fields": [],
  "methods": [
    {
      "name": "getValue",
      "comment": "gets the value for this SettingsDefinition given a Settings object.",
      "javadoc": "gets the value for this SettingsDefinition given a Settings object.\n@param settings the set of Settings values for a particular location or null for default value.\n@return the values for this settings object given the context.",
      "static": false,
      "params": [
        {
          "name": "settings",
          "type_long": "ghidra.docking.settings.Settings",
          "type_short": "Settings",
          "comment": "the set of Settings values for a particular location or null for default value."
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "the values for this settings object given the context."
      },
      "throws": []
    },
    {
      "name": "setValue",
      "comment": "Sets the given value into the given settings object using this settingsDefinition as the key.",
      "javadoc": "Sets the given value into the given settings object using this settingsDefinition as the key.\n@param settings the settings object to store the value in.\n@param value the value to store in the settings object using this settingsDefinition as the key.",
      "static": false,
      "params": [
        {
          "name": "settings",
          "type_long": "ghidra.docking.settings.Settings",
          "type_short": "Settings",
          "comment": "the settings object to store the value in."
        },
        {
          "name": "value",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "the value to store in the settings object using this settingsDefinition as the key."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
