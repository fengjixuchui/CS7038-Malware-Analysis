{
  "name": "DockingWindowsLookAndFeelUtils",
  "comment": "A utility class to manage LookAndFeel (LaF) settings.",
  "javadoc": "A utility class to manage LookAndFeel (LaF) settings.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "LAST_LOOK_AND_FEEL_KEY",
      "comment": "Preference name for look and feel for the application.",
      "javadoc": "Preference name for look and feel for the application.",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"LastLookAndFeel\""
    },
    {
      "name": "USE_INVERTED_COLORS_KEY",
      "comment": "Preference name for whether to use inverted colors.",
      "javadoc": "Preference name for whether to use inverted colors.",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"LookAndFeel.UseInvertedColors\""
    },
    {
      "name": "METAL_LOOK_AND_FEEL",
      "comment": "Metal is the non-system, generic Java Look and Feel.",
      "javadoc": "Metal is the non-system, generic Java Look and Feel.",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Metal\""
    },
    {
      "name": "SYSTEM_LOOK_AND_FEEL",
      "comment": "Default Look and feel for the current platform.",
      "javadoc": "Default Look and feel for the current platform.",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"System\""
    },
    {
      "name": "NIMBUS_LOOK_AND_FEEL",
      "comment": "The most stable Linux LaF.",
      "javadoc": "The most stable Linux LaF.",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Nimbus\""
    },
    {
      "name": "defaultSwingRepaintManager",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "javax.swing.RepaintManager",
      "type_short": "RepaintManager",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "loadFromPreferences",
      "comment": "Loads settings from Preferences.",
      "javadoc": "Loads settings from {@link Preferences}.",
      "static": true,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getUseInvertedColorsPreference",
      "comment": "Returns the Preferences value for whether to use inverted colors when paiting.",
      "javadoc": "Returns the {@link Preferences} value for whether to use inverted colors when paiting.\n@return the {@link Preferences} value for whether to use inverted colors when paiting.",
      "static": true,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "the Preferences value for whether to use inverted colors when paiting."
      },
      "throws": []
    },
    {
      "name": "getInstalledLookAndFeelName",
      "comment": "Returns the currently installed LaF.",
      "javadoc": "Returns the currently installed LaF.\n@return the currently installed LaF.",
      "static": true,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the currently installed LaF."
      },
      "throws": []
    },
    {
      "name": "setLookAndFeel",
      "comment": "Set the look and feel (LAF) indicated by the string passed in as a parameter.  \n The string value can be either the class name of the LAF, as returned by \n LookAndFeelInfo.getClassName() or the name as returned by \n LookAndFeelInfo.getName().\n \n Note: to be effective, this call needs to be made before any components have been created\n and shown.",
      "javadoc": "Set the look and feel (LAF) indicated by the string passed in as a parameter.  \n The string value can be either the class name of the LAF, as returned by \n \u003ccode\u003eLookAndFeelInfo.getClassName()\u003c/code\u003e or the name as returned by \n \u003ccode\u003eLookAndFeelInfo.getName()\u003c/code\u003e.\n \u003cp\u003e\n Note: to be effective, this call needs to be made before any components have been created\n and shown.\n@param lookAndFeelName the string indicating which look and feel is desired (see above)",
      "static": true,
      "params": [
        {
          "name": "lookAndFeelName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the string indicating which look and feel is desired (see above)"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLookAndFeelNames",
      "comment": "Returns all installed LaFs.  This will vary by OS.",
      "javadoc": "Returns all installed LaFs.  This will vary by OS.\n@return all installed LaFs.",
      "static": true,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cjava.lang.String\u003e",
        "type_short": "List",
        "comment": "all installed LaFs."
      },
      "throws": []
    },
    {
      "name": "installLookAndFeelByName",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "lookAndFeelName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.lang.ClassNotFoundException",
          "type_short": "ClassNotFoundException",
          "comment": ""
        },
        {
          "type_long": "java.lang.InstantiationException",
          "type_short": "InstantiationException",
          "comment": ""
        },
        {
          "type_long": "java.lang.IllegalAccessException",
          "type_short": "IllegalAccessException",
          "comment": ""
        },
        {
          "type_long": "javax.swing.UnsupportedLookAndFeelException",
          "type_short": "UnsupportedLookAndFeelException",
          "comment": ""
        }
      ]
    },
    {
      "name": "findLookAndFeelClassName",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "lookAndFeelName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setUseInvertedColors",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "useInvertedColors",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "fixupLookAndFeelIssues",
      "comment": "Fixes issues in the currently running look and feel.",
      "javadoc": "Fixes issues in the currently running look and feel.",
      "static": true,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "installGlobalLookAndFeelAttributes",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "installPopupMenuSettingsOverride",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "installGlobalFontSizeOverride",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "installCustomLookAndFeelActions",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "registerAction",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "action",
          "type_long": "javax.swing.Action",
          "type_short": "Action",
          "comment": ""
        },
        {
          "name": "keyStroke",
          "type_long": "javax.swing.KeyStroke",
          "type_short": "KeyStroke",
          "comment": ""
        },
        {
          "name": "prefixValues",
          "type_long": "java.lang.String[]",
          "type_short": "java.lang.String[]",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setGlobalFontSizeOverride",
      "comment": "Allows you to globally set the font size (don\u0027t use this method!)",
      "javadoc": "Allows you to globally set the font size (don\u0027t use this method!)",
      "static": true,
      "params": [
        {
          "name": "fontSize",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDefaultLookAndFeelName",
      "comment": "Returns the name of the default LookAndFeel for the current OS.",
      "javadoc": "Returns the name of the default LookAndFeel for the current OS.",
      "static": true,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isUsingAquaUI",
      "comment": "Returns true if the given UI object is using the Aqua Look and Feel.",
      "javadoc": "Returns true if the given UI object is using the Aqua Look and Feel.\n@param UI the UI to examine.\n@return true if the UI is using Aqua",
      "static": true,
      "params": [
        {
          "name": "UI",
          "type_long": "javax.swing.plaf.ComponentUI",
          "type_short": "ComponentUI",
          "comment": "the UI to examine."
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the UI is using Aqua"
      },
      "throws": []
    },
    {
      "name": "isUsingNimbusUI",
      "comment": "Returns true if \u0027Nimbus\u0027 is the current Look and Feel",
      "javadoc": "Returns true if \u0027Nimbus\u0027 is the current Look and Feel\n@return true if \u0027Nimbus\u0027 is the current Look and Feel",
      "static": true,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if \u0027Nimbus\u0027 is the current Look and Feel"
      },
      "throws": []
    }
  ]
}
