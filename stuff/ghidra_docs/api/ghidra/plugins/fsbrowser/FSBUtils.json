{
  "name": "FSBUtils",
  "comment": "FileSystemBrowserPlugin utility methods that other things might find useful.",
  "javadoc": "{@link FileSystemBrowserPlugin} utility methods that other things might find useful.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getProgramManager",
      "comment": "Returns the ProgramManager associated with this fs browser plugin.\n \n When this FS Browser plugin is part of the front-end tool, this will search\n for an open CodeBrowser tool that can be used to handle programs.\n \n When this FS Browser plugin is part of a CodeBrowser tool, this will just return\n the local ProgramManager / CodeBrowser.",
      "javadoc": "Returns the {@link ProgramManager} associated with this fs browser plugin.\n \u003cp\u003e\n When this FS Browser plugin is part of the front-end tool, this will search\n for an open CodeBrowser tool that can be used to handle programs.\n \u003cp\u003e\n When this FS Browser plugin is part of a CodeBrowser tool, this will just return\n the local ProgramManager / CodeBrowser.\n@param tool The plugin tool.\n@param allowUserPrompt boolean flag to allow this method to query the user to select\n a CodeBrowser.\n@return null if front-end and no open CodeBrowser, otherwise returns the local\n CodeBrowser ProgramManager service.",
      "static": true,
      "params": [
        {
          "name": "tool",
          "type_long": "ghidra.framework.plugintool.PluginTool",
          "type_short": "PluginTool",
          "comment": "The plugin tool."
        },
        {
          "name": "allowUserPrompt",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "boolean flag to allow this method to query the user to select\n a CodeBrowser."
        }
      ],
      "return": {
        "type_long": "ghidra.app.services.ProgramManager",
        "type_short": "ProgramManager",
        "comment": "null if front-end and no open CodeBrowser, otherwise returns the local\n CodeBrowser ProgramManager service."
      },
      "throws": []
    },
    {
      "name": "getRunningProgramManagerTools",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "tool",
          "type_long": "ghidra.framework.plugintool.PluginTool",
          "type_short": "PluginTool",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.List\u003cghidra.framework.plugintool.PluginTool\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "selectPMTool",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "tool",
          "type_long": "ghidra.framework.plugintool.PluginTool",
          "type_short": "PluginTool",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.framework.plugintool.PluginTool",
        "type_short": "PluginTool",
        "comment": ""
      },
      "throws": []
    }
  ]
}
