{
  "name": "FSBFileNode",
  "comment": "GTreeNode that represents a file on a filesystem.",
  "javadoc": "GTreeNode that represents a file on a filesystem.",
  "static": false,
  "implements": [],
  "extends": "ghidra.plugins.fsbrowser.FSBNode",
  "fields": [
    {
      "name": "file",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.formats.gfilesystem.GFile",
      "type_short": "GFile",
      "constant_value": null
    },
    {
      "name": "isEncrypted",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "hasPassword",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "file",
          "type_long": "ghidra.formats.gfilesystem.GFile",
          "type_short": "GFile",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFSRL",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.formats.gfilesystem.FSRL",
        "type_short": "FSRL",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isLeaf",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hashCode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "updateFileAttributes",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "generateChildren",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.List\u003cdocking.widgets.tree.GTreeNode\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": ""
        }
      ]
    },
    {
      "name": "isEncrypted",
      "comment": "Local copy of the original GFile\u0027s FileAttributeType#IS_ENCRYPTED_ATTR attribute.",
      "javadoc": "Local copy of the original GFile\u0027s {@link FileAttributeType#IS_ENCRYPTED_ATTR} attribute.\n@return boolean true if file needs a password to be read",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "boolean true if file needs a password to be read"
      },
      "throws": []
    },
    {
      "name": "hasPassword",
      "comment": "Local copy of the original GFile\u0027s FileAttributeType#HAS_GOOD_PASSWORD_ATTR attribute.",
      "javadoc": "Local copy of the original GFile\u0027s {@link FileAttributeType#HAS_GOOD_PASSWORD_ATTR} attribute.\n@return boolean true if a password for the file has been found, false if missing the password",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "boolean true if a password for the file has been found, false if missing the password"
      },
      "throws": []
    },
    {
      "name": "hasMissingPassword",
      "comment": "Returns true if this file is missing its password",
      "javadoc": "Returns true if this file is missing its password\n@return boolean true if this file is missing its password",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "boolean true if this file is missing its password"
      },
      "throws": []
    },
    {
      "name": "needsFileAttributesUpdate",
      "comment": "Returns true if this node\u0027s password status has changed, calling for a complete refresh\n of the status of all files in the file system.",
      "javadoc": "Returns true if this node\u0027s password status has changed, calling for a complete refresh\n of the status of all files in the file system.\n@param monitor {@link TaskMonitor}\n@return boolean true if this nodes password status has changed",
      "static": false,
      "params": [
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": "TaskMonitor"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "boolean true if this nodes password status has changed"
      },
      "throws": []
    }
  ]
}
