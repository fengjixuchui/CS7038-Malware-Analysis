{
  "name": "FSBRootNode",
  "comment": "A GTreeNode that represents the root of a GFileSystem, and keeps the\n filesystem pinned in memory with its FileSystemRef.\n \n The FileSystemRef is released when this node is #dispose()d.\n \n Since GTreeNodes are cloned during GTree filtering, and this class has a reference to an external\n resource that needs managing, this class needs to keeps track of the original modelNode\n and does all state modification using the modelNode\u0027s context.",
  "javadoc": "A GTreeNode that represents the root of a {@link GFileSystem}, and keeps the\n filesystem pinned in memory with its {@link FileSystemRef}.\n \u003cp\u003e\n The {@link FileSystemRef} is released when this node is {@link #dispose()}d.\n \u003cp\u003e\n Since GTreeNodes are cloned during GTree filtering, and this class has a reference to an external\n resource that needs managing, this class needs to keeps track of the original modelNode\n and does all state modification using the modelNode\u0027s context.",
  "static": false,
  "implements": [],
  "extends": "ghidra.plugins.fsbrowser.FSBNode",
  "fields": [
    {
      "name": "fsRef",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.formats.gfilesystem.FileSystemRef",
      "type_short": "FileSystemRef",
      "constant_value": null
    },
    {
      "name": "prevNode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.plugins.fsbrowser.FSBFileNode",
      "type_short": "FSBFileNode",
      "constant_value": null
    },
    {
      "name": "subRootNodes",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cghidra.plugins.fsbrowser.FSBRootNode\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "modelNode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.plugins.fsbrowser.FSBRootNode",
      "type_short": "FSBRootNode",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "fsRef",
          "type_long": "ghidra.formats.gfilesystem.FileSystemRef",
          "type_short": "FileSystemRef",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "fsRef",
          "type_long": "ghidra.formats.gfilesystem.FileSystemRef",
          "type_short": "FileSystemRef",
          "comment": ""
        },
        {
          "name": "prevNode",
          "type_long": "ghidra.plugins.fsbrowser.FSBFileNode",
          "type_short": "FSBFileNode",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "clone",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "docking.widgets.tree.GTreeNode",
        "type_short": "GTreeNode",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.lang.CloneNotSupportedException",
          "type_short": "CloneNotSupportedException",
          "comment": ""
        }
      ]
    },
    {
      "name": "dispose",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "swapBackPrevModelNodeAndDispose",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFSRef",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.formats.gfilesystem.FileSystemRef",
        "type_short": "FileSystemRef",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "releaseFSRefsIfModelNode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "updateFileAttributes",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getToolTip",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isLeaf",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "generateChildren",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.List\u003cdocking.widgets.tree.GTreeNode\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getFSRL",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.formats.gfilesystem.FSRL",
        "type_short": "FSRL",
        "comment": ""
      },
      "throws": []
    }
  ]
}
