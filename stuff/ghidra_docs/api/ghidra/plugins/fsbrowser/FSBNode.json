{
  "name": "FSBNode",
  "comment": "Base class for all filesystem browser gtree nodes.",
  "javadoc": "Base class for all filesystem browser gtree nodes.",
  "static": false,
  "implements": [],
  "extends": "docking.widgets.tree.GTreeSlowLoadingNode",
  "fields": [],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFSRL",
      "comment": "Returns the FSRL of the filesystem object that this node represents.\n \n The root of filesystems will return a FSRLRoot.",
      "javadoc": "Returns the {@link FSRL} of the filesystem object that this node represents.\n \u003cp\u003e\n The root of filesystems will return a {@link FSRLRoot}.\n@return {@link FSRL} of the filesystem object.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.formats.gfilesystem.FSRL",
        "type_short": "FSRL",
        "comment": "FSRL of the filesystem object."
      },
      "throws": []
    },
    {
      "name": "getToolTip",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getIcon",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "expanded",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "javax.swing.Icon",
        "type_short": "Icon",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFSBRootNode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.plugins.fsbrowser.FSBRootNode",
        "type_short": "FSBRootNode",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "updateFileAttributes",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": ""
        }
      ]
    },
    {
      "name": "findContainingFileSystemFSBRootNode",
      "comment": "Returns the FSBRootNode that represents the root of the file system that\n contains the specified file node.",
      "javadoc": "Returns the {@link FSBRootNode} that represents the root of the file system that\n contains the specified file node.\n@param node GTree node that represents a file.\n@return FSBRootNode that represents the file system holding the file.",
      "static": true,
      "params": [
        {
          "name": "node",
          "type_long": "ghidra.plugins.fsbrowser.FSBNode",
          "type_short": "FSBNode",
          "comment": "GTree node that represents a file."
        }
      ],
      "return": {
        "type_long": "ghidra.plugins.fsbrowser.FSBRootNode",
        "type_short": "FSBRootNode",
        "comment": "FSBRootNode that represents the file system holding the file."
      },
      "throws": []
    },
    {
      "name": "createNodesFromFileList",
      "comment": "Helper method to convert GFile objects to FSBNode objects.",
      "javadoc": "Helper method to convert {@link GFile} objects to FSBNode objects.\n@param files {@link List} of {@link GFile} objects to convert\n@param monitor {@link TaskMonitor}\n@return {@link List} of {@link FSBNode} instances (return typed as a GTreeNode list),\n specific to each GFile instance\u0027s type.",
      "static": true,
      "params": [
        {
          "name": "files",
          "type_long": "java.util.List\u003cghidra.formats.gfilesystem.GFile\u003e",
          "type_short": "List",
          "comment": "List of GFile objects to convert"
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": "TaskMonitor"
        }
      ],
      "return": {
        "type_long": "java.util.List\u003cdocking.widgets.tree.GTreeNode\u003e",
        "type_short": "List",
        "comment": "List of FSBNode instances (return typed as a GTreeNode list),\n specific to each GFile instance\u0027s type."
      },
      "throws": []
    },
    {
      "name": "createNodeFromFile",
      "comment": "Helper method to convert a single GFile object into a FSBNode object.",
      "javadoc": "Helper method to convert a single {@link GFile} object into a FSBNode object.\n@param file {@link GFile} to convert\n@return a new {@link FSBFileNode} with type specific to the GFile\u0027s type.",
      "static": true,
      "params": [
        {
          "name": "file",
          "type_long": "ghidra.formats.gfilesystem.GFile",
          "type_short": "GFile",
          "comment": "GFile to convert"
        }
      ],
      "return": {
        "type_long": "ghidra.plugins.fsbrowser.FSBFileNode",
        "type_short": "FSBFileNode",
        "comment": "a new FSBFileNode with type specific to the GFile\u0027s type."
      },
      "throws": []
    }
  ]
}
