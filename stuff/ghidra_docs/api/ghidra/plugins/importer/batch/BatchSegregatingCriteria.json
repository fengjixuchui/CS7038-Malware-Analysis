{
  "name": "BatchSegregatingCriteria",
  "comment": "Set of identifying pieces of info that allow us to segregate files that we are\n importing into groups.\n \n Criteria are:\n \n Filename extension of source file\n Loader name\n Set of LanguageCompilerSpecs and preferred flags (ie. BatchGroupLoadSpec)\n ",
  "javadoc": "Set of identifying pieces of info that allow us to segregate files that we are\n importing into groups.\n \u003cp\u003e\n Criteria are:\n \u003cul\u003e\n \u003cli\u003eFilename extension of source file\u003c/li\u003e\n \u003cli\u003eLoader name\u003c/li\u003e\n \u003cli\u003eSet of LanguageCompilerSpecs and preferred flags (ie. {@link BatchGroupLoadSpec})\u003c/li\u003e\n \u003c/ul\u003e",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "groupLoadSpecs",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.Set\u003cghidra.plugins.importer.batch.BatchGroupLoadSpec\u003e",
      "type_short": "Set",
      "constant_value": null
    },
    {
      "name": "fileExt",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "loader",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "loader",
          "type_long": "ghidra.app.util.opinion.Loader",
          "type_short": "Loader",
          "comment": ""
        },
        {
          "name": "loadSpecs",
          "type_long": "java.util.Collection\u003cghidra.app.util.opinion.LoadSpec\u003e",
          "type_short": "Collection",
          "comment": ""
        },
        {
          "name": "provider",
          "type_long": "ghidra.app.util.bin.ByteProvider",
          "type_short": "ByteProvider",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFileExt",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLoader",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getBatchGroupLoadSpecs",
      "comment": "Return the BatchGroupLoadSpecs as a sorted list.",
      "javadoc": "Return the {@link BatchGroupLoadSpec}s as a sorted list.\n@return sorted list of {@link BatchGroupLoadSpec}s.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cghidra.plugins.importer.batch.BatchGroupLoadSpec\u003e",
        "type_short": "List",
        "comment": "sorted list of BatchGroupLoadSpecs."
      },
      "throws": []
    },
    {
      "name": "getFirstPreferredLoadSpec",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.plugins.importer.batch.BatchGroupLoadSpec",
        "type_short": "BatchGroupLoadSpec",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hashCode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "equals",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "obj",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    }
  ]
}
