{
  "name": "BatchImportDialog",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "extends": "docking.DialogComponentProvider",
  "fields": [
    {
      "name": "batchInfo",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.plugins.importer.batch.BatchInfo",
      "type_short": "BatchInfo",
      "constant_value": null
    },
    {
      "name": "destinationFolder",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.framework.model.DomainFolder",
      "type_short": "DomainFolder",
      "constant_value": null
    },
    {
      "name": "programManager",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.services.ProgramManager",
      "type_short": "ProgramManager",
      "constant_value": null
    },
    {
      "name": "stripLeading",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "stripContainer",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "openAfterImporting",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "tableModel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.plugins.importer.batch.BatchImportTableModel",
      "type_short": "BatchImportTableModel",
      "constant_value": null
    },
    {
      "name": "table",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.widgets.table.GTable",
      "type_short": "GTable",
      "constant_value": null
    },
    {
      "name": "removeSourceButton",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.JButton",
      "type_short": "JButton",
      "constant_value": null
    },
    {
      "name": "rescanButton",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.JButton",
      "type_short": "JButton",
      "constant_value": null
    },
    {
      "name": "maxDepthSpinner",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.JSpinner",
      "type_short": "JSpinner",
      "constant_value": null
    },
    {
      "name": "fileChooser",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "docking.widgets.filechooser.GhidraFileChooser",
      "type_short": "GhidraFileChooser",
      "constant_value": null
    },
    {
      "name": "sourceListModel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.plugins.importer.batch.BatchImportDialog.SourcesListModel",
      "type_short": "SourcesListModel",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "showAndImport",
      "comment": "Shows the batch import dialog (via runSwingLater) and prompts the user to select\n a file if the supplied  is empty.\n \n The dialog will chain to the ImportBatchTask when the user clicks the\n OK button.\n ",
      "javadoc": "Shows the batch import dialog (via runSwingLater) and prompts the user to select\n a file if the supplied {@code batchInfo} is empty.\n \u003cp\u003e\n The dialog will chain to the {@link ImportBatchTask} when the user clicks the\n OK button.\n \u003cp\u003e\n@param tool {@link PluginTool} that will be the parent of the dialog\n@param batchInfo optional {@link BatchInfo} instance with already discovered applications, or null.\n@param initialFiles optional {@link List} of {@link FSRL files} to add to the batch import dialog, or null.\n@param defaultFolder optional default destination folder for imported files or null for root folder.\n@param programManager optional {@link ProgramManager} that will be used to open the newly imported\n binaries.",
      "static": true,
      "params": [
        {
          "name": "tool",
          "type_long": "ghidra.framework.plugintool.PluginTool",
          "type_short": "PluginTool",
          "comment": "PluginTool that will be the parent of the dialog"
        },
        {
          "name": "batchInfo",
          "type_long": "ghidra.plugins.importer.batch.BatchInfo",
          "type_short": "BatchInfo",
          "comment": "optional BatchInfo instance with already discovered applications, or null."
        },
        {
          "name": "initialFiles",
          "type_long": "java.util.List\u003cghidra.formats.gfilesystem.FSRL\u003e",
          "type_short": "List",
          "comment": "optional List of FSRL to add to the batch import dialog, or null."
        },
        {
          "name": "defaultFolder",
          "type_long": "ghidra.framework.model.DomainFolder",
          "type_short": "DomainFolder",
          "comment": "optional default destination folder for imported files or null for root folder."
        },
        {
          "name": "programManager",
          "type_long": "ghidra.app.services.ProgramManager",
          "type_short": "ProgramManager",
          "comment": "optional ProgramManager that will be used to open the newly imported\n binaries."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "batchInfo",
          "type_long": "ghidra.plugins.importer.batch.BatchInfo",
          "type_short": "BatchInfo",
          "comment": ""
        },
        {
          "name": "defaultFolder",
          "type_long": "ghidra.framework.model.DomainFolder",
          "type_short": "DomainFolder",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "build",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createTitledBorder",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "title",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "drawLine",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "javax.swing.border.Border",
        "type_short": "Border",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "buildOutputOptionsPanel",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "javax.swing.JPanel",
        "type_short": "JPanel",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "showFiles",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setOpenAfterImporting",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "b",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "refreshData",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "refreshButtons",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setupInitialDefaults",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addSources",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addSources",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "filesToAdd",
          "type_long": "java.util.List\u003cghidra.formats.gfilesystem.FSRL\u003e",
          "type_short": "List",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "okCallback",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createFilesColumnCellEditor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "javax.swing.table.TableCellEditor",
        "type_short": "TableCellEditor",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createFilesColumnCellRenderer",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "javax.swing.table.TableCellRenderer",
        "type_short": "TableCellRenderer",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createLangColumnCellEditor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "javax.swing.table.TableCellEditor",
        "type_short": "TableCellEditor",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createLangColumnCellRenderer",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "javax.swing.table.TableCellRenderer",
        "type_short": "TableCellRenderer",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setStripLeading",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "stripLeading",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setStripContainer",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "stripContainer",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setMaxDepth",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "newMaxDepth",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setProgramManager",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "programManager",
          "type_long": "ghidra.app.services.ProgramManager",
          "type_short": "ProgramManager",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
