{
  "name": "ImporterUtilities",
  "comment": "Utilities for importing files.\n \n Note: if a method takes a TaskMonitor, then that method should only be called \n from a background task.",
  "javadoc": "Utilities for importing files.\n \n \u003cp\u003eNote: if a method takes a {@link TaskMonitor}, then that method should only be called \n from a background task.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "LOADABLE_FILES_FILTER",
      "comment": "File extension filter for well known \u0027loadable\u0027 files for GhidraFileChoosers.\n\n TODO: will be refactored to use file_extension_icon.xml file info.",
      "javadoc": "File extension filter for well known \u0027loadable\u0027 files for GhidraFileChoosers.\n\n TODO: will be refactored to use file_extension_icon.xml file info.",
      "static": true,
      "type_long": "ghidra.util.filechooser.GhidraFileFilter",
      "type_short": "GhidraFileFilter",
      "constant_value": null
    },
    {
      "name": "CONTAINER_FILES_FILTER",
      "comment": "File extension filter for well known \u0027container\u0027 files for GhidraFileChoosers.\n\n TODO: will be refactored to use file_extension_icon.xml file info.",
      "javadoc": "File extension filter for well known \u0027container\u0027 files for GhidraFileChoosers.\n\n TODO: will be refactored to use file_extension_icon.xml file info.",
      "static": true,
      "type_long": "ghidra.util.filechooser.GhidraFileFilter",
      "type_short": "GhidraFileFilter",
      "constant_value": null
    },
    {
      "name": "fsService",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.formats.gfilesystem.FileSystemService",
      "type_short": "FileSystemService",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPairs",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "loadSpecs",
          "type_long": "java.util.Collection\u003cghidra.app.util.opinion.LoadSpec\u003e",
          "type_short": "Collection",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.List\u003cghidra.program.model.lang.LanguageCompilerSpecPair\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setProgramProperties",
      "comment": "Ensure that a Program\u0027s metadata includes its import origin.",
      "javadoc": "Ensure that a {@link Program}\u0027s metadata includes its import origin.\n@param program imported {@link Program} to modify\n@param fsrl {@link FSRL} of the import source.\n@param monitor {@link TaskMonitor} to use when accessing filesystem stuff.\n@throws CancelledException if user cancels\n@throws IOException if IO error",
      "static": true,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "imported Program to modify"
        },
        {
          "name": "fsrl",
          "type_long": "ghidra.formats.gfilesystem.FSRL",
          "type_short": "FSRL",
          "comment": "FSRL of the import source."
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": "TaskMonitor to use when accessing filesystem stuff."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": "if user cancels"
        },
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if IO error"
        }
      ]
    },
    {
      "name": "showImportDialog",
      "comment": "Displays the appropriate import dialog for the specified FSRL.\n \n If the file is a container of other files, a batch import dialog will be used,\n otherwise the normal single file import dialog will be shown.",
      "javadoc": "Displays the appropriate import dialog for the specified {@link FSRL file}.\n \u003cp\u003e\n If the file is a container of other files, a batch import dialog will be used,\n otherwise the normal single file import dialog will be shown.\n@param tool {@link PluginTool} will be used as the parent tool for dialogs\n@param programManager optional {@link ProgramManager} instance to use to open imported \n \t\t\tbinaries with, or null\n@param fsrl {@link FSRL} of the file to import\n@param destinationFolder {@link DomainFolder} destination folder where the imported file\n \t\t\twill default to.  (the user will be able to choose a different location)\n@param suggestedPath optional string path that will automatically be pre-pended\n \t\t\tto the destination filename",
      "static": true,
      "params": [
        {
          "name": "tool",
          "type_long": "ghidra.framework.plugintool.PluginTool",
          "type_short": "PluginTool",
          "comment": "PluginTool will be used as the parent tool for dialogs"
        },
        {
          "name": "programManager",
          "type_long": "ghidra.app.services.ProgramManager",
          "type_short": "ProgramManager",
          "comment": "optional ProgramManager instance to use to open imported \n \t\t\tbinaries with, or null"
        },
        {
          "name": "fsrl",
          "type_long": "ghidra.formats.gfilesystem.FSRL",
          "type_short": "FSRL",
          "comment": "FSRL of the file to import"
        },
        {
          "name": "destinationFolder",
          "type_long": "ghidra.framework.model.DomainFolder",
          "type_short": "DomainFolder",
          "comment": "DomainFolder destination folder where the imported file\n \t\t\twill default to.  (the user will be able to choose a different location)"
        },
        {
          "name": "suggestedPath",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "optional string path that will automatically be pre-pended\n \t\t\tto the destination filename"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "showImportDialog",
      "comment": "Displays the appropriate import dialog for the specified FSRL.\n \n If the file is a container of other files, a batch import dialog will be used,\n otherwise the normal single file import dialog will be shown.]\n \n If you are not in a monitored task, then call \n #showImportDialog(PluginTool, ProgramManager, FSRL, DomainFolder, String).",
      "javadoc": "Displays the appropriate import dialog for the specified {@link FSRL file}.\n \u003cp\u003e\n If the file is a container of other files, a batch import dialog will be used,\n otherwise the normal single file import dialog will be shown.]\n \u003cp\u003e\n If you are not in a monitored task, then call \n {@link #showImportDialog(PluginTool, ProgramManager, FSRL, DomainFolder, String)}.\n@param tool {@link PluginTool} will be used as the parent tool for dialogs\n@param programManager optional {@link ProgramManager} instance to use to open imported \n \t\t\tbinaries with, or null\n@param fsrl {@link FSRL} of the file to import\n@param destinationFolder {@link DomainFolder} destination folder where the imported file\n \t\t\twill default to.  (the user will be able to choose a different location)\n@param suggestedPath optional string path that will automatically be pre-pended\n \t\t\tto the destination filename\n@param monitor the task monitor to use for monitoring; cannot be null",
      "static": true,
      "params": [
        {
          "name": "tool",
          "type_long": "ghidra.framework.plugintool.PluginTool",
          "type_short": "PluginTool",
          "comment": "PluginTool will be used as the parent tool for dialogs"
        },
        {
          "name": "programManager",
          "type_long": "ghidra.app.services.ProgramManager",
          "type_short": "ProgramManager",
          "comment": "optional ProgramManager instance to use to open imported \n \t\t\tbinaries with, or null"
        },
        {
          "name": "fsrl",
          "type_long": "ghidra.formats.gfilesystem.FSRL",
          "type_short": "FSRL",
          "comment": "FSRL of the file to import"
        },
        {
          "name": "destinationFolder",
          "type_long": "ghidra.framework.model.DomainFolder",
          "type_short": "DomainFolder",
          "comment": "DomainFolder destination folder where the imported file\n \t\t\twill default to.  (the user will be able to choose a different location)"
        },
        {
          "name": "suggestedPath",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "optional string path that will automatically be pre-pended\n \t\t\tto the destination filename"
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": "the task monitor to use for monitoring; cannot be null"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "close",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "c",
          "type_long": "java.io.Closeable",
          "type_short": "Closeable",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "importFromContainer",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "tool",
          "type_long": "ghidra.framework.plugintool.PluginTool",
          "type_short": "PluginTool",
          "comment": ""
        },
        {
          "name": "programManager",
          "type_long": "ghidra.app.services.ProgramManager",
          "type_short": "ProgramManager",
          "comment": ""
        },
        {
          "name": "destinationFolder",
          "type_long": "ghidra.framework.model.DomainFolder",
          "type_short": "DomainFolder",
          "comment": ""
        },
        {
          "name": "suggestedPath",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        },
        {
          "name": "referencedFile",
          "type_long": "ghidra.formats.gfilesystem.RefdFile",
          "type_short": "RefdFile",
          "comment": ""
        },
        {
          "name": "fullFsrl",
          "type_long": "ghidra.formats.gfilesystem.FSRL",
          "type_short": "FSRL",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "showAddToProgramDialog",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "fsrl",
          "type_long": "ghidra.formats.gfilesystem.FSRL",
          "type_short": "FSRL",
          "comment": ""
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "tool",
          "type_long": "ghidra.framework.plugintool.PluginTool",
          "type_short": "PluginTool",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "importSingleFile",
      "comment": "Constructs a ImporterDialog and shows it in the swing thread.",
      "javadoc": "Constructs a {@link ImporterDialog} and shows it in the swing thread.\n@param fsrl the file system resource locater (can be a simple file or an element of\n \t\t\ta more complex file such as a zip file)\n@param destinationFolder the default destination folder for the imported file. Can be null\n@param suggestedPath optional string path that will automatically be pre-pended\n \t\t\tto the destination filename\n@param tool the parent UI component\n@param programManager optional {@link ProgramManager} instance to open the imported file in",
      "static": true,
      "params": [
        {
          "name": "fsrl",
          "type_long": "ghidra.formats.gfilesystem.FSRL",
          "type_short": "FSRL",
          "comment": "the file system resource locater (can be a simple file or an element of\n \t\t\ta more complex file such as a zip file)"
        },
        {
          "name": "destinationFolder",
          "type_long": "ghidra.framework.model.DomainFolder",
          "type_short": "DomainFolder",
          "comment": "the default destination folder for the imported file. Can be null"
        },
        {
          "name": "suggestedPath",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "optional string path that will automatically be pre-pended\n \t\t\tto the destination filename"
        },
        {
          "name": "tool",
          "type_long": "ghidra.framework.plugintool.PluginTool",
          "type_short": "PluginTool",
          "comment": "the parent UI component"
        },
        {
          "name": "programManager",
          "type_long": "ghidra.app.services.ProgramManager",
          "type_short": "ProgramManager",
          "comment": "optional ProgramManager instance to open the imported file in"
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "doFsImport",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "refdFile",
          "type_long": "ghidra.formats.gfilesystem.RefdFile",
          "type_short": "RefdFile",
          "comment": ""
        },
        {
          "name": "fsrl",
          "type_long": "ghidra.formats.gfilesystem.FSRL",
          "type_short": "FSRL",
          "comment": ""
        },
        {
          "name": "destFolderParam",
          "type_long": "ghidra.framework.model.DomainFolder",
          "type_short": "DomainFolder",
          "comment": ""
        },
        {
          "name": "programManager",
          "type_long": "ghidra.app.services.ProgramManager",
          "type_short": "ProgramManager",
          "comment": ""
        },
        {
          "name": "tool",
          "type_long": "ghidra.framework.plugintool.PluginTool",
          "type_short": "PluginTool",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "doFSImportHelper",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "pfs",
          "type_long": "ghidra.formats.gfilesystem.GFileSystemProgramProvider",
          "type_short": "GFileSystemProgramProvider",
          "comment": ""
        },
        {
          "name": "gfile",
          "type_long": "ghidra.formats.gfilesystem.GFile",
          "type_short": "GFile",
          "comment": ""
        },
        {
          "name": "destFolder",
          "type_long": "ghidra.framework.model.DomainFolder",
          "type_short": "DomainFolder",
          "comment": ""
        },
        {
          "name": "consumer",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.listing.Program",
        "type_short": "Program",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.lang.Exception",
          "type_short": "Exception",
          "comment": ""
        }
      ]
    },
    {
      "name": "importSingleFile",
      "comment": "Perform file import and open using optional programManager",
      "javadoc": "Perform file import and open using optional programManager\n@param tool tool to which popup dialogs should be associated\n@param programManager program manager to open imported file with or null\n@param fsrl import file location\n@param destFolder project destination folder\n@param loadSpec import {@link LoadSpec}\n@param programName program name\n@param options import options\n@param monitor task monitor",
      "static": true,
      "params": [
        {
          "name": "tool",
          "type_long": "ghidra.framework.plugintool.PluginTool",
          "type_short": "PluginTool",
          "comment": "tool to which popup dialogs should be associated"
        },
        {
          "name": "programManager",
          "type_long": "ghidra.app.services.ProgramManager",
          "type_short": "ProgramManager",
          "comment": "program manager to open imported file with or null"
        },
        {
          "name": "fsrl",
          "type_long": "ghidra.formats.gfilesystem.FSRL",
          "type_short": "FSRL",
          "comment": "import file location"
        },
        {
          "name": "destFolder",
          "type_long": "ghidra.framework.model.DomainFolder",
          "type_short": "DomainFolder",
          "comment": "project destination folder"
        },
        {
          "name": "loadSpec",
          "type_long": "ghidra.app.util.opinion.LoadSpec",
          "type_short": "LoadSpec",
          "comment": "import LoadSpec"
        },
        {
          "name": "programName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "program name"
        },
        {
          "name": "options",
          "type_long": "java.util.List\u003cghidra.app.util.Option\u003e",
          "type_short": "List",
          "comment": "import options"
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": "task monitor"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "doPostImportProcessing",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "pluginTool",
          "type_long": "ghidra.framework.plugintool.PluginTool",
          "type_short": "PluginTool",
          "comment": ""
        },
        {
          "name": "programManager",
          "type_long": "ghidra.app.services.ProgramManager",
          "type_short": "ProgramManager",
          "comment": ""
        },
        {
          "name": "fsrl",
          "type_long": "ghidra.formats.gfilesystem.FSRL",
          "type_short": "FSRL",
          "comment": ""
        },
        {
          "name": "importedObjects",
          "type_long": "java.util.List\u003cghidra.framework.model.DomainObject\u003e",
          "type_short": "List",
          "comment": ""
        },
        {
          "name": "consumer",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        },
        {
          "name": "importMessages",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.Set\u003cghidra.framework.model.DomainFile\u003e",
        "type_short": "Set",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": ""
        },
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "selectFiles",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "importedFilesSet",
          "type_long": "java.util.Set\u003cghidra.framework.model.DomainFile\u003e",
          "type_short": "Set",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addContentToProgram",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "tool",
          "type_long": "ghidra.framework.plugintool.PluginTool",
          "type_short": "PluginTool",
          "comment": ""
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "fsrl",
          "type_long": "ghidra.formats.gfilesystem.FSRL",
          "type_short": "FSRL",
          "comment": ""
        },
        {
          "name": "loadSpec",
          "type_long": "ghidra.app.util.opinion.LoadSpec",
          "type_short": "LoadSpec",
          "comment": ""
        },
        {
          "name": "options",
          "type_long": "java.util.List\u003cghidra.app.util.Option\u003e",
          "type_short": "List",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "displayResults",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "tool",
          "type_long": "ghidra.framework.plugintool.PluginTool",
          "type_short": "PluginTool",
          "comment": ""
        },
        {
          "name": "obj",
          "type_long": "ghidra.framework.model.DomainObject",
          "type_short": "DomainObject",
          "comment": ""
        },
        {
          "name": "df",
          "type_long": "ghidra.framework.model.DomainFile",
          "type_short": "DomainFile",
          "comment": ""
        },
        {
          "name": "info",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
