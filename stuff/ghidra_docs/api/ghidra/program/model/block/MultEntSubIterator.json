{
  "name": "MultEntSubIterator",
  "comment": "MultEntSubIterator is an implementation of\n CodeBlockIterator capable of iterating in\n the forward direction over subroutine code blocks.\n The iterator supports subroutine models which allow one or\n more called/source entry points within a subroutine and do not\n share code with other subroutines produced by the same model.",
  "javadoc": "\u003cCODE\u003eMultEntSubIterator\u003c/CODE\u003e is an implementation of\n \u003cCODE\u003eCodeBlockIterator\u003c/CODE\u003e capable of iterating in\n the forward direction over subroutine code blocks.\n The iterator supports subroutine models which allow one or\n more called/source entry points within a subroutine and do not\n share code with other subroutines produced by the same model.",
  "static": false,
  "implements": [
    "ghidra.program.model.block.CodeBlockIterator"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "listing",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.listing.Listing",
      "type_short": "Listing",
      "constant_value": null
    },
    {
      "name": "nextSub",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.block.CodeBlock",
      "type_short": "CodeBlock",
      "constant_value": null
    },
    {
      "name": "addrSet",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.address.AddressSet",
      "type_short": "AddressSet",
      "constant_value": null
    },
    {
      "name": "model",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.block.MultEntSubModel",
      "type_short": "MultEntSubModel",
      "constant_value": null
    },
    {
      "name": "monitor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.task.TaskMonitor",
      "type_short": "TaskMonitor",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Creates a new iterator that will iterate over the entire\n program starting from its current minimum address.",
      "javadoc": "Creates a new iterator that will iterate over the entire\n program starting from its current minimum address.\n@param model the BlockModel the iterator will use in its operations.\n@param monitor task monitor which allows user to cancel operation.",
      "static": false,
      "params": [
        {
          "name": "model",
          "type_long": "ghidra.program.model.block.MultEntSubModel",
          "type_short": "MultEntSubModel",
          "comment": "the BlockModel the iterator will use in its operations."
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": "task monitor which allows user to cancel operation."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Creates a new iterator that will iterate over the\n program within a given address range set. All blocks which \n overlap the address set will be returned.\n ",
      "javadoc": "Creates a new iterator that will iterate over the\n program within a given address range set. All blocks which \n overlap the address set will be returned.\n \u003cP\u003e\n@param model the SubroutineModel the iterator will use in its operations.\n@param set the address range set which the iterator is to be\n               restricted to.\n@param monitor task monitor which allows user to cancel operation.",
      "static": false,
      "params": [
        {
          "name": "model",
          "type_long": "ghidra.program.model.block.MultEntSubModel",
          "type_short": "MultEntSubModel",
          "comment": "the SubroutineModel the iterator will use in its operations."
        },
        {
          "name": "set",
          "type_long": "ghidra.program.model.address.AddressSetView",
          "type_short": "AddressSetView",
          "comment": "the address range set which the iterator is to be\n               restricted to."
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": "task monitor which allows user to cancel operation."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hasNext",
      "comment": "",
      "javadoc": "@see ghidra.program.model.block.CodeBlockIterator#hasNext()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": ""
        }
      ]
    },
    {
      "name": "next",
      "comment": "",
      "javadoc": "@see ghidra.program.model.block.CodeBlockIterator#next()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.block.CodeBlock",
        "type_short": "CodeBlock",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": ""
        }
      ]
    }
  ]
}
