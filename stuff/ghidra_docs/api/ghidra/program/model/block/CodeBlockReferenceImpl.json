{
  "name": "CodeBlockReferenceImpl",
  "comment": "CodeBlockReferenceImpl implements a CodeBlockReference.\n \n  A CodeBlockReference represents the flow from one source block\n to a destination block, including information about how\n flow occurs between the two blocks (JUMP, CALL, etc..).\n \n  The reference is the address in the destination\n block that is actually flowed to by some instruction in the source block.\n \n  The referent is the address of the instruction in\n the source block that flows to the destination block.\n ",
  "javadoc": "CodeBlockReferenceImpl implements a CodeBlockReference.\n \u003cP\u003e\n  A \u003cCODE\u003eCodeBlockReference\u003c/CODE\u003e represents the flow from one source block\n to a destination block, including information about how\n flow occurs between the two blocks (JUMP, CALL, etc..).\n \u003cP\u003e\n  The \u003cCODE\u003ereference\u003c/CODE\u003e is the address in the destination\n block that is actually flowed to by some instruction in the source block.\n \u003cP\u003e\n  The \u003cCODE\u003ereferent\u003c/CODE\u003e is the address of the instruction in\n the source block that flows to the destination block.\n \u003cP\u003e\n@see ghidra.program.model.block.CodeBlockReference",
  "static": false,
  "implements": [
    "ghidra.program.model.block.CodeBlockReference"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "source",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.block.CodeBlock",
      "type_short": "CodeBlock",
      "constant_value": null
    },
    {
      "name": "destination",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.block.CodeBlock",
      "type_short": "CodeBlock",
      "constant_value": null
    },
    {
      "name": "flowType",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.symbol.FlowType",
      "type_short": "FlowType",
      "constant_value": null
    },
    {
      "name": "reference",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.address.Address",
      "type_short": "Address",
      "constant_value": null
    },
    {
      "name": "referent",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.address.Address",
      "type_short": "Address",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor for a CodeBlockReferenceImpl",
      "javadoc": "Constructor for a CodeBlockReferenceImpl\n@param source source block for this flow\n@param destination destination block for this flow\n@param flowType how we flow\n@param reference reference address in destination block\n@param referent address of instruction in source block that flows to destination block.",
      "static": false,
      "params": [
        {
          "name": "source",
          "type_long": "ghidra.program.model.block.CodeBlock",
          "type_short": "CodeBlock",
          "comment": "source block for this flow"
        },
        {
          "name": "destination",
          "type_long": "ghidra.program.model.block.CodeBlock",
          "type_short": "CodeBlock",
          "comment": "destination block for this flow"
        },
        {
          "name": "flowType",
          "type_long": "ghidra.program.model.symbol.FlowType",
          "type_short": "FlowType",
          "comment": "how we flow"
        },
        {
          "name": "reference",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "reference address in destination block"
        },
        {
          "name": "referent",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "address of instruction in source block that flows to destination block."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSourceBlock",
      "comment": "",
      "javadoc": "@see ghidra.program.model.block.CodeBlockReference#getSourceBlock()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.block.CodeBlock",
        "type_short": "CodeBlock",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDestinationBlock",
      "comment": "",
      "javadoc": "@see ghidra.program.model.block.CodeBlockReference#getDestinationBlock()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.block.CodeBlock",
        "type_short": "CodeBlock",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getBlock",
      "comment": "Gets the block (source or destination).  If the block is needed,\n assume we have the blockHave and compute blockNeeded using that block.",
      "javadoc": "Gets the block (source or destination).  If the block is needed,\n assume we have the blockHave and compute blockNeeded using that block.\n@param blockNeeded - block we need\n@param blockHave - block we know\n@param addrInBlock - address in the block we need\n@return the block",
      "static": false,
      "params": [
        {
          "name": "blockNeeded",
          "type_long": "ghidra.program.model.block.CodeBlock",
          "type_short": "CodeBlock",
          "comment": "- block we need"
        },
        {
          "name": "blockHave",
          "type_long": "ghidra.program.model.block.CodeBlock",
          "type_short": "CodeBlock",
          "comment": "- block we know"
        },
        {
          "name": "addrInBlock",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "- address in the block we need"
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.block.CodeBlock",
        "type_short": "CodeBlock",
        "comment": "the block"
      },
      "throws": []
    },
    {
      "name": "getFlowType",
      "comment": "",
      "javadoc": "@see ghidra.program.model.block.CodeBlockReference#getFlowType()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.symbol.FlowType",
        "type_short": "FlowType",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getReference",
      "comment": "",
      "javadoc": "@see ghidra.program.model.block.CodeBlockReference#getReference()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getReferent",
      "comment": "",
      "javadoc": "@see ghidra.program.model.block.CodeBlockReference#getReferent()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSourceAddress",
      "comment": "",
      "javadoc": "@see ghidra.program.model.block.CodeBlockReference#getSourceAddress()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDestinationAddress",
      "comment": "",
      "javadoc": "@see ghidra.program.model.block.CodeBlockReference#getDestinationAddress()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    }
  ]
}
