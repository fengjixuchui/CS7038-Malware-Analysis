{
  "name": "CodeBlockReference",
  "comment": "A CodeBlockReference represents the flow from one CodeBlock to another. Flow\n consists of: \n \n The source and destination CodeBlocks\n The Type of flow (JMP, CALL, Fallthrough, etc...\n The referent - the instruction\u0027s address in the source block that causes\n the flow \n The reference - the address in the destination block that is flowed to.\n \n ",
  "javadoc": "A CodeBlockReference represents the flow from one CodeBlock to another. Flow\n consists of: \n \u003cul\u003e\n \u003cli\u003eThe source and destination CodeBlocks\u003c/li\u003e\n \u003cli\u003eThe Type of flow (JMP, CALL, Fallthrough, etc...\u003c/li\u003e\n \u003cli\u003eThe referent - the instruction\u0027s address in the source block that causes\n the flow \u003c/li\u003e\n \u003cli\u003eThe reference - the address in the destination block that is flowed to.\n \u003c/li\u003e\n \u003c/ul\u003e",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "getSourceAddress",
      "comment": "Returns the Source Block address.\n The source address should only occur in one block.",
      "javadoc": "Returns the Source Block address.\n The source address should only occur in one block.\n@return the Source Block address",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": "the Source Block address"
      },
      "throws": []
    },
    {
      "name": "getDestinationAddress",
      "comment": "Returns the Destination Block address.\n The destination address should only occur in one block.",
      "javadoc": "Returns the Destination Block address.\n The destination address should only occur in one block.\n@return the Destination Block address",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": "the Destination Block address"
      },
      "throws": []
    },
    {
      "name": "getFlowType",
      "comment": "Returns the type of flow from the Source to the Destination CodeBlock.",
      "javadoc": "Returns the type of flow from the Source to the Destination CodeBlock.\n@return the type of flow",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.symbol.FlowType",
        "type_short": "FlowType",
        "comment": "the type of flow"
      },
      "throws": []
    },
    {
      "name": "getReference",
      "comment": "Returns the address in the Destination block that is referenced by the Source block.",
      "javadoc": "Returns the address in the Destination block that is referenced by the Source block.\n@return the address in the Destination block that is referenced by the Source block",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": "the address in the Destination block that is referenced by the Source block"
      },
      "throws": []
    },
    {
      "name": "getReferent",
      "comment": "Returns the address of the instruction in the Source Block that refers to the Destination block.",
      "javadoc": "Returns the address of the instruction in the Source Block that refers to the Destination block.\n@return the address of the instruction in the Source Block that refers to the Destination block",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": "the address of the instruction in the Source Block that refers to the Destination block"
      },
      "throws": []
    },
    {
      "name": "getDestinationBlock",
      "comment": "Returns the Destination CodeBlock.",
      "javadoc": "Returns the Destination CodeBlock.\n@return the Destination CodeBlock",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.block.CodeBlock",
        "type_short": "CodeBlock",
        "comment": "the Destination CodeBlock"
      },
      "throws": []
    },
    {
      "name": "getSourceBlock",
      "comment": "Returns the Source CodeBlock.",
      "javadoc": "Returns the Source CodeBlock.\n@return the Source CodeBlock",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.block.CodeBlock",
        "type_short": "CodeBlock",
        "comment": "the Source CodeBlock"
      },
      "throws": []
    }
  ]
}
