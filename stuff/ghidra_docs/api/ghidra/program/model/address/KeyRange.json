{
  "name": "KeyRange",
  "comment": "Class for holding a range of database keys (long values)",
  "javadoc": "Class for holding a range of database keys (long values)",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "minKey",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "maxKey",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new key range.  Keys must be ordered and unsigned.",
      "javadoc": "Constructs a new key range.  Keys must be ordered and unsigned.\n@param minKey the min key (inclusive)\n@param maxKey the max key (inclusive)",
      "static": false,
      "params": [
        {
          "name": "minKey",
          "type_long": "long",
          "type_short": "long",
          "comment": "the min key (inclusive)"
        },
        {
          "name": "maxKey",
          "type_long": "long",
          "type_short": "long",
          "comment": "the max key (inclusive)"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "contains",
      "comment": "Tests if the given key is in the range.",
      "javadoc": "Tests if the given key is in the range.\n@param key the key to test\n@return true if the key is in the range, false otherwise",
      "static": false,
      "params": [
        {
          "name": "key",
          "type_long": "long",
          "type_short": "long",
          "comment": "the key to test"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the key is in the range, false otherwise"
      },
      "throws": []
    },
    {
      "name": "length",
      "comment": "Return the number of keys contained within range.",
      "javadoc": "Return the number of keys contained within range.\n@return number of keys contained within range",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": "number of keys contained within range"
      },
      "throws": []
    }
  ]
}
