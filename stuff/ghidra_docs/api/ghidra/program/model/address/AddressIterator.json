{
  "name": "AddressIterator",
  "comment": "AddressIterator is used to iterate over some set of addresses.\n\n Note: The next and previous methods return Addresss.\n ",
  "javadoc": "\u003cp\u003eAddressIterator is used to iterate over some set of addresses.\n\n \u003cp\u003eNote: The next and previous methods return \u003ci\u003eAddress\u003c/i\u003es.\n \u003c/p\u003e\n@version 2000-02-16\n@see CollectionUtils#asIterable",
  "static": false,
  "implements": [
    "java.util.Iterator",
    "java.lang.Iterable"
  ],
  "fields": [
    {
      "name": "EMPTY_ITERATOR",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.program.model.address.AddressIterator",
      "type_short": "AddressIterator",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "next",
      "comment": "Get the next address.\n NOTE: This deviates from the standard Iterator interface\n by returning null instead of throwing an exception.",
      "javadoc": "Get the next address.\n \u003cP\u003eNOTE: This deviates from the standard {@link Iterator} interface\n by returning null instead of throwing an exception.\n@return the next address in the iteration.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": "the next address in the iteration."
      },
      "throws": []
    },
    {
      "name": "hasNext",
      "comment": "Checks if there is a next address in the iteration.",
      "javadoc": "Checks if there is a next address in the iteration.\n@return true if there is a next address.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if there is a next address."
      },
      "throws": []
    }
  ]
}
