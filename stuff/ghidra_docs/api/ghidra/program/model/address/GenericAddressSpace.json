{
  "name": "GenericAddressSpace",
  "comment": "Generic implementation of the AddressSpace interface.",
  "javadoc": "Generic implementation of the AddressSpace interface.",
  "static": false,
  "implements": [],
  "extends": "ghidra.program.model.address.AbstractAddressSpace",
  "fields": [],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new GenericAddress space with the given name, bit size, type\n and unique value.",
      "javadoc": "Constructs a new GenericAddress space with the given name, bit size, type\n and unique value.\n@param name the name of the space.\n@param size the number of bits required to represent the largest address\n            the space.\n@param type the type of the space\n@param unique the unique id for this space.",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of the space."
        },
        {
          "name": "size",
          "type_long": "int",
          "type_short": "int",
          "comment": "the number of bits required to represent the largest address\n            the space."
        },
        {
          "name": "type",
          "type_long": "int",
          "type_short": "int",
          "comment": "the type of the space"
        },
        {
          "name": "unique",
          "type_long": "int",
          "type_short": "int",
          "comment": "the unique id for this space."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new GenericAddress space with the given name, bit size, type\n and unique value.",
      "javadoc": "Constructs a new GenericAddress space with the given name, bit size, type\n and unique value.\n@param name the name of the space.\n@param size the number of bits required to represent the largest address\n            the space.\n@param type the type of the space\n@param unique the unique id for this space.\n@param showSpaceName whether to show the space name in toString()",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of the space."
        },
        {
          "name": "size",
          "type_long": "int",
          "type_short": "int",
          "comment": "the number of bits required to represent the largest address\n            the space."
        },
        {
          "name": "type",
          "type_long": "int",
          "type_short": "int",
          "comment": "the type of the space"
        },
        {
          "name": "unique",
          "type_long": "int",
          "type_short": "int",
          "comment": "the unique id for this space."
        },
        {
          "name": "showSpaceName",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "whether to show the space name in toString()"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new GenericAddress space with the given name, bit size, type\n and unique value.",
      "javadoc": "Constructs a new GenericAddress space with the given name, bit size, type\n and unique value.\n@param name the name of the space.\n@param size the number of bits required to represent the largest address\n            the space.\n@param unitSize number of bytes contained at each addressable location (1, 2,\n            4 or 8)\n@param type the type of the space\n@param unique the unique id for this space.",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of the space."
        },
        {
          "name": "size",
          "type_long": "int",
          "type_short": "int",
          "comment": "the number of bits required to represent the largest address\n            the space."
        },
        {
          "name": "unitSize",
          "type_long": "int",
          "type_short": "int",
          "comment": "number of bytes contained at each addressable location (1, 2,\n            4 or 8)"
        },
        {
          "name": "type",
          "type_long": "int",
          "type_short": "int",
          "comment": "the type of the space"
        },
        {
          "name": "unique",
          "type_long": "int",
          "type_short": "int",
          "comment": "the unique id for this space."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getAddress",
      "comment": "",
      "javadoc": "@see ghidra.program.model.address.AddressSpace#getAddress(long)",
      "static": false,
      "params": [
        {
          "name": "offset",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.program.model.address.AddressOutOfBoundsException",
          "type_short": "AddressOutOfBoundsException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getAddressInThisSpaceOnly",
      "comment": "",
      "javadoc": "@see ghidra.program.model.address.AddressSpace#getAddressInThisSpaceOnly(long)",
      "static": false,
      "params": [
        {
          "name": "offset",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getUncheckedAddress",
      "comment": "",
      "javadoc": "@see ghidra.program.model.address.AbstractAddressSpace#getUncheckedAddress(long)",
      "static": false,
      "params": [
        {
          "name": "offset",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": ""
      },
      "throws": []
    }
  ]
}
