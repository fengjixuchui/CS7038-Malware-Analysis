{
  "name": "MappedDataEntry",
  "comment": "A normal address based HighSymbol mapping with an associated Data object",
  "javadoc": "A normal address based HighSymbol mapping with an associated Data object",
  "static": false,
  "implements": [],
  "extends": "ghidra.program.model.pcode.MappedEntry",
  "fields": [
    {
      "name": "data",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.listing.Data",
      "type_short": "Data",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor for use with restoreXML",
      "javadoc": "Constructor for use with restoreXML\n@param sym is the owning HighSymbol",
      "static": false,
      "params": [
        {
          "name": "sym",
          "type_long": "ghidra.program.model.pcode.HighSymbol",
          "type_short": "HighSymbol",
          "comment": "is the owning HighSymbol"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct given a symbol, storage, and a backing Data object",
      "javadoc": "Construct given a symbol, storage, and a backing Data object\n@param sym the given symbol\n@param store the given storage\n@param d the backing Data object",
      "static": false,
      "params": [
        {
          "name": "sym",
          "type_long": "ghidra.program.model.pcode.HighSymbol",
          "type_short": "HighSymbol",
          "comment": "the given symbol"
        },
        {
          "name": "store",
          "type_long": "ghidra.program.model.listing.VariableStorage",
          "type_short": "VariableStorage",
          "comment": "the given storage"
        },
        {
          "name": "d",
          "type_long": "ghidra.program.model.listing.Data",
          "type_short": "Data",
          "comment": "the backing Data object"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getData",
      "comment": "",
      "javadoc": "@return the backing Data object",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.listing.Data",
        "type_short": "Data",
        "comment": "the backing Data object"
      },
      "throws": []
    },
    {
      "name": "restoreXML",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "parser",
          "type_long": "ghidra.xml.XmlPullParser",
          "type_short": "XmlPullParser",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.program.model.pcode.PcodeXMLException",
          "type_short": "PcodeXMLException",
          "comment": ""
        }
      ]
    },
    {
      "name": "isReadOnly",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isVolatile",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    }
  ]
}
