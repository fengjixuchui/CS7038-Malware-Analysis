{
  "name": "HighFunctionSymbol",
  "comment": "A function symbol that encapsulates detailed information about a particular function\n for the purposes of decompilation. The detailed model is provided by a backing HighFunction object.",
  "javadoc": "A function symbol that encapsulates detailed information about a particular function\n for the purposes of decompilation. The detailed model is provided by a backing HighFunction object.",
  "static": false,
  "implements": [],
  "extends": "ghidra.program.model.pcode.HighSymbol",
  "fields": [],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct given an Address, size, and decompiler function model for the symbol.\n The Address is typically the entry point of the function but may be different\n if the function is getting mapped from elsewhere (i.e. the EXTERNAL space). The size\n is given in bytes but generally isn\u0027t the true size of the function. The size needs to\n make the symbol just big enough to absorb any off-cut Address queries.",
      "javadoc": "Construct given an Address, size, and decompiler function model for the symbol.\n The Address is typically the entry point of the function but may be different\n if the function is getting mapped from elsewhere (i.e. the EXTERNAL space). The size\n is given in bytes but generally isn\u0027t the true size of the function. The size needs to\n make the symbol just big enough to absorb any off-cut Address queries.\n@param addr is the starting Address of the symbol\n@param size is the pseudo-size of the function\n@param function is the decompiler model of the function",
      "static": false,
      "params": [
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "is the starting Address of the symbol"
        },
        {
          "name": "size",
          "type_long": "int",
          "type_short": "int",
          "comment": "is the pseudo-size of the function"
        },
        {
          "name": "function",
          "type_long": "ghidra.program.model.pcode.HighFunction",
          "type_short": "HighFunction",
          "comment": "is the decompiler model of the function"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isGlobal",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getNamespace",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.symbol.Namespace",
        "type_short": "Namespace",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "saveXML",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "buf",
          "type_long": "java.lang.StringBuilder",
          "type_short": "StringBuilder",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
