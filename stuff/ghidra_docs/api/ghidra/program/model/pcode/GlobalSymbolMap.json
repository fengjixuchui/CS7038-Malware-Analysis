{
  "name": "GlobalSymbolMap",
  "comment": "A container for global symbols in the decompiler\u0027s model of a function. It contains\n HighSymbol objects for any symbol accessed by the particular function that is in either\n the global scope or some other global namespace. Currently the container is populated\n indirectly from the HighGlobal objects marshaled back from the decompiler, using either\n the populateSymbol() or newSymbol() methods. HighSymbols are stored by Address and by id,\n which matches the formal SymbolDB id when it exists.",
  "javadoc": "A container for global symbols in the decompiler\u0027s model of a function. It contains\n HighSymbol objects for any symbol accessed by the particular function that is in either\n the global scope or some other global namespace. Currently the container is populated\n indirectly from the HighGlobal objects marshaled back from the decompiler, using either\n the populateSymbol() or newSymbol() methods. HighSymbols are stored by Address and by id,\n which matches the formal SymbolDB id when it exists.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "program",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.listing.Program",
      "type_short": "Program",
      "constant_value": null
    },
    {
      "name": "func",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.pcode.HighFunction",
      "type_short": "HighFunction",
      "constant_value": null
    },
    {
      "name": "symbolTable",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.symbol.SymbolTable",
      "type_short": "SymbolTable",
      "constant_value": null
    },
    {
      "name": "addrMappedSymbols",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.HashMap\u003cghidra.program.model.address.Address,ghidra.program.model.pcode.HighSymbol\u003e",
      "type_short": "HashMap",
      "constant_value": null
    },
    {
      "name": "symbolMap",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.HashMap\u003cjava.lang.Long,ghidra.program.model.pcode.HighSymbol\u003e",
      "type_short": "HashMap",
      "constant_value": null
    },
    {
      "name": "uniqueSymbolId",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a global symbol map attached to a particular function model.",
      "javadoc": "Construct a global symbol map attached to a particular function model.\n@param f is the decompiler function model",
      "static": false,
      "params": [
        {
          "name": "f",
          "type_long": "ghidra.program.model.pcode.HighFunction",
          "type_short": "HighFunction",
          "comment": "is the decompiler function model"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "insertSymbol",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "sym",
          "type_long": "ghidra.program.model.pcode.HighSymbol",
          "type_short": "HighSymbol",
          "comment": ""
        },
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "populateSymbol",
      "comment": "Create a HighSymbol based on the id of the underlying Ghidra Symbol. The Symbol\n is looked up in the SymbolTable and then a HighSymbol is created with the name and\n dataType associated with the Symbol. If a Symbol cannot be found, null is returned.",
      "javadoc": "Create a HighSymbol based on the id of the underlying Ghidra Symbol. The Symbol\n is looked up in the SymbolTable and then a HighSymbol is created with the name and\n dataType associated with the Symbol. If a Symbol cannot be found, null is returned.\n@param id is the database id of the CodeSymbol\n@param dataType is the recovered data-type of the symbol\n@param sz is the size in bytes of the desired symbol\n@return the CodeSymbol wrapped as a HighSymbol or null",
      "static": false,
      "params": [
        {
          "name": "id",
          "type_long": "long",
          "type_short": "long",
          "comment": "is the database id of the CodeSymbol"
        },
        {
          "name": "dataType",
          "type_long": "ghidra.program.model.data.DataType",
          "type_short": "DataType",
          "comment": "is the recovered data-type of the symbol"
        },
        {
          "name": "sz",
          "type_long": "int",
          "type_short": "int",
          "comment": "is the size in bytes of the desired symbol"
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.pcode.HighSymbol",
        "type_short": "HighSymbol",
        "comment": "the CodeSymbol wrapped as a HighSymbol or null"
      },
      "throws": []
    },
    {
      "name": "newSymbol",
      "comment": "Create a HighSymbol corresponding to an underlying Data object. The name of the symbol is\n generated dynamically. A symbol is always returned unless the address is invalid,\n in which case null is returned.",
      "javadoc": "Create a HighSymbol corresponding to an underlying Data object. The name of the symbol is\n generated dynamically. A symbol is always returned unless the address is invalid,\n in which case null is returned.\n@param id is the id to associate with the new symbol\n@param addr is the address of the Data object\n@param dataType is the recovered data-type of the symbol\n@param sz is the size in bytes of the symbol\n@return the new HighSymbol or null",
      "static": false,
      "params": [
        {
          "name": "id",
          "type_long": "long",
          "type_short": "long",
          "comment": "is the id to associate with the new symbol"
        },
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "is the address of the Data object"
        },
        {
          "name": "dataType",
          "type_long": "ghidra.program.model.data.DataType",
          "type_short": "DataType",
          "comment": "is the recovered data-type of the symbol"
        },
        {
          "name": "sz",
          "type_long": "int",
          "type_short": "int",
          "comment": "is the size in bytes of the symbol"
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.pcode.HighCodeSymbol",
        "type_short": "HighCodeSymbol",
        "comment": "the new HighSymbol or null"
      },
      "throws": []
    },
    {
      "name": "getSymbol",
      "comment": "Retrieve a HighSymbol based on an id",
      "javadoc": "Retrieve a HighSymbol based on an id\n@param id is the id\n@return the matching HighSymbol or null",
      "static": false,
      "params": [
        {
          "name": "id",
          "type_long": "long",
          "type_short": "long",
          "comment": "is the id"
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.pcode.HighSymbol",
        "type_short": "HighSymbol",
        "comment": "the matching HighSymbol or null"
      },
      "throws": []
    },
    {
      "name": "getSymbol",
      "comment": "Retrieve a HighSymbol based on an Address",
      "javadoc": "Retrieve a HighSymbol based on an Address\n@param addr is the given Address\n@return the matching HighSymbol or null",
      "static": false,
      "params": [
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "is the given Address"
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.pcode.HighSymbol",
        "type_short": "HighSymbol",
        "comment": "the matching HighSymbol or null"
      },
      "throws": []
    },
    {
      "name": "getSymbols",
      "comment": "Get an iterator over all HighSymbols in this container",
      "javadoc": "Get an iterator over all HighSymbols in this container\n@return the iterator",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Iterator\u003cghidra.program.model.pcode.HighSymbol\u003e",
        "type_short": "Iterator",
        "comment": "the iterator"
      },
      "throws": []
    }
  ]
}
