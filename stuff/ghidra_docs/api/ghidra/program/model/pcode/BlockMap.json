{
  "name": "BlockMap",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "factory",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.address.AddressFactory",
      "type_short": "AddressFactory",
      "constant_value": null
    },
    {
      "name": "sortlist",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.ArrayList\u003cghidra.program.model.pcode.PcodeBlock\u003e",
      "type_short": "ArrayList",
      "constant_value": null
    },
    {
      "name": "leaflist",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.ArrayList\u003cghidra.program.model.pcode.PcodeBlock\u003e",
      "type_short": "ArrayList",
      "constant_value": null
    },
    {
      "name": "gotoreflist",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.ArrayList\u003cghidra.program.model.pcode.BlockMap.GotoReference\u003e",
      "type_short": "ArrayList",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "fac",
          "type_long": "ghidra.program.model.address.AddressFactory",
          "type_short": "AddressFactory",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "op2",
          "type_long": "ghidra.program.model.pcode.BlockMap",
          "type_short": "BlockMap",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getAddressFactory",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.address.AddressFactory",
        "type_short": "AddressFactory",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "sortList",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "list",
          "type_long": "java.util.ArrayList\u003cghidra.program.model.pcode.PcodeBlock\u003e",
          "type_short": "ArrayList",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "resolveBlock",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "btype",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.pcode.PcodeBlock",
        "type_short": "PcodeBlock",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "findLevelBlock",
      "comment": "Assume blocks are in index order, find the block with index -ind-",
      "javadoc": "Assume blocks are in index order, find the block with index -ind-\n@param ind is the block index to match\n@return the matching PcodeBlock",
      "static": false,
      "params": [
        {
          "name": "ind",
          "type_long": "int",
          "type_short": "int",
          "comment": "is the block index to match"
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.pcode.PcodeBlock",
        "type_short": "PcodeBlock",
        "comment": "the matching PcodeBlock"
      },
      "throws": []
    },
    {
      "name": "sortLevelList",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "findBlock",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "list",
          "type_long": "java.util.ArrayList\u003cghidra.program.model.pcode.PcodeBlock\u003e",
          "type_short": "ArrayList",
          "comment": ""
        },
        {
          "name": "ind",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.pcode.PcodeBlock",
        "type_short": "PcodeBlock",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createBlock",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "index",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.pcode.PcodeBlock",
        "type_short": "PcodeBlock",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addGotoRef",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "gblock",
          "type_long": "ghidra.program.model.pcode.PcodeBlock",
          "type_short": "PcodeBlock",
          "comment": ""
        },
        {
          "name": "root",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "depth",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "resolveGotoReferences",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
