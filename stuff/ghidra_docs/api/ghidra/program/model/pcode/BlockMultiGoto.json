{
  "name": "BlockMultiGoto",
  "comment": "A block representing a 2-or-more control flow branchpoint\n \n possible multiple incoming edges\n 1 or more outgoing edges (as in switch control flow)\n 2 or more (implied) outgoing edges representing unstructured branch destinations   (switch case with goto statement)\n \n 1 interior block representing the decision block of the switch",
  "javadoc": "A block representing a 2-or-more control flow branchpoint\n \n possible multiple incoming edges\n 1 or more outgoing edges (as in switch control flow)\n 2 or more (implied) outgoing edges representing unstructured branch destinations   (switch case with goto statement)\n \n 1 interior block representing the decision block of the switch",
  "static": false,
  "implements": [],
  "extends": "ghidra.program.model.pcode.BlockGraph",
  "fields": [
    {
      "name": "targets",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.ArrayList\u003cghidra.program.model.pcode.PcodeBlock\u003e",
      "type_short": "ArrayList",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addGotoTarget",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "target",
          "type_long": "ghidra.program.model.pcode.PcodeBlock",
          "type_short": "PcodeBlock",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "saveXmlBody",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "writer",
          "type_long": "java.io.Writer",
          "type_short": "Writer",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "restoreXmlBody",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "parser",
          "type_long": "ghidra.xml.XmlPullParser",
          "type_short": "XmlPullParser",
          "comment": ""
        },
        {
          "name": "resolver",
          "type_long": "ghidra.program.model.pcode.BlockMap",
          "type_short": "BlockMap",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.program.model.pcode.PcodeXMLException",
          "type_short": "PcodeXMLException",
          "comment": ""
        }
      ]
    }
  ]
}
