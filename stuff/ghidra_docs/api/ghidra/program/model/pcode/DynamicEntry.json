{
  "name": "DynamicEntry",
  "comment": "A HighSymbol mapping based on local hashing of the symbol\u0027s Varnode within a\n function\u0027s syntax tree.  The storage address of a temporary Varnode (a Varnode in\n the \"unique\" address space) is too ephemeral to use as a permanent way to identify it.\n This symbol stores a hash (generated by DynamicHash) that is better suited to\n identifying the Varnode.",
  "javadoc": "A HighSymbol mapping based on local hashing of the symbol\u0027s Varnode within a\n function\u0027s syntax tree.  The storage address of a temporary Varnode (a Varnode in\n the \"unique\" address space) is too ephemeral to use as a permanent way to identify it.\n This symbol stores a hash (generated by DynamicHash) that is better suited to\n identifying the Varnode.",
  "static": false,
  "implements": [],
  "extends": "ghidra.program.model.pcode.SymbolEntry",
  "fields": [
    {
      "name": "hash",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor for use with restoreXML",
      "javadoc": "Constructor for use with restoreXML\n@param sym is the owning HighSymbol",
      "static": false,
      "params": [
        {
          "name": "sym",
          "type_long": "ghidra.program.model.pcode.HighSymbol",
          "type_short": "HighSymbol",
          "comment": "is the owning HighSymbol"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct given the underlying symbol, defining Address of the Varnode, and the hash value",
      "javadoc": "Construct given the underlying symbol, defining Address of the Varnode, and the hash value\n@param sym is the given symbol\n@param addr is the defining Address\n@param h is the hash value",
      "static": false,
      "params": [
        {
          "name": "sym",
          "type_long": "ghidra.program.model.pcode.HighSymbol",
          "type_short": "HighSymbol",
          "comment": "is the given symbol"
        },
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "is the defining Address"
        },
        {
          "name": "h",
          "type_long": "long",
          "type_short": "long",
          "comment": "is the hash value"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getHash",
      "comment": "",
      "javadoc": "@return the hash value",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": "the hash value"
      },
      "throws": []
    },
    {
      "name": "restoreXML",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "parser",
          "type_long": "ghidra.xml.XmlPullParser",
          "type_short": "XmlPullParser",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.program.model.pcode.PcodeXMLException",
          "type_short": "PcodeXMLException",
          "comment": ""
        }
      ]
    },
    {
      "name": "saveXml",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "buf",
          "type_long": "java.lang.StringBuilder",
          "type_short": "StringBuilder",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getStorage",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.listing.VariableStorage",
        "type_short": "VariableStorage",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "build",
      "comment": "Build a new DynamicEntry, given the underlying temporary\n Varnode attached to a symbol.  The hash is created from local information in the\n syntax tree near the Varnode.",
      "javadoc": "Build a new DynamicEntry, given the underlying temporary\n Varnode attached to a symbol.  The hash is created from local information in the\n syntax tree near the Varnode.\n@param vn is the underlying Varnode\n@return the new DynamicEntry",
      "static": true,
      "params": [
        {
          "name": "vn",
          "type_long": "ghidra.program.model.pcode.Varnode",
          "type_short": "Varnode",
          "comment": "is the underlying Varnode"
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.pcode.DynamicEntry",
        "type_short": "DynamicEntry",
        "comment": "the new DynamicEntry"
      },
      "throws": []
    },
    {
      "name": "getSize",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isReadOnly",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isVolatile",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    }
  ]
}
