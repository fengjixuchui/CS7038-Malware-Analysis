{
  "name": "HighOther",
  "comment": "Other forms of variable, these are typically compiler infrastructure\n like the stackpointer or saved registers",
  "javadoc": "Other forms of variable, these are typically compiler infrastructure\n like the stackpointer or saved registers",
  "static": false,
  "implements": [],
  "extends": "ghidra.program.model.pcode.HighVariable",
  "fields": [
    {
      "name": "pcaddr",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.address.Address",
      "type_short": "Address",
      "constant_value": null
    },
    {
      "name": "symbol",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.pcode.HighSymbol",
      "type_short": "HighSymbol",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor for use with restoreXml",
      "javadoc": "Constructor for use with restoreXml\n@param high is the HighFunction containing the variable",
      "static": false,
      "params": [
        {
          "name": "high",
          "type_long": "ghidra.program.model.pcode.HighFunction",
          "type_short": "HighFunction",
          "comment": "is the HighFunction containing the variable"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a unique high NOT associated with a symbol",
      "javadoc": "Construct a unique high NOT associated with a symbol\n@param type data type of variable\n@param vn is the representative Varnode\n@param inst is the list of Varnodes making up the variable\n@param pc code unit address where unique is first assigned (first-use)\n@param func the associated high function",
      "static": false,
      "params": [
        {
          "name": "type",
          "type_long": "ghidra.program.model.data.DataType",
          "type_short": "DataType",
          "comment": "data type of variable"
        },
        {
          "name": "vn",
          "type_long": "ghidra.program.model.pcode.Varnode",
          "type_short": "Varnode",
          "comment": "is the representative Varnode"
        },
        {
          "name": "inst",
          "type_long": "ghidra.program.model.pcode.Varnode[]",
          "type_short": "ghidra.program.model.pcode.Varnode[]",
          "comment": "is the list of Varnodes making up the variable"
        },
        {
          "name": "pc",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "code unit address where unique is first assigned (first-use)"
        },
        {
          "name": "func",
          "type_long": "ghidra.program.model.pcode.HighFunction",
          "type_short": "HighFunction",
          "comment": "the associated high function"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPCAddress",
      "comment": "",
      "javadoc": "@return instruction address the variable comes into scope within the function",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": "instruction address the variable comes into scope within the function"
      },
      "throws": []
    },
    {
      "name": "getSymbol",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.pcode.HighSymbol",
        "type_short": "HighSymbol",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "restoreXml",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "parser",
          "type_long": "ghidra.xml.XmlPullParser",
          "type_short": "XmlPullParser",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.program.model.pcode.PcodeXMLException",
          "type_short": "PcodeXMLException",
          "comment": ""
        }
      ]
    }
  ]
}
