{
  "name": "EquateSymbol",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "extends": "ghidra.program.model.pcode.HighSymbol",
  "fields": [
    {
      "name": "FORMAT_DEFAULT",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "0"
    },
    {
      "name": "FORMAT_HEX",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "1"
    },
    {
      "name": "FORMAT_DEC",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "2"
    },
    {
      "name": "FORMAT_OCT",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "3"
    },
    {
      "name": "FORMAT_BIN",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "4"
    },
    {
      "name": "FORMAT_CHAR",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "5"
    },
    {
      "name": "value",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "convert",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "func",
          "type_long": "ghidra.program.model.pcode.HighFunction",
          "type_short": "HighFunction",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "uniqueId",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        },
        {
          "name": "nm",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "val",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        },
        {
          "name": "func",
          "type_long": "ghidra.program.model.pcode.HighFunction",
          "type_short": "HighFunction",
          "comment": ""
        },
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "hash",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "uniqueId",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        },
        {
          "name": "conv",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "val",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        },
        {
          "name": "func",
          "type_long": "ghidra.program.model.pcode.HighFunction",
          "type_short": "HighFunction",
          "comment": ""
        },
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "hash",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getValue",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getConvert",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "restoreXML",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "parser",
          "type_long": "ghidra.xml.XmlPullParser",
          "type_short": "XmlPullParser",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.program.model.pcode.PcodeXMLException",
          "type_short": "PcodeXMLException",
          "comment": ""
        }
      ]
    },
    {
      "name": "saveXML",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "buf",
          "type_long": "java.lang.StringBuilder",
          "type_short": "StringBuilder",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "convertName",
      "comment": "Determine what format a given equate name is in.\n Integer format conversions are stored using an Equate object, where the name of the equate\n is the actual conversion String. So the only way to tell what kind of conversion is being performed\n is by examining the name of the equate.  The format code of the conversion is returned, or if\n the name is not a conversion,  FORMAT_DEFAULT is returned indicating a normal String equate.",
      "javadoc": "Determine what format a given equate name is in.\n Integer format conversions are stored using an Equate object, where the name of the equate\n is the actual conversion String. So the only way to tell what kind of conversion is being performed\n is by examining the name of the equate.  The format code of the conversion is returned, or if\n the name is not a conversion,  FORMAT_DEFAULT is returned indicating a normal String equate.\n@param nm is the name of the equate\n@param val is the value being equated\n@return the format code for the conversion or FORMAT_DEFAULT if not a conversion",
      "static": true,
      "params": [
        {
          "name": "nm",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "is the name of the equate"
        },
        {
          "name": "val",
          "type_long": "long",
          "type_short": "long",
          "comment": "is the value being equated"
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the format code for the conversion or FORMAT_DEFAULT if not a conversion"
      },
      "throws": []
    }
  ]
}
