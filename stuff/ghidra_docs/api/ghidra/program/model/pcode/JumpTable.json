{
  "name": "JumpTable",
  "comment": "JumpTable found as part of the decompilation of a function",
  "javadoc": "JumpTable found as part of the decompilation of a function",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "preferredSpace",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.address.AddressSpace",
      "type_short": "AddressSpace",
      "constant_value": null
    },
    {
      "name": "opAddress",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.address.Address",
      "type_short": "Address",
      "constant_value": null
    },
    {
      "name": "addressTable",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.address.Address[]",
      "type_short": "ghidra.program.model.address.Address[]",
      "constant_value": null
    },
    {
      "name": "labelTable",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.Integer[]",
      "type_short": "java.lang.Integer[]",
      "constant_value": null
    },
    {
      "name": "loadTable",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.pcode.JumpTable.LoadTable[]",
      "type_short": "ghidra.program.model.pcode.JumpTable.LoadTable[]",
      "constant_value": null
    },
    {
      "name": "override",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.pcode.JumpTable.BasicOverride",
      "type_short": "BasicOverride",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "translateOverlayAddress",
      "comment": "Translate address into preferred memory space (JumpTable.preferredSpace)",
      "javadoc": "Translate address into preferred memory space (JumpTable.preferredSpace)\n@param addr is the given Address\n@return preferred address or original addr",
      "static": false,
      "params": [
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "is the given Address"
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": "preferred address or original addr"
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "preferredSpace",
          "type_long": "ghidra.program.model.address.AddressSpace",
          "type_short": "AddressSpace",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "destlist",
          "type_long": "java.util.ArrayList\u003cghidra.program.model.address.Address\u003e",
          "type_short": "ArrayList",
          "comment": ""
        },
        {
          "name": "override",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isEmpty",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "restoreXml",
      "comment": "Create a JumpTable object by parsing the XML elements",
      "javadoc": "Create a JumpTable object by parsing the XML elements\n@param parser is the XML parser\n@param addrFactory is used to look-up address spaces\n@throws PcodeXMLException for improperly formed XML",
      "static": false,
      "params": [
        {
          "name": "parser",
          "type_long": "ghidra.xml.XmlPullParser",
          "type_short": "XmlPullParser",
          "comment": "is the XML parser"
        },
        {
          "name": "addrFactory",
          "type_long": "ghidra.program.model.address.AddressFactory",
          "type_short": "AddressFactory",
          "comment": "is used to look-up address spaces"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.program.model.pcode.PcodeXMLException",
          "type_short": "PcodeXMLException",
          "comment": "for improperly formed XML"
        }
      ]
    },
    {
      "name": "buildXml",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "buf",
          "type_long": "java.lang.StringBuilder",
          "type_short": "StringBuilder",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSwitchAddress",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getCases",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.address.Address[]",
        "type_short": "ghidra.program.model.address.Address[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLabelValues",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.Integer[]",
        "type_short": "java.lang.Integer[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLoadTables",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.pcode.JumpTable.LoadTable[]",
        "type_short": "ghidra.program.model.pcode.JumpTable.LoadTable[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "writeOverride",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "func",
          "type_long": "ghidra.program.model.listing.Function",
          "type_short": "Function",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.InvalidInputException",
          "type_short": "InvalidInputException",
          "comment": ""
        }
      ]
    },
    {
      "name": "readOverride",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "space",
          "type_long": "ghidra.program.model.symbol.Namespace",
          "type_short": "Namespace",
          "comment": ""
        },
        {
          "name": "symtab",
          "type_long": "ghidra.program.model.symbol.SymbolTable",
          "type_short": "SymbolTable",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.pcode.JumpTable",
        "type_short": "JumpTable",
        "comment": ""
      },
      "throws": []
    }
  ]
}
