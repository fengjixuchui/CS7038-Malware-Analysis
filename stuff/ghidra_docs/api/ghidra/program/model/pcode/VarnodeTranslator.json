{
  "name": "VarnodeTranslator",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "language",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.lang.Language",
      "type_short": "Language",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "lang",
          "type_long": "ghidra.program.model.lang.Language",
          "type_short": "Language",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "supportsPcode",
      "comment": "",
      "javadoc": "@return true if this program\u0027s language supports pcode",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if this program\u0027s language supports pcode"
      },
      "throws": []
    },
    {
      "name": "getRegister",
      "comment": "Translate the Varnode into a register if possible",
      "javadoc": "Translate the Varnode into a register if possible\n@param node varnode to translate\n@return Register or null if node is not a register",
      "static": false,
      "params": [
        {
          "name": "node",
          "type_long": "ghidra.program.model.pcode.Varnode",
          "type_short": "Varnode",
          "comment": "varnode to translate"
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.lang.Register",
        "type_short": "Register",
        "comment": "Register or null if node is not a register"
      },
      "throws": []
    },
    {
      "name": "getVarnode",
      "comment": "Get a varnode that maps to the given register",
      "javadoc": "Get a varnode that maps to the given register\n@param register register to translate into a varnode\n@return varnode that reprents the register",
      "static": false,
      "params": [
        {
          "name": "register",
          "type_long": "ghidra.program.model.lang.Register",
          "type_short": "Register",
          "comment": "register to translate into a varnode"
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.pcode.Varnode",
        "type_short": "Varnode",
        "comment": "varnode that reprents the register"
      },
      "throws": []
    },
    {
      "name": "getRegisters",
      "comment": "Get all defined registers for the program this translator was created\n with.",
      "javadoc": "Get all defined registers for the program this translator was created\n with.\n@return all defined registers as unmodifiable list",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cghidra.program.model.lang.Register\u003e",
        "type_short": "List",
        "comment": "all defined registers as unmodifiable list"
      },
      "throws": []
    }
  ]
}
