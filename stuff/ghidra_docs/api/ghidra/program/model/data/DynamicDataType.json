{
  "name": "DynamicDataType",
  "comment": "Interface for dataTypes that don\u0027t get applied, but instead generate dataTypes\n on the fly based on the data.",
  "javadoc": "Interface for dataTypes that don\u0027t get applied, but instead generate dataTypes\n on the fly based on the data.",
  "static": false,
  "implements": [
    "ghidra.program.model.data.Dynamic"
  ],
  "extends": "ghidra.program.model.data.BuiltIn",
  "fields": [
    {
      "name": "map",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.datastruct.SoftCacheMap\u003cghidra.program.model.address.Address,ghidra.program.model.data.DataTypeComponent[]\u003e",
      "type_short": "SoftCacheMap",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "dtm",
          "type_long": "ghidra.program.model.data.DataTypeManager",
          "type_short": "DataTypeManager",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "path",
          "type_long": "ghidra.program.model.data.CategoryPath",
          "type_short": "CategoryPath",
          "comment": ""
        },
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "path",
          "type_long": "ghidra.program.model.data.CategoryPath",
          "type_short": "CategoryPath",
          "comment": ""
        },
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "dtm",
          "type_long": "ghidra.program.model.data.DataTypeManager",
          "type_short": "DataTypeManager",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "canSpecifyLength",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getNumComponents",
      "comment": "Gets the number of component data types in this data type.",
      "javadoc": "Gets the number of component data types in this data type.\n@param buf a memory buffer to be used by dataTypes that change depending on\n their data context.\n@return the number of components that make up this data prototype\n   - if this is an Array, return the number of elements in the array.\n   - if this datatype is a subcomponent of another datatype and it\n      won\u0027t fit in it\u0027s defined space, return -1.",
      "static": false,
      "params": [
        {
          "name": "buf",
          "type_long": "ghidra.program.model.mem.MemBuffer",
          "type_short": "MemBuffer",
          "comment": "a memory buffer to be used by dataTypes that change depending on\n their data context."
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the number of components that make up this data prototype\n   - if this is an Array, return the number of elements in the array.\n   - if this datatype is a subcomponent of another datatype and it\n      won\u0027t fit in it\u0027s defined space, return -1."
      },
      "throws": []
    },
    {
      "name": "getComps",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "buf",
          "type_long": "ghidra.program.model.mem.MemBuffer",
          "type_short": "MemBuffer",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.data.DataTypeComponent[]",
        "type_short": "ghidra.program.model.data.DataTypeComponent[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getComponent",
      "comment": "Returns the immediate n\u0027th component of this data type.",
      "javadoc": "Returns the immediate n\u0027th component of this data type.\n@param ordinal the components ordinal (zero based).\n@param buf a memory buffer to be used by dataTypes that change depending on\n their data context.\n@return the component data type or null if there is no component at the \n indicated index.\n@throws ArrayIndexOutOfBoundsException if index is out of bounds",
      "static": false,
      "params": [
        {
          "name": "ordinal",
          "type_long": "int",
          "type_short": "int",
          "comment": "the components ordinal (zero based)."
        },
        {
          "name": "buf",
          "type_long": "ghidra.program.model.mem.MemBuffer",
          "type_short": "MemBuffer",
          "comment": "a memory buffer to be used by dataTypes that change depending on\n their data context."
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.data.DataTypeComponent",
        "type_short": "DataTypeComponent",
        "comment": "the component data type or null if there is no component at the \n indicated index."
      },
      "throws": []
    },
    {
      "name": "getComponents",
      "comment": "Returns an array of components that make up this data type.\n Could return null if there are no subcomponents.",
      "javadoc": "Returns an array of components that make up this data type.\n Could return null if there are no subcomponents.\n@param buf a memory buffer to be used by dataTypes that change depending on\n their data context.\n@return datatype component array or null.",
      "static": false,
      "params": [
        {
          "name": "buf",
          "type_long": "ghidra.program.model.mem.MemBuffer",
          "type_short": "MemBuffer",
          "comment": "a memory buffer to be used by dataTypes that change depending on\n their data context."
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.data.DataTypeComponent[]",
        "type_short": "ghidra.program.model.data.DataTypeComponent[]",
        "comment": "datatype component array or null."
      },
      "throws": []
    },
    {
      "name": "getComponentAt",
      "comment": "Returns the first component containing the byte at the given offset.\n It is possible with zero-length components (see DataTypeComponent#isZeroLength())\n and bitfields (see @DataTypeComponent#isBitFieldComponent()} for multiple components\n to share the same offset.",
      "javadoc": "Returns the first component containing the byte at the given offset.\n It is possible with zero-length components (see {@link DataTypeComponent#isZeroLength()})\n and bitfields (see @DataTypeComponent#isBitFieldComponent()} for multiple components\n to share the same offset.\n@param offset the offset into the dataType\n@param buf the memory buffer containing the bytes.\n@return the first component containing the byte at the given offset or null if no\n component defined.  A zero-length component may be returned.",
      "static": false,
      "params": [
        {
          "name": "offset",
          "type_long": "int",
          "type_short": "int",
          "comment": "the offset into the dataType"
        },
        {
          "name": "buf",
          "type_long": "ghidra.program.model.mem.MemBuffer",
          "type_short": "MemBuffer",
          "comment": "the memory buffer containing the bytes."
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.data.DataTypeComponent",
        "type_short": "DataTypeComponent",
        "comment": "the first component containing the byte at the given offset or null if no\n component defined.  A zero-length component may be returned."
      },
      "throws": []
    },
    {
      "name": "getAllComponents",
      "comment": "Get all dynamic components associated with the specified MemBuffer",
      "javadoc": "Get all dynamic components associated with the specified MemBuffer\n@param buf memory buffer positioned at start of data type instance\n@return all components or null if memory data is not valid for this\n data type.",
      "static": false,
      "params": [
        {
          "name": "buf",
          "type_long": "ghidra.program.model.mem.MemBuffer",
          "type_short": "MemBuffer",
          "comment": "memory buffer positioned at start of data type instance"
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.data.DataTypeComponent[]",
        "type_short": "ghidra.program.model.data.DataTypeComponent[]",
        "comment": "all components or null if memory data is not valid for this\n data type."
      },
      "throws": []
    },
    {
      "name": "getLength",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "buf",
          "type_long": "ghidra.program.model.mem.MemBuffer",
          "type_short": "MemBuffer",
          "comment": ""
        },
        {
          "name": "maxLength",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLength",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "invalidateCache",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getReplacementBaseType",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.data.DataType",
        "type_short": "DataType",
        "comment": ""
      },
      "throws": []
    }
  ]
}
