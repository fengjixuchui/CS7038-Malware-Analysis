{
  "name": "StringDataType",
  "comment": "A fixed-length string DataType with a user setable\n CharsetSettingsDefinition (default ASCII).\n \n All string data types:\n \n StringDataType - this type, fixed length, user settable charset.\n StringUTF8DataType - fixed length UTF-8 string.\n TerminatedStringDataType - terminated and unbounded string, user settable charset.\n TerminatedUnicodeDataType - terminated and unbounded UTF-16 string.\n TerminatedUnicode32DataType - terminated and unbounded UTF-32 string.\n PascalString255DataType - length-prefixed string (limited to 255 chars), user settable charset.\n PascalStringDataType - length-prefixed string (limited to 64k), user settable charset.\n PascalUnicodeDataType - length-prefixed UTF-16 (limited to 64k).\n UnicodeDataType - fixed length UTF-16 string.\n Unicode32DataType - fixed length UTF-32 string.\n \n \n The following settings are supported by all string types on the data instance:\n \n  TranslationSettingsDefinition - controls display of string values that have been\n translated to english.\n  RenderUnicodeSettingsDefinition - controls display of non-ascii Unicode characters.\n ",
  "javadoc": "A fixed-length string {@link DataType} with a user setable\n {@link CharsetSettingsDefinition charset} (default ASCII).\n \u003cp\u003e\n All string data types:\n \u003cul\u003e\n \u003cli\u003e{@link StringDataType} - this type, fixed length, user settable charset.\n \u003cli\u003e{@link StringUTF8DataType} - fixed length UTF-8 string.\n \u003cli\u003e{@link TerminatedStringDataType} - terminated and unbounded string, user settable charset.\n \u003cli\u003e{@link TerminatedUnicodeDataType} - terminated and unbounded UTF-16 string.\n \u003cli\u003e{@link TerminatedUnicode32DataType} - terminated and unbounded UTF-32 string.\n \u003cli\u003e{@link PascalString255DataType} - length-prefixed string (limited to 255 chars), user settable charset.\n \u003cli\u003e{@link PascalStringDataType} - length-prefixed string (limited to 64k), user settable charset.\n \u003cli\u003e{@link PascalUnicodeDataType} - length-prefixed UTF-16 (limited to 64k).\n \u003cli\u003e{@link UnicodeDataType} - fixed length UTF-16 string.\n \u003cli\u003e{@link Unicode32DataType} - fixed length UTF-32 string.\n \u003c/ul\u003e\n \u003cp\u003e\n The following settings are supported by all string types on the data instance:\n \u003cul\u003e\n \u003cli\u003e {@link TranslationSettingsDefinition} - controls display of string values that have been\n translated to english.\n \u003cli\u003e {@link RenderUnicodeSettingsDefinition} - controls display of non-ascii Unicode characters.\n \u003c/ul\u003e",
  "static": false,
  "implements": [],
  "extends": "ghidra.program.model.data.AbstractStringDataType",
  "fields": [
    {
      "name": "dataType",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.program.model.data.StringDataType",
      "type_short": "StringDataType",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "dtm",
          "type_long": "ghidra.program.model.data.DataTypeManager",
          "type_short": "DataTypeManager",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "clone",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "dtm",
          "type_long": "ghidra.program.model.data.DataTypeManager",
          "type_short": "DataTypeManager",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.data.DataType",
        "type_short": "DataType",
        "comment": ""
      },
      "throws": []
    }
  ]
}
