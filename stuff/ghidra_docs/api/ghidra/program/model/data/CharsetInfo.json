{
  "name": "CharsetInfo",
  "comment": "Additional information about Charset that\n Ghidra needs to be able to create Ghidra string datatype instances.\n \n See charset_info.xml to specify a custom charset.",
  "javadoc": "Additional information about {@link Charset java.nio.charset.Charset\u0027s} that\n Ghidra needs to be able to create Ghidra string datatype instances.\n \u003cp\u003e\n See charset_info.xml to specify a custom charset.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "UTF8",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"UTF-8\""
    },
    {
      "name": "UTF16",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"UTF-16\""
    },
    {
      "name": "UTF32",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"UTF-32\""
    },
    {
      "name": "USASCII",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"US-ASCII\""
    },
    {
      "name": "charsetInfoRecsByName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.Map\u003cjava.lang.String,ghidra.program.model.data.CharsetInfo.CharsetInfoRec\u003e",
      "type_short": "Map",
      "constant_value": null
    },
    {
      "name": "charsetNamesList",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cjava.lang.String\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "charsetNames",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String[]",
      "type_short": "java.lang.String[]",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "getInstance",
      "comment": "Get the global singleton instance of this CharsetInfo.",
      "javadoc": "Get the global singleton instance of this {@link CharsetInfo}.\n@return global singleton instance",
      "static": true,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.data.CharsetInfo",
        "type_short": "CharsetInfo",
        "comment": "global singleton instance"
      },
      "throws": []
    },
    {
      "name": "isBOMCharset",
      "comment": "",
      "javadoc": "@param charsetName name of charset\n@return true if the supported multi-byte charset does not specify LE or\n         BE",
      "static": true,
      "params": [
        {
          "name": "charsetName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "name of charset"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the supported multi-byte charset does not specify LE or\n         BE"
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "initialize",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "includeConfigFile",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "reinitializeWithUserDefinedCharsets",
      "comment": "Reinitialize registered Charsets and include user defined Charsets\n specified in charset_info.xml.",
      "javadoc": "Reinitialize registered Charsets and include user defined Charsets\n specified in charset_info.xml.",
      "static": true,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "registerStandardCharsets",
      "comment": "Register minimal set of Java Charsets to facilitate most test without\n Application initialization overhead.",
      "javadoc": "Register minimal set of Java Charsets to facilitate most test without\n Application initialization overhead.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addCharset",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "charSize",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getCharsetNames",
      "comment": "Returns an array list of the currently configured charsets.",
      "javadoc": "Returns an array list of the currently configured charsets.\n@return String[] of current configured charsets.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String[]",
        "type_short": "java.lang.String[]",
        "comment": "String[] of current configured charsets."
      },
      "throws": []
    },
    {
      "name": "getCharsetCharSize",
      "comment": "Returns the number of bytes that the specified charset needs to specify a\n character.",
      "javadoc": "Returns the number of bytes that the specified charset needs to specify a\n character.\n@param charsetName charset name\n@return number of bytes in a character, ie. 1, 2, 4, etc, defaults to 1\n         if charset is unknown or not specified in config file.",
      "static": false,
      "params": [
        {
          "name": "charsetName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "charset name"
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "number of bytes in a character, ie. 1, 2, 4, etc, defaults to 1\n         if charset is unknown or not specified in config file."
      },
      "throws": []
    },
    {
      "name": "getCharsetNamesWithCharSize",
      "comment": "Returns list of Charsets that encode with the number of bytes specified.",
      "javadoc": "Returns list of {@link Charset}s that encode with the number of bytes specified.\n@param size the number of bytes for the {@link Charset} encoding.\n@return Charsets that encode one byte characters.",
      "static": false,
      "params": [
        {
          "name": "size",
          "type_long": "int",
          "type_short": "int",
          "comment": "the number of bytes for the Charset encoding."
        }
      ],
      "return": {
        "type_long": "java.util.List\u003cjava.lang.String\u003e",
        "type_short": "List",
        "comment": "Charsets that encode one byte characters."
      },
      "throws": []
    },
    {
      "name": "addJVMAvailableCharsets",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "readConfigFile",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
