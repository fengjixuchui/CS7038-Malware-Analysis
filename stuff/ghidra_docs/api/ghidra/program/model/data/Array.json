{
  "name": "Array",
  "comment": "Array interface",
  "javadoc": "Array interface",
  "static": false,
  "implements": [
    "ghidra.program.model.data.DataType"
  ],
  "fields": [
    {
      "name": "ARRAY_LABEL_PREFIX",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"ARRAY\""
    }
  ],
  "methods": [
    {
      "name": "getNumElements",
      "comment": "Returns the number of elements in the array",
      "javadoc": "Returns the number of elements in the array\n@return the number of elements in the array",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the number of elements in the array"
      },
      "throws": []
    },
    {
      "name": "getElementLength",
      "comment": "Returns the length of an element in the array.  In the case\n of a Dynamic base datatype, this element length will have been explicitly specified\n at the time of construction.  For a zero-length base type an element length of 1 \n will be reported with #getLength() returning the number of elements.",
      "javadoc": "Returns the length of an element in the array.  In the case\n of a Dynamic base datatype, this element length will have been explicitly specified\n at the time of construction.  For a zero-length base type an element length of 1 \n will be reported with {@link #getLength()} returning the number of elements.\n@return the length of one element in the array.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the length of one element in the array."
      },
      "throws": []
    },
    {
      "name": "getDataType",
      "comment": "Returns the dataType of the elements in the array.",
      "javadoc": "Returns the dataType of the elements in the array.\n@return the dataType of the elements in the array",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.data.DataType",
        "type_short": "DataType",
        "comment": "the dataType of the elements in the array"
      },
      "throws": []
    },
    {
      "name": "getArrayDefaultLabelPrefix",
      "comment": "Get the appropriate string to use as the label prefix\n for an array, taking into account the actual data at the memory location.\n \n See also #getDefaultLabelPrefix()",
      "javadoc": "Get the appropriate string to use as the label prefix\n for an array, taking into account the actual data at the memory location.\n \u003cp\u003e\n See also {@link #getDefaultLabelPrefix()}\n@param buf memory buffer containing the bytes.\n@param settings the Settings object\n@param len the length of the data.\n@param options options for how to format the default label prefix.\n@return the label prefix or null if not applicable",
      "static": false,
      "params": [
        {
          "name": "buf",
          "type_long": "ghidra.program.model.mem.MemBuffer",
          "type_short": "MemBuffer",
          "comment": "memory buffer containing the bytes."
        },
        {
          "name": "settings",
          "type_long": "ghidra.docking.settings.Settings",
          "type_short": "Settings",
          "comment": "the Settings object"
        },
        {
          "name": "len",
          "type_long": "int",
          "type_short": "int",
          "comment": "the length of the data."
        },
        {
          "name": "options",
          "type_long": "ghidra.program.model.data.DataTypeDisplayOptions",
          "type_short": "DataTypeDisplayOptions",
          "comment": "options for how to format the default label prefix."
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the label prefix or null if not applicable"
      },
      "throws": []
    },
    {
      "name": "getArrayDefaultOffcutLabelPrefix",
      "comment": "Get the appropriate string to use as the offcut label prefix for an array, taking into\n account the actual data at the memory location.\n \n See also #getDefaultLabelPrefix()",
      "javadoc": "Get the appropriate string to use as the offcut label prefix for an array, taking into\n account the actual data at the memory location.\n \u003cp\u003e\n See also {@link #getDefaultLabelPrefix()}\n@param buf memory buffer containing the bytes.\n@param settings the Settings object\n@param len the length of the data.\n@param options options for how to format the default label prefix.\n@param offcutLength offcut offset from start of buf\n@return the offcut label prefix or null if not applicable",
      "static": false,
      "params": [
        {
          "name": "buf",
          "type_long": "ghidra.program.model.mem.MemBuffer",
          "type_short": "MemBuffer",
          "comment": "memory buffer containing the bytes."
        },
        {
          "name": "settings",
          "type_long": "ghidra.docking.settings.Settings",
          "type_short": "Settings",
          "comment": "the Settings object"
        },
        {
          "name": "len",
          "type_long": "int",
          "type_short": "int",
          "comment": "the length of the data."
        },
        {
          "name": "options",
          "type_long": "ghidra.program.model.data.DataTypeDisplayOptions",
          "type_short": "DataTypeDisplayOptions",
          "comment": "options for how to format the default label prefix."
        },
        {
          "name": "offcutLength",
          "type_long": "int",
          "type_short": "int",
          "comment": "offcut offset from start of buf"
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the offcut label prefix or null if not applicable"
      },
      "throws": []
    },
    {
      "name": "getArrayRepresentation",
      "comment": "Get the representation which corresponds to an array in memory.  This will either be a\n String for the ArrayStringable case, \"??\" for uninitialized data,\n or the empty string if it is not.",
      "javadoc": "Get the representation which corresponds to an array in memory.  This will either be a\n String for the ArrayStringable case, \"??\" for uninitialized data,\n or the empty string if it is not.\n@param buf data buffer\n@param settings data settings\n@param length length of array\n@return a String if it is an array of chars; otherwise empty string, never null.",
      "static": false,
      "params": [
        {
          "name": "buf",
          "type_long": "ghidra.program.model.mem.MemBuffer",
          "type_short": "MemBuffer",
          "comment": "data buffer"
        },
        {
          "name": "settings",
          "type_long": "ghidra.docking.settings.Settings",
          "type_short": "Settings",
          "comment": "data settings"
        },
        {
          "name": "length",
          "type_long": "int",
          "type_short": "int",
          "comment": "length of array"
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "a String if it is an array of chars; otherwise empty string, never null."
      },
      "throws": []
    },
    {
      "name": "getArrayValue",
      "comment": "Get the value object which corresponds to an array in memory.  This will either be a\n String for the ArrayStringable case or null.",
      "javadoc": "Get the value object which corresponds to an array in memory.  This will either be a\n String for the ArrayStringable case or null.\n@param buf data buffer\n@param settings data settings\n@param length length of array\n@return a String if it is an array of chars; otherwise null.",
      "static": false,
      "params": [
        {
          "name": "buf",
          "type_long": "ghidra.program.model.mem.MemBuffer",
          "type_short": "MemBuffer",
          "comment": "data buffer"
        },
        {
          "name": "settings",
          "type_long": "ghidra.docking.settings.Settings",
          "type_short": "Settings",
          "comment": "data settings"
        },
        {
          "name": "length",
          "type_long": "int",
          "type_short": "int",
          "comment": "length of array"
        }
      ],
      "return": {
        "type_long": "java.lang.Object",
        "type_short": "Object",
        "comment": "a String if it is an array of chars; otherwise null."
      },
      "throws": []
    },
    {
      "name": "getArrayValueClass",
      "comment": "Get the value Class of a specific arrayDt with settings\n ( see #getArrayValueClass(Settings) ).",
      "javadoc": "Get the value Class of a specific arrayDt with settings\n ( see {@link #getArrayValueClass(Settings)} ).\n@param settings the relevant settings to use or null for default.\n@return Class of the value to be returned by the array or null if it can vary\n or is unspecified (String or Array class will be returned).",
      "static": false,
      "params": [
        {
          "name": "settings",
          "type_long": "ghidra.docking.settings.Settings",
          "type_short": "Settings",
          "comment": "the relevant settings to use or null for default."
        }
      ],
      "return": {
        "type_long": "java.lang.Class\u003c?\u003e",
        "type_short": "Class",
        "comment": "Class of the value to be returned by the array or null if it can vary\n or is unspecified (String or Array class will be returned)."
      },
      "throws": []
    }
  ]
}
