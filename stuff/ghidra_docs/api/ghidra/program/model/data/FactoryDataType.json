{
  "name": "FactoryDataType",
  "comment": "A DataType class that creates data types dynamically should implement this interface.\n This prevents them being directly referred to by a data instance within the listing\n or within a composite (e.g., added to a composite using the structure editor).\n FactoryDataType\u0027s should never be parented (e.g., Pointer, Structure component, Typedef, etc.).",
  "javadoc": "A DataType class that creates data types dynamically should implement this interface.\n This prevents them being directly referred to by a data instance within the listing\n or within a composite (e.g., added to a composite using the structure editor).\n FactoryDataType\u0027s should never be parented (e.g., Pointer, Structure component, Typedef, etc.).",
  "static": false,
  "implements": [
    "ghidra.program.model.data.BuiltInDataType"
  ],
  "fields": [],
  "methods": [
    {
      "name": "getDataType",
      "comment": "Returns the appropriate DataType which corresponds to the specified \n memory location.",
      "javadoc": "Returns the appropriate DataType which corresponds to the specified \n memory location.\n@param buf memory location\n@return fabricated datatype based upon memory data",
      "static": false,
      "params": [
        {
          "name": "buf",
          "type_long": "ghidra.program.model.mem.MemBuffer",
          "type_short": "MemBuffer",
          "comment": "memory location"
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.data.DataType",
        "type_short": "DataType",
        "comment": "fabricated datatype based upon memory data"
      },
      "throws": []
    },
    {
      "name": "getLength",
      "comment": "All implementations must return a length of -1.",
      "javadoc": "All implementations must return a length of -1.\n@return length of -1",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "length of -1"
      },
      "throws": []
    }
  ]
}
