{
  "name": "CharsetSettingsDefinition",
  "comment": "SettingsDefinition for setting the charset of a string instance.\n  \n  Charsets control how raw bytes are converted to native java String instances.\n  \n  CharsetInfo controls the list of character sets that the user is shown.",
  "javadoc": "{@link SettingsDefinition} for setting the charset of a string instance.\n  \u003cp\u003e\n  Charsets control how raw bytes are converted to native java String instances.\n  \u003cp\u003e\n  {@link CharsetInfo} controls the list of character sets that the user is shown.",
  "static": false,
  "implements": [
    "ghidra.docking.settings.EnumSettingsDefinition"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "CHARSET_SETTING_NAME",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"charset\""
    },
    {
      "name": "DEPRECATED_ENCODING_SETTING_NAME",
      "comment": "Backward compatible to the setting from MBCS data type.  This\n setting value will be cleared whenever the charset is changed.",
      "javadoc": "Backward compatible to the setting from MBCS data type.  This\n setting value will be cleared whenever the charset is changed.",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"encoding\""
    },
    {
      "name": "DEPRECATED_LANGUAGE_SETTING_NAME",
      "comment": "Backward compatible to the setting from MBCS data type.  This\n setting value will be cleared whenever the charset is changed.",
      "javadoc": "Backward compatible to the setting from MBCS data type.  This\n setting value will be cleared whenever the charset is changed.",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"language\""
    },
    {
      "name": "CHARSET_NAME",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Charset\""
    },
    {
      "name": "CHARSET",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.program.model.data.CharsetSettingsDefinition",
      "type_short": "CharsetSettingsDefinition",
      "constant_value": null
    },
    {
      "name": "languageToCharsetIndexMap",
      "comment": "Backward compatibility to map old MBCS (language_index, charset_index) tuples to a\n simple charset_name value.\n ",
      "javadoc": "Backward compatibility to map old MBCS (language_index, charset_index) tuples to a\n simple charset_name value.\n \u003cp\u003e",
      "static": true,
      "type_long": "java.util.Map\u003cjava.lang.Long,java.util.List\u003cjava.lang.String\u003e\u003e",
      "type_short": "Map",
      "constant_value": null
    },
    {
      "name": "ordinalToString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String[]",
      "type_short": "java.lang.String[]",
      "constant_value": null
    },
    {
      "name": "stringToOrdinal",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.Map\u003cjava.lang.String,java.lang.Integer\u003e",
      "type_short": "Map",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getCharset",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "settings",
          "type_long": "ghidra.docking.settings.Settings",
          "type_short": "Settings",
          "comment": ""
        },
        {
          "name": "defaultValue",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDeprecatedEncodingValue",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "settings",
          "type_long": "ghidra.docking.settings.Settings",
          "type_short": "Settings",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setCharset",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "settings",
          "type_long": "ghidra.docking.settings.Settings",
          "type_short": "Settings",
          "comment": ""
        },
        {
          "name": "charset",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getChoice",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "settings",
          "type_long": "ghidra.docking.settings.Settings",
          "type_short": "Settings",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setChoice",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "settings",
          "type_long": "ghidra.docking.settings.Settings",
          "type_short": "Settings",
          "comment": ""
        },
        {
          "name": "ordinalOfValue",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDisplayChoices",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "settings",
          "type_long": "ghidra.docking.settings.Settings",
          "type_short": "Settings",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String[]",
        "type_short": "java.lang.String[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDescription",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDisplayChoice",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "ordinalOfValue",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "s1",
          "type_long": "ghidra.docking.settings.Settings",
          "type_short": "Settings",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "clear",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "settings",
          "type_long": "ghidra.docking.settings.Settings",
          "type_short": "Settings",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "copySetting",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "settings",
          "type_long": "ghidra.docking.settings.Settings",
          "type_short": "Settings",
          "comment": ""
        },
        {
          "name": "destSettings",
          "type_long": "ghidra.docking.settings.Settings",
          "type_short": "Settings",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hasValue",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "setting",
          "type_long": "ghidra.docking.settings.Settings",
          "type_short": "Settings",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setStaticEncodingMappingValues",
      "comment": "Sets a static lookup table that maps from old deprecated (language,encoding) index\n values to a charset name.\n \n The old index values were used by old-style MBCS data type.",
      "javadoc": "Sets a static lookup table that maps from old deprecated (language,encoding) index\n values to a charset name.\n \u003cp\u003e\n The old index values were used by old-style MBCS data type.\n@param mappingValues map of language_id to list of charset names.",
      "static": true,
      "params": [
        {
          "name": "mappingValues",
          "type_long": "java.util.Map\u003cjava.lang.Long,java.util.List\u003cjava.lang.String\u003e\u003e",
          "type_short": "Map",
          "comment": "map of language_id to list of charset names."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
