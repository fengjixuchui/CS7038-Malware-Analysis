{
  "name": "CycleGroup",
  "comment": "Class to define a set of dataTypes that a single action can cycle through.",
  "javadoc": "Class to define a set of dataTypes that a single action can cycle through.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "BYTE_CYCLE_GROUP",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.program.model.data.CycleGroup",
      "type_short": "CycleGroup",
      "constant_value": null
    },
    {
      "name": "FLOAT_CYCLE_GROUP",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.program.model.data.CycleGroup",
      "type_short": "CycleGroup",
      "constant_value": null
    },
    {
      "name": "STRING_CYCLE_GROUP",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.program.model.data.CycleGroup",
      "type_short": "CycleGroup",
      "constant_value": null
    },
    {
      "name": "ALL_CYCLE_GROUPS",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.util.List\u003cghidra.program.model.data.CycleGroup\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "name",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "dataList",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.ArrayList\u003cghidra.program.model.data.DataType\u003e",
      "type_short": "ArrayList",
      "constant_value": null
    },
    {
      "name": "defaultKeyStroke",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "javax.swing.KeyStroke",
      "type_short": "KeyStroke",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "createCycleGroups",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cghidra.program.model.data.CycleGroup\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new cycle group with the given dataTypes.",
      "javadoc": "Constructs a new cycle group with the given dataTypes.\n@param name cycle group name which will be the suggested action name\n for those plugins which implement a cycle group action.\n@param dataTypes data types in the group\n@param keyStroke default key stroke for the action to cycle through the\n data types",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "cycle group name which will be the suggested action name\n for those plugins which implement a cycle group action."
        },
        {
          "name": "dataTypes",
          "type_long": "ghidra.program.model.data.DataType[]",
          "type_short": "ghidra.program.model.data.DataType[]",
          "comment": "data types in the group"
        },
        {
          "name": "keyStroke",
          "type_long": "javax.swing.KeyStroke",
          "type_short": "KeyStroke",
          "comment": "default key stroke for the action to cycle through the\n data types"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor cycle group with one data type.",
      "javadoc": "Constructor cycle group with one data type.\n@param name cycle group name which will be the suggested action name\n for those plugins which implement a cycle group action.\n@param dt single data type for the group\n@param keyStroke default key stroke for the action to cycle through the\n data types",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "cycle group name which will be the suggested action name\n for those plugins which implement a cycle group action."
        },
        {
          "name": "dt",
          "type_long": "ghidra.program.model.data.DataType",
          "type_short": "DataType",
          "comment": "single data type for the group"
        },
        {
          "name": "keyStroke",
          "type_long": "javax.swing.KeyStroke",
          "type_short": "KeyStroke",
          "comment": "default key stroke for the action to cycle through the\n data types"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct empty group no name, data types or keystroke.",
      "javadoc": "Construct empty group no name, data types or keystroke.",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDataTypes",
      "comment": "Get the data types in this group.",
      "javadoc": "Get the data types in this group.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.data.DataType[]",
        "type_short": "ghidra.program.model.data.DataType[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getName",
      "comment": "",
      "javadoc": "@return cycle group name.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "cycle group name."
      },
      "throws": []
    },
    {
      "name": "size",
      "comment": "Returns number of types in group",
      "javadoc": "Returns number of types in group",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDefaultKeyStroke",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "javax.swing.KeyStroke",
        "type_short": "KeyStroke",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addDataType",
      "comment": "Add a data type to this group.",
      "javadoc": "Add a data type to this group.\n@param dt the datatype to be added.",
      "static": false,
      "params": [
        {
          "name": "dt",
          "type_long": "ghidra.program.model.data.DataType",
          "type_short": "DataType",
          "comment": "the datatype to be added."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addFirst",
      "comment": "Add the data type as the first in the list.",
      "javadoc": "Add the data type as the first in the list.\n@param dt the dataType to be added.",
      "static": false,
      "params": [
        {
          "name": "dt",
          "type_long": "ghidra.program.model.data.DataType",
          "type_short": "DataType",
          "comment": "the dataType to be added."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeDataType",
      "comment": "Remove the data type from this group.",
      "javadoc": "Remove the data type from this group.\n@param dt the dataType to remove.",
      "static": false,
      "params": [
        {
          "name": "dt",
          "type_long": "ghidra.program.model.data.DataType",
          "type_short": "DataType",
          "comment": "the dataType to remove."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeFirst",
      "comment": "Remove first data type in the list.",
      "javadoc": "Remove first data type in the list.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeLast",
      "comment": "Remove the last data type in the list.",
      "javadoc": "Remove the last data type in the list.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "contains",
      "comment": "Return true if the given data type is in this cycle group.",
      "javadoc": "Return true if the given data type is in this cycle group.",
      "static": false,
      "params": [
        {
          "name": "dt",
          "type_long": "ghidra.program.model.data.DataType",
          "type_short": "DataType",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "exists",
      "comment": "Return true if the given data type is the same type of any\n data types in the list.",
      "javadoc": "Return true if the given data type is the same type of any\n data types in the list.",
      "static": false,
      "params": [
        {
          "name": "dt",
          "type_long": "ghidra.program.model.data.DataType",
          "type_short": "DataType",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getNextDataType",
      "comment": "Get next data-type which should be used",
      "javadoc": "Get next data-type which should be used\n@param currentDataType current data type to which this cycle group is to be applied\n@param stackPointers if true and currentDataType is a pointer, the pointer\u0027s \n base type will be cycled\n@return next data-type",
      "static": false,
      "params": [
        {
          "name": "currentDataType",
          "type_long": "ghidra.program.model.data.DataType",
          "type_short": "DataType",
          "comment": "current data type to which this cycle group is to be applied"
        },
        {
          "name": "stackPointers",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "if true and currentDataType is a pointer, the pointer\u0027s \n base type will be cycled"
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.data.DataType",
        "type_short": "DataType",
        "comment": "next data-type"
      },
      "throws": []
    }
  ]
}
