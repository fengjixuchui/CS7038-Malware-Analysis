{
  "name": "AnnotationHandler",
  "comment": "NOTE:  ALL AnnotationHandler CLASSES MUST END IN \"AnnotationHandler\".  If not,\n the ClassSearcher will not find them.\n \n AnnotationHandlers provide prefix/suffix information for various datatypes\n for specific C-like languages.",
  "javadoc": "NOTE:  ALL AnnotationHandler CLASSES MUST END IN \"AnnotationHandler\".  If not,\n the ClassSearcher will not find them.\n \n AnnotationHandlers provide prefix/suffix information for various datatypes\n for specific C-like languages.",
  "static": false,
  "implements": [
    "ghidra.util.classfinder.ExtensionPoint"
  ],
  "fields": [],
  "methods": [
    {
      "name": "getPrefix",
      "comment": "Returns the prefix for type Enum",
      "javadoc": "Returns the prefix for type Enum\n@param e the Enum datatype\n@param member the name of the member of the Enum\n@return the prefix for type Enum",
      "static": false,
      "params": [
        {
          "name": "e",
          "type_long": "ghidra.program.model.data.Enum",
          "type_short": "Enum",
          "comment": "the Enum datatype"
        },
        {
          "name": "member",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of the member of the Enum"
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the prefix for type Enum"
      },
      "throws": []
    },
    {
      "name": "getSuffix",
      "comment": "Returns the suffix for type Enum",
      "javadoc": "Returns the suffix for type Enum\n@param e the Enum datatype\n@param member the name of the member of the Enum\n@return the suffix for type Enum",
      "static": false,
      "params": [
        {
          "name": "e",
          "type_long": "ghidra.program.model.data.Enum",
          "type_short": "Enum",
          "comment": "the Enum datatype"
        },
        {
          "name": "member",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of the member of the Enum"
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the suffix for type Enum"
      },
      "throws": []
    },
    {
      "name": "getPrefix",
      "comment": "Returns the prefix for type Composite",
      "javadoc": "Returns the prefix for type Composite\n@param c the Composite datatype\n@param dtc the name of the member of the Composite\n@return the prefix for type Composite",
      "static": false,
      "params": [
        {
          "name": "c",
          "type_long": "ghidra.program.model.data.Composite",
          "type_short": "Composite",
          "comment": "the Composite datatype"
        },
        {
          "name": "dtc",
          "type_long": "ghidra.program.model.data.DataTypeComponent",
          "type_short": "DataTypeComponent",
          "comment": "the name of the member of the Composite"
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the prefix for type Composite"
      },
      "throws": []
    },
    {
      "name": "getSuffix",
      "comment": "Returns the suffix for type Composite",
      "javadoc": "Returns the suffix for type Composite\n@param c the Composite datatype\n@param dtc the name of the member of the Composite\n@return the suffix for type Composite",
      "static": false,
      "params": [
        {
          "name": "c",
          "type_long": "ghidra.program.model.data.Composite",
          "type_short": "Composite",
          "comment": "the Composite datatype"
        },
        {
          "name": "dtc",
          "type_long": "ghidra.program.model.data.DataTypeComponent",
          "type_short": "DataTypeComponent",
          "comment": "the name of the member of the Composite"
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the suffix for type Composite"
      },
      "throws": []
    },
    {
      "name": "getDescription",
      "comment": "Returns the description of the specific handler",
      "javadoc": "Returns the description of the specific handler\n@return the description of the specific handler",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the description of the specific handler"
      },
      "throws": []
    },
    {
      "name": "getLanguageName",
      "comment": "Returns the name of the C-like language that this handler supports",
      "javadoc": "Returns the name of the C-like language that this handler supports\n@return the name of the C-like language that this handler supports",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the name of the C-like language that this handler supports"
      },
      "throws": []
    },
    {
      "name": "getFileExtensions",
      "comment": "Returns an array of known extensions for the output file type.  If no extensions are \n preferred, the an empty array should be returned.",
      "javadoc": "Returns an array of known extensions for the output file type.  If no extensions are \n preferred, the an empty array should be returned.\n@return an array of known extensions for the output file type.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String[]",
        "type_short": "java.lang.String[]",
        "comment": "an array of known extensions for the output file type."
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "Returns a string description of this handler.",
      "javadoc": "Returns a string description of this handler.\n@return a string description of this handler",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "a string description of this handler"
      },
      "throws": []
    }
  ]
}
