{
  "name": "DataTypeManagerChangeListener",
  "comment": "The listener interface for notification of changes to a DataTypeManager",
  "javadoc": "The listener interface for notification of changes to a DataTypeManager",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "categoryAdded",
      "comment": "Notification when category is added.",
      "javadoc": "Notification when category is added.\n@param dtm the dataType manager\n@param path the categoryPath of the newly added category.",
      "static": false,
      "params": [
        {
          "name": "dtm",
          "type_long": "ghidra.program.model.data.DataTypeManager",
          "type_short": "DataTypeManager",
          "comment": "the dataType manager"
        },
        {
          "name": "path",
          "type_long": "ghidra.program.model.data.CategoryPath",
          "type_short": "CategoryPath",
          "comment": "the categoryPath of the newly added category."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "categoryRemoved",
      "comment": "Notification when a category is removed.",
      "javadoc": "Notification when a category is removed.\n@param dtm data type manager associated with the category\n@param path the categoryPath of the category that was removed.",
      "static": false,
      "params": [
        {
          "name": "dtm",
          "type_long": "ghidra.program.model.data.DataTypeManager",
          "type_short": "DataTypeManager",
          "comment": "data type manager associated with the category"
        },
        {
          "name": "path",
          "type_long": "ghidra.program.model.data.CategoryPath",
          "type_short": "CategoryPath",
          "comment": "the categoryPath of the category that was removed."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "categoryRenamed",
      "comment": "Notification when category is renamed.",
      "javadoc": "Notification when category is renamed.\n@param dtm data type manager associated with the category\n@param oldPath the path of the category before it was renamed.\n@param newPath the path of the category after it was renamed.  This path will only differ in\n the last segment of the path.",
      "static": false,
      "params": [
        {
          "name": "dtm",
          "type_long": "ghidra.program.model.data.DataTypeManager",
          "type_short": "DataTypeManager",
          "comment": "data type manager associated with the category"
        },
        {
          "name": "oldPath",
          "type_long": "ghidra.program.model.data.CategoryPath",
          "type_short": "CategoryPath",
          "comment": "the path of the category before it was renamed."
        },
        {
          "name": "newPath",
          "type_long": "ghidra.program.model.data.CategoryPath",
          "type_short": "CategoryPath",
          "comment": "the path of the category after it was renamed.  This path will only differ in\n the last segment of the path."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "categoryMoved",
      "comment": "Notification when a category is reparented to new category.",
      "javadoc": "Notification when a category is reparented to new category.\n@param dtm data type manager associated with the category\n@param oldPath the path of the category before it was moved.\n@param newPath the path of the category after it was moved.",
      "static": false,
      "params": [
        {
          "name": "dtm",
          "type_long": "ghidra.program.model.data.DataTypeManager",
          "type_short": "DataTypeManager",
          "comment": "data type manager associated with the category"
        },
        {
          "name": "oldPath",
          "type_long": "ghidra.program.model.data.CategoryPath",
          "type_short": "CategoryPath",
          "comment": "the path of the category before it was moved."
        },
        {
          "name": "newPath",
          "type_long": "ghidra.program.model.data.CategoryPath",
          "type_short": "CategoryPath",
          "comment": "the path of the category after it was moved."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "dataTypeAdded",
      "comment": "Notification when a data type is added to a category",
      "javadoc": "Notification when a data type is added to a category\n@param dtm data type manager for the given category paths.\n@param path the DataTypePath of the newly added datatype.",
      "static": false,
      "params": [
        {
          "name": "dtm",
          "type_long": "ghidra.program.model.data.DataTypeManager",
          "type_short": "DataTypeManager",
          "comment": "data type manager for the given category paths."
        },
        {
          "name": "path",
          "type_long": "ghidra.program.model.data.DataTypePath",
          "type_short": "DataTypePath",
          "comment": "the DataTypePath of the newly added datatype."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "dataTypeRemoved",
      "comment": "Notification when data type is removed.",
      "javadoc": "Notification when data type is removed.\n@param dtm data type manager for the given category paths.\n@param path the DataTypePath of the removed datatype.",
      "static": false,
      "params": [
        {
          "name": "dtm",
          "type_long": "ghidra.program.model.data.DataTypeManager",
          "type_short": "DataTypeManager",
          "comment": "data type manager for the given category paths."
        },
        {
          "name": "path",
          "type_long": "ghidra.program.model.data.DataTypePath",
          "type_short": "DataTypePath",
          "comment": "the DataTypePath of the removed datatype."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "dataTypeRenamed",
      "comment": "Notification when data type is renamed.",
      "javadoc": "Notification when data type is renamed.\n@param dtm data type manager for the given category paths.\n@param oldPath the path of the datatype before it was renamed.\n@param newPath the path of the datatype after it was renamed.",
      "static": false,
      "params": [
        {
          "name": "dtm",
          "type_long": "ghidra.program.model.data.DataTypeManager",
          "type_short": "DataTypeManager",
          "comment": "data type manager for the given category paths."
        },
        {
          "name": "oldPath",
          "type_long": "ghidra.program.model.data.DataTypePath",
          "type_short": "DataTypePath",
          "comment": "the path of the datatype before it was renamed."
        },
        {
          "name": "newPath",
          "type_long": "ghidra.program.model.data.DataTypePath",
          "type_short": "DataTypePath",
          "comment": "the path of the datatype after it was renamed."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "dataTypeMoved",
      "comment": "Notification when a data type is moved.",
      "javadoc": "Notification when a data type is moved.\n@param dtm data type manager for the given category paths.\n@param oldPath the path of the datatype before it was moved.\n@param newPath the path of the datatype after it was moved.",
      "static": false,
      "params": [
        {
          "name": "dtm",
          "type_long": "ghidra.program.model.data.DataTypeManager",
          "type_short": "DataTypeManager",
          "comment": "data type manager for the given category paths."
        },
        {
          "name": "oldPath",
          "type_long": "ghidra.program.model.data.DataTypePath",
          "type_short": "DataTypePath",
          "comment": "the path of the datatype before it was moved."
        },
        {
          "name": "newPath",
          "type_long": "ghidra.program.model.data.DataTypePath",
          "type_short": "DataTypePath",
          "comment": "the path of the datatype after it was moved."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "dataTypeChanged",
      "comment": "Notification when data type is changed.",
      "javadoc": "Notification when data type is changed.\n@param dtm data type manager for the given category paths.\n@param path the path of the datatype that changed.",
      "static": false,
      "params": [
        {
          "name": "dtm",
          "type_long": "ghidra.program.model.data.DataTypeManager",
          "type_short": "DataTypeManager",
          "comment": "data type manager for the given category paths."
        },
        {
          "name": "path",
          "type_long": "ghidra.program.model.data.DataTypePath",
          "type_short": "DataTypePath",
          "comment": "the path of the datatype that changed."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "dataTypeReplaced",
      "comment": "Notification when a data type has been replaced.",
      "javadoc": "Notification when a data type has been replaced.\n@param dtm data type manager for the given category paths.\n@param oldPath the path of the datatype that was replaced.\n@param newPath the path of the datatype that replaced the existing datatype.\n@param newDataType the new dataType that replaced the old dataType",
      "static": false,
      "params": [
        {
          "name": "dtm",
          "type_long": "ghidra.program.model.data.DataTypeManager",
          "type_short": "DataTypeManager",
          "comment": "data type manager for the given category paths."
        },
        {
          "name": "oldPath",
          "type_long": "ghidra.program.model.data.DataTypePath",
          "type_short": "DataTypePath",
          "comment": "the path of the datatype that was replaced."
        },
        {
          "name": "newPath",
          "type_long": "ghidra.program.model.data.DataTypePath",
          "type_short": "DataTypePath",
          "comment": "the path of the datatype that replaced the existing datatype."
        },
        {
          "name": "newDataType",
          "type_long": "ghidra.program.model.data.DataType",
          "type_short": "DataType",
          "comment": "the new dataType that replaced the old dataType"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "favoritesChanged",
      "comment": "Notification the favorite status of a datatype has changed",
      "javadoc": "Notification the favorite status of a datatype has changed\n@param dtm data type manager for the given category paths.\n@param path the DataTypePath of the datatype had its favorite status changed.\n@param isFavorite reflects the current favorite status of the datatype.",
      "static": false,
      "params": [
        {
          "name": "dtm",
          "type_long": "ghidra.program.model.data.DataTypeManager",
          "type_short": "DataTypeManager",
          "comment": "data type manager for the given category paths."
        },
        {
          "name": "path",
          "type_long": "ghidra.program.model.data.DataTypePath",
          "type_short": "DataTypePath",
          "comment": "the DataTypePath of the datatype had its favorite status changed."
        },
        {
          "name": "isFavorite",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "reflects the current favorite status of the datatype."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "sourceArchiveChanged",
      "comment": "Notification that the information for a particular source archive has changed. Typically,\n this would be because it was renamed or moved.",
      "javadoc": "Notification that the information for a particular source archive has changed. Typically,\n this would be because it was renamed or moved.\n@param dataTypeManager data type manager referring to the given source information.\n@param sourceArchive the changed data type source information",
      "static": false,
      "params": [
        {
          "name": "dataTypeManager",
          "type_long": "ghidra.program.model.data.DataTypeManager",
          "type_short": "DataTypeManager",
          "comment": "data type manager referring to the given source information."
        },
        {
          "name": "sourceArchive",
          "type_long": "ghidra.program.model.data.SourceArchive",
          "type_short": "SourceArchive",
          "comment": "the changed data type source information"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "sourceArchiveAdded",
      "comment": "Notification that the information for a source archive has been added. This happens when\n a data type from the indicated source archive is added to this data type manager.",
      "javadoc": "Notification that the information for a source archive has been added. This happens when\n a data type from the indicated source archive is added to this data type manager.\n@param dataTypeManager data type manager referring to the given source information.\n@param sourceArchive the new data type source information",
      "static": false,
      "params": [
        {
          "name": "dataTypeManager",
          "type_long": "ghidra.program.model.data.DataTypeManager",
          "type_short": "DataTypeManager",
          "comment": "data type manager referring to the given source information."
        },
        {
          "name": "sourceArchive",
          "type_long": "ghidra.program.model.data.SourceArchive",
          "type_short": "SourceArchive",
          "comment": "the new data type source information"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
