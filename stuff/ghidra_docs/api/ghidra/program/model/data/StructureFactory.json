{
  "name": "StructureFactory",
  "comment": "Creates and initializes Structure objects.",
  "javadoc": "Creates and initializes {@link Structure} objects.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "DEFAULT_STRUCTURE_NAME",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"struct\""
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createStructureDataType",
      "comment": "Creates a StructureDataType instance based upon the information\n provided.  The instance will not be placed in memory.\n \n This method is just a pass-through method for \n #createStructureDataType(Program,Address,int,String,boolean)\n equivalent to calling:\n \n      Structure newStructure \u003d StructureFactory.createStructureDataType(\n          program, address, dataLength, DEFAULT_STRUCTURE_NAME, true );\n ",
      "javadoc": "Creates a {@link StructureDataType} instance based upon the information\n provided.  The instance will not be placed in memory.\n \u003cp\u003e\n This method is just a pass-through method for \n {@link #createStructureDataType(Program,Address,int,String,boolean)}\n equivalent to calling:\n \u003cpre\u003e\n      Structure newStructure \u003d StructureFactory.createStructureDataType(\n          program, address, dataLength, DEFAULT_STRUCTURE_NAME, true );\n \u003c/pre\u003e\n@param program The program to which the structure will belong.\n@param address The address of the structure.\n@param dataLength The number of components to add to the structure.\n@return A new structure not yet added to memory.\n@throws IllegalArgumentException for the following conditions:\n         \u003cul\u003e\n              \u003cli\u003eif \u003ccode\u003edataLength\u003c/code\u003e is not greater than zero\n              \u003cli\u003eif the number of components to add exceeds the available\n                  address space\n              \u003cli\u003eif there are any instructions in the provided \n                  address space\n              \u003cli\u003eif there are no data components to add to the structure\n         \u003c/ul\u003e",
      "static": true,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "The program to which the structure will belong."
        },
        {
          "name": "address",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "The address of the structure."
        },
        {
          "name": "dataLength",
          "type_long": "int",
          "type_short": "int",
          "comment": "The number of components to add to the structure."
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.data.Structure",
        "type_short": "Structure",
        "comment": "A new structure not yet added to memory."
      },
      "throws": []
    },
    {
      "name": "createStructureDataType",
      "comment": "Creates a StructureDataType instance based upon the information\n provided.  The instance will not be placed in memory.",
      "javadoc": "Creates a {@link StructureDataType} instance based upon the information\n provided.  The instance will not be placed in memory.\n@param program The program to which the structure will belong.\n@param address The address of the structure.\n@param dataLength The number of components to add to the structure.\n@param structureName The name of the structure to create.\n@param makeUniqueName True indicates that the provided name should be\n         altered as necessary in order to make it unique in the program.\n@return A new structure not yet added to memory.\n@throws IllegalArgumentException for the following conditions:\n         \u003cul\u003e\n              \u003cli\u003eif \u003ccode\u003estructureName\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e\n              \u003cli\u003eif \u003ccode\u003edataLength\u003c/code\u003e is not greater than zero\n              \u003cli\u003eif the number of components to add exceeds the available\n                  address space\n              \u003cli\u003eif there are any instructions in the provided \n                  address space\n              \u003cli\u003eif there are no data components to add to the structure\n         \u003c/ul\u003e",
      "static": true,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "The program to which the structure will belong."
        },
        {
          "name": "address",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "The address of the structure."
        },
        {
          "name": "dataLength",
          "type_long": "int",
          "type_short": "int",
          "comment": "The number of components to add to the structure."
        },
        {
          "name": "structureName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "The name of the structure to create."
        },
        {
          "name": "makeUniqueName",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "True indicates that the provided name should be\n         altered as necessary in order to make it unique in the program."
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.data.Structure",
        "type_short": "Structure",
        "comment": "A new structure not yet added to memory."
      },
      "throws": []
    },
    {
      "name": "createStructureDataTypeInStrucuture",
      "comment": "Creates a StructureDataType instance, which is inside of \n another structure, based upon the information provided.  The instance \n will not be placed in memory.\n \n This method is just a pass-through method for \n #createStructureDataTypeInStrucuture(Program,Address,int[],int[],String,boolean)\n equivalent to calling:\n \n      Structure newStructure \u003d StructureFactory.createStructureDataTypeInStrucuture(\n          program, address, fromPath, toPath, DEFAULT_STRUCTURE_NAME, true );\n ",
      "javadoc": "Creates a {@link StructureDataType} instance, which is inside of \n another structure, based upon the information provided.  The instance \n will not be placed in memory.\n \u003cp\u003e\n This method is just a pass-through method for \n {@link #createStructureDataTypeInStrucuture(Program,Address,int[],int[],String,boolean)}\n equivalent to calling:\n \u003cpre\u003e\n      Structure newStructure \u003d StructureFactory.createStructureDataTypeInStrucuture(\n          program, address, fromPath, toPath, DEFAULT_STRUCTURE_NAME, true );\n \u003c/pre\u003e\n@param program The program to which the structure will belong.\n@param address The address of the structure.\n@param fromPath The path to the first element in the parent structure\n         that will be in the new structure.\n@param toPath The path to the last element in the parent structure\n         that will be in the new structure.\n@return A new structure not yet added to memory.\n@throws IllegalArgumentException for the following conditions:\n         \u003cul\u003e\n              \u003cli\u003eif the component at \u003ccode\u003efromPath\u003c/code\u003e or the component\n                  at \u003ccode\u003etoPath\u003c/code\u003e are null\n              \u003cli\u003eif there is not data to add to the structure\n              \u003cli\u003eif the parent data type is not a structure\n         \u003c/ul\u003e",
      "static": true,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "The program to which the structure will belong."
        },
        {
          "name": "address",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "The address of the structure."
        },
        {
          "name": "fromPath",
          "type_long": "int[]",
          "type_short": "int[]",
          "comment": "The path to the first element in the parent structure\n         that will be in the new structure."
        },
        {
          "name": "toPath",
          "type_long": "int[]",
          "type_short": "int[]",
          "comment": "The path to the last element in the parent structure\n         that will be in the new structure."
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.data.Structure",
        "type_short": "Structure",
        "comment": "A new structure not yet added to memory."
      },
      "throws": []
    },
    {
      "name": "createStructureDataTypeInStrucuture",
      "comment": "Creates a StructureDataType instance, which is inside of \n another structure, based upon the information provided.  The instance \n will not be placed in memory.",
      "javadoc": "Creates a {@link StructureDataType} instance, which is inside of \n another structure, based upon the information provided.  The instance \n will not be placed in memory.\n@param program The program to which the structure will belong.\n@param address The address of the structure.\n@param fromPath The path to the first element in the parent structure\n         that will be in the new structure.\n@param toPath The path to the last element in the parent structure\n         that will be in the new structure.\n@param structureName the name of the structure to create\n@param makeUniqueName True indicates that the provided name should be\n         altered as necessary in order to make it unique in the program.\n@return A new structure not yet added to memory.\n@throws IllegalArgumentException for the following conditions:\n         \u003cul\u003e\n              \u003cli\u003eif \u003ccode\u003estructureName\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e\n              \u003cli\u003eif the component at \u003ccode\u003efromPath\u003c/code\u003e or the component\n                  at \u003ccode\u003etoPath\u003c/code\u003e are null\n              \u003cli\u003eif there is not data to add to the structure\n              \u003cli\u003eif the parent data type is not a structure\n         \u003c/ul\u003e",
      "static": true,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "The program to which the structure will belong."
        },
        {
          "name": "address",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "The address of the structure."
        },
        {
          "name": "fromPath",
          "type_long": "int[]",
          "type_short": "int[]",
          "comment": "The path to the first element in the parent structure\n         that will be in the new structure."
        },
        {
          "name": "toPath",
          "type_long": "int[]",
          "type_short": "int[]",
          "comment": "The path to the last element in the parent structure\n         that will be in the new structure."
        },
        {
          "name": "structureName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of the structure to create"
        },
        {
          "name": "makeUniqueName",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "True indicates that the provided name should be\n         altered as necessary in order to make it unique in the program."
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.data.Structure",
        "type_short": "Structure",
        "comment": "A new structure not yet added to memory."
      },
      "throws": []
    },
    {
      "name": "initializeStructureFromContext",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "structure",
          "type_long": "ghidra.program.model.data.Structure",
          "type_short": "Structure",
          "comment": ""
        },
        {
          "name": "context",
          "type_long": "ghidra.program.model.lang.DataTypeProviderContext",
          "type_short": "DataTypeProviderContext",
          "comment": ""
        },
        {
          "name": "dataLength",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
