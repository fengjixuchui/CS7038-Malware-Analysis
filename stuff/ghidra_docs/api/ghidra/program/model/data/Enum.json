{
  "name": "Enum",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [
    "ghidra.program.model.data.DataType"
  ],
  "fields": [],
  "methods": [
    {
      "name": "getValue",
      "comment": "Get the value for the given name.",
      "javadoc": "Get the value for the given name.\n@param name name of the entry.\n@return the value.\n@throws NoSuchElementException if the name does not exist in this Enum.",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "name of the entry."
        }
      ],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": "the value."
      },
      "throws": [
        {
          "type_long": "java.util.NoSuchElementException",
          "type_short": "NoSuchElementException",
          "comment": "if the name does not exist in this Enum."
        }
      ]
    },
    {
      "name": "getName",
      "comment": "Get the name for the given value.",
      "javadoc": "Get the name for the given value.\n@param value value of the enum entry.\n@return null if the name with the given value was not found.",
      "static": false,
      "params": [
        {
          "name": "value",
          "type_long": "long",
          "type_short": "long",
          "comment": "value of the enum entry."
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "null if the name with the given value was not found."
      },
      "throws": []
    },
    {
      "name": "getComment",
      "comment": "Get the comment for the given name.",
      "javadoc": "Get the comment for the given name.\n@param name name of the entry.\n@return the comment or the empty string if the name does not exist in this enum or if no\n comment is set.",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "name of the entry."
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the comment or the empty string if the name does not exist in this enum or if no\n comment is set."
      },
      "throws": []
    },
    {
      "name": "getValues",
      "comment": "Get the values of the enum entries.",
      "javadoc": "Get the values of the enum entries.\n@return values sorted in ascending order",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long[]",
        "type_short": "long[]",
        "comment": "values sorted in ascending order"
      },
      "throws": []
    },
    {
      "name": "getNames",
      "comment": "Get the names of the enum entries.  The returned names are first sorted by the enum int\n value, then sub-sorted by name value where there are multiple name values per int value.",
      "javadoc": "Get the names of the enum entries.  The returned names are first sorted by the enum int\n value, then sub-sorted by name value where there are multiple name values per int value.\n@return the names of the enum entries.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String[]",
        "type_short": "java.lang.String[]",
        "comment": "the names of the enum entries."
      },
      "throws": []
    },
    {
      "name": "getCount",
      "comment": "Get the number of entries in this Enum.",
      "javadoc": "Get the number of entries in this Enum.\n@return the number of entries in this Enum.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the number of entries in this Enum."
      },
      "throws": []
    },
    {
      "name": "add",
      "comment": "Add a enum entry.",
      "javadoc": "Add a enum entry.\n@param name name of the new entry\n@param value value of the new entry",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "name of the new entry"
        },
        {
          "name": "value",
          "type_long": "long",
          "type_short": "long",
          "comment": "value of the new entry"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "add",
      "comment": "Add a enum entry.",
      "javadoc": "Add a enum entry.\n@param name name of the new entry\n@param value value of the new entry\n@param comment comment of the new entry",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "name of the new entry"
        },
        {
          "name": "value",
          "type_long": "long",
          "type_short": "long",
          "comment": "value of the new entry"
        },
        {
          "name": "comment",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "comment of the new entry"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "remove",
      "comment": "Remove the enum entry with the given name.",
      "javadoc": "Remove the enum entry with the given name.\n@param name name of entry to remove.",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "name of entry to remove."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setDescription",
      "comment": "Set the description for this Enum.",
      "javadoc": "Set the description for this Enum.\n@param description the description",
      "static": false,
      "params": [
        {
          "name": "description",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the description"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getRepresentation",
      "comment": "Get enum representation of the big-endian value.",
      "javadoc": "Get enum representation of the big-endian value.\n@param bigInt BigInteger value with the appropriate sign\n@param settings integer format settings (PADDING, FORMAT, etc.)\n@param bitLength the bit length\n@return formatted integer string",
      "static": false,
      "params": [
        {
          "name": "bigInt",
          "type_long": "java.math.BigInteger",
          "type_short": "BigInteger",
          "comment": "BigInteger value with the appropriate sign"
        },
        {
          "name": "settings",
          "type_long": "ghidra.docking.settings.Settings",
          "type_short": "Settings",
          "comment": "integer format settings (PADDING, FORMAT, etc.)"
        },
        {
          "name": "bitLength",
          "type_long": "int",
          "type_short": "int",
          "comment": "the bit length"
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "formatted integer string"
      },
      "throws": []
    }
  ]
}
