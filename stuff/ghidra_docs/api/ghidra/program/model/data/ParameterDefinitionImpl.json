{
  "name": "ParameterDefinitionImpl",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [
    "ghidra.program.model.data.ParameterDefinition"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "ordinal",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "name",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "dataType",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.data.DataType",
      "type_short": "DataType",
      "constant_value": null
    },
    {
      "name": "comment",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new ParameterImp with an unassigned ordinal.  The ordinal will be\n established by the function definition.",
      "javadoc": "Constructs a new ParameterImp with an unassigned ordinal.  The ordinal will be\n established by the function definition.\n@param name the name of the parameter.\n@param dataType the fixed-length datatype of the parameter\n@param comment the comment to store about this parameter.\n@throws IllegalArgumentException if invalid parameter datatype specified",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of the parameter."
        },
        {
          "name": "dataType",
          "type_long": "ghidra.program.model.data.DataType",
          "type_short": "DataType",
          "comment": "the fixed-length datatype of the parameter"
        },
        {
          "name": "comment",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the comment to store about this parameter."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new ParameterImp",
      "javadoc": "Constructs a new ParameterImp\n@param name the name of the parameter.\n@param dataType the fixed-length datatype of the parameter\n@param comment the comment to store about this parameter.\n@param ordinal the index of this parameter within the function signature.\n@throws IllegalArgumentException if invalid parameter datatype specified",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of the parameter."
        },
        {
          "name": "dataType",
          "type_long": "ghidra.program.model.data.DataType",
          "type_short": "DataType",
          "comment": "the fixed-length datatype of the parameter"
        },
        {
          "name": "comment",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the comment to store about this parameter."
        },
        {
          "name": "ordinal",
          "type_long": "int",
          "type_short": "int",
          "comment": "the index of this parameter within the function signature."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "validateDataType",
      "comment": "Check the specified datatype for use as a return, parameter or variable type.  It may\n not be suitable for other uses.  The following datatypes will be mutated into a default pointer datatype:\n \n Function definition datatype\n An unsized/zero-element array\n ",
      "javadoc": "Check the specified datatype for use as a return, parameter or variable type.  It may\n not be suitable for other uses.  The following datatypes will be mutated into a default pointer datatype:\n \u003cul\u003e\n \u003cli\u003eFunction definition datatype\u003c/li\u003e\n \u003cli\u003eAn unsized/zero-element array\u003c/li\u003e\n \u003c/ul\u003e\n@param dataType datatype to be checked.  If null specified the DEFAULT datatype will be returned.\n@param dtMgr target datatype manager (null permitted which will adopt default data organization)\n@param voidOK true if checking return datatype and void is allow, else false.\n@return cloned/mutated datatype suitable for function parameters and variables (including function return data type).\n@throws IllegalArgumentException if an unacceptable datatype was specified",
      "static": true,
      "params": [
        {
          "name": "dataType",
          "type_long": "ghidra.program.model.data.DataType",
          "type_short": "DataType",
          "comment": "datatype to be checked.  If null specified the DEFAULT datatype will be returned."
        },
        {
          "name": "dtMgr",
          "type_long": "ghidra.program.model.data.DataTypeManager",
          "type_short": "DataTypeManager",
          "comment": "target datatype manager (null permitted which will adopt default data organization)"
        },
        {
          "name": "voidOK",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true if checking return datatype and void is allow, else false."
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.data.DataType",
        "type_short": "DataType",
        "comment": "cloned/mutated datatype suitable for function parameters and variables (including function return data type)."
      },
      "throws": [
        {
          "type_long": "java.lang.IllegalArgumentException",
          "type_short": "IllegalArgumentException",
          "comment": "if an unacceptable datatype was specified"
        }
      ]
    },
    {
      "name": "compareTo",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "p",
          "type_long": "ghidra.program.model.data.ParameterDefinition",
          "type_short": "ParameterDefinition",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getOrdinal",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getComment",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDataType",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.data.DataType",
        "type_short": "DataType",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLength",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setComment",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "comment",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setDataType",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "type",
          "type_long": "ghidra.program.model.data.DataType",
          "type_short": "DataType",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isEquivalent",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "variable",
          "type_long": "ghidra.program.model.listing.Variable",
          "type_short": "Variable",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isEquivalent",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "parm",
          "type_long": "ghidra.program.model.data.ParameterDefinition",
          "type_short": "ParameterDefinition",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    }
  ]
}
