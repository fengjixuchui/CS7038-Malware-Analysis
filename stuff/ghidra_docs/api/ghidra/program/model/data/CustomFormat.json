{
  "name": "CustomFormat",
  "comment": "Container object for a DataType and a byte array that is the format for\n the data type.",
  "javadoc": "Container object for a DataType and a byte array that is the format for\n the data type.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "dataType",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.data.DataType",
      "type_short": "DataType",
      "constant_value": null
    },
    {
      "name": "format",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "byte[]",
      "type_short": "byte[]",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor",
      "javadoc": "Constructor\n@param dataType data type associated with this format\n@param format bytes that define the format",
      "static": false,
      "params": [
        {
          "name": "dataType",
          "type_long": "ghidra.program.model.data.DataType",
          "type_short": "DataType",
          "comment": "data type associated with this format"
        },
        {
          "name": "format",
          "type_long": "byte[]",
          "type_short": "byte[]",
          "comment": "bytes that define the format"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDataType",
      "comment": "Get the data type associated with this format.",
      "javadoc": "Get the data type associated with this format.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.data.DataType",
        "type_short": "DataType",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getBytes",
      "comment": "Get the bytes that define this format.",
      "javadoc": "Get the bytes that define this format.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "byte[]",
        "type_short": "byte[]",
        "comment": ""
      },
      "throws": []
    }
  ]
}
