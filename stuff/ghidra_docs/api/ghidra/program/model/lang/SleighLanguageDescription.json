{
  "name": "SleighLanguageDescription",
  "comment": "Class for holding Language identifiers",
  "javadoc": "Class for holding Language identifiers",
  "static": false,
  "implements": [],
  "extends": "ghidra.program.model.lang.BasicLanguageDescription",
  "fields": [
    {
      "name": "defsFile",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "generic.jar.ResourceFile",
      "type_short": "ResourceFile",
      "constant_value": null
    },
    {
      "name": "specFile",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "generic.jar.ResourceFile",
      "type_short": "ResourceFile",
      "constant_value": null
    },
    {
      "name": "slaFile",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "generic.jar.ResourceFile",
      "type_short": "ResourceFile",
      "constant_value": null
    },
    {
      "name": "manualIndexFile",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "generic.jar.ResourceFile",
      "type_short": "ResourceFile",
      "constant_value": null
    },
    {
      "name": "truncatedSpaceMap",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.Map\u003cjava.lang.String,java.lang.Integer\u003e",
      "type_short": "Map",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a new language description",
      "javadoc": "Construct a new language description\n@param id the name of the language\n@param description language description text\n@param processor processor name/family\n@param endian data endianess\n@param instructionEndian instruction endianess\n@param size processor size\n@param variant processor variant name\n@param version the major version of the language.\n@param minorVersion minor version of language\n@param deprecated true if this language should only be used for existing programs.\n@param spaceTruncations address space truncations (or null)\n@param compilerSpecDescriptions one or more compiler spec descriptions\n@param externalNames collection of external tools\u0027 names for the language",
      "static": false,
      "params": [
        {
          "name": "id",
          "type_long": "ghidra.program.model.lang.LanguageID",
          "type_short": "LanguageID",
          "comment": "the name of the language"
        },
        {
          "name": "description",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "language description text"
        },
        {
          "name": "processor",
          "type_long": "ghidra.program.model.lang.Processor",
          "type_short": "Processor",
          "comment": "processor name/family"
        },
        {
          "name": "endian",
          "type_long": "ghidra.program.model.lang.Endian",
          "type_short": "Endian",
          "comment": "data endianess"
        },
        {
          "name": "instructionEndian",
          "type_long": "ghidra.program.model.lang.Endian",
          "type_short": "Endian",
          "comment": "instruction endianess"
        },
        {
          "name": "size",
          "type_long": "int",
          "type_short": "int",
          "comment": "processor size"
        },
        {
          "name": "variant",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "processor variant name"
        },
        {
          "name": "version",
          "type_long": "int",
          "type_short": "int",
          "comment": "the major version of the language."
        },
        {
          "name": "minorVersion",
          "type_long": "int",
          "type_short": "int",
          "comment": "minor version of language"
        },
        {
          "name": "deprecated",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true if this language should only be used for existing programs."
        },
        {
          "name": "spaceTruncations",
          "type_long": "java.util.Map\u003cjava.lang.String,java.lang.Integer\u003e",
          "type_short": "Map",
          "comment": "address space truncations (or null)"
        },
        {
          "name": "compilerSpecDescriptions",
          "type_long": "java.util.List\u003cghidra.program.model.lang.CompilerSpecDescription\u003e",
          "type_short": "List",
          "comment": "one or more compiler spec descriptions"
        },
        {
          "name": "externalNames",
          "type_long": "java.util.Map\u003cjava.lang.String,java.util.List\u003cjava.lang.String\u003e\u003e",
          "type_short": "Map",
          "comment": "collection of external tools\u0027 names for the language"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getTruncatedSpaceNames",
      "comment": "",
      "javadoc": "@return set of address space names which have been identified for truncation",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Set\u003cjava.lang.String\u003e",
        "type_short": "Set",
        "comment": "set of address space names which have been identified for truncation"
      },
      "throws": []
    },
    {
      "name": "getTruncatedSpaceSize",
      "comment": "Get the truncated space size for the specified address space",
      "javadoc": "Get the truncated space size for the specified address space\n@param spaceName address space name\n@return truncated space size in bytes\n@throws NoSuchElementException",
      "static": false,
      "params": [
        {
          "name": "spaceName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "address space name"
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "truncated space size in bytes"
      },
      "throws": [
        {
          "type_long": "java.util.NoSuchElementException",
          "type_short": "NoSuchElementException",
          "comment": ""
        }
      ]
    },
    {
      "name": "setDefsFile",
      "comment": "Set the (optional) specification file associated with this language",
      "javadoc": "Set the (optional) specification file associated with this language\n@param defsFile the specFile to associate with this description.",
      "static": false,
      "params": [
        {
          "name": "defsFile",
          "type_long": "generic.jar.ResourceFile",
          "type_short": "ResourceFile",
          "comment": "the specFile to associate with this description."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDefsFile",
      "comment": "Get the specification file (if it exists)",
      "javadoc": "Get the specification file (if it exists)\n@return specification file",
      "static": false,
      "params": [],
      "return": {
        "type_long": "generic.jar.ResourceFile",
        "type_short": "ResourceFile",
        "comment": "specification file"
      },
      "throws": []
    },
    {
      "name": "setSpecFile",
      "comment": "Set the (optional) specification file associated with this language",
      "javadoc": "Set the (optional) specification file associated with this language\n@param specFile the specFile to associate with this description.",
      "static": false,
      "params": [
        {
          "name": "specFile",
          "type_long": "generic.jar.ResourceFile",
          "type_short": "ResourceFile",
          "comment": "the specFile to associate with this description."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSpecFile",
      "comment": "Get the specification file (if it exists)",
      "javadoc": "Get the specification file (if it exists)\n@return specification file",
      "static": false,
      "params": [],
      "return": {
        "type_long": "generic.jar.ResourceFile",
        "type_short": "ResourceFile",
        "comment": "specification file"
      },
      "throws": []
    },
    {
      "name": "setSlaFile",
      "comment": "",
      "javadoc": "@param slaFile",
      "static": false,
      "params": [
        {
          "name": "slaFile",
          "type_long": "generic.jar.ResourceFile",
          "type_short": "ResourceFile",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSlaFile",
      "comment": "",
      "javadoc": "@return ",
      "static": false,
      "params": [],
      "return": {
        "type_long": "generic.jar.ResourceFile",
        "type_short": "ResourceFile",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getManualIndexFile",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "generic.jar.ResourceFile",
        "type_short": "ResourceFile",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setManualIndexFile",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "manualIndexFile",
          "type_long": "generic.jar.ResourceFile",
          "type_short": "ResourceFile",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
