{
  "name": "InjectPayloadCallother",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "extends": "ghidra.program.model.lang.InjectPayloadSleigh",
  "fields": [],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor for a partial clone of a payload whose p-code failed to parse.",
      "javadoc": "Constructor for a partial clone of a payload whose p-code failed to parse.\n@param pcode is the p-code to substitute\n@param failedPayload is the failed callfixup",
      "static": false,
      "params": [
        {
          "name": "pcode",
          "type_long": "ghidra.app.plugin.processors.sleigh.template.ConstructTpl",
          "type_short": "ConstructTpl",
          "comment": "is the p-code to substitute"
        },
        {
          "name": "failedPayload",
          "type_long": "ghidra.program.model.lang.InjectPayloadCallother",
          "type_short": "InjectPayloadCallother",
          "comment": "is the failed callfixup"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor for a dummy payload",
      "javadoc": "Constructor for a dummy payload\n@param pcode is the dummy p-code to use\n@param nm is the name of the payload",
      "static": false,
      "params": [
        {
          "name": "pcode",
          "type_long": "ghidra.app.plugin.processors.sleigh.template.ConstructTpl",
          "type_short": "ConstructTpl",
          "comment": "is the dummy p-code to use"
        },
        {
          "name": "nm",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "is the name of the payload"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "sourceName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "saveXml",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "buffer",
          "type_long": "java.lang.StringBuilder",
          "type_short": "StringBuilder",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "restoreXml",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "parser",
          "type_long": "ghidra.xml.XmlPullParser",
          "type_short": "XmlPullParser",
          "comment": ""
        },
        {
          "name": "language",
          "type_long": "ghidra.app.plugin.processors.sleigh.SleighLanguage",
          "type_short": "SleighLanguage",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.xml.XmlParseException",
          "type_short": "XmlParseException",
          "comment": ""
        }
      ]
    }
  ]
}
