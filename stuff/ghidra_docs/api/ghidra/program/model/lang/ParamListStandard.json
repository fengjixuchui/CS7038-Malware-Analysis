{
  "name": "ParamListStandard",
  "comment": "Standard analysis for parameter lists",
  "javadoc": "Standard analysis for parameter lists",
  "static": false,
  "implements": [
    "ghidra.program.model.lang.ParamList"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "numgroup",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "pointermax",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "thisbeforeret",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "resourceTwoStart",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "entry",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.lang.ParamEntry[]",
      "type_short": "ghidra.program.model.lang.ParamEntry[]",
      "constant_value": null
    },
    {
      "name": "spacebase",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.address.AddressSpace",
      "type_short": "AddressSpace",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "findEntry",
      "comment": "Find the (first) entry containing range",
      "javadoc": "Find the (first) entry containing range\n@param loc is base address of the range\n@param size is the size of the range in bytes\n@return the index of entry or -1 if we didn\u0027t find container",
      "static": false,
      "params": [
        {
          "name": "loc",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "is base address of the range"
        },
        {
          "name": "size",
          "type_long": "int",
          "type_short": "int",
          "comment": "is the size of the range in bytes"
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the index of entry or -1 if we didn\u0027t find container"
      },
      "throws": []
    },
    {
      "name": "assignAddress",
      "comment": "Assign next available memory chunk to type",
      "javadoc": "Assign next available memory chunk to type\n@param program is the Program\n@param tp type being assigned storage\n@param status status from previous assignments\n@param ishiddenret is true if the parameter is a hidden return value\n@param isindirect is true if parameter is really a pointer to the real parameter value\n@return Address of assigned memory chunk",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "is the Program"
        },
        {
          "name": "tp",
          "type_long": "ghidra.program.model.data.DataType",
          "type_short": "DataType",
          "comment": "type being assigned storage"
        },
        {
          "name": "status",
          "type_long": "int[]",
          "type_short": "int[]",
          "comment": "status from previous assignments"
        },
        {
          "name": "ishiddenret",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "is true if the parameter is a hidden return value"
        },
        {
          "name": "isindirect",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "is true if parameter is really a pointer to the real parameter value"
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.listing.VariableStorage",
        "type_short": "VariableStorage",
        "comment": "Address of assigned memory chunk"
      },
      "throws": []
    },
    {
      "name": "assignMap",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "prog",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "proto",
          "type_long": "ghidra.program.model.data.DataType[]",
          "type_short": "ghidra.program.model.data.DataType[]",
          "comment": ""
        },
        {
          "name": "res",
          "type_long": "java.util.ArrayList\u003cghidra.program.model.listing.VariableStorage\u003e",
          "type_short": "ArrayList",
          "comment": ""
        },
        {
          "name": "addAutoParams",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPotentialRegisterStorage",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "prog",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.listing.VariableStorage[]",
        "type_short": "ghidra.program.model.listing.VariableStorage[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "saveXml",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "buffer",
          "type_long": "java.lang.StringBuilder",
          "type_short": "StringBuilder",
          "comment": ""
        },
        {
          "name": "isInput",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "parsePentry",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "parser",
          "type_long": "ghidra.xml.XmlPullParser",
          "type_short": "XmlPullParser",
          "comment": ""
        },
        {
          "name": "cspec",
          "type_long": "ghidra.program.model.lang.CompilerSpec",
          "type_short": "CompilerSpec",
          "comment": ""
        },
        {
          "name": "pe",
          "type_long": "java.util.ArrayList\u003cghidra.program.model.lang.ParamEntry\u003e",
          "type_short": "ArrayList",
          "comment": ""
        },
        {
          "name": "groupid",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "splitFloat",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        },
        {
          "name": "grouped",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.xml.XmlParseException",
          "type_short": "XmlParseException",
          "comment": ""
        }
      ]
    },
    {
      "name": "parseGroup",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "parser",
          "type_long": "ghidra.xml.XmlPullParser",
          "type_short": "XmlPullParser",
          "comment": ""
        },
        {
          "name": "cspec",
          "type_long": "ghidra.program.model.lang.CompilerSpec",
          "type_short": "CompilerSpec",
          "comment": ""
        },
        {
          "name": "pe",
          "type_long": "java.util.ArrayList\u003cghidra.program.model.lang.ParamEntry\u003e",
          "type_short": "ArrayList",
          "comment": ""
        },
        {
          "name": "groupid",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "splitFloat",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.xml.XmlParseException",
          "type_short": "XmlParseException",
          "comment": ""
        }
      ]
    },
    {
      "name": "restoreXml",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "parser",
          "type_long": "ghidra.xml.XmlPullParser",
          "type_short": "XmlPullParser",
          "comment": ""
        },
        {
          "name": "cspec",
          "type_long": "ghidra.program.model.lang.CompilerSpec",
          "type_short": "CompilerSpec",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.xml.XmlParseException",
          "type_short": "XmlParseException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getStackParameterAlignment",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getStackParameterOffset",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.Long",
        "type_short": "Long",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "possibleParamWithSlot",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "loc",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "size",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "res",
          "type_long": "ghidra.program.model.lang.ParamList.WithSlotRec",
          "type_short": "WithSlotRec",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "equals",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "obj",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hashCode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isThisBeforeRetPointer",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    }
  ]
}
