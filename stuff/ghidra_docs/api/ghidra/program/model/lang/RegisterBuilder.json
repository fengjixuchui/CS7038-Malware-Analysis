{
  "name": "RegisterBuilder",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "registerList",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.ArrayList\u003cghidra.program.model.lang.Register\u003e",
      "type_short": "ArrayList",
      "constant_value": null
    },
    {
      "name": "registerMap",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.Map\u003cjava.lang.String,ghidra.program.model.lang.Register\u003e",
      "type_short": "Map",
      "constant_value": null
    },
    {
      "name": "contextAddress",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.address.Address",
      "type_short": "Address",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addRegister",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "description",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "address",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "numBytes",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "bigEndian",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        },
        {
          "name": "typeFlags",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addRegister",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "description",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "address",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "numBytes",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "leastSignificantBit",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "bitLength",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "bigEndian",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        },
        {
          "name": "typeFlags",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addRegister",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "register",
          "type_long": "ghidra.program.model.lang.Register",
          "type_short": "Register",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addRegisterToNameMap",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "register",
          "type_long": "ghidra.program.model.lang.Register",
          "type_short": "Register",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeRegisterFromNameMap",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getProcessContextAddress",
      "comment": "Returns the processor context address of the first\n context register added to this builder.",
      "javadoc": "Returns the processor context address of the first\n context register added to this builder.\n@return context address",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": "context address"
      },
      "throws": []
    },
    {
      "name": "getRegisterManager",
      "comment": "Compute current register collection and instantiate a RegisterManager",
      "javadoc": "Compute current register collection and instantiate a {@link RegisterManager}\n@return new register manager instance",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.lang.RegisterManager",
        "type_short": "RegisterManager",
        "comment": "new register manager instance"
      },
      "throws": []
    },
    {
      "name": "computeRegisters",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cghidra.program.model.lang.Register\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getChildren",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "parent",
          "type_long": "ghidra.program.model.lang.Register",
          "type_short": "Register",
          "comment": ""
        },
        {
          "name": "regList",
          "type_long": "java.util.List\u003cghidra.program.model.lang.Register\u003e",
          "type_short": "List",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.lang.Register[]",
        "type_short": "ghidra.program.model.lang.Register[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "contains",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "parent",
          "type_long": "ghidra.program.model.lang.Register",
          "type_short": "Register",
          "comment": ""
        },
        {
          "name": "child",
          "type_long": "ghidra.program.model.lang.Register",
          "type_short": "Register",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getRegister",
      "comment": "Returns the register with the given name;",
      "javadoc": "Returns the register with the given name;\n@param name the name of the register to retrieve\n@return register or null if not found",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of the register to retrieve"
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.lang.Register",
        "type_short": "Register",
        "comment": "register or null if not found"
      },
      "throws": []
    },
    {
      "name": "renameRegister",
      "comment": "Rename a register.  This allows generic register names declared within the langauge \n specification (*.slaspec) to be renamed for a processor variant specification (*.pspec).",
      "javadoc": "Rename a register.  This allows generic register names declared within the langauge \n specification (*.slaspec) to be renamed for a processor variant specification (*.pspec).\n@param oldName original register name\n@param newName new register name\n@return true if rename was successful, else false",
      "static": false,
      "params": [
        {
          "name": "oldName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "original register name"
        },
        {
          "name": "newName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "new register name"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if rename was successful, else false"
      },
      "throws": []
    },
    {
      "name": "addAlias",
      "comment": "Add an alias to a previously defined register.",
      "javadoc": "Add an alias to a previously defined register.\n@param registerName defined register\n@param alias alias to be added to defined register\n@return true if alias addition was successful, else false",
      "static": false,
      "params": [
        {
          "name": "registerName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "defined register"
        },
        {
          "name": "alias",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "alias to be added to defined register"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if alias addition was successful, else false"
      },
      "throws": []
    },
    {
      "name": "setGroup",
      "comment": "Set the group name for the specified register",
      "javadoc": "Set the group name for the specified register\n@param registerName register name\n@param groupName group name\n@return true if register was found, else false",
      "static": false,
      "params": [
        {
          "name": "registerName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "register name"
        },
        {
          "name": "groupName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "group name"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if register was found, else false"
      },
      "throws": []
    },
    {
      "name": "setFlag",
      "comment": "Set a register flag for the specified register",
      "javadoc": "Set a register flag for the specified register\n@param registerName register name\n@param registerFlag Register defined flag bit(s)\n@return true if register was found, else false",
      "static": false,
      "params": [
        {
          "name": "registerName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "register name"
        },
        {
          "name": "registerFlag",
          "type_long": "int",
          "type_short": "int",
          "comment": "Register defined flag bit(s)"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if register was found, else false"
      },
      "throws": []
    },
    {
      "name": "addLaneSize",
      "comment": "Add a vector lane size to the specified register.",
      "javadoc": "Add a vector lane size to the specified register.\n@param registerName register name\n@param laneSizeInBytes the size of the lane to add in bytes\n@return true if register was found, else false\n@throws UnsupportedOperationException if register is unable to support the definition of \n lanes.\n@throws IllegalArgumentException if {@code laneSizeInBytes} is invalid",
      "static": false,
      "params": [
        {
          "name": "registerName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "register name"
        },
        {
          "name": "laneSizeInBytes",
          "type_long": "int",
          "type_short": "int",
          "comment": "the size of the lane to add in bytes"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if register was found, else false"
      },
      "throws": []
    }
  ]
}
