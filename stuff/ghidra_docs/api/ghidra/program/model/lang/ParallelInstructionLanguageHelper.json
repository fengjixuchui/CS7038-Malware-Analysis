{
  "name": "ParallelInstructionLanguageHelper",
  "comment": "ParallelInstructionLanguageHelper provides the ability via a language \n specified property to identify certain parallel instruction attributes. \n Implementations must define a public default constructor.\n \n The following assumptions exist for parallel packets/groups of instructions:\n \n All instructions in a packet/group which are not the last instruction in the\n packet/group must have a fall-through.\n ",
  "javadoc": "\u003ccode\u003eParallelInstructionLanguageHelper\u003c/code\u003e provides the ability via a language \n specified property to identify certain parallel instruction attributes. \n Implementations must define a public default constructor.\n \u003cp\u003e\n The following assumptions exist for parallel packets/groups of instructions:\u003c/p\u003e\n \u003cul\u003e\n \u003cli\u003eAll instructions in a packet/group which are not the last instruction in the\n packet/group must have a fall-through.\u003c/li\u003e\n \u003c/ul\u003e",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "getMnemonicPrefix",
      "comment": "Return the mnemonic prefix (i.e., || ) for the specified instriction.",
      "javadoc": "Return the mnemonic prefix (i.e., || ) for the specified instriction.\n@param instr\n@return mnemonic prefix or null if not applicable",
      "static": false,
      "params": [
        {
          "name": "instr",
          "type_long": "ghidra.program.model.listing.Instruction",
          "type_short": "Instruction",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "mnemonic prefix or null if not applicable"
      },
      "throws": []
    },
    {
      "name": "isParallelInstruction",
      "comment": "Determine if the specified instruction is executed in parallel with \n the instruction preceding it.",
      "javadoc": "Determine if the specified instruction is executed in parallel with \n the instruction preceding it.\n@param instruction\n@return true if parallel else false",
      "static": false,
      "params": [
        {
          "name": "instruction",
          "type_long": "ghidra.program.model.listing.Instruction",
          "type_short": "Instruction",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if parallel else false"
      },
      "throws": []
    },
    {
      "name": "isEndOfParallelInstructionGroup",
      "comment": "Determine if the specified instruction is the last instruction in a parallel\n instruction group.  The group is defined as a sequential set of instructions \n which are executed in parallel.  It is assumed that all terminal flows \n will only be present in the semantics of the last instruction in a parallel\n group.\n \n This method is primarily intended to assist disassembly to keep parallel \n instruction packets/groups intact within a single InstructionBlock to \n facilitate the pcode crossbuild directive.  Such cases are expected to\n defer all flows to the last instruction in the packet and flows should never\n have a destination in the middle of a packet/group.  If pcode crossbuild\u0027s\n are never utilized this method may always return false.",
      "javadoc": "Determine if the specified instruction is the last instruction in a parallel\n instruction group.  The group is defined as a sequential set of instructions \n which are executed in parallel.  It is assumed that all terminal flows \n will only be present in the semantics of the last instruction in a parallel\n group.\n \u003cp\u003e\n This method is primarily intended to assist disassembly to keep parallel \n instruction packets/groups intact within a single InstructionBlock to \n facilitate the pcode crossbuild directive.  Such cases are expected to\n defer all flows to the last instruction in the packet and flows should never\n have a destination in the middle of a packet/group.  If pcode crossbuild\u0027s\n are never utilized this method may always return false.\n@param instruction\n@return true if instruction is last in a parallel group or if no other\n instruction is executed in parallel with the specified instruction.",
      "static": false,
      "params": [
        {
          "name": "instruction",
          "type_long": "ghidra.program.model.listing.Instruction",
          "type_short": "Instruction",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if instruction is last in a parallel group or if no other\n instruction is executed in parallel with the specified instruction."
      },
      "throws": []
    }
  ]
}
