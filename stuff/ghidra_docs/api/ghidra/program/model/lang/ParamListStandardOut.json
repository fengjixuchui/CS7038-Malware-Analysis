{
  "name": "ParamListStandardOut",
  "comment": "A list of resources describing possible storage locations for a function\u0027s return value,\n and a strategy for selecting a storage location based on data-types in a function signature.\n \n Similar to the parent class, when assigning storage, the first entry that matches the data-type\n is chosen.  But if this instance fails to find a match (because the return value data-type is too\n big) the data-type is converted to a pointer and storage is assigned based on that pointer.\n Additionally, if configured, this instance will signal that a hidden input parameter is required\n to fully model where the large return value is stored.\n \n The resource list is checked to ensure entries are distinguishable.",
  "javadoc": "A list of resources describing possible storage locations for a function\u0027s return value,\n and a strategy for selecting a storage location based on data-types in a function signature.\n \n Similar to the parent class, when assigning storage, the first entry that matches the data-type\n is chosen.  But if this instance fails to find a match (because the return value data-type is too\n big) the data-type is converted to a pointer and storage is assigned based on that pointer.\n Additionally, if configured, this instance will signal that a hidden input parameter is required\n to fully model where the large return value is stored.\n \n The resource list is checked to ensure entries are distinguishable.",
  "static": false,
  "implements": [],
  "extends": "ghidra.program.model.lang.ParamListRegisterOut",
  "fields": [],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "assignMap",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "prog",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "proto",
          "type_long": "ghidra.program.model.data.DataType[]",
          "type_short": "ghidra.program.model.data.DataType[]",
          "comment": ""
        },
        {
          "name": "res",
          "type_long": "java.util.ArrayList\u003cghidra.program.model.listing.VariableStorage\u003e",
          "type_short": "ArrayList",
          "comment": ""
        },
        {
          "name": "addAutoParams",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "restoreXml",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "parser",
          "type_long": "ghidra.xml.XmlPullParser",
          "type_short": "XmlPullParser",
          "comment": ""
        },
        {
          "name": "cspec",
          "type_long": "ghidra.program.model.lang.CompilerSpec",
          "type_short": "CompilerSpec",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.xml.XmlParseException",
          "type_short": "XmlParseException",
          "comment": ""
        }
      ]
    }
  ]
}
