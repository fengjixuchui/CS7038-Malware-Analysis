{
  "name": "LanguageDescription",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "getLanguageID",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.lang.LanguageID",
        "type_short": "LanguageID",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getProcessor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.lang.Processor",
        "type_short": "Processor",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getEndian",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.lang.Endian",
        "type_short": "Endian",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getInstructionEndian",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.lang.Endian",
        "type_short": "Endian",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSize",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getVariant",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getVersion",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getMinorVersion",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDescription",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isDeprecated",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getCompatibleCompilerSpecDescriptions",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Collection\u003cghidra.program.model.lang.CompilerSpecDescription\u003e",
        "type_short": "Collection",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getCompilerSpecDescriptionByID",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "compilerSpecID",
          "type_long": "ghidra.program.model.lang.CompilerSpecID",
          "type_short": "CompilerSpecID",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.lang.CompilerSpecDescription",
        "type_short": "CompilerSpecDescription",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.program.model.lang.CompilerSpecNotFoundException",
          "type_short": "CompilerSpecNotFoundException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getExternalNames",
      "comment": "Returns external names for this language associated with other tools.  For example, x86\n languages are usually referred to as \"metapc\" by IDA-PRO.  So, getExternalNames(\"IDA-PRO\")\n will return \"metapc\" for most x86 languages.",
      "javadoc": "Returns external names for this language associated with other tools.  For example, x86\n languages are usually referred to as \"metapc\" by IDA-PRO.  So, getExternalNames(\"IDA-PRO\")\n will return \"metapc\" for most x86 languages.\n@param externalTool external tool for looking up external tool names\n@return external names for this language associated with tool \u0027key\u0027 -- null if there are no results",
      "static": false,
      "params": [
        {
          "name": "externalTool",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "external tool for looking up external tool names"
        }
      ],
      "return": {
        "type_long": "java.util.List\u003cjava.lang.String\u003e",
        "type_short": "List",
        "comment": "external names for this language associated with tool \u0027key\u0027 -- null if there are no results"
      },
      "throws": []
    }
  ]
}
