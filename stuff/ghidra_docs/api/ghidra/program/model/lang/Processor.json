{
  "name": "Processor",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [
    "java.lang.Comparable"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "instances",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.util.HashMap\u003cjava.lang.String,ghidra.program.model.lang.Processor\u003e",
      "type_short": "HashMap",
      "constant_value": null
    },
    {
      "name": "name",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "registerHook",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.program.model.lang.Processor.RegisterHook",
      "type_short": "RegisterHook",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "initialize",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "findOrPossiblyCreateProcessor",
      "comment": "Use this method if you want to grab a reference to a Processor given its\n name, but if it doesn\u0027t exist go ahead and create it anyway and return\n the new instance.",
      "javadoc": "Use this method if you want to grab a reference to a Processor given its\n name, but if it doesn\u0027t exist go ahead and create it anyway and return\n the new instance.\n@param name the name of the Processor you\u0027re looking for/going to create\n@return the Processor",
      "static": true,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of the Processor you\u0027re looking for/going to create"
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.lang.Processor",
        "type_short": "Processor",
        "comment": "the Processor"
      },
      "throws": []
    },
    {
      "name": "toProcessor",
      "comment": "Use this method to look up a Processor from a String when you want a ProcessorNotFoundException\n thrown if the Processor isn\u0027t found.\n \n Warning: Use of this method depends upon languages being loaded.  See\n DefaultLanguageService.",
      "javadoc": "Use this method to look up a Processor from a String when you want a ProcessorNotFoundException\n thrown if the Processor isn\u0027t found.\n \u003cp\u003e\n \u003cb\u003e\u003cu\u003eWarning:\u003c/u\u003e\u003c/b\u003e Use of this method depends upon languages being loaded.  See\n {@link DefaultLanguageService}.\n@param name the name of the Processor you\u0027re looking for\n@return the Processor\n@throws ProcessorNotFoundException if the processor doesn\u0027t exist yet",
      "static": true,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of the Processor you\u0027re looking for"
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.lang.Processor",
        "type_short": "Processor",
        "comment": "the Processor"
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "register",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.lang.Processor",
        "type_short": "Processor",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hashCode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "equals",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "obj",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "compareTo",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "p",
          "type_long": "ghidra.program.model.lang.Processor",
          "type_short": "Processor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    }
  ]
}
