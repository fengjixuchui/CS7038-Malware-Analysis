{
  "name": "ProcessorContextView",
  "comment": "Defines the interface for an object containing the state\n of all processor registers relative to a specific address.",
  "javadoc": "Defines the interface for an object containing the state\n of all processor registers relative to a specific address.",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "getBaseContextRegister",
      "comment": "",
      "javadoc": "@return the base processor context register or null if one\n has not been defined",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.lang.Register",
        "type_short": "Register",
        "comment": "the base processor context register or null if one\n has not been defined"
      },
      "throws": []
    },
    {
      "name": "getRegisters",
      "comment": "Returns all the Registers for the processor as an unmodifiable list",
      "javadoc": "Returns all the Registers for the processor as an unmodifiable list\n@return all the Registers for the processor",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cghidra.program.model.lang.Register\u003e",
        "type_short": "List",
        "comment": "all the Registers for the processor"
      },
      "throws": []
    },
    {
      "name": "getRegister",
      "comment": "Get a Register given the name of a register",
      "javadoc": "Get a Register given the name of a register\n@param name the name of the register.\n@return The register with the given name.",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of the register."
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.lang.Register",
        "type_short": "Register",
        "comment": "The register with the given name."
      },
      "throws": []
    },
    {
      "name": "getValue",
      "comment": "Get the contents of a processor register as a BigInteger object",
      "javadoc": "Get the contents of a processor register as a BigInteger object\n@param register register to get the value for\n@return a BigInteger object containing the value of the register if a value exists,\n otherwise null.",
      "static": false,
      "params": [
        {
          "name": "register",
          "type_long": "ghidra.program.model.lang.Register",
          "type_short": "Register",
          "comment": "register to get the value for"
        },
        {
          "name": "signed",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.math.BigInteger",
        "type_short": "BigInteger",
        "comment": "a BigInteger object containing the value of the register if a value exists,\n otherwise null."
      },
      "throws": []
    },
    {
      "name": "getRegisterValue",
      "comment": "Get the RegisterValue for the given register.",
      "javadoc": "Get the RegisterValue for the given register.\n@param register register to get the value for\n@return RegisterValue object containing the value of the register if a value exists,\n otherwise null.",
      "static": false,
      "params": [
        {
          "name": "register",
          "type_long": "ghidra.program.model.lang.Register",
          "type_short": "Register",
          "comment": "register to get the value for"
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.lang.RegisterValue",
        "type_short": "RegisterValue",
        "comment": "RegisterValue object containing the value of the register if a value exists,\n otherwise null."
      },
      "throws": []
    },
    {
      "name": "hasValue",
      "comment": "Returns true if a value is defined for the given register.",
      "javadoc": "Returns true if a value is defined for the given register.\n@param register the register to check for a value.\n@return true if the given register has a value.",
      "static": false,
      "params": [
        {
          "name": "register",
          "type_long": "ghidra.program.model.lang.Register",
          "type_short": "Register",
          "comment": "the register to check for a value."
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the given register has a value."
      },
      "throws": []
    },
    {
      "name": "dumpContextValue",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "value",
          "type_long": "ghidra.program.model.lang.RegisterValue",
          "type_short": "RegisterValue",
          "comment": ""
        },
        {
          "name": "indent",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "dumpContextValue",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "value",
          "type_long": "ghidra.program.model.lang.RegisterValue",
          "type_short": "RegisterValue",
          "comment": ""
        },
        {
          "name": "indent",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "buf",
          "type_long": "java.lang.StringBuilder",
          "type_short": "StringBuilder",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
