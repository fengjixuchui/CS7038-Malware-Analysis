{
  "name": "InstructionError",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "block",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.lang.InstructionBlock",
      "type_short": "InstructionBlock",
      "constant_value": null
    },
    {
      "name": "type",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.lang.InstructionError.InstructionErrorType",
      "type_short": "InstructionErrorType",
      "constant_value": null
    },
    {
      "name": "conflictAddress",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.address.Address",
      "type_short": "Address",
      "constant_value": null
    },
    {
      "name": "instructionAddress",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.address.Address",
      "type_short": "Address",
      "constant_value": null
    },
    {
      "name": "parseContext",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.lang.RegisterValue",
      "type_short": "RegisterValue",
      "constant_value": null
    },
    {
      "name": "flowFromAddress",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.address.Address",
      "type_short": "Address",
      "constant_value": null
    },
    {
      "name": "message",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct an instruction error/conflict",
      "javadoc": "Construct an instruction error/conflict\n@param block instruction block which corresponds to this error\n@param type type of instruction error/conflict\n@param instructionAddress address of new intended instruction which failed to be created\n@param conflictAddress address of another code unit which conflicts with new intended instruction\n@param flowFromAddress flow from address\n@param message",
      "static": false,
      "params": [
        {
          "name": "block",
          "type_long": "ghidra.program.model.lang.InstructionBlock",
          "type_short": "InstructionBlock",
          "comment": "instruction block which corresponds to this error"
        },
        {
          "name": "type",
          "type_long": "ghidra.program.model.lang.InstructionError.InstructionErrorType",
          "type_short": "InstructionErrorType",
          "comment": "type of instruction error/conflict"
        },
        {
          "name": "instructionAddress",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "address of new intended instruction which failed to be created"
        },
        {
          "name": "conflictAddress",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "address of another code unit which conflicts with new intended instruction"
        },
        {
          "name": "flowFromAddress",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "flow from address"
        },
        {
          "name": "message",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct PARSE error",
      "javadoc": "Construct PARSE error\n@param block instruction block which corresponds to this error\n@param contextValue disassembler context used during instruction parse\n@param instructionAddress address of new intended instruction which failed to be created\n@param flowFromAddress flow from address\n@param message",
      "static": false,
      "params": [
        {
          "name": "block",
          "type_long": "ghidra.program.model.lang.InstructionBlock",
          "type_short": "InstructionBlock",
          "comment": "instruction block which corresponds to this error"
        },
        {
          "name": "contextValue",
          "type_long": "ghidra.program.model.lang.RegisterValue",
          "type_short": "RegisterValue",
          "comment": "disassembler context used during instruction parse"
        },
        {
          "name": "instructionAddress",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "address of new intended instruction which failed to be created"
        },
        {
          "name": "flowFromAddress",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "flow from address"
        },
        {
          "name": "message",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getInstructionBlock",
      "comment": "",
      "javadoc": "@return instruction block which corresponds to this error",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.lang.InstructionBlock",
        "type_short": "InstructionBlock",
        "comment": "instruction block which corresponds to this error"
      },
      "throws": []
    },
    {
      "name": "getInstructionErrorType",
      "comment": "",
      "javadoc": "@return type of instruction error",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.lang.InstructionError.InstructionErrorType",
        "type_short": "InstructionErrorType",
        "comment": "type of instruction error"
      },
      "throws": []
    },
    {
      "name": "isInstructionConflict",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isOffcutError",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getInstructionAddress",
      "comment": "",
      "javadoc": "@return address of new intended instruction which failed to be created (never null)",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": "address of new intended instruction which failed to be created (never null)"
      },
      "throws": []
    },
    {
      "name": "getConflictAddress",
      "comment": "",
      "javadoc": "@return address of another code unit which conflicts\n with intended instruction (required for CODE_UNIT \n and DUPLCIATE errors, null for others)",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": "address of another code unit which conflicts\n with intended instruction (required for CODE_UNIT \n and DUPLCIATE errors, null for others)"
      },
      "throws": []
    },
    {
      "name": "getParseContextValue",
      "comment": "",
      "javadoc": "@return disassembler context at intended instruction\n address (required for PARSE error, null for others)",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.lang.RegisterValue",
        "type_short": "RegisterValue",
        "comment": "disassembler context at intended instruction\n address (required for PARSE error, null for others)"
      },
      "throws": []
    },
    {
      "name": "getFlowFromAddress",
      "comment": "",
      "javadoc": "@return flow-from address if know else null",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": "flow-from address if know else null"
      },
      "throws": []
    },
    {
      "name": "getConflictMessage",
      "comment": "",
      "javadoc": "@return instruction error message",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "instruction error message"
      },
      "throws": []
    },
    {
      "name": "dumpInstructionDifference",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "newInst",
          "type_long": "ghidra.program.model.listing.Instruction",
          "type_short": "Instruction",
          "comment": ""
        },
        {
          "name": "existingInstr",
          "type_long": "ghidra.program.model.listing.Instruction",
          "type_short": "Instruction",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getInstructionDetails",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "instr",
          "type_long": "ghidra.program.model.listing.Instruction",
          "type_short": "Instruction",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    }
  ]
}
