{
  "name": "PrototypeModel",
  "comment": "A function calling convention model.\n Formal specification of how a compiler passes\n arguments between functions.",
  "javadoc": "A function calling convention model.\n Formal specification of how a compiler passes\n arguments between functions.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "UNKNOWN_EXTRAPOP",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "32768"
    },
    {
      "name": "name",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "isExtension",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "extrapop",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "stackshift",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "inputParams",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.lang.ParamList",
      "type_short": "ParamList",
      "constant_value": null
    },
    {
      "name": "outputParams",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.lang.ParamList",
      "type_short": "ParamList",
      "constant_value": null
    },
    {
      "name": "unaffected",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.pcode.Varnode[]",
      "type_short": "ghidra.program.model.pcode.Varnode[]",
      "constant_value": null
    },
    {
      "name": "killedbycall",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.pcode.Varnode[]",
      "type_short": "ghidra.program.model.pcode.Varnode[]",
      "constant_value": null
    },
    {
      "name": "returnaddress",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.pcode.Varnode[]",
      "type_short": "ghidra.program.model.pcode.Varnode[]",
      "constant_value": null
    },
    {
      "name": "likelytrash",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.pcode.Varnode[]",
      "type_short": "ghidra.program.model.pcode.Varnode[]",
      "constant_value": null
    },
    {
      "name": "localRange",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.address.AddressSet",
      "type_short": "AddressSet",
      "constant_value": null
    },
    {
      "name": "paramRange",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.address.AddressSet",
      "type_short": "AddressSet",
      "constant_value": null
    },
    {
      "name": "inputListType",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.lang.InputListType",
      "type_short": "InputListType",
      "constant_value": null
    },
    {
      "name": "genericCallingConvention",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.data.GenericCallingConvention",
      "type_short": "GenericCallingConvention",
      "constant_value": null
    },
    {
      "name": "hasThis",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "isConstruct",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "hasUponEntry",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "hasUponReturn",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "model",
          "type_long": "ghidra.program.model.lang.PrototypeModel",
          "type_short": "PrototypeModel",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getGenericCallingConvention",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.data.GenericCallingConvention",
        "type_short": "GenericCallingConvention",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getUnaffectedList",
      "comment": "",
      "javadoc": "@return list of registers unaffected by called functions",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.pcode.Varnode[]",
        "type_short": "ghidra.program.model.pcode.Varnode[]",
        "comment": "list of registers unaffected by called functions"
      },
      "throws": []
    },
    {
      "name": "getKilledByCallList",
      "comment": "",
      "javadoc": "@return list of registers definitely affected by called functions",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.pcode.Varnode[]",
        "type_short": "ghidra.program.model.pcode.Varnode[]",
        "comment": "list of registers definitely affected by called functions"
      },
      "throws": []
    },
    {
      "name": "getLikelyTrash",
      "comment": "",
      "javadoc": "@return list of registers whose input value is likely meaningless",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.pcode.Varnode[]",
        "type_short": "ghidra.program.model.pcode.Varnode[]",
        "comment": "list of registers whose input value is likely meaningless"
      },
      "throws": []
    },
    {
      "name": "getReturnAddress",
      "comment": "",
      "javadoc": "@return list of registers/memory used to store the return address",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.pcode.Varnode[]",
        "type_short": "ghidra.program.model.pcode.Varnode[]",
        "comment": "list of registers/memory used to store the return address"
      },
      "throws": []
    },
    {
      "name": "isMerged",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isProgramExtension",
      "comment": "",
      "javadoc": "@return true if this model is a Program specific extension to the CompilerSpec",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if this model is a Program specific extension to the CompilerSpec"
      },
      "throws": []
    },
    {
      "name": "getName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getExtrapop",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getStackshift",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hasThisPointer",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isConstructor",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getInputListType",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.lang.InputListType",
        "type_short": "InputListType",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hasInjection",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getReturnLocation",
      "comment": "",
      "javadoc": "@deprecated Get the preferred return location given the specified dataType.\n In truth, there is no one location.  The routines that use this method tend\n to want the default storage location for integer or pointer return values.\n@param dataType first parameter dataType or null for an undefined type.\n@param program is the Program\n@return return location or {@link VariableStorage#UNASSIGNED_STORAGE} if\n unable to determine suitable location",
      "static": false,
      "params": [
        {
          "name": "dataType",
          "type_long": "ghidra.program.model.data.DataType",
          "type_short": "DataType",
          "comment": "first parameter dataType or null for an undefined type."
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "is the Program"
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.listing.VariableStorage",
        "type_short": "VariableStorage",
        "comment": "return location or VariableStorage#UNASSIGNED_STORAGE if\n unable to determine suitable location"
      },
      "throws": []
    },
    {
      "name": "getNextArgLocation",
      "comment": "Get the preferred parameter location for a new parameter which will appended\n to the end of an existing set of params.  If existing parameters use custom\n storage, this method should not be used.",
      "javadoc": "Get the preferred parameter location for a new parameter which will appended\n to the end of an existing set of params.  If existing parameters use custom\n storage, this method should not be used.\n@param params existing set parameters to which the next parameter will\n be appended. (may be null)\n@param dataType dataType associated with next parameter location or null\n for a default undefined type.\n@param program is the Program\n@return next parameter location or {@link VariableStorage#UNASSIGNED_STORAGE} if\n unable to determine suitable location",
      "static": false,
      "params": [
        {
          "name": "params",
          "type_long": "ghidra.program.model.listing.Parameter[]",
          "type_short": "ghidra.program.model.listing.Parameter[]",
          "comment": "existing set parameters to which the next parameter will\n be appended. (may be null)"
        },
        {
          "name": "dataType",
          "type_long": "ghidra.program.model.data.DataType",
          "type_short": "DataType",
          "comment": "dataType associated with next parameter location or null\n for a default undefined type."
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "is the Program"
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.listing.VariableStorage",
        "type_short": "VariableStorage",
        "comment": "next parameter location or VariableStorage#UNASSIGNED_STORAGE if\n unable to determine suitable location"
      },
      "throws": []
    },
    {
      "name": "getArgLocation",
      "comment": "Get the preferred parameter location for a specified index,\n which will be added/inserted within the set of existing function params.\n If existing parameters use custom storage, this method should not be used.",
      "javadoc": "Get the preferred parameter location for a specified index,\n which will be added/inserted within the set of existing function params.\n If existing parameters use custom storage, this method should not be used.\n@param argIndex is the index\n@param params existing set parameters to which the parameter specified by\n argIndex will be added/inserted be appended (may be null).\n@param dataType dataType associated with next parameter location or null\n for a default undefined type.\n@param program is the Program\n@return parameter location or {@link VariableStorage#UNASSIGNED_STORAGE} if\n unable to determine suitable location",
      "static": false,
      "params": [
        {
          "name": "argIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": "is the index"
        },
        {
          "name": "params",
          "type_long": "ghidra.program.model.listing.Parameter[]",
          "type_short": "ghidra.program.model.listing.Parameter[]",
          "comment": "existing set parameters to which the parameter specified by\n argIndex will be added/inserted be appended (may be null)."
        },
        {
          "name": "dataType",
          "type_long": "ghidra.program.model.data.DataType",
          "type_short": "DataType",
          "comment": "dataType associated with next parameter location or null\n for a default undefined type."
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "is the Program"
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.listing.VariableStorage",
        "type_short": "VariableStorage",
        "comment": "parameter location or VariableStorage#UNASSIGNED_STORAGE if\n unable to determine suitable location"
      },
      "throws": []
    },
    {
      "name": "getStorageLocations",
      "comment": "Compute the variable storage for a given function and set of return/parameter datatypes \n defined by an array of data types.",
      "javadoc": "Compute the variable storage for a given function and set of return/parameter datatypes \n defined by an array of data types.\n@param program is the Program\n@param dataTypes return/parameter datatypes (first element is always the return datatype, \n i.e., minimum array length is 1)\n@param addAutoParams TODO\n@return dynamic storage locations orders by ordinal where first element corresponds to\n return storage. The returned array may also include additional auto-parameter storage \n locations.",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "is the Program"
        },
        {
          "name": "dataTypes",
          "type_long": "ghidra.program.model.data.DataType[]",
          "type_short": "ghidra.program.model.data.DataType[]",
          "comment": "return/parameter datatypes (first element is always the return datatype, \n i.e., minimum array length is 1)"
        },
        {
          "name": "addAutoParams",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "TODO"
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.listing.VariableStorage[]",
        "type_short": "ghidra.program.model.listing.VariableStorage[]",
        "comment": "dynamic storage locations orders by ordinal where first element corresponds to\n return storage. The returned array may also include additional auto-parameter storage \n locations."
      },
      "throws": []
    },
    {
      "name": "isErrorPlaceholder",
      "comment": "If a PrototypeModel fails to parse (from XML) a substitute model may be provided, in which\n case this method returns true.  In all other cases this method returns false;",
      "javadoc": "If a PrototypeModel fails to parse (from XML) a substitute model may be provided, in which\n case this method returns true.  In all other cases this method returns false;\n@return true if this object is a substitute for a model that didn\u0027t parse",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if this object is a substitute for a model that didn\u0027t parse"
      },
      "throws": []
    },
    {
      "name": "buildParamList",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "strategy",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.xml.XmlParseException",
          "type_short": "XmlParseException",
          "comment": ""
        }
      ]
    },
    {
      "name": "saveXml",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "buffer",
          "type_long": "java.lang.StringBuilder",
          "type_short": "StringBuilder",
          "comment": ""
        },
        {
          "name": "injectLibrary",
          "type_long": "ghidra.program.model.lang.PcodeInjectLibrary",
          "type_short": "PcodeInjectLibrary",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "writeVarnodes",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "buffer",
          "type_long": "java.lang.StringBuilder",
          "type_short": "StringBuilder",
          "comment": ""
        },
        {
          "name": "varnodes",
          "type_long": "ghidra.program.model.pcode.Varnode[]",
          "type_short": "ghidra.program.model.pcode.Varnode[]",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "readVarnodes",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "parser",
          "type_long": "ghidra.xml.XmlPullParser",
          "type_short": "XmlPullParser",
          "comment": ""
        },
        {
          "name": "cspec",
          "type_long": "ghidra.program.model.lang.CompilerSpec",
          "type_short": "CompilerSpec",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.pcode.Varnode[]",
        "type_short": "ghidra.program.model.pcode.Varnode[]",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.xml.XmlParseException",
          "type_short": "XmlParseException",
          "comment": ""
        }
      ]
    },
    {
      "name": "writeAddressSet",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "buffer",
          "type_long": "java.lang.StringBuilder",
          "type_short": "StringBuilder",
          "comment": ""
        },
        {
          "name": "addressSet",
          "type_long": "ghidra.program.model.address.AddressSet",
          "type_short": "AddressSet",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "readAddressSet",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "parser",
          "type_long": "ghidra.xml.XmlPullParser",
          "type_short": "XmlPullParser",
          "comment": ""
        },
        {
          "name": "cspec",
          "type_long": "ghidra.program.model.lang.CompilerSpec",
          "type_short": "CompilerSpec",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.AddressSet",
        "type_short": "AddressSet",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.xml.XmlParseException",
          "type_short": "XmlParseException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getInjectName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "restoreXml",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "parser",
          "type_long": "ghidra.xml.XmlPullParser",
          "type_short": "XmlPullParser",
          "comment": ""
        },
        {
          "name": "cspec",
          "type_long": "ghidra.program.model.lang.CompilerSpec",
          "type_short": "CompilerSpec",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.xml.XmlParseException",
          "type_short": "XmlParseException",
          "comment": ""
        }
      ]
    },
    {
      "name": "possibleInputParamWithSlot",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "loc",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "size",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "res",
          "type_long": "ghidra.program.model.lang.ParamList.WithSlotRec",
          "type_short": "WithSlotRec",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "possibleOutputParamWithSlot",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "loc",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "size",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "res",
          "type_long": "ghidra.program.model.lang.ParamList.WithSlotRec",
          "type_short": "WithSlotRec",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getStackParameterAlignment",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getStackParameterOffset",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.Long",
        "type_short": "Long",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPotentialInputRegisterStorage",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "prog",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.listing.VariableStorage[]",
        "type_short": "ghidra.program.model.listing.VariableStorage[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "equals",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "obj",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hashCode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    }
  ]
}
