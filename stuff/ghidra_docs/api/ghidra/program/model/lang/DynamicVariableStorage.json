{
  "name": "DynamicVariableStorage",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "extends": "ghidra.program.model.listing.VariableStorage",
  "fields": [
    {
      "name": "autoParamType",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.listing.AutoParameterType",
      "type_short": "AutoParameterType",
      "constant_value": null
    },
    {
      "name": "forcedIndirect",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "isUnassigned",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct Unassigned dynamic variable storage with an optional auto-parameter type",
      "javadoc": "Construct Unassigned dynamic variable storage with an optional auto-parameter type\n@param autoParamType auto-parameter type or null if not applicable",
      "static": false,
      "params": [
        {
          "name": "autoParamType",
          "type_long": "ghidra.program.model.listing.AutoParameterType",
          "type_short": "AutoParameterType",
          "comment": "auto-parameter type or null if not applicable"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct dynamic variable storage",
      "javadoc": "Construct dynamic variable storage\n@param program\n@param forcedIndirect if true indicates that the parameter has been forced to pass \n as a pointer instead of its raw type",
      "static": false,
      "params": [
        {
          "name": "forcedIndirect",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "if true indicates that the parameter has been forced to pass \n as a pointer instead of its raw type"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct dynamic variable storage with an optional auto-parameter type",
      "javadoc": "Construct dynamic variable storage with an optional auto-parameter type\n@param program\n@param autoParamType auto-parameter type or null if not applicable\n@param address varnode address\n@param size varnode size\n@throws InvalidInputException",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "autoParamType",
          "type_long": "ghidra.program.model.listing.AutoParameterType",
          "type_short": "AutoParameterType",
          "comment": "auto-parameter type or null if not applicable"
        },
        {
          "name": "address",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "varnode address"
        },
        {
          "name": "size",
          "type_long": "int",
          "type_short": "int",
          "comment": "varnode size"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.InvalidInputException",
          "type_short": "InvalidInputException",
          "comment": ""
        }
      ]
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct dynamic variable storage with an optional auto-parameter type",
      "javadoc": "Construct dynamic variable storage with an optional auto-parameter type\n@param program\n@param autoParamType auto-parameter type or null if not applicable\n@param varnodes one or more ordered storage varnodes\n@throws InvalidInputException if specified varnodes violate storage restrictions",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "autoParamType",
          "type_long": "ghidra.program.model.listing.AutoParameterType",
          "type_short": "AutoParameterType",
          "comment": "auto-parameter type or null if not applicable"
        },
        {
          "name": "varnodes",
          "type_long": "ghidra.program.model.pcode.Varnode[]",
          "type_short": "ghidra.program.model.pcode.Varnode[]",
          "comment": "one or more ordered storage varnodes"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.InvalidInputException",
          "type_short": "InvalidInputException",
          "comment": "if specified varnodes violate storage restrictions"
        }
      ]
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct dynamic variable storage",
      "javadoc": "Construct dynamic variable storage\n@param program\n@param forcedIndirect if true indicates that the parameter has been forced to pass \n as a pointer instead of its raw type\n@param address varnode address\n@param size varnode size\n@throws InvalidInputException",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "forcedIndirect",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "if true indicates that the parameter has been forced to pass \n as a pointer instead of its raw type"
        },
        {
          "name": "address",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "varnode address"
        },
        {
          "name": "size",
          "type_long": "int",
          "type_short": "int",
          "comment": "varnode size"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.InvalidInputException",
          "type_short": "InvalidInputException",
          "comment": ""
        }
      ]
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct dynamic variable storage",
      "javadoc": "Construct dynamic variable storage\n@param program\n@param forcedIndirect if true indicates that the parameter has been forced to pass \n as a pointer instead of its raw type\n@param varnodes one or more ordered storage varnodes\n@throws InvalidInputException if specified varnodes violate storage restrictions",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "forcedIndirect",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "if true indicates that the parameter has been forced to pass \n as a pointer instead of its raw type"
        },
        {
          "name": "varnodes",
          "type_long": "ghidra.program.model.pcode.Varnode[]",
          "type_short": "ghidra.program.model.pcode.Varnode[]",
          "comment": "one or more ordered storage varnodes"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.InvalidInputException",
          "type_short": "InvalidInputException",
          "comment": "if specified varnodes violate storage restrictions"
        }
      ]
    },
    {
      "name": "isForcedIndirect",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isAutoStorage",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isUnassignedStorage",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getAutoParameterType",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.listing.AutoParameterType",
        "type_short": "AutoParameterType",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getUnassignedDynamicStorage",
      "comment": "Construct Unassigned dynamic variable storage with an optional auto-parameter type.\n NOTE: The #isUnassignedStorage() method should be used to\n detect this type of storage.",
      "javadoc": "Construct Unassigned dynamic variable storage with an optional auto-parameter type.\n NOTE: The {@link #isUnassignedStorage()} method should be used to\n detect this type of storage.\n@param autoParamType auto-parameter type or null if not applicable",
      "static": true,
      "params": [
        {
          "name": "autoParamType",
          "type_long": "ghidra.program.model.listing.AutoParameterType",
          "type_short": "AutoParameterType",
          "comment": "auto-parameter type or null if not applicable"
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.lang.DynamicVariableStorage",
        "type_short": "DynamicVariableStorage",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getUnassignedDynamicStorage",
      "comment": "Construct Unassigned dynamic variable storage.\n NOTE: The #isUnassignedStorage() method should be used to\n detect this type of storage.",
      "javadoc": "Construct Unassigned dynamic variable storage.\n NOTE: The {@link #isUnassignedStorage()} method should be used to\n detect this type of storage.\n@param forcedIndirect if true indicates that the parameter has been forced to pass \n as a pointer instead of its raw type",
      "static": true,
      "params": [
        {
          "name": "forcedIndirect",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "if true indicates that the parameter has been forced to pass \n as a pointer instead of its raw type"
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.lang.DynamicVariableStorage",
        "type_short": "DynamicVariableStorage",
        "comment": ""
      },
      "throws": []
    }
  ]
}
