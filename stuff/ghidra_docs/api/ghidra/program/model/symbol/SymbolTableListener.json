{
  "name": "SymbolTableListener",
  "comment": "Listener methods that are called when changes to symbols are made.",
  "javadoc": "Listener methods that are called when changes to symbols are made.",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "symbolAdded",
      "comment": "Notification that the given symbol has been added.",
      "javadoc": "Notification that the given symbol has been added.\n@param symbol the symbol that was added.",
      "static": false,
      "params": [
        {
          "name": "symbol",
          "type_long": "ghidra.program.model.symbol.SourceType",
          "type_short": "SourceType",
          "comment": "the symbol that was added."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "symbolRemoved",
      "comment": "Notification that a symbol was removed.",
      "javadoc": "Notification that a symbol was removed.\n@param addr address where the symbol was\n@param name name of symbol\n@param isLocal true if the symbol was in the scope\n of a function",
      "static": false,
      "params": [
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "address where the symbol was"
        },
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "name of symbol"
        },
        {
          "name": "isLocal",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true if the symbol was in the scope\n of a function"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "symbolRenamed",
      "comment": "Notification that the given symbol was renamed.",
      "javadoc": "Notification that the given symbol was renamed.\n@param symbol symbol that was renamed\n@param oldName old name of the symbol",
      "static": false,
      "params": [
        {
          "name": "symbol",
          "type_long": "ghidra.program.model.symbol.SourceType",
          "type_short": "SourceType",
          "comment": "symbol that was renamed"
        },
        {
          "name": "oldName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "old name of the symbol"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "primarySymbolSet",
      "comment": "Notification the the given symbol was set as the primary symbol.",
      "javadoc": "Notification the the given symbol was set as the primary symbol.\n@param symbol the symbol that is now primary.",
      "static": false,
      "params": [
        {
          "name": "symbol",
          "type_long": "ghidra.program.model.symbol.SourceType",
          "type_short": "SourceType",
          "comment": "the symbol that is now primary."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "symbolScopeChanged",
      "comment": "Notification that the scope on a symbol changed.",
      "javadoc": "Notification that the scope on a symbol changed.\n@param symbol the symbol whose scope has changed.",
      "static": false,
      "params": [
        {
          "name": "symbol",
          "type_long": "ghidra.program.model.symbol.SourceType",
          "type_short": "SourceType",
          "comment": "the symbol whose scope has changed."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "externalEntryPointAdded",
      "comment": "Notification that an external entry point was added at the\n given address.",
      "javadoc": "Notification that an external entry point was added at the\n given address.\n@param addr the address that made an external entry point.",
      "static": false,
      "params": [
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "the address that made an external entry point."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "externalEntryPointRemoved",
      "comment": "Notification that an external entry point was removed from the given\n address.",
      "javadoc": "Notification that an external entry point was removed from the given\n address.\n@param addr the address the removed as an external entry point.",
      "static": false,
      "params": [
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "the address the removed as an external entry point."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "associationAdded",
      "comment": "Notification that the association between a reference and a \n specific symbol has changed.",
      "javadoc": "Notification that the association between a reference and a \n specific symbol has changed.\n@param symbol affected symbol\n@param ref affected reference",
      "static": false,
      "params": [
        {
          "name": "symbol",
          "type_long": "ghidra.program.model.symbol.SourceType",
          "type_short": "SourceType",
          "comment": "affected symbol"
        },
        {
          "name": "ref",
          "type_long": "ghidra.program.model.symbol.Reference",
          "type_short": "Reference",
          "comment": "affected reference"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "associationRemoved",
      "comment": "Notification that the association between the given reference and\n any symbol was removed.",
      "javadoc": "Notification that the association between the given reference and\n any symbol was removed.\n@param ref the reference that had a symbol association removed.",
      "static": false,
      "params": [
        {
          "name": "ref",
          "type_long": "ghidra.program.model.symbol.Reference",
          "type_short": "Reference",
          "comment": "the reference that had a symbol association removed."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
