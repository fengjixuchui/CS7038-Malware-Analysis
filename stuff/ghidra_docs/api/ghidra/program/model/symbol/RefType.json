{
  "name": "RefType",
  "comment": "Class to define reference types.",
  "javadoc": "Class to define reference types.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "__INVALID",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "byte",
      "type_short": "byte",
      "constant_value": "-2"
    },
    {
      "name": "__UNKNOWNFLOW",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "byte",
      "type_short": "byte",
      "constant_value": "-1"
    },
    {
      "name": "__FALL_THROUGH",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "byte",
      "type_short": "byte",
      "constant_value": "0"
    },
    {
      "name": "__UNCONDITIONAL_JUMP",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "byte",
      "type_short": "byte",
      "constant_value": "1"
    },
    {
      "name": "__CONDITIONAL_JUMP",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "byte",
      "type_short": "byte",
      "constant_value": "2"
    },
    {
      "name": "__UNCONDITIONAL_CALL",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "byte",
      "type_short": "byte",
      "constant_value": "3"
    },
    {
      "name": "__CONDITIONAL_CALL",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "byte",
      "type_short": "byte",
      "constant_value": "4"
    },
    {
      "name": "__TERMINATOR",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "byte",
      "type_short": "byte",
      "constant_value": "5"
    },
    {
      "name": "__COMPUTED_JUMP",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "byte",
      "type_short": "byte",
      "constant_value": "6"
    },
    {
      "name": "__CONDITIONAL_TERMINATOR",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "byte",
      "type_short": "byte",
      "constant_value": "7"
    },
    {
      "name": "__COMPUTED_CALL",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "byte",
      "type_short": "byte",
      "constant_value": "8"
    },
    {
      "name": "__INDIRECTION",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "byte",
      "type_short": "byte",
      "constant_value": "9"
    },
    {
      "name": "__CALL_TERMINATOR",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "byte",
      "type_short": "byte",
      "constant_value": "10"
    },
    {
      "name": "__JUMP_TERMINATOR",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "byte",
      "type_short": "byte",
      "constant_value": "11"
    },
    {
      "name": "__CONDITIONAL_COMPUTED_JUMP",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "byte",
      "type_short": "byte",
      "constant_value": "12"
    },
    {
      "name": "__CONDITIONAL_COMPUTED_CALL",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "byte",
      "type_short": "byte",
      "constant_value": "13"
    },
    {
      "name": "__CONDITIONAL_CALL_TERMINATOR",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "byte",
      "type_short": "byte",
      "constant_value": "14"
    },
    {
      "name": "__COMPUTED_CALL_TERMINATOR",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "byte",
      "type_short": "byte",
      "constant_value": "15"
    },
    {
      "name": "__CALL_OVERRIDE_UNCONDITIONAL",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "byte",
      "type_short": "byte",
      "constant_value": "16"
    },
    {
      "name": "__JUMP_OVERRIDE_UNCONDITIONAL",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "byte",
      "type_short": "byte",
      "constant_value": "17"
    },
    {
      "name": "__CALLOTHER_OVERRIDE_CALL",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "byte",
      "type_short": "byte",
      "constant_value": "18"
    },
    {
      "name": "__CALLOTHER_OVERRIDE_JUMP",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "byte",
      "type_short": "byte",
      "constant_value": "19"
    },
    {
      "name": "__UNKNOWNDATA",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "byte",
      "type_short": "byte",
      "constant_value": "100"
    },
    {
      "name": "__READ",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "byte",
      "type_short": "byte",
      "constant_value": "101"
    },
    {
      "name": "__WRITE",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "byte",
      "type_short": "byte",
      "constant_value": "102"
    },
    {
      "name": "__READ_WRITE",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "byte",
      "type_short": "byte",
      "constant_value": "103"
    },
    {
      "name": "__READ_IND",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "byte",
      "type_short": "byte",
      "constant_value": "104"
    },
    {
      "name": "__WRITE_IND",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "byte",
      "type_short": "byte",
      "constant_value": "105"
    },
    {
      "name": "__READ_WRITE_IND",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "byte",
      "type_short": "byte",
      "constant_value": "106"
    },
    {
      "name": "__UNKNOWNPARAM",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "byte",
      "type_short": "byte",
      "constant_value": "107"
    },
    {
      "name": "__EXTERNAL_REF",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "byte",
      "type_short": "byte",
      "constant_value": "113"
    },
    {
      "name": "__UNKNOWNDATA_IND",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "byte",
      "type_short": "byte",
      "constant_value": "114"
    },
    {
      "name": "__DYNAMICDATA",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "byte",
      "type_short": "byte",
      "constant_value": "127"
    },
    {
      "name": "INVALID",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.program.model.symbol.FlowType",
      "type_short": "FlowType",
      "constant_value": null
    },
    {
      "name": "FLOW",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.program.model.symbol.FlowType",
      "type_short": "FlowType",
      "constant_value": null
    },
    {
      "name": "FALL_THROUGH",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.program.model.symbol.FlowType",
      "type_short": "FlowType",
      "constant_value": null
    },
    {
      "name": "UNCONDITIONAL_JUMP",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.program.model.symbol.FlowType",
      "type_short": "FlowType",
      "constant_value": null
    },
    {
      "name": "CONDITIONAL_JUMP",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.program.model.symbol.FlowType",
      "type_short": "FlowType",
      "constant_value": null
    },
    {
      "name": "UNCONDITIONAL_CALL",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.program.model.symbol.FlowType",
      "type_short": "FlowType",
      "constant_value": null
    },
    {
      "name": "CONDITIONAL_CALL",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.program.model.symbol.FlowType",
      "type_short": "FlowType",
      "constant_value": null
    },
    {
      "name": "TERMINATOR",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.program.model.symbol.FlowType",
      "type_short": "FlowType",
      "constant_value": null
    },
    {
      "name": "COMPUTED_JUMP",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.program.model.symbol.FlowType",
      "type_short": "FlowType",
      "constant_value": null
    },
    {
      "name": "CONDITIONAL_TERMINATOR",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.program.model.symbol.FlowType",
      "type_short": "FlowType",
      "constant_value": null
    },
    {
      "name": "COMPUTED_CALL",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.program.model.symbol.FlowType",
      "type_short": "FlowType",
      "constant_value": null
    },
    {
      "name": "CALL_TERMINATOR",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.program.model.symbol.FlowType",
      "type_short": "FlowType",
      "constant_value": null
    },
    {
      "name": "COMPUTED_CALL_TERMINATOR",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.program.model.symbol.FlowType",
      "type_short": "FlowType",
      "constant_value": null
    },
    {
      "name": "CONDITIONAL_CALL_TERMINATOR",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.program.model.symbol.FlowType",
      "type_short": "FlowType",
      "constant_value": null
    },
    {
      "name": "CONDITIONAL_COMPUTED_CALL",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.program.model.symbol.FlowType",
      "type_short": "FlowType",
      "constant_value": null
    },
    {
      "name": "CONDITIONAL_COMPUTED_JUMP",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.program.model.symbol.FlowType",
      "type_short": "FlowType",
      "constant_value": null
    },
    {
      "name": "JUMP_TERMINATOR",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.program.model.symbol.FlowType",
      "type_short": "FlowType",
      "constant_value": null
    },
    {
      "name": "INDIRECTION",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.program.model.symbol.FlowType",
      "type_short": "FlowType",
      "constant_value": null
    },
    {
      "name": "CALL_OVERRIDE_UNCONDITIONAL",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.program.model.symbol.FlowType",
      "type_short": "FlowType",
      "constant_value": null
    },
    {
      "name": "JUMP_OVERRIDE_UNCONDITIONAL",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.program.model.symbol.FlowType",
      "type_short": "FlowType",
      "constant_value": null
    },
    {
      "name": "CALLOTHER_OVERRIDE_CALL",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.program.model.symbol.FlowType",
      "type_short": "FlowType",
      "constant_value": null
    },
    {
      "name": "CALLOTHER_OVERRIDE_JUMP",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.program.model.symbol.FlowType",
      "type_short": "FlowType",
      "constant_value": null
    },
    {
      "name": "THUNK",
      "comment": "Reference type is unknown.",
      "javadoc": "Reference type is unknown.",
      "static": true,
      "type_long": "ghidra.program.model.symbol.RefType",
      "type_short": "RefType",
      "constant_value": null
    },
    {
      "name": "DATA",
      "comment": "Reference type assigned when data access is unknown.",
      "javadoc": "Reference type assigned when data access is unknown.",
      "static": true,
      "type_long": "ghidra.program.model.symbol.RefType",
      "type_short": "RefType",
      "constant_value": null
    },
    {
      "name": "PARAM",
      "comment": "Reference type assigned when data (constant or pointer) is passed to a function",
      "javadoc": "Reference type assigned when data (constant or pointer) is passed to a function",
      "static": true,
      "type_long": "ghidra.program.model.symbol.RefType",
      "type_short": "RefType",
      "constant_value": null
    },
    {
      "name": "DATA_IND",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.program.model.symbol.RefType",
      "type_short": "RefType",
      "constant_value": null
    },
    {
      "name": "READ",
      "comment": "Reference type assigned when data is being read.",
      "javadoc": "Reference type assigned when data is being read.",
      "static": true,
      "type_long": "ghidra.program.model.symbol.RefType",
      "type_short": "RefType",
      "constant_value": null
    },
    {
      "name": "WRITE",
      "comment": "Reference type assigned when data is being written.",
      "javadoc": "Reference type assigned when data is being written.",
      "static": true,
      "type_long": "ghidra.program.model.symbol.RefType",
      "type_short": "RefType",
      "constant_value": null
    },
    {
      "name": "READ_WRITE",
      "comment": "Reference type assigned when data is read and written.",
      "javadoc": "Reference type assigned when data is read and written.",
      "static": true,
      "type_long": "ghidra.program.model.symbol.RefType",
      "type_short": "RefType",
      "constant_value": null
    },
    {
      "name": "READ_IND",
      "comment": "Reference type assigned when data is being read.",
      "javadoc": "Reference type assigned when data is being read.",
      "static": true,
      "type_long": "ghidra.program.model.symbol.RefType",
      "type_short": "RefType",
      "constant_value": null
    },
    {
      "name": "WRITE_IND",
      "comment": "Reference type assigned when data is being written.",
      "javadoc": "Reference type assigned when data is being written.",
      "static": true,
      "type_long": "ghidra.program.model.symbol.RefType",
      "type_short": "RefType",
      "constant_value": null
    },
    {
      "name": "READ_WRITE_IND",
      "comment": "Reference type assigned when data is read and written.",
      "javadoc": "Reference type assigned when data is read and written.",
      "static": true,
      "type_long": "ghidra.program.model.symbol.RefType",
      "type_short": "RefType",
      "constant_value": null
    },
    {
      "name": "EXTERNAL_REF",
      "comment": "Reference type used internally to identify external entry points.\n The use of this RefType for references to external library data or functions\n is deprecated and should not be used for that purpose.",
      "javadoc": "Reference type used internally to identify external entry points.\n The use of this RefType for references to external library data or functions\n is deprecated and should not be used for that purpose.",
      "static": true,
      "type_long": "ghidra.program.model.symbol.RefType",
      "type_short": "RefType",
      "constant_value": null
    },
    {
      "name": "type",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "byte",
      "type_short": "byte",
      "constant_value": null
    },
    {
      "name": "name",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "type",
          "type_long": "byte",
          "type_short": "byte",
          "comment": ""
        },
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getValue",
      "comment": "Get the int value for this RefType object",
      "javadoc": "Get the int value for this RefType object\n@return the value",
      "static": false,
      "params": [],
      "return": {
        "type_long": "byte",
        "type_short": "byte",
        "comment": "the value"
      },
      "throws": []
    },
    {
      "name": "isData",
      "comment": "Returns true if the reference is to data",
      "javadoc": "Returns true if the reference is to data\n@return true if the reference is to data",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the reference is to data"
      },
      "throws": []
    },
    {
      "name": "isRead",
      "comment": "Returns true if the reference is a read",
      "javadoc": "Returns true if the reference is a read\n@return true if the reference is a read",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the reference is a read"
      },
      "throws": []
    },
    {
      "name": "isWrite",
      "comment": "Returns true if the reference is a write",
      "javadoc": "Returns true if the reference is a write\n@return true if the reference is a write",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the reference is a write"
      },
      "throws": []
    },
    {
      "name": "isIndirect",
      "comment": "Returns true if the reference is indirect",
      "javadoc": "Returns true if the reference is indirect\n@return true if the reference is indirect",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the reference is indirect"
      },
      "throws": []
    },
    {
      "name": "isFlow",
      "comment": "Returns true if the reference is an instruction flow reference",
      "javadoc": "Returns true if the reference is an instruction flow reference\n@return true if the reference is an instruction flow reference",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the reference is an instruction flow reference"
      },
      "throws": []
    },
    {
      "name": "isFallthrough",
      "comment": "Return true if this flow type is one that does not cause a break in control flow",
      "javadoc": "Return true if this flow type is one that does not cause a break in control flow\n@return if this flow type is one that does not cause a break in control flow",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "if this flow type is one that does not cause a break in control flow"
      },
      "throws": []
    },
    {
      "name": "hasFallthrough",
      "comment": "Returns true if this flow type can fall through",
      "javadoc": "Returns true if this flow type can fall through\n@return true if can fall through",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if can fall through"
      },
      "throws": []
    },
    {
      "name": "isCall",
      "comment": "Returns true if the flow is call",
      "javadoc": "Returns true if the flow is call\n@return true if is a call",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if is a call"
      },
      "throws": []
    },
    {
      "name": "isJump",
      "comment": "Returns true if the flow is jump",
      "javadoc": "Returns true if the flow is jump\n@return true if is a jump",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if is a jump"
      },
      "throws": []
    },
    {
      "name": "isUnConditional",
      "comment": "Returns true if the flow is an unconditional call or jump",
      "javadoc": "Returns true if the flow is an unconditional call or jump\n@return true if unconditional",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if unconditional"
      },
      "throws": []
    },
    {
      "name": "isConditional",
      "comment": "Returns true if the flow is a conditional call or jump",
      "javadoc": "Returns true if the flow is a conditional call or jump\n@return true if is conditional",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if is conditional"
      },
      "throws": []
    },
    {
      "name": "isComputed",
      "comment": "Returns true if the flow is a computed call or compute jump",
      "javadoc": "Returns true if the flow is a computed call or compute jump\n@return true if is computed",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if is computed"
      },
      "throws": []
    },
    {
      "name": "isTerminal",
      "comment": "Returns true if this instruction terminates",
      "javadoc": "Returns true if this instruction terminates\n@return true if terminal",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if terminal"
      },
      "throws": []
    },
    {
      "name": "isOverride",
      "comment": "True if this is an override reference",
      "javadoc": "True if this is an override reference\n@return true if this is an override reference",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if this is an override reference"
      },
      "throws": []
    },
    {
      "name": "getName",
      "comment": "Returns name of ref-type",
      "javadoc": "Returns name of ref-type\n@return the name",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the name"
      },
      "throws": []
    },
    {
      "name": "equals",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "obj",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hashCode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    }
  ]
}
