{
  "name": "Relocation",
  "comment": "A class to store the information needed for a single\n program relocation.",
  "javadoc": "A class to store the information needed for a single\n program relocation.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "addr",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.address.Address",
      "type_short": "Address",
      "constant_value": null
    },
    {
      "name": "type",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "values",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long[]",
      "type_short": "long[]",
      "constant_value": null
    },
    {
      "name": "bytes",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "byte[]",
      "type_short": "byte[]",
      "constant_value": null
    },
    {
      "name": "symbolName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new relocation.",
      "javadoc": "Constructs a new relocation.\n@param addr the address where the relocation is required\n@param type the type of relocation to perform\n@param values the values needed when performing the relocation\n@param bytes original instruction bytes affected by relocation\n@param symbolName the name of the symbol being relocated",
      "static": false,
      "params": [
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "the address where the relocation is required"
        },
        {
          "name": "type",
          "type_long": "int",
          "type_short": "int",
          "comment": "the type of relocation to perform"
        },
        {
          "name": "values",
          "type_long": "long[]",
          "type_short": "long[]",
          "comment": "the values needed when performing the relocation"
        },
        {
          "name": "bytes",
          "type_long": "byte[]",
          "type_short": "byte[]",
          "comment": "original instruction bytes affected by relocation"
        },
        {
          "name": "symbolName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of the symbol being relocated"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getAddress",
      "comment": "Returns the address where the relocation is required.",
      "javadoc": "Returns the address where the relocation is required.\n@return the address where the relocation is required",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": "the address where the relocation is required"
      },
      "throws": []
    },
    {
      "name": "getType",
      "comment": "Returns the type of the relocation to perform.",
      "javadoc": "Returns the type of the relocation to perform.\n@return the type of the relocation to perform",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the type of the relocation to perform"
      },
      "throws": []
    },
    {
      "name": "getValues",
      "comment": "Returns the value needed when performing the relocation.",
      "javadoc": "Returns the value needed when performing the relocation.\n@return the value needed when performing the relocation",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long[]",
        "type_short": "long[]",
        "comment": "the value needed when performing the relocation"
      },
      "throws": []
    },
    {
      "name": "getBytes",
      "comment": "Returns the original instruction bytes affected by relocation.",
      "javadoc": "Returns the original instruction bytes affected by relocation.\n@return original instruction bytes affected by relocation",
      "static": false,
      "params": [],
      "return": {
        "type_long": "byte[]",
        "type_short": "byte[]",
        "comment": "original instruction bytes affected by relocation"
      },
      "throws": []
    },
    {
      "name": "getSymbolName",
      "comment": "The name of the symbol being relocated or null if there is no symbol name.",
      "javadoc": "The name of the symbol being relocated or \u003ccode\u003enull\u003c/code\u003e if there is no symbol name.\n@return the name of the symbol being relocated or \u003ccode\u003enull\u003c/code\u003e if there is no symbol name.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the name of the symbol being relocated or null if there is no symbol name."
      },
      "throws": []
    }
  ]
}
