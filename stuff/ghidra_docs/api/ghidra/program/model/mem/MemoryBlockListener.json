{
  "name": "MemoryBlockListener",
  "comment": "Methods for a listener that is called when changes are made to a\n MemoryBlock.",
  "javadoc": "Methods for a listener that is called when changes are made to a\n MemoryBlock.",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "nameChanged",
      "comment": "Notification the name changed.",
      "javadoc": "Notification the name changed.\n@param block affected block\n@param oldName old name\n@param newName new name",
      "static": false,
      "params": [
        {
          "name": "block",
          "type_long": "ghidra.program.model.mem.MemoryBlock",
          "type_short": "MemoryBlock",
          "comment": "affected block"
        },
        {
          "name": "oldName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "old name"
        },
        {
          "name": "newName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "new name"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "commentChanged",
      "comment": "Notification that the block\u0027s comment changed.",
      "javadoc": "Notification that the block\u0027s comment changed.\n@param block affected block\n@param oldComment old comment; may be null\n@param newComment new comment; may be null",
      "static": false,
      "params": [
        {
          "name": "block",
          "type_long": "ghidra.program.model.mem.MemoryBlock",
          "type_short": "MemoryBlock",
          "comment": "affected block"
        },
        {
          "name": "oldComment",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "old comment; may be null"
        },
        {
          "name": "newComment",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "new comment; may be null"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "readStatusChanged",
      "comment": "Notification the block\u0027s read attribute has changed.",
      "javadoc": "Notification the block\u0027s read attribute has changed.\n@param block affected block\n@param isRead true means the block is marked as readable",
      "static": false,
      "params": [
        {
          "name": "block",
          "type_long": "ghidra.program.model.mem.MemoryBlock",
          "type_short": "MemoryBlock",
          "comment": "affected block"
        },
        {
          "name": "isRead",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true means the block is marked as readable"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "writeStatusChanged",
      "comment": "Notification that the block\u0027s write attribute has changed.",
      "javadoc": "Notification that the block\u0027s write attribute has changed.\n@param block affected block\n@param isWrite true means the block is marked as writable",
      "static": false,
      "params": [
        {
          "name": "block",
          "type_long": "ghidra.program.model.mem.MemoryBlock",
          "type_short": "MemoryBlock",
          "comment": "affected block"
        },
        {
          "name": "isWrite",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true means the block is marked as writable"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "executeStatusChanged",
      "comment": "Notification that the block\u0027s execute attribute has changed.",
      "javadoc": "Notification that the block\u0027s execute attribute has changed.\n@param block affected block\n@param isExecute true means the block is marked as executable",
      "static": false,
      "params": [
        {
          "name": "block",
          "type_long": "ghidra.program.model.mem.MemoryBlock",
          "type_short": "MemoryBlock",
          "comment": "affected block"
        },
        {
          "name": "isExecute",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true means the block is marked as executable"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "sourceChanged",
      "comment": "Notification that the source of the block has changed.",
      "javadoc": "Notification that the source of the block has changed.\n@param block affected block\n@param oldSource old source\n@param newSource new source",
      "static": false,
      "params": [
        {
          "name": "block",
          "type_long": "ghidra.program.model.mem.MemoryBlock",
          "type_short": "MemoryBlock",
          "comment": "affected block"
        },
        {
          "name": "oldSource",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "old source"
        },
        {
          "name": "newSource",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "new source"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "sourceOffsetChanged",
      "comment": "Notification that the source offset has changed.",
      "javadoc": "Notification that the source offset has changed.\n@param block affected block\n@param oldOffset old offset\n@param newOffset new offset",
      "static": false,
      "params": [
        {
          "name": "block",
          "type_long": "ghidra.program.model.mem.MemoryBlock",
          "type_short": "MemoryBlock",
          "comment": "affected block"
        },
        {
          "name": "oldOffset",
          "type_long": "long",
          "type_short": "long",
          "comment": "old offset"
        },
        {
          "name": "newOffset",
          "type_long": "long",
          "type_short": "long",
          "comment": "new offset"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "dataChanged",
      "comment": "Notification that bytes changed in the block.",
      "javadoc": "Notification that bytes changed in the block.\n@param block affected block\n@param addr starting address of the change\n@param oldData old byte values\n@param newData new byte values",
      "static": false,
      "params": [
        {
          "name": "block",
          "type_long": "ghidra.program.model.mem.MemoryBlock",
          "type_short": "MemoryBlock",
          "comment": "affected block"
        },
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "starting address of the change"
        },
        {
          "name": "oldData",
          "type_long": "byte[]",
          "type_short": "byte[]",
          "comment": "old byte values"
        },
        {
          "name": "newData",
          "type_long": "byte[]",
          "type_short": "byte[]",
          "comment": "new byte values"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
