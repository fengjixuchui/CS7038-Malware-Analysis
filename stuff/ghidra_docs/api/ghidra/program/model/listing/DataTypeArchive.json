{
  "name": "DataTypeArchive",
  "comment": "This interface represents the main entry point into an object which\n stores all information relating to a single data type archive.",
  "javadoc": "This interface represents the main entry point into an object which\n stores all information relating to a single data type archive.",
  "static": false,
  "implements": [
    "ghidra.program.model.data.DataTypeManagerDomainObject"
  ],
  "fields": [
    {
      "name": "DATA_TYPE_ARCHIVE_INFO",
      "comment": "Name of data type archive information property list",
      "javadoc": "Name of data type archive information property list",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Data Type Archive Information\""
    },
    {
      "name": "DATA_TYPE_ARCHIVE_SETTINGS",
      "comment": "Name of data type archive settings property list",
      "javadoc": "Name of data type archive settings property list",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Data Type Archive Settings\""
    },
    {
      "name": "DATE_CREATED",
      "comment": "Name of date created property",
      "javadoc": "Name of date created property",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Date Created\""
    },
    {
      "name": "CREATED_WITH_GHIDRA_VERSION",
      "comment": "Name of ghidra version property",
      "javadoc": "Name of ghidra version property",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Created With Ghidra Version\""
    },
    {
      "name": "JANUARY_1_1970",
      "comment": "A date from January 1, 1970",
      "javadoc": "A date from January 1, 1970",
      "static": true,
      "type_long": "java.util.Date",
      "type_short": "Date",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "getDefaultPointerSize",
      "comment": "Gets the default pointer size as it may be stored within the data type archive.",
      "javadoc": "Gets the default pointer size as it may be stored within the data type archive.\n@return default pointer size.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "default pointer size."
      },
      "throws": []
    },
    {
      "name": "getCreationDate",
      "comment": "Returns the creation date of this data type archive.\n existed, then Jan 1, 1970 is returned.",
      "javadoc": "Returns the creation date of this data type archive.\n existed, then Jan 1, 1970 is returned.\n@return the creation date of this data type archive",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Date",
        "type_short": "Date",
        "comment": "the creation date of this data type archive"
      },
      "throws": []
    },
    {
      "name": "getChanges",
      "comment": "Get the data type archive changes since the last save as a set of addresses.",
      "javadoc": "Get the data type archive changes since the last save as a set of addresses.\n@return set of changed addresses within program.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.listing.DataTypeArchiveChangeSet",
        "type_short": "DataTypeArchiveChangeSet",
        "comment": "set of changed addresses within program."
      },
      "throws": []
    },
    {
      "name": "setChanged",
      "comment": "Mark the state this data type archive as having changed and generate\n the event.  Any or all parameters may be null.",
      "javadoc": "Mark the state this data type archive as having changed and generate\n the event.  Any or all parameters may be null.\n@param type event type\n@param oldValue original value\n@param newValue new value",
      "static": false,
      "params": [
        {
          "name": "type",
          "type_long": "int",
          "type_short": "int",
          "comment": "event type"
        },
        {
          "name": "oldValue",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": "original value"
        },
        {
          "name": "newValue",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": "new value"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setObjChanged",
      "comment": "Mark the state of a data type archive as having changed and generate\n the event.  Any or all parameters may be null.",
      "javadoc": "Mark the state of a data type archive as having changed and generate\n the event.  Any or all parameters may be null.\n@param type event type\n@param affectedObj object that is the subject of the event\n@param oldValue original value or an Object that is related to\n the event\n@param newValue new value or an Object that is related to the\n the event",
      "static": false,
      "params": [
        {
          "name": "type",
          "type_long": "int",
          "type_short": "int",
          "comment": "event type"
        },
        {
          "name": "affectedObj",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": "object that is the subject of the event"
        },
        {
          "name": "oldValue",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": "original value or an Object that is related to\n the event"
        },
        {
          "name": "newValue",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": "new value or an Object that is related to the\n the event"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "invalidate",
      "comment": "Invalidates any caching in a data type archive.\n NOTE: Over-using this method can adversely affect system performance.",
      "javadoc": "Invalidates any caching in a data type archive.\n NOTE: Over-using this method can adversely affect system performance.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "updateID",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
