{
  "name": "ReturnParameterImpl",
  "comment": "ReturnParameterImpl represent the function return value.\n This is special type of parameter whose ordinal is -1 and allows for the use\n of the \u0027void\u0027 datatype.",
  "javadoc": "\u003ccode\u003eReturnParameterImpl\u003c/code\u003e represent the function return value.\n This is special type of parameter whose ordinal is -1 and allows for the use\n of the \u0027void\u0027 datatype.",
  "static": false,
  "implements": [],
  "extends": "ghidra.program.model.listing.ParameterImpl",
  "fields": [],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a return parameter from another.",
      "javadoc": "Construct a return parameter from another.\n@param param parameter to be copied\n@param program target program\n@throws InvalidInputException if dataType restrictions are violated",
      "static": false,
      "params": [
        {
          "name": "param",
          "type_long": "ghidra.program.model.listing.Parameter",
          "type_short": "Parameter",
          "comment": "parameter to be copied"
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "target program"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.InvalidInputException",
          "type_short": "InvalidInputException",
          "comment": "if dataType restrictions are violated"
        }
      ]
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a return parameter which has no specific storage specified.",
      "javadoc": "Construct a return parameter which has no specific storage specified.\n@param dataType a fixed-length datatype.  (NOTE: Should be cloned to program datatype manager\n prior to determining storage elements since their length may change)\n@param program target program\n@throws InvalidInputException if dataType restrictions are violated",
      "static": false,
      "params": [
        {
          "name": "dataType",
          "type_long": "ghidra.program.model.data.DataType",
          "type_short": "DataType",
          "comment": "a fixed-length datatype.  (NOTE: Should be cloned to program datatype manager\n prior to determining storage elements since their length may change)"
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "target program"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.InvalidInputException",
          "type_short": "InvalidInputException",
          "comment": "if dataType restrictions are violated"
        }
      ]
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a return parameter at the specified stack offset.",
      "javadoc": "Construct a return parameter at the specified stack offset.\n@param dataType a fixed-length datatype.  (NOTE: Should be cloned to program datatype manager\n prior to determining storage elements since their length may change)\n@param stackOffset stack offset\n@param program target program\n@throws InvalidInputException if dataType restrictions are violated, an invalid storage \n address is specified, or unable to resolve storage element for specified datatype",
      "static": false,
      "params": [
        {
          "name": "dataType",
          "type_long": "ghidra.program.model.data.DataType",
          "type_short": "DataType",
          "comment": "a fixed-length datatype.  (NOTE: Should be cloned to program datatype manager\n prior to determining storage elements since their length may change)"
        },
        {
          "name": "stackOffset",
          "type_long": "int",
          "type_short": "int",
          "comment": "stack offset"
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "target program"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.InvalidInputException",
          "type_short": "InvalidInputException",
          "comment": "if dataType restrictions are violated, an invalid storage \n address is specified, or unable to resolve storage element for specified datatype"
        }
      ]
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a return parameter using the specified register.",
      "javadoc": "Construct a return parameter using the specified register.\n@param dataType a fixed-length datatype.  (NOTE: Should be cloned to program datatype manager\n prior to determining storage elements since their length may change)\n@param register storage register\n@param program target program\n@throws InvalidInputException if dataType restrictions are violated, an invalid storage \n address is specified, or unable to resolve storage element for specified datatype",
      "static": false,
      "params": [
        {
          "name": "dataType",
          "type_long": "ghidra.program.model.data.DataType",
          "type_short": "DataType",
          "comment": "a fixed-length datatype.  (NOTE: Should be cloned to program datatype manager\n prior to determining storage elements since their length may change)"
        },
        {
          "name": "register",
          "type_long": "ghidra.program.model.lang.Register",
          "type_short": "Register",
          "comment": "storage register"
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "target program"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.InvalidInputException",
          "type_short": "InvalidInputException",
          "comment": "if dataType restrictions are violated, an invalid storage \n address is specified, or unable to resolve storage element for specified datatype"
        }
      ]
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a return parameter with a single varnode at the specified address.",
      "javadoc": "Construct a return parameter with a single varnode at the specified address.\n@param dataType a fixed-length datatype.  (NOTE: Should be cloned to program datatype manager\n prior to determining storage elements since their length may change)\n@param storageAddr storage address or null if no storage has been identified\n@param program target program\n@throws InvalidInputException if dataType restrictions are violated, an invalid storage \n address is specified, or unable to resolve storage element for specified datatype",
      "static": false,
      "params": [
        {
          "name": "dataType",
          "type_long": "ghidra.program.model.data.DataType",
          "type_short": "DataType",
          "comment": "a fixed-length datatype.  (NOTE: Should be cloned to program datatype manager\n prior to determining storage elements since their length may change)"
        },
        {
          "name": "storageAddr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "storage address or null if no storage has been identified"
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "target program"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.InvalidInputException",
          "type_short": "InvalidInputException",
          "comment": "if dataType restrictions are violated, an invalid storage \n address is specified, or unable to resolve storage element for specified datatype"
        }
      ]
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a return parameter with one or more associated storage elements.  Storage elements\n may get slightly modified to adjust for the resolved datatype size.",
      "javadoc": "Construct a return parameter with one or more associated storage elements.  Storage elements\n may get slightly modified to adjust for the resolved datatype size.\n@param dataType a fixed-length datatype.  (NOTE: Should be cloned to program datatype manager\n prior to determining storage elements since their length may change)\n@param storage variable storage or null for unassigned storage\n@param program target program\n@throws InvalidInputException if dataType restrictions are violated, an invalid storage \n element is specified, or error while resolving storage element for specified datatype",
      "static": false,
      "params": [
        {
          "name": "dataType",
          "type_long": "ghidra.program.model.data.DataType",
          "type_short": "DataType",
          "comment": "a fixed-length datatype.  (NOTE: Should be cloned to program datatype manager\n prior to determining storage elements since their length may change)"
        },
        {
          "name": "storage",
          "type_long": "ghidra.program.model.listing.VariableStorage",
          "type_short": "VariableStorage",
          "comment": "variable storage or null for unassigned storage"
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "target program"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.InvalidInputException",
          "type_short": "InvalidInputException",
          "comment": "if dataType restrictions are violated, an invalid storage \n element is specified, or error while resolving storage element for specified datatype"
        }
      ]
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a return parameter with one or more associated storage elements.  Storage elements\n may get slightly modified to adjust for the resolved datatype size.",
      "javadoc": "Construct a return parameter with one or more associated storage elements.  Storage elements\n may get slightly modified to adjust for the resolved datatype size.\n@param dataType a fixed-length datatype.  (NOTE: Should be cloned to program datatype manager\n prior to determining storage elements since their length may change)\n@param storage variable storage or null for unassigned storage\n@param force if true storage will be forced even if incorrect size\n@param program target program\n@throws InvalidInputException if dataType restrictions are violated, an invalid storage \n element is specified, or error while resolving storage element for specified datatype",
      "static": false,
      "params": [
        {
          "name": "dataType",
          "type_long": "ghidra.program.model.data.DataType",
          "type_short": "DataType",
          "comment": "a fixed-length datatype.  (NOTE: Should be cloned to program datatype manager\n prior to determining storage elements since their length may change)"
        },
        {
          "name": "storage",
          "type_long": "ghidra.program.model.listing.VariableStorage",
          "type_short": "VariableStorage",
          "comment": "variable storage or null for unassigned storage"
        },
        {
          "name": "force",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "if true storage will be forced even if incorrect size"
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "target program"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.InvalidInputException",
          "type_short": "InvalidInputException",
          "comment": "if dataType restrictions are violated, an invalid storage \n element is specified, or error while resolving storage element for specified datatype"
        }
      ]
    },
    {
      "name": "isVoidAllowed",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    }
  ]
}
