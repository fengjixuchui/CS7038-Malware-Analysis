{
  "name": "VariableFilter",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "fields": [
    {
      "name": "PARAMETER_FILTER",
      "comment": "PARAMETER_FILTER matches all parameters (includes auto-params).  A variable is\n treated as a parameter by this filter if it implements the Parameter interface.",
      "javadoc": "\u003ccode\u003ePARAMETER_FILTER\u003c/code\u003e matches all parameters (includes auto-params).  A variable is\n treated as a parameter by this filter if it implements the Parameter interface.",
      "static": true,
      "type_long": "ghidra.program.model.listing.VariableFilter",
      "type_short": "VariableFilter",
      "constant_value": null
    },
    {
      "name": "NONAUTO_PARAMETER_FILTER",
      "comment": "NONAUTO_PARAMETER_FILTER matches all parameters which are not an auto-param.  A variable is\n treated as a parameter by this filter if it implements the Parameter interface.",
      "javadoc": "\u003ccode\u003eNONAUTO_PARAMETER_FILTER\u003c/code\u003e matches all parameters which are not an auto-param.  A variable is\n treated as a parameter by this filter if it implements the Parameter interface.",
      "static": true,
      "type_long": "ghidra.program.model.listing.VariableFilter",
      "type_short": "VariableFilter",
      "constant_value": null
    },
    {
      "name": "LOCAL_VARIABLE_FILTER",
      "comment": "LOCAL_VARIABLE_FILTER matches all simple stack variables.  A variable is\n treated as local by this filter if it does not implement the Parameter interface.",
      "javadoc": "\u003ccode\u003eLOCAL_VARIABLE_FILTER\u003c/code\u003e matches all simple stack variables.  A variable is\n treated as local by this filter if it does not implement the Parameter interface.",
      "static": true,
      "type_long": "ghidra.program.model.listing.VariableFilter",
      "type_short": "VariableFilter",
      "constant_value": null
    },
    {
      "name": "STACK_VARIABLE_FILTER",
      "comment": "STACK_VARIABLE_FILTER matches all simple stack variables",
      "javadoc": "\u003ccode\u003eSTACK_VARIABLE_FILTER\u003c/code\u003e matches all simple stack variables",
      "static": true,
      "type_long": "ghidra.program.model.listing.VariableFilter",
      "type_short": "VariableFilter",
      "constant_value": null
    },
    {
      "name": "COMPOUND_STACK_VARIABLE_FILTER",
      "comment": "COMPOUND_STACK_VARIABLE_FILTER matches all simple or compound variables\n which utilize a stack storage element",
      "javadoc": "\u003ccode\u003eCOMPOUND_STACK_VARIABLE_FILTER\u003c/code\u003e matches all simple or compound variables\n which utilize a stack storage element",
      "static": true,
      "type_long": "ghidra.program.model.listing.VariableFilter",
      "type_short": "VariableFilter",
      "constant_value": null
    },
    {
      "name": "REGISTER_VARIABLE_FILTER",
      "comment": "REGISTER_VARIABLE_FILTER matches all simple register variables",
      "javadoc": "\u003ccode\u003eREGISTER_VARIABLE_FILTER\u003c/code\u003e matches all simple register variables",
      "static": true,
      "type_long": "ghidra.program.model.listing.VariableFilter",
      "type_short": "VariableFilter",
      "constant_value": null
    },
    {
      "name": "MEMORY_VARIABLE_FILTER",
      "comment": "MEMORY_VARIABLE_FILTER matches all simple memory variables",
      "javadoc": "\u003ccode\u003eMEMORY_VARIABLE_FILTER\u003c/code\u003e matches all simple memory variables",
      "static": true,
      "type_long": "ghidra.program.model.listing.VariableFilter",
      "type_short": "VariableFilter",
      "constant_value": null
    },
    {
      "name": "UNIQUE_VARIABLE_FILTER",
      "comment": "UNIQUE_VARIABLE_FILTER matches all simple unique variables identified by a hash value",
      "javadoc": "\u003ccode\u003eUNIQUE_VARIABLE_FILTER\u003c/code\u003e matches all simple unique variables identified by a hash value",
      "static": true,
      "type_long": "ghidra.program.model.listing.VariableFilter",
      "type_short": "VariableFilter",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "matches",
      "comment": "Determine if the specified variable matches this filter criteria",
      "javadoc": "Determine if the specified variable matches this filter criteria\n@param variable\n@return true if variable satisfies the criteria of this filter",
      "static": false,
      "params": [
        {
          "name": "variable",
          "type_long": "ghidra.program.model.listing.Variable",
          "type_short": "Variable",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if variable satisfies the criteria of this filter"
      },
      "throws": []
    }
  ]
}
