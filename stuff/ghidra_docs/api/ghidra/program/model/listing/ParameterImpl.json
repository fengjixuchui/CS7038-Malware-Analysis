{
  "name": "ParameterImpl",
  "comment": "Generic implementation of Parameter.",
  "javadoc": "Generic implementation of Parameter.",
  "static": false,
  "implements": [
    "ghidra.program.model.listing.Parameter"
  ],
  "extends": "ghidra.program.model.listing.VariableImpl",
  "fields": [
    {
      "name": "ordinal",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a parameter from another.",
      "javadoc": "Construct a parameter from another.\n@param param parameter to be copied\n@param program target program\n@throws InvalidInputException if dataType restrictions are violated",
      "static": false,
      "params": [
        {
          "name": "param",
          "type_long": "ghidra.program.model.listing.Parameter",
          "type_short": "Parameter",
          "comment": "parameter to be copied"
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "target program"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.InvalidInputException",
          "type_short": "InvalidInputException",
          "comment": "if dataType restrictions are violated"
        }
      ]
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a parameter which has no specific storage specified.\n Ordinal assignment is not established (UNASSIGNED_ORDINAL).",
      "javadoc": "Construct a parameter which has no specific storage specified.\n Ordinal assignment is not established (UNASSIGNED_ORDINAL).\n@param name variable name or null for default name\n@param dataType a fixed-length datatype.  (NOTE: Should be cloned to program datatype manager\n prior to determining storage elements since their length may change)\n@param program target program\n@throws InvalidInputException if dataType restrictions are violated",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "variable name or null for default name"
        },
        {
          "name": "dataType",
          "type_long": "ghidra.program.model.data.DataType",
          "type_short": "DataType",
          "comment": "a fixed-length datatype.  (NOTE: Should be cloned to program datatype manager\n prior to determining storage elements since their length may change)"
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "target program"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.InvalidInputException",
          "type_short": "InvalidInputException",
          "comment": "if dataType restrictions are violated"
        }
      ]
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a parameter which has no specific storage specified.\n Ordinal assignment is not established (UNASSIGNED_ORDINAL).",
      "javadoc": "Construct a parameter which has no specific storage specified.\n Ordinal assignment is not established (UNASSIGNED_ORDINAL).\n@param name variable name or null for default name\n@param dataType a fixed-length datatype.  (NOTE: Should be cloned to program datatype manager\n prior to determining storage elements since their length may change)\n@param program target program\n@param sourceType name source type\n@throws InvalidInputException if dataType restrictions are violated",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "variable name or null for default name"
        },
        {
          "name": "dataType",
          "type_long": "ghidra.program.model.data.DataType",
          "type_short": "DataType",
          "comment": "a fixed-length datatype.  (NOTE: Should be cloned to program datatype manager\n prior to determining storage elements since their length may change)"
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "target program"
        },
        {
          "name": "sourceType",
          "type_long": "ghidra.program.model.symbol.SourceType",
          "type_short": "SourceType",
          "comment": "name source type"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.InvalidInputException",
          "type_short": "InvalidInputException",
          "comment": "if dataType restrictions are violated"
        }
      ]
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a stack parameter at the specified stack offset.\n Ordinal assignment is not established (UNASSIGNED_ORDINAL).",
      "javadoc": "Construct a stack parameter at the specified stack offset.\n Ordinal assignment is not established (UNASSIGNED_ORDINAL).\n@param name variable name or null for default name\n@param dataType a fixed-length datatype. (NOTE: Should be cloned to program datatype manager\n prior to determining storage elements since their length may change)\n@param stackOffset\n@param program target program\n@throws InvalidInputException if dataType restrictions are violated, an invalid storage \n address is specified, or unable to resolve storage element for specified datatype\n@throws AddressOutOfBoundsException if invalid stack offset specified",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "variable name or null for default name"
        },
        {
          "name": "dataType",
          "type_long": "ghidra.program.model.data.DataType",
          "type_short": "DataType",
          "comment": "a fixed-length datatype. (NOTE: Should be cloned to program datatype manager\n prior to determining storage elements since their length may change)"
        },
        {
          "name": "stackOffset",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "target program"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.InvalidInputException",
          "type_short": "InvalidInputException",
          "comment": "if dataType restrictions are violated, an invalid storage \n address is specified, or unable to resolve storage element for specified datatype"
        }
      ]
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a stack parameter at the specified stack offset.\n Ordinal assignment is not established (UNASSIGNED_ORDINAL).",
      "javadoc": "Construct a stack parameter at the specified stack offset.\n Ordinal assignment is not established (UNASSIGNED_ORDINAL).\n@param name variable name or null for default name\n@param dataType a fixed-length datatype. (NOTE: Should be cloned to program datatype manager\n prior to determining storage elements since their length may change)\n@param stackOffset\n@param program target program\n@param sourceType name source type\n@throws InvalidInputException if dataType restrictions are violated, an invalid storage \n address is specified, or unable to resolve storage element for specified datatype\n@throws AddressOutOfBoundsException if invalid stack offset specified",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "variable name or null for default name"
        },
        {
          "name": "dataType",
          "type_long": "ghidra.program.model.data.DataType",
          "type_short": "DataType",
          "comment": "a fixed-length datatype. (NOTE: Should be cloned to program datatype manager\n prior to determining storage elements since their length may change)"
        },
        {
          "name": "stackOffset",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "target program"
        },
        {
          "name": "sourceType",
          "type_long": "ghidra.program.model.symbol.SourceType",
          "type_short": "SourceType",
          "comment": "name source type"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.InvalidInputException",
          "type_short": "InvalidInputException",
          "comment": "if dataType restrictions are violated, an invalid storage \n address is specified, or unable to resolve storage element for specified datatype"
        }
      ]
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a register parameter using the specified register.\n Ordinal assignment is not established (UNASSIGNED_ORDINAL).",
      "javadoc": "Construct a register parameter using the specified register.\n Ordinal assignment is not established (UNASSIGNED_ORDINAL).\n@param name variable name or null for default name\n@param dataType a fixed-length datatype.  (NOTE: Should be cloned to program datatype manager\n prior to determining storage elements since their length may change)\n@param register\n@param program target program\n@throws InvalidInputException if dataType restrictions are violated, an invalid storage \n address is specified, or unable to resolve storage element for specified datatype",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "variable name or null for default name"
        },
        {
          "name": "dataType",
          "type_long": "ghidra.program.model.data.DataType",
          "type_short": "DataType",
          "comment": "a fixed-length datatype.  (NOTE: Should be cloned to program datatype manager\n prior to determining storage elements since their length may change)"
        },
        {
          "name": "register",
          "type_long": "ghidra.program.model.lang.Register",
          "type_short": "Register",
          "comment": ""
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "target program"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.InvalidInputException",
          "type_short": "InvalidInputException",
          "comment": "if dataType restrictions are violated, an invalid storage \n address is specified, or unable to resolve storage element for specified datatype"
        }
      ]
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a register parameter using the specified register.\n Ordinal assignment is not established (UNASSIGNED_ORDINAL).",
      "javadoc": "Construct a register parameter using the specified register.\n Ordinal assignment is not established (UNASSIGNED_ORDINAL).\n@param name variable name or null for default name\n@param dataType a fixed-length datatype.  (NOTE: Should be cloned to program datatype manager\n prior to determining storage elements since their length may change)\n@param register\n@param program target program\n@param sourceType name source type\n@throws InvalidInputException if dataType restrictions are violated, an invalid storage \n address is specified, or unable to resolve storage element for specified datatype",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "variable name or null for default name"
        },
        {
          "name": "dataType",
          "type_long": "ghidra.program.model.data.DataType",
          "type_short": "DataType",
          "comment": "a fixed-length datatype.  (NOTE: Should be cloned to program datatype manager\n prior to determining storage elements since their length may change)"
        },
        {
          "name": "register",
          "type_long": "ghidra.program.model.lang.Register",
          "type_short": "Register",
          "comment": ""
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "target program"
        },
        {
          "name": "sourceType",
          "type_long": "ghidra.program.model.symbol.SourceType",
          "type_short": "SourceType",
          "comment": "name source type"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.InvalidInputException",
          "type_short": "InvalidInputException",
          "comment": "if dataType restrictions are violated, an invalid storage \n address is specified, or unable to resolve storage element for specified datatype"
        }
      ]
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a parameter with a single storage element at the specified address.  If address \n is contained within a register it may get realigned to the register based upon the resolved \n datatype length.  Variable storage will be aligned to the least-significant portion of the \n register.  Ordinal assignment is not established (UNASSIGNED_ORDINAL).",
      "javadoc": "Construct a parameter with a single storage element at the specified address.  If address \n is contained within a register it may get realigned to the register based upon the resolved \n datatype length.  Variable storage will be aligned to the least-significant portion of the \n register.  Ordinal assignment is not established (UNASSIGNED_ORDINAL).\n@param name variable name or null for default name\n@param dataType a fixed-length datatype.  (NOTE: Should be cloned to program datatype manager\n prior to determining storage elements since their length may change)\n@param storageAddr storage address or null if no storage has been identified\n@param program target program\n@throws InvalidInputException if dataType restrictions are violated, an invalid storage \n address is specified, or unable to resolve storage element for specified datatype",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "variable name or null for default name"
        },
        {
          "name": "dataType",
          "type_long": "ghidra.program.model.data.DataType",
          "type_short": "DataType",
          "comment": "a fixed-length datatype.  (NOTE: Should be cloned to program datatype manager\n prior to determining storage elements since their length may change)"
        },
        {
          "name": "storageAddr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "storage address or null if no storage has been identified"
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "target program"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.InvalidInputException",
          "type_short": "InvalidInputException",
          "comment": "if dataType restrictions are violated, an invalid storage \n address is specified, or unable to resolve storage element for specified datatype"
        }
      ]
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a parameter with a single storage element at the specified address.  If address \n is contained within a register it may get realigned to the register based upon the resolved \n datatype length.  Variable storage will be aligned to the least-significant portion of the \n register.  Ordinal assignment is not established (UNASSIGNED_ORDINAL).",
      "javadoc": "Construct a parameter with a single storage element at the specified address.  If address \n is contained within a register it may get realigned to the register based upon the resolved \n datatype length.  Variable storage will be aligned to the least-significant portion of the \n register.  Ordinal assignment is not established (UNASSIGNED_ORDINAL).\n@param name variable name or null for default name\n@param dataType a fixed-length datatype.  (NOTE: Should be cloned to program datatype manager\n prior to determining storage elements since their length may change)\n@param storageAddr storage address or null if no storage has been identified\n@param program target program\n@param sourceType name source type\n@throws InvalidInputException if dataType restrictions are violated, an invalid storage \n address is specified, or unable to resolve storage element for specified datatype",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "variable name or null for default name"
        },
        {
          "name": "dataType",
          "type_long": "ghidra.program.model.data.DataType",
          "type_short": "DataType",
          "comment": "a fixed-length datatype.  (NOTE: Should be cloned to program datatype manager\n prior to determining storage elements since their length may change)"
        },
        {
          "name": "storageAddr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "storage address or null if no storage has been identified"
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "target program"
        },
        {
          "name": "sourceType",
          "type_long": "ghidra.program.model.symbol.SourceType",
          "type_short": "SourceType",
          "comment": "name source type"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.InvalidInputException",
          "type_short": "InvalidInputException",
          "comment": "if dataType restrictions are violated, an invalid storage \n address is specified, or unable to resolve storage element for specified datatype"
        }
      ]
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a parameter with one or more associated storage elements.  Storage elements\n may get slightly modified to adjust for the resolved datatype size.  Ordinal assignment\n is not established (UNASSIGNED_ORDINAL).",
      "javadoc": "Construct a parameter with one or more associated storage elements.  Storage elements\n may get slightly modified to adjust for the resolved datatype size.  Ordinal assignment\n is not established (UNASSIGNED_ORDINAL).\n@param name variable name or null for default name\n@param dataType a fixed-length datatype.  (NOTE: Should be cloned to program datatype manager\n prior to determining storage elements since their length may change)\n@param storage variable storage or null for unassigned storage\n@param program target program\n@throws InvalidInputException if dataType restrictions are violated, an invalid storage \n element is specified, or error while resolving storage element for specified datatype",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "variable name or null for default name"
        },
        {
          "name": "dataType",
          "type_long": "ghidra.program.model.data.DataType",
          "type_short": "DataType",
          "comment": "a fixed-length datatype.  (NOTE: Should be cloned to program datatype manager\n prior to determining storage elements since their length may change)"
        },
        {
          "name": "storage",
          "type_long": "ghidra.program.model.listing.VariableStorage",
          "type_short": "VariableStorage",
          "comment": "variable storage or null for unassigned storage"
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "target program"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.InvalidInputException",
          "type_short": "InvalidInputException",
          "comment": "if dataType restrictions are violated, an invalid storage \n element is specified, or error while resolving storage element for specified datatype"
        }
      ]
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a parameter with one or more associated storage elements.  Storage elements\n may get slightly modified to adjust for the resolved datatype size.  Ordinal assignment\n is not established (UNASSIGNED_ORDINAL).",
      "javadoc": "Construct a parameter with one or more associated storage elements.  Storage elements\n may get slightly modified to adjust for the resolved datatype size.  Ordinal assignment\n is not established (UNASSIGNED_ORDINAL).\n@param name variable name or null for default name\n@param dataType a fixed-length datatype.  (NOTE: Should be cloned to program datatype manager\n prior to determining storage elements since their length may change)\n@param storage variable storage or null for unassigned storage\n@param program target program\n@param sourceType name source type\n@throws InvalidInputException if dataType restrictions are violated, an invalid storage \n element is specified, or error while resolving storage element for specified datatype",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "variable name or null for default name"
        },
        {
          "name": "dataType",
          "type_long": "ghidra.program.model.data.DataType",
          "type_short": "DataType",
          "comment": "a fixed-length datatype.  (NOTE: Should be cloned to program datatype manager\n prior to determining storage elements since their length may change)"
        },
        {
          "name": "storage",
          "type_long": "ghidra.program.model.listing.VariableStorage",
          "type_short": "VariableStorage",
          "comment": "variable storage or null for unassigned storage"
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "target program"
        },
        {
          "name": "sourceType",
          "type_long": "ghidra.program.model.symbol.SourceType",
          "type_short": "SourceType",
          "comment": "name source type"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.InvalidInputException",
          "type_short": "InvalidInputException",
          "comment": "if dataType restrictions are violated, an invalid storage \n element is specified, or error while resolving storage element for specified datatype"
        }
      ]
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a parameter with one or more associated storage elements.  Storage elements\n may get slightly modified to adjust for the resolved datatype size.",
      "javadoc": "Construct a parameter with one or more associated storage elements.  Storage elements\n may get slightly modified to adjust for the resolved datatype size.\n@param name variable name or null for default name\n@param ordinal parameter ordinal (-1 for return ordinal)\n@param dataType a fixed-length datatype.  (NOTE: Should be cloned to program datatype manager\n prior to determining storage elements since their length may change)\n@param storage variable storage or null for unassigned storage\n@param force if true storage will be forced even if incorrect size\n@param program target program\n@param sourceType name source type\n@throws InvalidInputException if dataType restrictions are violated, an invalid storage \n element is specified, or error while resolving storage element for specified datatype",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "variable name or null for default name"
        },
        {
          "name": "ordinal",
          "type_long": "int",
          "type_short": "int",
          "comment": "parameter ordinal (-1 for return ordinal)"
        },
        {
          "name": "dataType",
          "type_long": "ghidra.program.model.data.DataType",
          "type_short": "DataType",
          "comment": "a fixed-length datatype.  (NOTE: Should be cloned to program datatype manager\n prior to determining storage elements since their length may change)"
        },
        {
          "name": "storage",
          "type_long": "ghidra.program.model.listing.VariableStorage",
          "type_short": "VariableStorage",
          "comment": "variable storage or null for unassigned storage"
        },
        {
          "name": "force",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "if true storage will be forced even if incorrect size"
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "target program"
        },
        {
          "name": "sourceType",
          "type_long": "ghidra.program.model.symbol.SourceType",
          "type_short": "SourceType",
          "comment": "name source type"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.InvalidInputException",
          "type_short": "InvalidInputException",
          "comment": "if dataType restrictions are violated, an invalid storage \n element is specified, or error while resolving storage element for specified datatype"
        }
      ]
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a local variable.  Only one storage/location may be specified (storage, storageAddr,\n stackOffset, register) - all others should be null.  If no storage/location is specified\n or is UNASSIGNED, a Void data type may be specified and will be assumed if this type returns\n true for #isVoidAllowed().",
      "javadoc": "Construct a local variable.  Only one storage/location may be specified (storage, storageAddr,\n stackOffset, register) - all others should be null.  If no storage/location is specified\n or is UNASSIGNED, a Void data type may be specified and will be assumed if this type returns\n true for {@link #isVoidAllowed()}.\n@param name variable name\n@param ordinal parameter ordinal (-1 for return ordinal)\n@param dataType a fixed-length datatype.  (NOTE: Should be cloned to program datatype manager\n prior to determining storage elements since their length may change)\n@param storage variable storage or null for unassigned storage (may be null)\n@param storageAddr storage address or null if no storage has been identified (may be null)\n@param stackOffset signed stack offset (may be null)\n@param register register storage (may be null)\n@param force if true storage will be forced even if mismatch with datatype size\n@param program target program\n@param sourceType source type\n@throws InvalidInputException if dataType restrictions are violated or an error occurs while \n resolving storage for specified datatype\n@throws AddressOutOfBoundsException if invalid stack offset specified",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "variable name"
        },
        {
          "name": "ordinal",
          "type_long": "int",
          "type_short": "int",
          "comment": "parameter ordinal (-1 for return ordinal)"
        },
        {
          "name": "dataType",
          "type_long": "ghidra.program.model.data.DataType",
          "type_short": "DataType",
          "comment": "a fixed-length datatype.  (NOTE: Should be cloned to program datatype manager\n prior to determining storage elements since their length may change)"
        },
        {
          "name": "storage",
          "type_long": "ghidra.program.model.listing.VariableStorage",
          "type_short": "VariableStorage",
          "comment": "variable storage or null for unassigned storage (may be null)"
        },
        {
          "name": "storageAddr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "storage address or null if no storage has been identified (may be null)"
        },
        {
          "name": "stackOffset",
          "type_long": "java.lang.Integer",
          "type_short": "Integer",
          "comment": "signed stack offset (may be null)"
        },
        {
          "name": "register",
          "type_long": "ghidra.program.model.lang.Register",
          "type_short": "Register",
          "comment": "register storage (may be null)"
        },
        {
          "name": "force",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "if true storage will be forced even if mismatch with datatype size"
        },
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "target program"
        },
        {
          "name": "sourceType",
          "type_long": "ghidra.program.model.symbol.SourceType",
          "type_short": "SourceType",
          "comment": "source type"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.InvalidInputException",
          "type_short": "InvalidInputException",
          "comment": "if dataType restrictions are violated or an error occurs while \n resolving storage for specified datatype"
        }
      ]
    },
    {
      "name": "hasDefaultName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getOrdinal",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFirstUseOffset",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDataType",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.data.DataType",
        "type_short": "DataType",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFormalDataType",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.data.DataType",
        "type_short": "DataType",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isForcedIndirect",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isAutoParameter",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getAutoParameterType",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.listing.AutoParameterType",
        "type_short": "AutoParameterType",
        "comment": ""
      },
      "throws": []
    }
  ]
}
