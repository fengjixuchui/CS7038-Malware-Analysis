{
  "name": "BookmarkManager",
  "comment": "Interface for managing bookmarks.",
  "javadoc": "Interface for managing bookmarks.",
  "static": false,
  "implements": [],
  "fields": [
    {
      "name": "OLD_BOOKMARK_PROPERTY_OBJECT_CLASS1",
      "comment": "1st version of bookmark property object class (schema change and class moved)",
      "javadoc": "1st version of bookmark property object class (schema change and class moved)",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"ghidra.app.plugin.bookmark.BookmarkInfo\""
    },
    {
      "name": "OLD_BOOKMARK_PROPERTY_OBJECT_CLASS2",
      "comment": "2nd version of bookmark property object class (class moved, property map no longer used)",
      "javadoc": "2nd version of bookmark property object class (class moved, property map no longer used)",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"ghidra.program.util.Bookmark\""
    }
  ],
  "methods": [
    {
      "name": "defineType",
      "comment": "Define a bookmark type with its marker icon and color.  The icon and color\n values are not permanently stored.  Therefor, this method must be re-invoked\n by a plugin each time a program is opened if a custom icon and color \n are desired.",
      "javadoc": "Define a bookmark type with its marker icon and color.  The icon and color\n values are not permanently stored.  Therefor, this method must be re-invoked\n by a plugin each time a program is opened if a custom icon and color \n are desired.\n@param type bookmark type\n@param icon marker icon which may get scaled\n@param color marker color\n@param priority the bookmark priority\n@return bookmark type object\n@throws IllegalArgumentException if any of the arguments are null or if the type is empty",
      "static": false,
      "params": [
        {
          "name": "type",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "bookmark type"
        },
        {
          "name": "icon",
          "type_long": "javax.swing.ImageIcon",
          "type_short": "ImageIcon",
          "comment": "marker icon which may get scaled"
        },
        {
          "name": "color",
          "type_long": "java.awt.Color",
          "type_short": "Color",
          "comment": "marker color"
        },
        {
          "name": "priority",
          "type_long": "int",
          "type_short": "int",
          "comment": "the bookmark priority"
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.listing.BookmarkType",
        "type_short": "BookmarkType",
        "comment": "bookmark type object"
      },
      "throws": []
    },
    {
      "name": "getBookmarkTypes",
      "comment": "Returns list of known bookmark types",
      "javadoc": "Returns list of known bookmark types\n@return list of known bookmark types",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.listing.BookmarkType[]",
        "type_short": "ghidra.program.model.listing.BookmarkType[]",
        "comment": "list of known bookmark types"
      },
      "throws": []
    },
    {
      "name": "getBookmarkType",
      "comment": "Get a bookmark type",
      "javadoc": "Get a bookmark type\n@param type bookmark type name\n@return bookmark type or null if type is unknown",
      "static": false,
      "params": [
        {
          "name": "type",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "bookmark type name"
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.listing.BookmarkType",
        "type_short": "BookmarkType",
        "comment": "bookmark type or null if type is unknown"
      },
      "throws": []
    },
    {
      "name": "getCategories",
      "comment": "Get list of categories used for a specified type",
      "javadoc": "Get list of categories used for a specified type\n@param type bookmark type\n@return array of category strings",
      "static": false,
      "params": [
        {
          "name": "type",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "bookmark type"
        }
      ],
      "return": {
        "type_long": "java.lang.String[]",
        "type_short": "java.lang.String[]",
        "comment": "array of category strings"
      },
      "throws": []
    },
    {
      "name": "setBookmark",
      "comment": "Set a bookmark.",
      "javadoc": "Set a bookmark.\n@param addr the address at which to set a bookmark\n@param type the name of the bookmark type.\n@param category the category for the bookmark.\n@param comment the comment to associate with the bookmark.\n@return the new bookmark",
      "static": false,
      "params": [
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "the address at which to set a bookmark"
        },
        {
          "name": "type",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of the bookmark type."
        },
        {
          "name": "category",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the category for the bookmark."
        },
        {
          "name": "comment",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the comment to associate with the bookmark."
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.listing.Bookmark",
        "type_short": "Bookmark",
        "comment": "the new bookmark"
      },
      "throws": []
    },
    {
      "name": "getBookmark",
      "comment": "Get a specific bookmark",
      "javadoc": "Get a specific bookmark\n@param addr the address of the bookmark to retrieve\n@param type the name of the bookmark type.\n@param category the category of the bookmark.\n@return the bookmark with the given attributes, or null if no bookmarks match.",
      "static": false,
      "params": [
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "the address of the bookmark to retrieve"
        },
        {
          "name": "type",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of the bookmark type."
        },
        {
          "name": "category",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the category of the bookmark."
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.listing.Bookmark",
        "type_short": "Bookmark",
        "comment": "the bookmark with the given attributes, or null if no bookmarks match."
      },
      "throws": []
    },
    {
      "name": "removeBookmark",
      "comment": "Remove bookmark",
      "javadoc": "Remove bookmark\n@param bookmark the bookmark to remove.",
      "static": false,
      "params": [
        {
          "name": "bookmark",
          "type_long": "ghidra.program.model.listing.Bookmark",
          "type_short": "Bookmark",
          "comment": "the bookmark to remove."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeBookmarks",
      "comment": "Removes all bookmarks of the given type.",
      "javadoc": "Removes all bookmarks of the given type.\n@param type bookmark type",
      "static": false,
      "params": [
        {
          "name": "type",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "bookmark type"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeBookmarks",
      "comment": "Removes all bookmarks with the given type and category.",
      "javadoc": "Removes all bookmarks with the given type and category.\n@param type the type of the bookmarks to be removed.\n@param category bookmark category of the types to be removed.\n@param monitor a task monitor to report the progress.\n@throws CancelledException if the user (via the monitor) cancelled the operation.",
      "static": false,
      "params": [
        {
          "name": "type",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the type of the bookmarks to be removed."
        },
        {
          "name": "category",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "bookmark category of the types to be removed."
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": "a task monitor to report the progress."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": "if the user (via the monitor) cancelled the operation."
        }
      ]
    },
    {
      "name": "removeBookmarks",
      "comment": "Removes all bookmarks over the given address set.",
      "javadoc": "Removes all bookmarks over the given address set.\n@param set the set of addresses from which to remove all bookmarks.\n@param monitor a task monitor to report the progress.\n@throws CancelledException if the user (via the monitor) cancelled the operation.",
      "static": false,
      "params": [
        {
          "name": "set",
          "type_long": "ghidra.program.model.address.AddressSetView",
          "type_short": "AddressSetView",
          "comment": "the set of addresses from which to remove all bookmarks."
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": "a task monitor to report the progress."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": "if the user (via the monitor) cancelled the operation."
        }
      ]
    },
    {
      "name": "removeBookmarks",
      "comment": "Removes all bookmarks of the given type over the given address set",
      "javadoc": "Removes all bookmarks of the given type over the given address set\n@param set the set of addresses from which to remove all bookmarks of the given type.\n@param type the type of bookmarks to remove.\n@param monitor a task monitor to report the progress.\n@throws CancelledException if the user (via the monitor) cancelled the operation.",
      "static": false,
      "params": [
        {
          "name": "set",
          "type_long": "ghidra.program.model.address.AddressSetView",
          "type_short": "AddressSetView",
          "comment": "the set of addresses from which to remove all bookmarks of the given type."
        },
        {
          "name": "type",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the type of bookmarks to remove."
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": "a task monitor to report the progress."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": "if the user (via the monitor) cancelled the operation."
        }
      ]
    },
    {
      "name": "removeBookmarks",
      "comment": "Removes all bookmarks of the given type and category over the given address set",
      "javadoc": "Removes all bookmarks of the given type and category over the given address set\n@param set the set of addresses from which to remove all bookmarks of the given type and category.\n@param type the type of bookmarks to remove.\n@param category the category of bookmarks to remove.\n@param monitor a task monitor to report the progress.\n@throws CancelledException if the user (via the monitor) cancelled the operation.",
      "static": false,
      "params": [
        {
          "name": "set",
          "type_long": "ghidra.program.model.address.AddressSetView",
          "type_short": "AddressSetView",
          "comment": "the set of addresses from which to remove all bookmarks of the given type and category."
        },
        {
          "name": "type",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the type of bookmarks to remove."
        },
        {
          "name": "category",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the category of bookmarks to remove."
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": "a task monitor to report the progress."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": "if the user (via the monitor) cancelled the operation."
        }
      ]
    },
    {
      "name": "getBookmarks",
      "comment": "Get bookmarks of the indicated type on a specific address",
      "javadoc": "Get bookmarks of the indicated type on a specific address\n@param address the address at which to search for bookmarks.\n@param type bookmark type to search for\n@return array of bookmarks",
      "static": false,
      "params": [
        {
          "name": "address",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "the address at which to search for bookmarks."
        },
        {
          "name": "type",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "bookmark type to search for"
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.listing.Bookmark[]",
        "type_short": "ghidra.program.model.listing.Bookmark[]",
        "comment": "array of bookmarks"
      },
      "throws": []
    },
    {
      "name": "getBookmarks",
      "comment": "Get all bookmarks on a specific address",
      "javadoc": "Get all bookmarks on a specific address\n@param addr the address at which to retrieve all bookmarks.\n@return array of bookmarks",
      "static": false,
      "params": [
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "the address at which to retrieve all bookmarks."
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.listing.Bookmark[]",
        "type_short": "ghidra.program.model.listing.Bookmark[]",
        "comment": "array of bookmarks"
      },
      "throws": []
    },
    {
      "name": "getBookmarkAddresses",
      "comment": "Get addresses for bookmarks of a specified type.",
      "javadoc": "Get addresses for bookmarks of a specified type.\n@param type bookmark type\n@return address set containing bookmarks of the specified type.",
      "static": false,
      "params": [
        {
          "name": "type",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "bookmark type"
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.AddressSetView",
        "type_short": "AddressSetView",
        "comment": "address set containing bookmarks of the specified type."
      },
      "throws": []
    },
    {
      "name": "getBookmarksIterator",
      "comment": "Get iterator over all bookmarks of the specified type.",
      "javadoc": "Get iterator over all bookmarks of the specified type.\n@param type the bookmark type to search for\n@return an iterator over all bookmarks of the specified type.",
      "static": false,
      "params": [
        {
          "name": "type",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the bookmark type to search for"
        }
      ],
      "return": {
        "type_long": "java.util.Iterator\u003cghidra.program.model.listing.Bookmark\u003e",
        "type_short": "Iterator",
        "comment": "an iterator over all bookmarks of the specified type."
      },
      "throws": []
    },
    {
      "name": "getBookmarksIterator",
      "comment": "Returns an iterator over all bookmarks",
      "javadoc": "Returns an iterator over all bookmarks\n@return an iterator over all bookmarks",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Iterator\u003cghidra.program.model.listing.Bookmark\u003e",
        "type_short": "Iterator",
        "comment": "an iterator over all bookmarks"
      },
      "throws": []
    },
    {
      "name": "getBookmarksIterator",
      "comment": "Returns an iterator over all bookmark types, starting at the given address, with traversal\n in the given direction.",
      "javadoc": "Returns an iterator over all bookmark types, starting at the given address, with traversal\n in the given direction.\n@param startAddress the address at which to start\n@param forward true to iterate in the forward direction; false for backwards\n@return an iterator over all bookmark types, starting at the given address, with traversal\n \t\t   in the given direction.",
      "static": false,
      "params": [
        {
          "name": "startAddress",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "the address at which to start"
        },
        {
          "name": "forward",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true to iterate in the forward direction; false for backwards"
        }
      ],
      "return": {
        "type_long": "java.util.Iterator\u003cghidra.program.model.listing.Bookmark\u003e",
        "type_short": "Iterator",
        "comment": "an iterator over all bookmark types, starting at the given address, with traversal\n \t\t   in the given direction."
      },
      "throws": []
    },
    {
      "name": "getBookmark",
      "comment": "Returns the bookmark that has the given id or null if no such bookmark exists.",
      "javadoc": "Returns the bookmark that has the given id or null if no such bookmark exists.\n@param id the id of the bookmark to be retrieved.\n@return the bookmark",
      "static": false,
      "params": [
        {
          "name": "id",
          "type_long": "long",
          "type_short": "long",
          "comment": "the id of the bookmark to be retrieved."
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.listing.Bookmark",
        "type_short": "Bookmark",
        "comment": "the bookmark"
      },
      "throws": []
    },
    {
      "name": "hasBookmarks",
      "comment": "Returns true if program contains one or more bookmarks of the given type",
      "javadoc": "Returns true if program contains one or more bookmarks of the given type\n@param type the type of bookmark to check for.\n@return true if program contains one or more bookmarks of the given type",
      "static": false,
      "params": [
        {
          "name": "type",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the type of bookmark to check for."
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if program contains one or more bookmarks of the given type"
      },
      "throws": []
    },
    {
      "name": "getBookmarkCount",
      "comment": "Return the number of bookmarks of the given type",
      "javadoc": "Return the number of bookmarks of the given type\n@param type the type of bookmarks to count\n@return the number of bookmarks of the given type",
      "static": false,
      "params": [
        {
          "name": "type",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the type of bookmarks to count"
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the number of bookmarks of the given type"
      },
      "throws": []
    },
    {
      "name": "getBookmarkCount",
      "comment": "Returns the total number of bookmarks in the program",
      "javadoc": "Returns the total number of bookmarks in the program\n@return the total number of bookmarks in the program",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the total number of bookmarks in the program"
      },
      "throws": []
    },
    {
      "name": "getProgram",
      "comment": "Returns the program associated with this BookmarkManager.",
      "javadoc": "Returns the program associated with this BookmarkManager.\n@return the program associated with this BookmarkManager.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.listing.Program",
        "type_short": "Program",
        "comment": "the program associated with this BookmarkManager."
      },
      "throws": []
    }
  ]
}
