{
  "name": "Group",
  "comment": "The interface for groupings of code units that may have attributes such\n as names and comments.",
  "javadoc": "The interface for groupings of code units that may have attributes such\n as names and comments.",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "getComment",
      "comment": "Obtains the comment that has been associated with this fragment or module.",
      "javadoc": "Obtains the comment that has been associated with this fragment or module.\n@return may be null.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "may be null."
      },
      "throws": []
    },
    {
      "name": "setComment",
      "comment": "Sets the comment to associate with this fragment.",
      "javadoc": "Sets the comment to associate with this fragment.\n@param comment the comment.",
      "static": false,
      "params": [
        {
          "name": "comment",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the comment."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getName",
      "comment": "Obtains the name that has been associated with this fragment. A fragment will\n always have a name and it will be unique within the set of all fragment and\n module names.",
      "javadoc": "Obtains the name that has been associated with this fragment. A fragment will\n always have a name and it will be unique within the set of all fragment and\n module names.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setName",
      "comment": "Sets the name of this fragment.",
      "javadoc": "Sets the name of this fragment.\n@param name the string to use for the fragment\u0027s name.\n@exception DuplicateNameException thrown if the name being set is already in use by another fragment or a\n                   module.",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the string to use for the fragment\u0027s name."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.DuplicateNameException",
          "type_short": "DuplicateNameException",
          "comment": ""
        }
      ]
    },
    {
      "name": "contains",
      "comment": "Returns whether this fragment contains the given code unit.",
      "javadoc": "Returns whether this fragment contains the given code unit.\u003cP\u003e\n@param codeUnit the code unit being tested.\n@return true if the code unit is in the fragment, false otherwise.",
      "static": false,
      "params": [
        {
          "name": "codeUnit",
          "type_long": "ghidra.program.model.listing.CodeUnit",
          "type_short": "CodeUnit",
          "comment": "the code unit being tested."
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the code unit is in the fragment, false otherwise."
      },
      "throws": []
    },
    {
      "name": "getNumParents",
      "comment": "Obtains the number of parent\u0027s of this fragment. If a fragment is in a module\n then the module is a parent of the fragment and the fragment is a\n child of the module. A fragment must have at least one parent and it\n may have multiple parents.",
      "javadoc": "Obtains the number of parent\u0027s of this fragment. If a fragment is in a module\n then the module is a \u003cI\u003eparent\u003c/I\u003e of the fragment and the fragment is a\n \u003cI\u003echild\u003c/I\u003e of the module. A fragment must have at least one parent and it\n may have multiple parents.\n@return the number of parents of this fragment.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the number of parents of this fragment."
      },
      "throws": []
    },
    {
      "name": "getParents",
      "comment": "Returns a list of the modules which are parents for this group.",
      "javadoc": "Returns a list of the modules which are parents for this group.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.listing.ProgramModule[]",
        "type_short": "ghidra.program.model.listing.ProgramModule[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getParentNames",
      "comment": "Returns the names of the modules which are parents to this\n fragment.",
      "javadoc": "Returns the names of the modules which are parents to this\n fragment.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String[]",
        "type_short": "java.lang.String[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getTreeName",
      "comment": "Returns the name of the tree that this group belongs to.",
      "javadoc": "Returns the name of the tree that this group belongs to.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    }
  ]
}
