{
  "name": "DisambiguateByBytes",
  "comment": "Attempt to disambiguate similar n-grams by hashing over all the bytes in their constituent instructions.",
  "javadoc": "Attempt to disambiguate similar n-grams by hashing over all the bytes in their constituent instructions.",
  "static": false,
  "implements": [
    "ghidra.program.model.correlate.DisambiguateStrategy"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "hashCalc",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.correlate.AllBytesHashCalculator",
      "type_short": "AllBytesHashCalculator",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "calcHashes",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "instHash",
          "type_long": "ghidra.program.model.correlate.InstructHash",
          "type_short": "InstructHash",
          "comment": ""
        },
        {
          "name": "matchSize",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "store",
          "type_long": "ghidra.program.model.correlate.HashStore",
          "type_short": "HashStore",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.ArrayList\u003cghidra.program.model.correlate.Hash\u003e",
        "type_short": "ArrayList",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": ""
        },
        {
          "type_long": "ghidra.program.model.mem.MemoryAccessException",
          "type_short": "MemoryAccessException",
          "comment": ""
        }
      ]
    }
  ]
}
