{
  "name": "DisambiguateStrategy",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "calcHashes",
      "comment": "Generate (possibly multiple) hashes that can be used to disambiguate an n-gram and its block from other\n blocks with similar instructions.  Hashes are attached to the block\u0027s disambigHash list.",
      "javadoc": "Generate (possibly multiple) hashes that can be used to disambiguate an n-gram and its block from other\n blocks with similar instructions.  Hashes are attached to the block\u0027s disambigHash list.\n@param instHash the instruction hash\n@param matchSize the number of instructions to match\n@param store is the HashStore used to store the disambiguating hashes\n@return the list of disambiguating hashes\n@throws CancelledException\n@throws MemoryAccessException",
      "static": false,
      "params": [
        {
          "name": "instHash",
          "type_long": "ghidra.program.model.correlate.InstructHash",
          "type_short": "InstructHash",
          "comment": "the instruction hash"
        },
        {
          "name": "matchSize",
          "type_long": "int",
          "type_short": "int",
          "comment": "the number of instructions to match"
        },
        {
          "name": "store",
          "type_long": "ghidra.program.model.correlate.HashStore",
          "type_short": "HashStore",
          "comment": "is the HashStore used to store the disambiguating hashes"
        }
      ],
      "return": {
        "type_long": "java.util.ArrayList\u003cghidra.program.model.correlate.Hash\u003e",
        "type_short": "ArrayList",
        "comment": "the list of disambiguating hashes"
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": ""
        },
        {
          "type_long": "ghidra.program.model.mem.MemoryAccessException",
          "type_short": "MemoryAccessException",
          "comment": ""
        }
      ]
    }
  ]
}
