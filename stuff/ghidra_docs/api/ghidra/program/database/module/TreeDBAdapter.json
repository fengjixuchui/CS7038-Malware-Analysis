{
  "name": "TreeDBAdapter",
  "comment": "Adapter to access the Tree database table that has a Tree ID (key) and\n a tree name.",
  "javadoc": "Adapter to access the Tree database table that has a Tree ID (key) and\n a tree name.",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "createRecord",
      "comment": "Create a new record for Tree table.",
      "javadoc": "Create a new record for Tree table.\n@param name name of the tree\n@return record for the tree\n@throws IOException if there was a problem accessing the database",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "name of the tree"
        }
      ],
      "return": {
        "type_long": "db.DBRecord",
        "type_short": "DBRecord",
        "comment": "record for the tree"
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if there was a problem accessing the database"
        }
      ]
    },
    {
      "name": "deleteRecord",
      "comment": "Delete the record for the tree and all associated tables.",
      "javadoc": "Delete the record for the tree and all associated tables.\n@param treeID key\n@return true if the tree was successfully deleted\n@throws IOException if there was a problem accessing the database",
      "static": false,
      "params": [
        {
          "name": "treeID",
          "type_long": "long",
          "type_short": "long",
          "comment": "key"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the tree was successfully deleted"
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if there was a problem accessing the database"
        }
      ]
    },
    {
      "name": "getRecord",
      "comment": "Get the record for the given tree ID.",
      "javadoc": "Get the record for the given tree ID.\n@throws IOException if there was a problem accessing the database",
      "static": false,
      "params": [
        {
          "name": "treeID",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "db.DBRecord",
        "type_short": "DBRecord",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if there was a problem accessing the database"
        }
      ]
    },
    {
      "name": "getRecord",
      "comment": "Get the record for the tree with the given name.",
      "javadoc": "Get the record for the tree with the given name.\n@throws IOException if there was a problem accessing the database",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "db.DBRecord",
        "type_short": "DBRecord",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if there was a problem accessing the database"
        }
      ]
    },
    {
      "name": "getRecords",
      "comment": "Get an iterator over all tree records.",
      "javadoc": "Get an iterator over all tree records.\n@throws IOException if there was a problem accessing the database",
      "static": false,
      "params": [],
      "return": {
        "type_long": "db.RecordIterator",
        "type_short": "RecordIterator",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if there was a problem accessing the database"
        }
      ]
    },
    {
      "name": "updateRecord",
      "comment": "Update the tree table with the given record.",
      "javadoc": "Update the tree table with the given record.\n@throws IOException if there was a problem accessing the database",
      "static": false,
      "params": [
        {
          "name": "record",
          "type_long": "db.DBRecord",
          "type_short": "DBRecord",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if there was a problem accessing the database"
        }
      ]
    }
  ]
}
