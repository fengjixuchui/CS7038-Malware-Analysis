{
  "name": "LazyLoadingCachingMap",
  "comment": "Instances of this class will provide a simple map interface to a cached set of key,value\n pairs.  This class requires that the map can be generated from scratch at any time and\n that adding/removing items from this map is just a mirroring of those changes elsewhere.\n This map is lazy in that it won\u0027t load the data until needed and it will use a soft reference\n to maintain the map until such time as the java garbage collector decides to reclaim it.\n \n This class uses a ghidra Lock object to coordinate threaded access when loading the\n underlying map data.  It manages both the lock and its own synchronization to avoid\n race conditions and deadlocks.",
  "javadoc": "Instances of this class will provide a simple map interface to a cached set of key,value\n pairs.  This class requires that the map can be generated from scratch at any time and\n that adding/removing items from this map is just a mirroring of those changes elsewhere.\n This map is lazy in that it won\u0027t load the data until needed and it will use a soft reference\n to maintain the map until such time as the java garbage collector decides to reclaim it.\n \u003cp\u003e\n This class uses a ghidra Lock object to coordinate threaded access when loading the\n underlying map data.  It manages both the lock and its own synchronization to avoid\n race conditions and deadlocks.\n@param \u003cK\u003e the key type.\n@param \u003cV\u003e the value type.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "lock",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.Lock",
      "type_short": "Lock",
      "constant_value": null
    },
    {
      "name": "softRef",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.ref.SoftReference\u003cjava.util.Map\u003cK,V\u003e\u003e",
      "type_short": "SoftReference",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "lock",
          "type_long": "ghidra.util.Lock",
          "type_short": "Lock",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "loadMap",
      "comment": "This method will reload the map data from scratch. Subclass may assume that the database\n lock has been acquired.",
      "javadoc": "This method will reload the map data from scratch. Subclass may assume that the database\n lock has been acquired.\n@return a map containing all current key, value pairs.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Map\u003cK,V\u003e",
        "type_short": "Map",
        "comment": "a map containing all current key, value pairs."
      },
      "throws": []
    },
    {
      "name": "put",
      "comment": "Adds the key,value pair to the map.  If the map is not loaded, this method will do nothing.",
      "javadoc": "Adds the key,value pair to the map.  If the map is not loaded, this method will do nothing.\n@param key the key\n@param value the value that is associated with the key.",
      "static": false,
      "params": [
        {
          "name": "key",
          "type_long": "K",
          "type_short": "K",
          "comment": "the key"
        },
        {
          "name": "value",
          "type_long": "V",
          "type_short": "V",
          "comment": "the value that is associated with the key."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "remove",
      "comment": "Removes the key,value pair from the map as specified by the given key.  If the map is\n currently not loaded, this method will do nothing.",
      "javadoc": "Removes the key,value pair from the map as specified by the given key.  If the map is\n currently not loaded, this method will do nothing.\n@param key the key to remove from the map.",
      "static": false,
      "params": [
        {
          "name": "key",
          "type_long": "K",
          "type_short": "K",
          "comment": "the key to remove from the map."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "clear",
      "comment": "Removes any cached map of values and restores the map to its initial state.",
      "javadoc": "Removes any cached map of values and restores the map to its initial state.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "get",
      "comment": "Retrieves the value for the given key.  This will currently load the map if not already\n loaded.",
      "javadoc": "Retrieves the value for the given key.  This will currently load the map if not already\n loaded.\n@param key the key for whose value to retrieve.\n@return the value for the given key.",
      "static": false,
      "params": [
        {
          "name": "key",
          "type_long": "K",
          "type_short": "K",
          "comment": "the key for whose value to retrieve."
        }
      ],
      "return": {
        "type_long": "V",
        "type_short": "V",
        "comment": "the value for the given key."
      },
      "throws": []
    },
    {
      "name": "values",
      "comment": "Returns an unmodifiable view of the values in this map.",
      "javadoc": "Returns an unmodifiable view of the values in this map.\n@return an unmodifiable view of the values in this map.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Collection\u003cV\u003e",
        "type_short": "Collection",
        "comment": "an unmodifiable view of the values in this map."
      },
      "throws": []
    },
    {
      "name": "getOrLoadMap",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Map\u003cK,V\u003e",
        "type_short": "Map",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getMap",
      "comment": "Note: this map is always called from either a synchronized block or code holding the\n \"lock\".",
      "javadoc": "Note: this map is always called from either a synchronized block or code holding the\n \"lock\".\n@return the underlying map of key,value pairs or null if it is currently not loaded.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Map\u003cK,V\u003e",
        "type_short": "Map",
        "comment": "the underlying map of key,value pairs or null if it is currently not loaded."
      },
      "throws": []
    }
  ]
}
