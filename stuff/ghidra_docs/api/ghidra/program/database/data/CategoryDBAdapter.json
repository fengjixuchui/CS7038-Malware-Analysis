{
  "name": "CategoryDBAdapter",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "CATEGORY_NAME_COL",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "0"
    },
    {
      "name": "CATEGORY_PARENT_COL",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "1"
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getAdapter",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "handle",
          "type_long": "db.DBHandle",
          "type_short": "DBHandle",
          "comment": ""
        },
        {
          "name": "openMode",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.database.data.CategoryDBAdapter",
        "type_short": "CategoryDBAdapter",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.VersionException",
          "type_short": "VersionException",
          "comment": ""
        },
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getRecord",
      "comment": "Gets the category record for the given ID.",
      "javadoc": "Gets the category record for the given ID.\n@param categoryID the key into the category table\n@return the record for the given ID or null if no record with that id exists.\n@throws IOException if IO error occurs",
      "static": false,
      "params": [
        {
          "name": "categoryID",
          "type_long": "long",
          "type_short": "long",
          "comment": "the key into the category table"
        }
      ],
      "return": {
        "type_long": "db.DBRecord",
        "type_short": "DBRecord",
        "comment": "the record for the given ID or null if no record with that id exists."
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if IO error occurs"
        }
      ]
    },
    {
      "name": "updateRecord",
      "comment": "Updates the record in the database",
      "javadoc": "Updates the record in the database\n@param categoryID category record key\n@param parentCategoryID parent category record key (-1 for root category)\n@param name category name\n@throws IOException if IO error occurs",
      "static": false,
      "params": [
        {
          "name": "categoryID",
          "type_long": "long",
          "type_short": "long",
          "comment": "category record key"
        },
        {
          "name": "parentCategoryID",
          "type_long": "long",
          "type_short": "long",
          "comment": "parent category record key (-1 for root category)"
        },
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "category name"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if IO error occurs"
        }
      ]
    },
    {
      "name": "getRecordIdsWithParent",
      "comment": "Returns a list of categoryIDs that have the given parent ID.",
      "javadoc": "Returns a list of categoryIDs that have the given parent ID.\n@param categoryID the key into the catagory table\n@return an array of categoryIDs that have the specified parent.  Field array \n returned with LongField key values.\n@throws IOException if IO error occurs",
      "static": false,
      "params": [
        {
          "name": "categoryID",
          "type_long": "long",
          "type_short": "long",
          "comment": "the key into the catagory table"
        }
      ],
      "return": {
        "type_long": "db.Field[]",
        "type_short": "db.Field[]",
        "comment": "an array of categoryIDs that have the specified parent.  Field array \n returned with LongField key values."
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if IO error occurs"
        }
      ]
    },
    {
      "name": "createCategory",
      "comment": "Creates a new category with the given name and parent ID.",
      "javadoc": "Creates a new category with the given name and parent ID.\n@param name the name of the new category.\n@param parentID the parent key into the catagory table\n@return a new record for the new category.\n@throws IOException if IO error occurs",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of the new category."
        },
        {
          "name": "parentID",
          "type_long": "long",
          "type_short": "long",
          "comment": "the parent key into the catagory table"
        }
      ],
      "return": {
        "type_long": "db.DBRecord",
        "type_short": "DBRecord",
        "comment": "a new record for the new category."
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if IO error occurs"
        }
      ]
    },
    {
      "name": "removeCategory",
      "comment": "Removes the category with the given ID.",
      "javadoc": "Removes the category with the given ID.\n@param categoryID the key into the category table\n@return true if the a category with that id existed.\n@throws IOException if IO error occurs",
      "static": false,
      "params": [
        {
          "name": "categoryID",
          "type_long": "long",
          "type_short": "long",
          "comment": "the key into the category table"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the a category with that id existed."
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if IO error occurs"
        }
      ]
    },
    {
      "name": "getRootRecord",
      "comment": "Get the record for the root category.",
      "javadoc": "Get the record for the root category.\n@return root category record\n@throws IOException if IO error occurs",
      "static": false,
      "params": [],
      "return": {
        "type_long": "db.DBRecord",
        "type_short": "DBRecord",
        "comment": "root category record"
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if IO error occurs"
        }
      ]
    },
    {
      "name": "putRecord",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "record",
          "type_long": "db.DBRecord",
          "type_short": "DBRecord",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getRecordCount",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    }
  ]
}
