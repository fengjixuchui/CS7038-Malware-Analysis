{
  "name": "DataTypeProxyComponentDB",
  "comment": "DataTypeProxyComponentDB facilitates a datatype/component substitution when a \n DataTypeManagerDB is constructed for read-only use and datatype migration is required.  \n An example of this is the StructureDB migration of flex-arrays to a zero-element array.",
  "javadoc": "\u003ccode\u003eDataTypeProxyComponentDB\u003c/code\u003e facilitates a datatype/component substitution when a \n DataTypeManagerDB is constructed for read-only use and datatype migration is required.  \n An example of this is the {@link StructureDB} migration of flex-arrays to a zero-element array.",
  "static": false,
  "implements": [],
  "extends": "ghidra.program.database.data.DataTypeComponentDB",
  "fields": [
    {
      "name": "fieldName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "comment",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a DataTypeComponentDB with specific component characteristics and without a record.",
      "javadoc": "Construct a DataTypeComponentDB with specific component characteristics and without a record.\n@param dataMgr associated datatype manager\n@param parent composite datatype which contains this component\n@param ordinal component ordinal\n@param offset component offset\n@param length component length\n@param datatype component datatype\n@param fieldName component field name or null\n@param comment component comment or null",
      "static": false,
      "params": [
        {
          "name": "dataMgr",
          "type_long": "ghidra.program.database.data.DataTypeManagerDB",
          "type_short": "DataTypeManagerDB",
          "comment": "associated datatype manager"
        },
        {
          "name": "parent",
          "type_long": "ghidra.program.database.data.CompositeDB",
          "type_short": "CompositeDB",
          "comment": "composite datatype which contains this component"
        },
        {
          "name": "ordinal",
          "type_long": "int",
          "type_short": "int",
          "comment": "component ordinal"
        },
        {
          "name": "offset",
          "type_long": "int",
          "type_short": "int",
          "comment": "component offset"
        },
        {
          "name": "datatype",
          "type_long": "ghidra.program.model.data.DataType",
          "type_short": "DataType",
          "comment": "component datatype"
        },
        {
          "name": "length",
          "type_long": "int",
          "type_short": "int",
          "comment": "component length"
        },
        {
          "name": "fieldName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "component field name or null"
        },
        {
          "name": "comment",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "component comment or null"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFieldName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getComment",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    }
  ]
}
