{
  "name": "DataTypeIDConverter",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [
    "ghidra.GhidraLaunchable"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "idMap",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.datastruct.LongLongHashtable",
      "type_short": "LongLongHashtable",
      "constant_value": null
    },
    {
      "name": "convertedCount",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "builtInsCount",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "nullIDsCount",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "nonDataTypeDBCount",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "notInMapCount",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "launch",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "layout",
          "type_long": "ghidra.GhidraApplicationLayout",
          "type_short": "GhidraApplicationLayout",
          "comment": ""
        },
        {
          "name": "args",
          "type_long": "java.lang.String[]",
          "type_short": "java.lang.String[]",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "swap",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "inFile",
          "type_long": "java.io.File",
          "type_short": "File",
          "comment": ""
        },
        {
          "name": "idMapFile",
          "type_long": "java.io.File",
          "type_short": "File",
          "comment": ""
        },
        {
          "name": "outFile",
          "type_long": "java.io.File",
          "type_short": "File",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "loadMap",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "idMapFile",
          "type_long": "java.io.File",
          "type_short": "File",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.InvalidInputException",
          "type_short": "InvalidInputException",
          "comment": ""
        },
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "transformDataTypes",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "oldFileArchive",
          "type_long": "ghidra.program.model.data.FileDataTypeManager",
          "type_short": "FileDataTypeManager",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
