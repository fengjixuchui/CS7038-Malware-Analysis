{
  "name": "GenericSaveable",
  "comment": "GenericSaveable is used by the DBPropertyMapManager\n when the class can not be found and loaded for the class path name of a \n property in the database. This allows the properties for that class to be \n accessed in a generic way so that the manager can copy or remove the property \n at a particular address. This allows the Diff and MultiUser Merge to compare \n and manipulate the property as needed.",
  "javadoc": "\u003ccode\u003eGenericSaveable\u003c/code\u003e is used by the \u003ccode\u003eDBPropertyMapManager\u003c/code\u003e\n when the class can not be found and loaded for the class path name of a \n property in the database. This allows the properties for that class to be \n accessed in a generic way so that the manager can copy or remove the property \n at a particular address. This allows the Diff and MultiUser Merge to compare \n and manipulate the property as needed.",
  "static": false,
  "implements": [
    "ghidra.util.Saveable"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "record",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "db.DBRecord",
      "type_short": "DBRecord",
      "constant_value": null
    },
    {
      "name": "schema",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "db.Schema",
      "type_short": "Schema",
      "constant_value": null
    },
    {
      "name": "fieldClasses",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.Class\u003c?\u003e[]",
      "type_short": "java.lang.Class\u003c?\u003e[]",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Creates a generic saveable that can be used by the property map manager\n via the saveable\u0027s record and associated database schema",
      "javadoc": "Creates a generic saveable that can be used by the property map manager\n via the saveable\u0027s record and associated database schema\n@param record the saveable\u0027s record.\n@param schema the saveable\u0027s database table\u0027s schema.",
      "static": false,
      "params": [
        {
          "name": "record",
          "type_long": "db.DBRecord",
          "type_short": "DBRecord",
          "comment": "the saveable\u0027s record."
        },
        {
          "name": "schema",
          "type_long": "db.Schema",
          "type_short": "Schema",
          "comment": "the saveable\u0027s database table\u0027s schema."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getObjectStorageFields",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.Class\u003c?\u003e[]",
        "type_short": "java.lang.Class\u003c?\u003e[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "save",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "objStorage",
          "type_long": "ghidra.util.ObjectStorage",
          "type_short": "ObjectStorage",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "restore",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "objStorage",
          "type_long": "ghidra.util.ObjectStorage",
          "type_short": "ObjectStorage",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSchemaVersion",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isUpgradeable",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "oldSchemaVersion",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "upgrade",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "oldObjStorage",
          "type_long": "ghidra.util.ObjectStorage",
          "type_short": "ObjectStorage",
          "comment": ""
        },
        {
          "name": "oldSchemaVersion",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "currentObjStorage",
          "type_long": "ghidra.util.ObjectStorage",
          "type_short": "ObjectStorage",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isPrivate",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hashCode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "equals",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "obj",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    }
  ]
}
