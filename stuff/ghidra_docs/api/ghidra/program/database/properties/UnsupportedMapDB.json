{
  "name": "UnsupportedMapDB",
  "comment": "This class provides a dummy map for an unsupported map.",
  "javadoc": "This class provides a dummy map for an unsupported map.",
  "static": false,
  "implements": [],
  "extends": "ghidra.program.database.properties.PropertyMapDB",
  "fields": [],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a dummy property map.",
      "javadoc": "Construct a dummy property map.\n@param dbHandle database handle.\n@param openMode the mode that the program was openned in.\n@param errHandler database error handler.\n@param changeMgr change manager for event notification\n@param addrMap address map.\n@param name property name.\n@param monitor progress monitor that is only used when upgrading\n@throws VersionException if the database version is not the expected version.\n@throws CancelledException if the user cancels the upgrade operation.\n@throws IOException if a database io error occurs.",
      "static": false,
      "params": [
        {
          "name": "dbHandle",
          "type_long": "db.DBHandle",
          "type_short": "DBHandle",
          "comment": "database handle."
        },
        {
          "name": "openMode",
          "type_long": "int",
          "type_short": "int",
          "comment": "the mode that the program was openned in."
        },
        {
          "name": "errHandler",
          "type_long": "db.util.ErrorHandler",
          "type_short": "ErrorHandler",
          "comment": "database error handler."
        },
        {
          "name": "changeMgr",
          "type_long": "ghidra.program.util.ChangeManager",
          "type_short": "ChangeManager",
          "comment": "change manager for event notification"
        },
        {
          "name": "addrMap",
          "type_long": "ghidra.program.database.map.AddressMap",
          "type_short": "AddressMap",
          "comment": "address map."
        },
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "property name."
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": "progress monitor that is only used when upgrading"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.VersionException",
          "type_short": "VersionException",
          "comment": "if the database version is not the expected version."
        },
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": "if the user cancels the upgrade operation."
        },
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if a database io error occurs."
        }
      ]
    },
    {
      "name": "applyValue",
      "comment": "",
      "javadoc": "@see ghidra.program.model.util.PropertyMap#applyValue(ghidra.util.prop.PropertyVisitor, ghidra.program.model.address.Address)",
      "static": false,
      "params": [
        {
          "name": "visitor",
          "type_long": "ghidra.util.prop.PropertyVisitor",
          "type_short": "PropertyVisitor",
          "comment": ""
        },
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getObject",
      "comment": "",
      "javadoc": "@see ghidra.program.model.util.PropertyMap#getObject(ghidra.program.model.address.Address)",
      "static": false,
      "params": [
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.Object",
        "type_short": "Object",
        "comment": ""
      },
      "throws": []
    }
  ]
}
