{
  "name": "ObjectPropertyMapDB",
  "comment": "Property manager that deals with properties that are of\n a Saveable Object type and store within a database table.",
  "javadoc": "Property manager that deals with properties that are of\n a Saveable Object type and store within a database table.",
  "static": false,
  "implements": [
    "ghidra.program.model.util.ObjectPropertyMap"
  ],
  "extends": "ghidra.program.database.properties.PropertyMapDB",
  "fields": [
    {
      "name": "saveableObjectClass",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.Class\u003c? extends ghidra.util.Saveable\u003e",
      "type_short": "Class",
      "constant_value": null
    },
    {
      "name": "saveableObjectVersion",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "supportsPrivate",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct an Saveable object property map.",
      "javadoc": "Construct an Saveable object property map.\n@param dbHandle database handle.\n@param openMode the mode that the program was opened in.\n@param errHandler database error handler.\n@param changeMgr change manager for event notification\n@param addrMap address map.\n@param name property name.\n@param monitor progress monitor that is only used when upgrading\n@throws CancelledException if the user cancels the upgrade operation.\n@throws IOException if a database io error occurs.\n@throws VersionException the map version is incompatible with\n the current Saveable object class version.  This will never be thrown\n if upgrade is true.",
      "static": false,
      "params": [
        {
          "name": "dbHandle",
          "type_long": "db.DBHandle",
          "type_short": "DBHandle",
          "comment": "database handle."
        },
        {
          "name": "openMode",
          "type_long": "int",
          "type_short": "int",
          "comment": "the mode that the program was opened in."
        },
        {
          "name": "errHandler",
          "type_long": "db.util.ErrorHandler",
          "type_short": "ErrorHandler",
          "comment": "database error handler."
        },
        {
          "name": "changeMgr",
          "type_long": "ghidra.program.util.ChangeManager",
          "type_short": "ChangeManager",
          "comment": "change manager for event notification"
        },
        {
          "name": "addrMap",
          "type_long": "ghidra.program.database.map.AddressMap",
          "type_short": "AddressMap",
          "comment": "address map."
        },
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "property name."
        },
        {
          "name": "saveableObjectClass",
          "type_long": "java.lang.Class\u003c? extends ghidra.util.Saveable\u003e",
          "type_short": "Class",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": "progress monitor that is only used when upgrading"
        },
        {
          "name": "supportsPrivate",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.VersionException",
          "type_short": "VersionException",
          "comment": "the map version is incompatible with\n the current Saveable object class version.  This will never be thrown\n if upgrade is true."
        },
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": "if the user cancels the upgrade operation."
        },
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if a database io error occurs."
        }
      ]
    },
    {
      "name": "getSaveableClassForName",
      "comment": "Returns the class for the indicated class path name.\n If the class can\u0027t be determined,\n the GenericSaveable class is returned.",
      "javadoc": "Returns the class for the indicated class path name.\n If the class can\u0027t be determined,\n the GenericSaveable class is returned.\n@param classPath the class path name of the desired class.\n@return the class or a GenericSaveable.",
      "static": true,
      "params": [
        {
          "name": "classPath",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the class path name of the desired class."
        }
      ],
      "return": {
        "type_long": "java.lang.Class\u003c? extends ghidra.util.Saveable\u003e",
        "type_short": "Class",
        "comment": "the class or a GenericSaveable."
      },
      "throws": []
    },
    {
      "name": "checkMapVersion",
      "comment": "Verify that the storage schema has not changed.",
      "javadoc": "Verify that the storage schema has not changed.\n@param upgrade\n@param tokenInstance\n@throws VersionException",
      "static": false,
      "params": [
        {
          "name": "openMode",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "tokenInstance",
          "type_long": "ghidra.util.Saveable",
          "type_short": "Saveable",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.VersionException",
          "type_short": "VersionException",
          "comment": ""
        },
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": ""
        },
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "upgradeTable",
      "comment": "Attempt to upgrade the map table records to the current schema.\n If unable to upgrade any of the map records, the table is removed.",
      "javadoc": "Attempt to upgrade the map table records to the current schema.\n If unable to upgrade any of the map records, the table is removed.\n@param tokenInstance\n@return true if all records were successfully upgrade.  A false\n value indicates that one or more entries were dropped.",
      "static": false,
      "params": [
        {
          "name": "tokenInstance",
          "type_long": "ghidra.util.Saveable",
          "type_short": "Saveable",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if all records were successfully upgrade.  A false\n value indicates that one or more entries were dropped."
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": ""
        },
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "add",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "value",
          "type_long": "ghidra.util.Saveable",
          "type_short": "Saveable",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isPrivate",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "value",
          "type_long": "ghidra.util.Saveable",
          "type_short": "Saveable",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createPropertyTable",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "tableName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "s",
          "type_long": "db.Schema",
          "type_short": "Schema",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "checkSchema",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "s",
          "type_long": "db.Schema",
          "type_short": "Schema",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getObjectClass",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.Class\u003c?\u003e",
        "type_short": "Class",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getObject",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.Object",
        "type_short": "Object",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "applyValue",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "visitor",
          "type_long": "ghidra.util.prop.PropertyVisitor",
          "type_short": "PropertyVisitor",
          "comment": ""
        },
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPropertyFieldClass",
      "comment": "NOTE: Custom schema is utilized.",
      "javadoc": "NOTE: Custom schema is utilized.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.Class\u003c?\u003e",
        "type_short": "Class",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createTable",
      "comment": "Create the necessary table(s) to support this property.\n Schema will vary depending upon Saveable object.",
      "javadoc": "Create the necessary table(s) to support this property.\n Schema will vary depending upon Saveable object.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "upgradeMap",
      "comment": "Attempt to upgrade the specified object map.",
      "javadoc": "Attempt to upgrade the specified object map.\n@param dbHandle\n@param errHandler\n@param changeMgr\n@param addrMap\n@param name\n@param saveableObjectClass\n@param version\n@return upgraded map instance or null if unable to upgrade.",
      "static": true,
      "params": [
        {
          "name": "dbHandle",
          "type_long": "db.DBHandle",
          "type_short": "DBHandle",
          "comment": ""
        },
        {
          "name": "errHandler",
          "type_long": "db.util.ErrorHandler",
          "type_short": "ErrorHandler",
          "comment": ""
        },
        {
          "name": "changeMgr",
          "type_long": "ghidra.program.util.ChangeManager",
          "type_short": "ChangeManager",
          "comment": ""
        },
        {
          "name": "addrMap",
          "type_long": "ghidra.program.database.map.AddressMap",
          "type_short": "AddressMap",
          "comment": ""
        },
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "saveableObjectClass",
          "type_long": "java.lang.Class\u003c?\u003e",
          "type_short": "Class",
          "comment": ""
        },
        {
          "name": "version",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.database.properties.ObjectPropertyMapDB",
        "type_short": "ObjectPropertyMapDB",
        "comment": "upgraded map instance or null if unable to upgrade."
      },
      "throws": []
    }
  ]
}
