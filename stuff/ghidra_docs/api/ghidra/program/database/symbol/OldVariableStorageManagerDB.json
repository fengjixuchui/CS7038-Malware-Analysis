{
  "name": "OldVariableStorageManagerDB",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "addrMap",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.database.map.AddressMap",
      "type_short": "AddressMap",
      "constant_value": null
    },
    {
      "name": "adapter",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.database.symbol.OldVariableStorageDBAdapterV0V1",
      "type_short": "OldVariableStorageDBAdapterV0V1",
      "constant_value": null
    },
    {
      "name": "handle",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "db.DBHandle",
      "type_short": "DBHandle",
      "constant_value": null
    },
    {
      "name": "lastNamespaceCacheID",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "long",
      "type_short": "long",
      "constant_value": null
    },
    {
      "name": "variableAddrLookupCache",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.Hashtable\u003cghidra.program.model.address.Address,ghidra.program.database.symbol.OldVariableStorageManagerDB.OldVariableStorage\u003e",
      "type_short": "Hashtable",
      "constant_value": null
    },
    {
      "name": "storageAddrLookupCache",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.Hashtable\u003cghidra.program.model.address.Address,ghidra.program.database.symbol.OldVariableStorageManagerDB.OldVariableStorage\u003e",
      "type_short": "Hashtable",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a read-only variable storage manager for the old record format\n utilized by the VariableStorage table (NOTE: old table name does not have\n a space in the name).  This adapter is intended for use during upgrades\n only.",
      "javadoc": "Construct a read-only variable storage manager for the old record format\n utilized by the VariableStorage table (NOTE: old table name does not have\n a space in the name).  This adapter is intended for use during upgrades\n only.\n@param handle the database handle.\n@param addrMap the address map\n@param monitor the task monitor.\n@throws IOException if a database error occurs.\n@throws CancelledException if the user cancels the upgrade.",
      "static": false,
      "params": [
        {
          "name": "handle",
          "type_long": "db.DBHandle",
          "type_short": "DBHandle",
          "comment": "the database handle."
        },
        {
          "name": "addrMap",
          "type_long": "ghidra.program.database.map.AddressMap",
          "type_short": "AddressMap",
          "comment": "the address map"
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": "the task monitor."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if a database error occurs."
        },
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": "if the user cancels the upgrade."
        }
      ]
    },
    {
      "name": "isOldVariableStorageManagerUpgradeRequired",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "handle",
          "type_long": "db.DBHandle",
          "type_short": "DBHandle",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "deleteTable",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "cacheNamespaceStorage",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "namespaceID",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getVariableStorage",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "variableAddr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.database.symbol.OldVariableStorageManagerDB.OldVariableStorage",
        "type_short": "OldVariableStorage",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getStorageAddress",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "variableAddr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    }
  ]
}
