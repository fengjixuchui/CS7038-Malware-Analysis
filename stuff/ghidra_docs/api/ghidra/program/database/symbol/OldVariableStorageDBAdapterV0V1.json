{
  "name": "OldVariableStorageDBAdapterV0V1",
  "comment": "OldVariableStorageDBAdapterV0V1 provide legacy variable storage \n table support where each variable storage record was namespace-specific and\n provided storage address only.  In a later revision this was deemed inadequate \n since size information and support for storage binding was needed.",
  "javadoc": "\u003ccode\u003eOldVariableStorageDBAdapterV0V1\u003c/code\u003e provide legacy variable storage \n table support where each variable storage record was namespace-specific and\n provided storage address only.  In a later revision this was deemed inadequate \n since size information and support for storage binding was needed.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "VARIABLE_STORAGE_TABLE_NAME",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"VariableStorage\""
    },
    {
      "name": "VARIABLE_STORAGE_SCHEMA",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "db.Schema",
      "type_short": "Schema",
      "constant_value": null
    },
    {
      "name": "STORAGE_ADDR_COL",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "0"
    },
    {
      "name": "NAMESPACE_ID_COL",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "1"
    },
    {
      "name": "SYMBOL_COUNT_COL",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "2"
    },
    {
      "name": "variableStorageTable",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "db.Table",
      "type_short": "Table",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Construction legacy variable storage adapter.  The old variable storage \n table must exist (see #VARIABLE_STORAGE_TABLE_NAME).",
      "javadoc": "Construction legacy variable storage adapter.  The old variable storage \n table must exist (see {@link #VARIABLE_STORAGE_TABLE_NAME}).\n@param handle database handle\n@throws IOException if VariableStorage table is missing or invalid schema version detected",
      "static": false,
      "params": [
        {
          "name": "handle",
          "type_long": "db.DBHandle",
          "type_short": "DBHandle",
          "comment": "database handle"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if VariableStorage table is missing or invalid schema version detected"
        }
      ]
    },
    {
      "name": "getRecord",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "key",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "db.DBRecord",
        "type_short": "DBRecord",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getRecordsForNamespace",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "namespaceID",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "db.DBRecord[]",
        "type_short": "db.DBRecord[]",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    }
  ]
}
