{
  "name": "AddressSetFilteredSymbolIterator",
  "comment": "Iterator (in address order) over all symbols that match the given query in an address set.",
  "javadoc": "Iterator (in address order) over all symbols that match the given query in an address set.",
  "static": false,
  "implements": [
    "ghidra.program.model.symbol.SymbolIterator"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "symbolMgr",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.database.symbol.SymbolManager",
      "type_short": "SymbolManager",
      "constant_value": null
    },
    {
      "name": "recIter",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.database.util.QueryRecordIterator",
      "type_short": "QueryRecordIterator",
      "constant_value": null
    },
    {
      "name": "adapter",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.database.symbol.SymbolDatabaseAdapter",
      "type_short": "SymbolDatabaseAdapter",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a new AddressSetFilteredSymbolIterator.",
      "javadoc": "Construct a new AddressSetFilteredSymbolIterator.\n@param symbolMgr the symbol manager\n@param set the address set to iterator over (required).\n@param query the query to use as a filter\n@param forward the direction of the iterator.",
      "static": false,
      "params": [
        {
          "name": "symbolMgr",
          "type_long": "ghidra.program.database.symbol.SymbolManager",
          "type_short": "SymbolManager",
          "comment": "the symbol manager"
        },
        {
          "name": "set",
          "type_long": "ghidra.program.model.address.AddressSetView",
          "type_short": "AddressSetView",
          "comment": "the address set to iterator over (required)."
        },
        {
          "name": "query",
          "type_long": "ghidra.program.database.util.Query",
          "type_short": "Query",
          "comment": "the query to use as a filter"
        },
        {
          "name": "forward",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "the direction of the iterator."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hasNext",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "next",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.symbol.Symbol",
        "type_short": "Symbol",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "remove",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "iterator",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Iterator\u003cghidra.program.model.symbol.Symbol\u003e",
        "type_short": "Iterator",
        "comment": ""
      },
      "throws": []
    }
  ]
}
