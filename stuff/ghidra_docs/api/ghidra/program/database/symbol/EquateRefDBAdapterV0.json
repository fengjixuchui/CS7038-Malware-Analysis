{
  "name": "EquateRefDBAdapterV0",
  "comment": "Implementation for Version 0 of the equate references table.",
  "javadoc": "Implementation for Version 0 of the equate references table.",
  "static": false,
  "implements": [],
  "extends": "ghidra.program.database.symbol.EquateRefDBAdapter",
  "fields": [
    {
      "name": "refTable",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "db.Table",
      "type_short": "Table",
      "constant_value": null
    },
    {
      "name": "addrMap",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.database.map.AddressMap",
      "type_short": "AddressMap",
      "constant_value": null
    },
    {
      "name": "V0_EQUATE_ID_COL",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "0"
    },
    {
      "name": "V0_ADDR_COL",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "1"
    },
    {
      "name": "V0_OP_INDEX_COL",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "2"
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor",
      "javadoc": "Constructor",
      "static": false,
      "params": [
        {
          "name": "handle",
          "type_long": "db.DBHandle",
          "type_short": "DBHandle",
          "comment": ""
        },
        {
          "name": "addrMap",
          "type_long": "ghidra.program.database.map.AddressMap",
          "type_short": "AddressMap",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.VersionException",
          "type_short": "VersionException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getRecord",
      "comment": "",
      "javadoc": "@see ghidra.program.database.symbol.EquateRefDBAdapter#getRecord(long)",
      "static": false,
      "params": [
        {
          "name": "key",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "db.DBRecord",
        "type_short": "DBRecord",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "createReference",
      "comment": "",
      "javadoc": "@see ghidra.program.database.symbol.EquateRefDBAdapter#createReference(long, short, long, long)",
      "static": false,
      "params": [
        {
          "name": "addr",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        },
        {
          "name": "opIndex",
          "type_long": "short",
          "type_short": "short",
          "comment": ""
        },
        {
          "name": "dynamicHash",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        },
        {
          "name": "equateID",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "db.DBRecord",
        "type_short": "DBRecord",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getRecordKeysForAddr",
      "comment": "",
      "javadoc": "@see ghidra.program.database.symbol.EquateRefDBAdapter#getRecordKeysFrom(long)",
      "static": false,
      "params": [
        {
          "name": "addr",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "db.Field[]",
        "type_short": "db.Field[]",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "updateRecord",
      "comment": "",
      "javadoc": "@see ghidra.program.database.symbol.EquateRefDBAdapter#updateRecord(ghidra.framework.store.db.DBRecord)",
      "static": false,
      "params": [
        {
          "name": "record",
          "type_long": "db.DBRecord",
          "type_short": "DBRecord",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getRecordKeysForEquateID",
      "comment": "",
      "javadoc": "@see ghidra.program.database.symbol.EquateRefDBAdapter#getRecordsForEquateID(long)",
      "static": false,
      "params": [
        {
          "name": "equateID",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "db.Field[]",
        "type_short": "db.Field[]",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getIteratorForAddresses",
      "comment": "",
      "javadoc": "@see ghidra.program.database.symbol.EquateRefDBAdapter#getIteratorForAddresses()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "db.DBLongIterator",
        "type_short": "DBLongIterator",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getIteratorForAddresses",
      "comment": "",
      "javadoc": "@see ghidra.program.database.symbol.EquateRefDBAdapter#getIteratorForAddresses(ghidra.program.model.address.Address, ghidra.program.model.address.Address)",
      "static": false,
      "params": [
        {
          "name": "start",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "end",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "db.DBLongIterator",
        "type_short": "DBLongIterator",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getIteratorForAddresses",
      "comment": "",
      "javadoc": "@see ghidra.program.database.symbol.EquateRefDBAdapter#getIteratorForAddresses(ghidra.program.model.address.Address)",
      "static": false,
      "params": [
        {
          "name": "start",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "db.DBLongIterator",
        "type_short": "DBLongIterator",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getIteratorForAddresses",
      "comment": "",
      "javadoc": "@see ghidra.program.database.symbol.EquateRefDBAdapter#getIteratorForAddresses(ghidra.program.model.address.AddressSetView)",
      "static": false,
      "params": [
        {
          "name": "set",
          "type_long": "ghidra.program.model.address.AddressSetView",
          "type_short": "AddressSetView",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "db.DBLongIterator",
        "type_short": "DBLongIterator",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "removeRecord",
      "comment": "",
      "javadoc": "@see ghidra.program.database.symbol.EquateRefDBAdapter#removeRecord(long)",
      "static": false,
      "params": [
        {
          "name": "key",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getRecords",
      "comment": "",
      "javadoc": "@see ghidra.program.database.symbol.EquateRefDBAdapter#getRecords()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "db.RecordIterator",
        "type_short": "RecordIterator",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "moveAddressRange",
      "comment": "",
      "javadoc": "@see ghidra.program.database.symbol.EquateRefDBAdapter#moveAddressRange(ghidra.program.model.address.Address, ghidra.program.model.address.Address, long, ghidra.program.database.map.AddressMapDB, ghidra.util.task.TaskMonitor)",
      "static": false,
      "params": [
        {
          "name": "fromAddr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "toAddr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "length",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": ""
        },
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getRecordCount",
      "comment": "",
      "javadoc": "@see ghidra.program.database.symbol.EquateRefDBAdapter#getRecordCount()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "convertV0Record",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "record",
          "type_long": "db.DBRecord",
          "type_short": "DBRecord",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "db.DBRecord",
        "type_short": "DBRecord",
        "comment": ""
      },
      "throws": []
    }
  ]
}
