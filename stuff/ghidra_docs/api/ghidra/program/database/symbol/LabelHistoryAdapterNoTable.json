{
  "name": "LabelHistoryAdapterNoTable",
  "comment": "Adapter needed when a Program is being opened read only and the label\n history table does not exist in the Program.",
  "javadoc": "Adapter needed when a Program is being opened read only and the label\n history table does not exist in the Program.",
  "static": false,
  "implements": [],
  "extends": "ghidra.program.database.symbol.LabelHistoryAdapter",
  "fields": [],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new LabelHistoryAdapterNoTable",
      "javadoc": "Constructs a new LabelHistoryAdapterNoTable\n@param handle the databse handle.",
      "static": false,
      "params": [
        {
          "name": "handle",
          "type_long": "db.DBHandle",
          "type_short": "DBHandle",
          "comment": "the databse handle."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createRecord",
      "comment": "",
      "javadoc": "@see ghidra.program.database.symbol.LabelHistoryAdapter#createRecord(long, byte, java.lang.String)",
      "static": false,
      "params": [
        {
          "name": "addr",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        },
        {
          "name": "actionID",
          "type_long": "byte",
          "type_short": "byte",
          "comment": ""
        },
        {
          "name": "labelStr",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getRecordsByAddress",
      "comment": "",
      "javadoc": "@see ghidra.program.database.symbol.LabelHistoryAdapter#getRecordsByAddress(long)",
      "static": false,
      "params": [
        {
          "name": "addr",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "db.RecordIterator",
        "type_short": "RecordIterator",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getAllRecords",
      "comment": "",
      "javadoc": "@see ghidra.program.database.symbol.LabelHistoryAdapter#getAllRecords()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "db.RecordIterator",
        "type_short": "RecordIterator",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getRecordCount",
      "comment": "",
      "javadoc": "@see ghidra.program.database.symbol.LabelHistoryAdapter#getRecordCount()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "moveAddress",
      "comment": "",
      "javadoc": "@see ghidra.program.database.symbol.LabelHistoryAdapter#moveAddress(long, long)",
      "static": false,
      "params": [
        {
          "name": "oldAddr",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        },
        {
          "name": "newAddr",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "moveAddressRange",
      "comment": "",
      "javadoc": "@see ghidra.program.database.symbol.LabelHistoryAdapter#moveAddressRange(ghidra.program.model.address.Address, ghidra.program.model.address.Address, long, ghidra.program.model.address.AddressMap, ghidra.util.task.TaskMonitor)",
      "static": false,
      "params": [
        {
          "name": "fromAddr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "toAddr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "length",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        },
        {
          "name": "addrMap",
          "type_long": "ghidra.program.database.map.AddressMap",
          "type_short": "AddressMap",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": ""
        },
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "deleteAddressRange",
      "comment": "",
      "javadoc": "@see ghidra.program.database.symbol.LabelHistoryAdapter#deleteAddressRange(ghidra.program.model.address.Address, ghidra.program.model.address.Address, ghidra.program.model.address.AddressMap, ghidra.util.task.TaskMonitor)",
      "static": false,
      "params": [
        {
          "name": "startAddr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "endAddr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "addrMap",
          "type_long": "ghidra.program.database.map.AddressMap",
          "type_short": "AddressMap",
          "comment": ""
        },
        {
          "name": "set",
          "type_long": "java.util.Set\u003cghidra.program.model.address.Address\u003e",
          "type_short": "Set",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": ""
        },
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    }
  ]
}
