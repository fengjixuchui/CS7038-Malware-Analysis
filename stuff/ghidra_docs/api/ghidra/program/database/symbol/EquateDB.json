{
  "name": "EquateDB",
  "comment": "Database object for an Equate.",
  "javadoc": "Database object for an Equate.",
  "static": false,
  "implements": [
    "ghidra.program.model.symbol.Equate"
  ],
  "extends": "ghidra.program.database.DatabaseObject",
  "fields": [
    {
      "name": "record",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "db.DBRecord",
      "type_short": "DBRecord",
      "constant_value": null
    },
    {
      "name": "equateMgr",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.database.symbol.EquateManager",
      "type_short": "EquateManager",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor",
      "javadoc": "Constructor\n@param equateMgr the equate manager\n@param cache EquateDB cache\n@param record the record for this equate.",
      "static": false,
      "params": [
        {
          "name": "equateMgr",
          "type_long": "ghidra.program.database.symbol.EquateManager",
          "type_short": "EquateManager",
          "comment": "the equate manager"
        },
        {
          "name": "cache",
          "type_long": "ghidra.program.database.DBObjectCache\u003cghidra.program.database.symbol.EquateDB\u003e",
          "type_short": "DBObjectCache",
          "comment": "EquateDB cache"
        },
        {
          "name": "record",
          "type_long": "db.DBRecord",
          "type_short": "DBRecord",
          "comment": "the record for this equate."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "refresh",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addReference",
      "comment": "",
      "javadoc": "@see ghidra.program.model.symbol.Equate#addReference(ghidra.program.model.address.Address, int)",
      "static": false,
      "params": [
        {
          "name": "refAddr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "opIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addReference",
      "comment": "",
      "javadoc": "@see ghidra.program.model.symbol.Equate#addReference(long, ghidra.program.model.address.Address)",
      "static": false,
      "params": [
        {
          "name": "dynamicHash",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        },
        {
          "name": "refAddr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "findOpIndex",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "refAddr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "dynamicHash",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "short",
        "type_short": "short",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "findScalarOpIndex",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "instr",
          "type_long": "ghidra.program.model.listing.Instruction",
          "type_short": "Instruction",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "short",
        "type_short": "short",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getName",
      "comment": "",
      "javadoc": "@see ghidra.program.model.symbol.Equate#getName()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDisplayName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getEnumUUID",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.util.UniversalID",
        "type_short": "UniversalID",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getReferenceCount",
      "comment": "",
      "javadoc": "@see ghidra.program.model.symbol.Equate#getReferenceCount()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getReferences",
      "comment": "",
      "javadoc": "@see ghidra.program.model.symbol.Equate#getReferences()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.symbol.EquateReference[]",
        "type_short": "ghidra.program.model.symbol.EquateReference[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getReferences",
      "comment": "",
      "javadoc": "@see ghidra.program.model.symbol.Equate#getReferences(Address)",
      "static": false,
      "params": [
        {
          "name": "refAddr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.List\u003cghidra.program.model.symbol.EquateReference\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getValue",
      "comment": "",
      "javadoc": "@see ghidra.program.model.symbol.Equate#getValue()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDisplayValue",
      "comment": "",
      "javadoc": "@see ghidra.program.model.symbol.Equate#getDisplayValue()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeReference",
      "comment": "",
      "javadoc": "@see ghidra.program.model.symbol.Equate#removeReference(ghidra.program.model.address.Address, int)",
      "static": false,
      "params": [
        {
          "name": "refAddr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "opIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeReference",
      "comment": "",
      "javadoc": "@see ghidra.program.model.symbol.Equate#removeReference(long, ghidra.program.model.address.Address)",
      "static": false,
      "params": [
        {
          "name": "dynamicHash",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        },
        {
          "name": "refAddr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "renameEquate",
      "comment": "",
      "javadoc": "@see ghidra.program.model.symbol.Equate#renameEquate(java.lang.String)",
      "static": false,
      "params": [
        {
          "name": "newName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.DuplicateNameException",
          "type_short": "DuplicateNameException",
          "comment": ""
        },
        {
          "type_long": "ghidra.util.exception.InvalidInputException",
          "type_short": "InvalidInputException",
          "comment": ""
        }
      ]
    },
    {
      "name": "updateRecord",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isValidUUID",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isEnumBased",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "equals",
      "comment": "",
      "javadoc": "@see java.lang.Object#equals(Object)",
      "static": false,
      "params": [
        {
          "name": "obj",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hashCode",
      "comment": "",
      "javadoc": "@see java.lang.Object#hashCode()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "@see java.lang.Object#toString()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    }
  ]
}
