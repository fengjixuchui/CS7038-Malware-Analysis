{
  "name": "OldBookmarkManager",
  "comment": "Interface to manage bookmarks on a program.",
  "javadoc": "Interface to manage bookmarks on a program.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "OLD_BOOKMARK_PROPERTY",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Bookmarks\""
    },
    {
      "name": "BASE_PROPERTY_NAME",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\"Bookmarks\""
    },
    {
      "name": "emptyAddressIterator",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.program.database.bookmark.EmptyAddressIterator",
      "type_short": "EmptyAddressIterator",
      "constant_value": null
    },
    {
      "name": "program",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.listing.Program",
      "type_short": "Program",
      "constant_value": null
    },
    {
      "name": "propertyMgr",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.util.PropertyMapManager",
      "type_short": "PropertyMapManager",
      "constant_value": null
    },
    {
      "name": "bookmarkTypes",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.HashMap\u003cjava.lang.String,db.DBRecord\u003e",
      "type_short": "HashMap",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new bookmark manager.",
      "javadoc": "Constructs a new bookmark manager.",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.database.ProgramDB",
          "type_short": "ProgramDB",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getBookmarkType",
      "comment": "Get the bookmark type associated with the specified property name.",
      "javadoc": "Get the bookmark type associated with the specified property name.\n@param propertyName\n@return bookmark type or null if property name is not recognized.",
      "static": true,
      "params": [
        {
          "name": "propertyName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "bookmark type or null if property name is not recognized."
      },
      "throws": []
    },
    {
      "name": "getPropertyName",
      "comment": "Get the bookmark property name for a specified bookmark type.",
      "javadoc": "Get the bookmark property name for a specified bookmark type.\n@param bookmarkType\n@return property used to store bookmarks or null if a\n null type was specified.",
      "static": true,
      "params": [
        {
          "name": "bookmarkType",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "property used to store bookmarks or null if a\n null type was specified."
      },
      "throws": []
    },
    {
      "name": "getMap",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "type",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "create",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.util.ObjectPropertyMap",
        "type_short": "ObjectPropertyMap",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getTypes",
      "comment": "Return all the Bookmark types currenly in use.",
      "javadoc": "Return all the Bookmark types currenly in use.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String[]",
        "type_short": "java.lang.String[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getBookmarkCount",
      "comment": "Get number of bookmarks for the specified type",
      "javadoc": "Get number of bookmarks for the specified type\n@param type\n@return bookmark count",
      "static": false,
      "params": [
        {
          "name": "type",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "bookmark count"
      },
      "throws": []
    },
    {
      "name": "removeAllBookmarks",
      "comment": "Remove all bookmarks of the specific type from the program.\n Caller is responsible for the transaction which incorporates this program change.",
      "javadoc": "Remove all bookmarks of the specific type from the program.\n Caller is responsible for the transaction which incorporates this program change.\n@param type bookmark type",
      "static": false,
      "params": [
        {
          "name": "type",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "bookmark type"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getBookmark",
      "comment": "Get a specific bookmark type at the specified address.",
      "javadoc": "Get a specific bookmark type at the specified address.\n@param addr program address\n@param type bookmark type\n@return bookmark or null if not found.",
      "static": false,
      "params": [
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "program address"
        },
        {
          "name": "type",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "bookmark type"
        }
      ],
      "return": {
        "type_long": "ghidra.program.database.bookmark.OldBookmark",
        "type_short": "OldBookmark",
        "comment": "bookmark or null if not found."
      },
      "throws": []
    },
    {
      "name": "getBookmarkAddresses",
      "comment": "Get addresses at which bookmarks of the specified type exist.",
      "javadoc": "Get addresses at which bookmarks of the specified type exist.\n@param type bookmark type\n@return address iterator",
      "static": false,
      "params": [
        {
          "name": "type",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "bookmark type"
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.AddressIterator",
        "type_short": "AddressIterator",
        "comment": "address iterator"
      },
      "throws": []
    },
    {
      "name": "getTypeRecords",
      "comment": "Returns array of bookmark type records",
      "javadoc": "Returns array of bookmark type records",
      "static": false,
      "params": [],
      "return": {
        "type_long": "db.DBRecord[]",
        "type_short": "db.DBRecord[]",
        "comment": ""
      },
      "throws": []
    }
  ]
}
