{
  "name": "BookmarkDBAdapterV0",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "extends": "ghidra.program.database.bookmark.BookmarkDBAdapter",
  "fields": [
    {
      "name": "tmpHandle",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "db.DBHandle",
      "type_short": "DBHandle",
      "constant_value": null
    },
    {
      "name": "conversionAdapter",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.database.bookmark.BookmarkDBAdapter",
      "type_short": "BookmarkDBAdapter",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "dbHandle",
          "type_long": "db.DBHandle",
          "type_short": "DBHandle",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setOldBookmarkManager",
      "comment": "Set the old bookmark manager which handles read-only access\n to bookmarks stored within property maps.\n The old bookmark manager must be set prior to invoking any other method;",
      "javadoc": "Set the old bookmark manager which handles read-only access\n to bookmarks stored within property maps.\n The old bookmark manager must be set prior to invoking any other method;\n@param oldMgr old bookmark manager",
      "static": false,
      "params": [
        {
          "name": "oldMgr",
          "type_long": "ghidra.program.database.bookmark.OldBookmarkManager",
          "type_short": "OldBookmarkManager",
          "comment": "old bookmark manager"
        },
        {
          "name": "addrMap",
          "type_long": "ghidra.program.database.map.AddressMap",
          "type_short": "AddressMap",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getRecord",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "id",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "db.DBRecord",
        "type_short": "DBRecord",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getRecordsByTypeAndCategory",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "typeId",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "category",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "db.RecordIterator",
        "type_short": "RecordIterator",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getRecordsByType",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "typeId",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "db.RecordIterator",
        "type_short": "RecordIterator",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getCategories",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "typeId",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String[]",
        "type_short": "java.lang.String[]",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getBookmarkAddresses",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "typeId",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.AddressSetView",
        "type_short": "AddressSetView",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "finalize",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.lang.Throwable",
          "type_short": "Throwable",
          "comment": ""
        }
      ]
    },
    {
      "name": "getBookmarkCount",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "typeId",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getBookmarkCount",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getRecordsByTypeAtAddress",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "typeId",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "address",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "db.RecordIterator",
        "type_short": "RecordIterator",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getRecordsByTypeStartingAtAddress",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "typeID",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "startAddress",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        },
        {
          "name": "forward",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "db.RecordIterator",
        "type_short": "RecordIterator",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getRecordsByTypeForAddressRange",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "typeId",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "startAddr",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        },
        {
          "name": "endAddr",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "db.RecordIterator",
        "type_short": "RecordIterator",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    }
  ]
}
