{
  "name": "BookmarkTypeDBAdapterNoTable",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "extends": "ghidra.program.database.bookmark.BookmarkTypeDBAdapter",
  "fields": [
    {
      "name": "records",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "db.DBRecord[]",
      "type_short": "db.DBRecord[]",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "@param dbHandle the database handle",
      "static": false,
      "params": [
        {
          "name": "dbHandle",
          "type_long": "db.DBHandle",
          "type_short": "DBHandle",
          "comment": "the database handle"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setOldBookmarkManager",
      "comment": "Set the old bookmark manager which handles read-only access\n to bookmarks stored within property maps.\n The old bookmark manager must be set prior to invoking any other method;",
      "javadoc": "Set the old bookmark manager which handles read-only access\n to bookmarks stored within property maps.\n The old bookmark manager must be set prior to invoking any other method;\n@param oldMgr old bookmark manager",
      "static": false,
      "params": [
        {
          "name": "oldMgr",
          "type_long": "ghidra.program.database.bookmark.OldBookmarkManager",
          "type_short": "OldBookmarkManager",
          "comment": "old bookmark manager"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getRecords",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "db.DBRecord[]",
        "type_short": "db.DBRecord[]",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    }
  ]
}
