{
  "name": "FunctionTagManagerDB",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [
    "ghidra.program.model.listing.FunctionTagManager",
    "db.util.ErrorHandler"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "program",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.database.ProgramDB",
      "type_short": "ProgramDB",
      "constant_value": null
    },
    {
      "name": "functionTagAdapter",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.database.function.FunctionTagAdapter",
      "type_short": "FunctionTagAdapter",
      "constant_value": null
    },
    {
      "name": "functionTagMappingAdapter",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.database.function.FunctionTagMappingAdapter",
      "type_short": "FunctionTagMappingAdapter",
      "constant_value": null
    },
    {
      "name": "cache",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.database.DBObjectCache\u003cghidra.program.database.function.FunctionTagDB\u003e",
      "type_short": "DBObjectCache",
      "constant_value": null
    },
    {
      "name": "tagCountCache",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.Map\u003cghidra.program.model.listing.FunctionTag,ghidra.util.datastruct.Counter\u003e",
      "type_short": "Map",
      "constant_value": null
    },
    {
      "name": "lock",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.util.Lock",
      "type_short": "Lock",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor.",
      "javadoc": "Constructor.\n@param handle handle to database\n@param openMode either READ_ONLY, UPDATE, or UPGRADE\n@param lock the program synchronization lock\n@param monitor the task monitor to use while upgrading.\n@throws VersionException if the database is incompatible with the current\n schema\n@throws IOException if there is a problem accessing the database.\n@throws CancelledException if the program loading is cancelled",
      "static": false,
      "params": [
        {
          "name": "handle",
          "type_long": "db.DBHandle",
          "type_short": "DBHandle",
          "comment": "handle to database"
        },
        {
          "name": "openMode",
          "type_long": "int",
          "type_short": "int",
          "comment": "either READ_ONLY, UPDATE, or UPGRADE"
        },
        {
          "name": "lock",
          "type_long": "ghidra.util.Lock",
          "type_short": "Lock",
          "comment": "the program synchronization lock"
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": "the task monitor to use while upgrading."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.VersionException",
          "type_short": "VersionException",
          "comment": "if the database is incompatible with the current\n schema"
        },
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if there is a problem accessing the database."
        },
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": "if the program loading is cancelled"
        }
      ]
    },
    {
      "name": "setProgram",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "dbError",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "e",
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFunctionTag",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.listing.FunctionTag",
        "type_short": "FunctionTag",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFunctionTag",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "id",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.listing.FunctionTag",
        "type_short": "FunctionTag",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isTagAssigned",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createFunctionTag",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "comment",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.listing.FunctionTag",
        "type_short": "FunctionTag",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isTagApplied",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "functionId",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        },
        {
          "name": "tagId",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "applyFunctionTag",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "functionId",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        },
        {
          "name": "tagId",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "incrementCountCache",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "tag",
          "type_long": "ghidra.program.model.listing.FunctionTag",
          "type_short": "FunctionTag",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "decrementCountCache",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "tag",
          "type_long": "ghidra.program.model.listing.FunctionTag",
          "type_short": "FunctionTag",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "removeFunctionTag",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "functionId",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        },
        {
          "name": "tagId",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "updateFunctionTag",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "tag",
          "type_long": "ghidra.program.database.function.FunctionTagDB",
          "type_short": "FunctionTagDB",
          "comment": ""
        },
        {
          "name": "oldValue",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "newValue",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getAllFunctionTags",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003c? extends ghidra.program.model.listing.FunctionTag\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getTagRecord",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "id",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "db.DBRecord",
        "type_short": "DBRecord",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "fireTagChangedNotification",
      "comment": "Sends a notification when a tag has been changed (edited or deleted).",
      "javadoc": "Sends a notification when a tag has been changed (edited or deleted).\n@param type {@link ChangeManager} change type\n@param tag the tag that was changed\n@param oldValue the old value\n@param newValue the new value",
      "static": false,
      "params": [
        {
          "name": "type",
          "type_long": "int",
          "type_short": "int",
          "comment": "ChangeManager change type"
        },
        {
          "name": "tag",
          "type_long": "ghidra.program.model.listing.FunctionTag",
          "type_short": "FunctionTag",
          "comment": "the tag that was changed"
        },
        {
          "name": "oldValue",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the old value"
        },
        {
          "name": "newValue",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the new value"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "fireTagCreatedNotification",
      "comment": "Fires off a notification indicating that a new tag has been created.",
      "javadoc": "Fires off a notification indicating that a new tag has been created.\n@param type {@link ChangeManager} change type\n@param tag the tag that was created",
      "static": false,
      "params": [
        {
          "name": "type",
          "type_long": "int",
          "type_short": "int",
          "comment": "ChangeManager change type"
        },
        {
          "name": "tag",
          "type_long": "ghidra.program.model.listing.FunctionTag",
          "type_short": "FunctionTag",
          "comment": "the tag that was created"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "fireTagDeletedNotification",
      "comment": "Fires off a notification indicating that the given tag has been deleted.",
      "javadoc": "Fires off a notification indicating that the given tag has been deleted.\n@param type the type of change\n@param tag the tag that was deleted",
      "static": false,
      "params": [
        {
          "name": "type",
          "type_long": "int",
          "type_short": "int",
          "comment": "the type of change"
        },
        {
          "name": "tag",
          "type_long": "ghidra.program.model.listing.FunctionTag",
          "type_short": "FunctionTag",
          "comment": "the tag that was deleted"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFunctionTagFromCache",
      "comment": "Returns the cache object for the given Record. If the object is not in\n the cache, a new cache object is created.",
      "javadoc": "Returns the cache object for the given Record. If the object is not in\n the cache, a new cache object is created.\n@param tagRecord the tag record to retrieve\n@return tag new cached tag object",
      "static": false,
      "params": [
        {
          "name": "tagRecord",
          "type_long": "db.DBRecord",
          "type_short": "DBRecord",
          "comment": "the tag record to retrieve"
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.listing.FunctionTag",
        "type_short": "FunctionTag",
        "comment": "tag new cached tag object"
      },
      "throws": []
    },
    {
      "name": "doDeleteTag",
      "comment": "Deletes the given function tag.",
      "javadoc": "Deletes the given function tag.\n@param tag the tag to delete\n@throws IOException if there is an issue reading from the db",
      "static": false,
      "params": [
        {
          "name": "tag",
          "type_long": "ghidra.program.model.listing.FunctionTag",
          "type_short": "FunctionTag",
          "comment": "the tag to delete"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if there is an issue reading from the db"
        }
      ]
    },
    {
      "name": "invalidateFunctions",
      "comment": "Tells the function manager that its tags are out of date. This\n will cause functions to go to the database to retrieve tags next time they\n are requested, rather than using their internal cache.",
      "javadoc": "Tells the function manager that its tags are out of date. This\n will cause functions to go to the database to retrieve tags next time they\n are requested, rather than using their internal cache.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFunctionTagsByFunctionID",
      "comment": "Returns all function tags associated with the given function id.",
      "javadoc": "Returns all function tags associated with the given function id.\n@param functionId the function id\n@return the tags\n@throws IOException if there is an issue reading from the db",
      "static": false,
      "params": [
        {
          "name": "functionId",
          "type_long": "long",
          "type_short": "long",
          "comment": "the function id"
        }
      ],
      "return": {
        "type_long": "java.util.Set\u003cghidra.program.model.listing.FunctionTag\u003e",
        "type_short": "Set",
        "comment": "the tags"
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if there is an issue reading from the db"
        }
      ]
    },
    {
      "name": "invalidateCache",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getUseCount",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "tag",
          "type_long": "ghidra.program.model.listing.FunctionTag",
          "type_short": "FunctionTag",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "buildTagCountCache",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    }
  ]
}
