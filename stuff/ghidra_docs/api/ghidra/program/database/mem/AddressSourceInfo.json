{
  "name": "AddressSourceInfo",
  "comment": "Provides information about the source of a byte value at an address including the file it \n came from, the offset into that file, and the original value of that byte.",
  "javadoc": "Provides information about the source of a byte value at an address including the file it \n came from, the offset into that file, and the original value of that byte.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "address",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.address.Address",
      "type_short": "Address",
      "constant_value": null
    },
    {
      "name": "block",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.mem.MemoryBlock",
      "type_short": "MemoryBlock",
      "constant_value": null
    },
    {
      "name": "fileBytes",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.database.mem.FileBytes",
      "type_short": "FileBytes",
      "constant_value": null
    },
    {
      "name": "sourceInfo",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.mem.MemoryBlockSourceInfo",
      "type_short": "MemoryBlockSourceInfo",
      "constant_value": null
    },
    {
      "name": "mappedInfo",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.database.mem.AddressSourceInfo",
      "type_short": "AddressSourceInfo",
      "constant_value": null
    },
    {
      "name": "memory",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.mem.Memory",
      "type_short": "Memory",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "memory",
          "type_long": "ghidra.program.model.mem.Memory",
          "type_short": "Memory",
          "comment": ""
        },
        {
          "name": "address",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "block",
          "type_long": "ghidra.program.model.mem.MemoryBlock",
          "type_short": "MemoryBlock",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getAddress",
      "comment": "Returns the address for which this object provides byte source information.",
      "javadoc": "Returns the address for which this object provides byte source information.\n@return the address for which this object provides byte source information.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": "the address for which this object provides byte source information."
      },
      "throws": []
    },
    {
      "name": "getFileOffset",
      "comment": "Returns the offset into the originally imported file that provided the byte value for the\n associated address or -1 if there is no source information for this location.",
      "javadoc": "Returns the offset into the originally imported file that provided the byte value for the\n associated address or -1 if there is no source information for this location.\n@return the offset into the originally imported file that provided the byte value for the\n associated address.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": "the offset into the originally imported file that provided the byte value for the\n associated address."
      },
      "throws": []
    },
    {
      "name": "getFileName",
      "comment": "Returns the filename of the originally imported file that provided the byte value for the\n associated address or null if there is no source information for this location.",
      "javadoc": "Returns the filename of the originally imported file that provided the byte value for the\n associated address or null if there is no source information for this location.\n@return the filename of the originally imported file that provided the byte value for the\n associated address or null if there is no source information for this location.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "the filename of the originally imported file that provided the byte value for the\n associated address or null if there is no source information for this location."
      },
      "throws": []
    },
    {
      "name": "getOriginalValue",
      "comment": "Returns the original byte value from the imported file that provided the byte value for the\n associated address or 0 if there is no source information for this location.",
      "javadoc": "Returns the original byte value from the imported file that provided the byte value for the\n associated address or 0 if there is no source information for this location.\n@return the original byte value from the imported file that provided the byte value for the\n associated address or 0 if there is no source information for this location.\n@throws IOException if an io error occurs reading the program database.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "byte",
        "type_short": "byte",
        "comment": "the original byte value from the imported file that provided the byte value for the\n associated address or 0 if there is no source information for this location."
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if an io error occurs reading the program database."
        }
      ]
    },
    {
      "name": "getMemoryBlockSourceInfo",
      "comment": "Returns the MemoryBlockSourceInfo for the region surround this info\u0027s location.",
      "javadoc": "Returns the {@link MemoryBlockSourceInfo} for the region surround this info\u0027s location.\n@return the {@link MemoryBlockSourceInfo} for the region surround this info\u0027s location.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.mem.MemoryBlockSourceInfo",
        "type_short": "MemoryBlockSourceInfo",
        "comment": "the MemoryBlockSourceInfo for the region surround this info\u0027s location."
      },
      "throws": []
    },
    {
      "name": "getContainingInfo",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.mem.MemoryBlockSourceInfo",
        "type_short": "MemoryBlockSourceInfo",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getMappedSourceInfo",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "info",
          "type_long": "ghidra.program.model.mem.MemoryBlockSourceInfo",
          "type_short": "MemoryBlockSourceInfo",
          "comment": ""
        },
        {
          "name": "addressRange",
          "type_long": "ghidra.program.model.address.AddressRange",
          "type_short": "AddressRange",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.database.mem.AddressSourceInfo",
        "type_short": "AddressSourceInfo",
        "comment": ""
      },
      "throws": []
    }
  ]
}
