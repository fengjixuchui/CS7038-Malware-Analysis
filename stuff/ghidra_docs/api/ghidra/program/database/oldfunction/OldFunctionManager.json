{
  "name": "OldFunctionManager",
  "comment": "This class only exists to support upgrading Ghidra Version 2.1 and earlier.\n \n NOTE: Programmers should not use this class!",
  "javadoc": "This class only exists to support upgrading Ghidra Version 2.1 and earlier.\n \u003cBR\u003e\n \u003cb\u003eNOTE: Programmers should not use this class!\u003c/b\u003e",
  "static": false,
  "implements": [
    "db.util.ErrorHandler"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "dbHandle",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "db.DBHandle",
      "type_short": "DBHandle",
      "constant_value": null
    },
    {
      "name": "errHandler",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "db.util.ErrorHandler",
      "type_short": "ErrorHandler",
      "constant_value": null
    },
    {
      "name": "functionMap",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.database.oldfunction.OldFunctionMapDB",
      "type_short": "OldFunctionMapDB",
      "constant_value": null
    },
    {
      "name": "functionAdapter",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.database.oldfunction.OldFunctionDBAdapter",
      "type_short": "OldFunctionDBAdapter",
      "constant_value": null
    },
    {
      "name": "stackVarAdapter",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.database.oldfunction.OldStackVariableDBAdapter",
      "type_short": "OldStackVariableDBAdapter",
      "constant_value": null
    },
    {
      "name": "registerAdapter",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.database.oldfunction.OldRegisterVariableDBAdapter",
      "type_short": "OldRegisterVariableDBAdapter",
      "constant_value": null
    },
    {
      "name": "program",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.database.ProgramDB",
      "type_short": "ProgramDB",
      "constant_value": null
    },
    {
      "name": "dataManager",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.database.data.DataTypeManagerDB",
      "type_short": "DataTypeManagerDB",
      "constant_value": null
    },
    {
      "name": "addrMap",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.database.map.AddressMap",
      "type_short": "AddressMap",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new OldFunctionManager.",
      "javadoc": "Constructs a new OldFunctionManager.\n@param dbHandle data base handle\n@param errHandler the error handler\n@param addrMap the address map\n@throws VersionException if function manager\u0027s version does not match its expected version",
      "static": false,
      "params": [
        {
          "name": "dbHandle",
          "type_long": "db.DBHandle",
          "type_short": "DBHandle",
          "comment": "data base handle"
        },
        {
          "name": "errHandler",
          "type_long": "db.util.ErrorHandler",
          "type_short": "ErrorHandler",
          "comment": "the error handler"
        },
        {
          "name": "addrMap",
          "type_long": "ghidra.program.database.map.AddressMap",
          "type_short": "AddressMap",
          "comment": "the address map"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.VersionException",
          "type_short": "VersionException",
          "comment": "if function manager\u0027s version does not match its expected version"
        }
      ]
    },
    {
      "name": "upgrade",
      "comment": "Actually does the work of upgrading the old program function manager.",
      "javadoc": "Actually does the work of upgrading the old program function manager.\n@param upgradeProgram the program to upgrade\n@param monitor the task monitor to allow the user to cancel the upgrade\n@throws CancelledException if the user cancels the upgrade\n@throws IOException if an i/o error occurs",
      "static": false,
      "params": [
        {
          "name": "upgradeProgram",
          "type_long": "ghidra.program.database.ProgramDB",
          "type_short": "ProgramDB",
          "comment": "the program to upgrade"
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": "the task monitor to allow the user to cancel the upgrade"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": "if the user cancels the upgrade"
        },
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if an i/o error occurs"
        }
      ]
    },
    {
      "name": "upgradeFunction",
      "comment": "Copy old function into programs current function manager.",
      "javadoc": "Copy old function into programs current function manager.\n@param function existing function",
      "static": false,
      "params": [
        {
          "name": "oldFunc",
          "type_long": "ghidra.program.database.oldfunction.OldFunctionDataDB",
          "type_short": "OldFunctionDataDB",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "initializeAdapters",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.VersionException",
          "type_short": "VersionException",
          "comment": ""
        }
      ]
    },
    {
      "name": "getProgram",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.database.ProgramDB",
        "type_short": "ProgramDB",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFunctionAdapter",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.database.oldfunction.OldFunctionDBAdapter",
        "type_short": "OldFunctionDBAdapter",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getRegisterVariableAdapter",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.database.oldfunction.OldRegisterVariableDBAdapter",
        "type_short": "OldRegisterVariableDBAdapter",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getStackVariableAdapter",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.database.oldfunction.OldStackVariableDBAdapter",
        "type_short": "OldStackVariableDBAdapter",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDataType",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "dataTypeId",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.data.DataType",
        "type_short": "DataType",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDataTypeId",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "dataType",
          "type_long": "ghidra.program.model.data.DataType",
          "type_short": "DataType",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFunctionCount",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFunctionBody",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "functionKey",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.AddressSetView",
        "type_short": "AddressSetView",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFunction",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "rec",
          "type_long": "db.DBRecord",
          "type_short": "DBRecord",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.database.oldfunction.OldFunctionDataDB",
        "type_short": "OldFunctionDataDB",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFunctions",
      "comment": "Get an iterator over functions",
      "javadoc": "Get an iterator over functions\n@return an iterator over functions.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.database.oldfunction.OldFunctionManager.OldFunctionIteratorDB",
        "type_short": "OldFunctionIteratorDB",
        "comment": "an iterator over functions."
      },
      "throws": []
    },
    {
      "name": "dbError",
      "comment": "",
      "javadoc": "@see db.util.ErrorHandler#dbError(java.io.IOException)",
      "static": false,
      "params": [
        {
          "name": "e",
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "dispose",
      "comment": "Permanently discards all data resources associated with the old function manager.\n This should be invoked when an upgrade of all function data has been completed.",
      "javadoc": "Permanently discards all data resources associated with the old function manager.\n This should be invoked when an upgrade of all function data has been completed.\n@throws IOException",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    }
  ]
}
