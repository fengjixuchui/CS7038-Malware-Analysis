{
  "name": "IndexedAddressIterator",
  "comment": "Iterates over a FieldIterator; the field is the address but not\n the key; the column for the field must be indexed.",
  "javadoc": "Iterates over a FieldIterator; the field is the address but not\n the key; the column for the field must be indexed.",
  "static": false,
  "implements": [
    "ghidra.program.model.address.AddressIterator"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "iter",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "db.DBFieldIterator",
      "type_short": "DBFieldIterator",
      "constant_value": null
    },
    {
      "name": "addrMap",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.database.map.AddressMap",
      "type_short": "AddressMap",
      "constant_value": null
    },
    {
      "name": "errHandler",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "db.util.ErrorHandler",
      "type_short": "ErrorHandler",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor",
      "javadoc": "Constructor\n@param iter field iterator that is the address\n@param addrMap address map to convert the longs to addresses\n@param colIndex indexed column in the record",
      "static": false,
      "params": [
        {
          "name": "iter",
          "type_long": "db.DBFieldIterator",
          "type_short": "DBFieldIterator",
          "comment": "field iterator that is the address"
        },
        {
          "name": "addrMap",
          "type_long": "ghidra.program.database.map.AddressMap",
          "type_short": "AddressMap",
          "comment": "address map to convert the longs to addresses"
        },
        {
          "name": "colIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": "indexed column in the record"
        },
        {
          "name": "errHandler",
          "type_long": "db.util.ErrorHandler",
          "type_short": "ErrorHandler",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "remove",
      "comment": "",
      "javadoc": "@see java.util.Iterator#remove()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hasNext",
      "comment": "",
      "javadoc": "@see ghidra.program.model.address.AddressIterator#hasNext()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "next",
      "comment": "",
      "javadoc": "@see ghidra.program.model.address.AddressIterator#next()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "iterator",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Iterator\u003cghidra.program.model.address.Address\u003e",
        "type_short": "Iterator",
        "comment": ""
      },
      "throws": []
    }
  ]
}
