{
  "name": "AndQuery",
  "comment": "Combines two queries such that this query is the logical \"AND\" of the two queries.  If the\n first query does not match, then the second query is not executed.",
  "javadoc": "Combines two queries such that this query is the logical \"AND\" of the two queries.  If the\n first query does not match, then the second query is not executed.",
  "static": false,
  "implements": [
    "ghidra.program.database.util.Query"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "q1",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.database.util.Query",
      "type_short": "Query",
      "constant_value": null
    },
    {
      "name": "q2",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.database.util.Query",
      "type_short": "Query",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a new AndQuery from two other queries.",
      "javadoc": "Construct a new AndQuery from two other queries.\n@param q1 the first query\n@param q2 the second query",
      "static": false,
      "params": [
        {
          "name": "q1",
          "type_long": "ghidra.program.database.util.Query",
          "type_short": "Query",
          "comment": "the first query"
        },
        {
          "name": "q2",
          "type_long": "ghidra.program.database.util.Query",
          "type_short": "Query",
          "comment": "the second query"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "matches",
      "comment": "",
      "javadoc": "@see ghidra.program.database.util.Query#matches(db.DBRecord)",
      "static": false,
      "params": [
        {
          "name": "record",
          "type_long": "db.DBRecord",
          "type_short": "DBRecord",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    }
  ]
}
