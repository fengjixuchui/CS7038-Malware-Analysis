{
  "name": "NotQuery",
  "comment": "Negates the given query such that this query is the logical \"NOT\" of the given query.",
  "javadoc": "Negates the given query such that this query is the logical \"NOT\" of the given query.",
  "static": false,
  "implements": [
    "ghidra.program.database.util.Query"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "q1",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.database.util.Query",
      "type_short": "Query",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a new query that results in the not of the given query.",
      "javadoc": "Construct a new query that results in the not of the given query.\n@param q1 the query to logically negate.",
      "static": false,
      "params": [
        {
          "name": "q1",
          "type_long": "ghidra.program.database.util.Query",
          "type_short": "Query",
          "comment": "the query to logically negate."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "matches",
      "comment": "",
      "javadoc": "@see ghidra.program.database.util.Query#matches(db.DBRecord)",
      "static": false,
      "params": [
        {
          "name": "record",
          "type_long": "db.DBRecord",
          "type_short": "DBRecord",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    }
  ]
}
