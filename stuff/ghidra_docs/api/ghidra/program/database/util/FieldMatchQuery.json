{
  "name": "FieldMatchQuery",
  "comment": "Query implementation used to test a field in a record to match a given value.",
  "javadoc": "Query implementation used to test a field in a record to match a given value.",
  "static": false,
  "implements": [
    "ghidra.program.database.util.Query"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "column",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "value",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "db.Field",
      "type_short": "Field",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new FieldMatchQuery that tests a records field against a particular value.",
      "javadoc": "Constructs a new FieldMatchQuery that tests a records field against a particular value.\n@param column the field index in the record to test.\n@param value the Field value to test the record\u0027s field against.",
      "static": false,
      "params": [
        {
          "name": "column",
          "type_long": "int",
          "type_short": "int",
          "comment": "the field index in the record to test."
        },
        {
          "name": "value",
          "type_long": "db.Field",
          "type_short": "Field",
          "comment": "the Field value to test the record\u0027s field against."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "matches",
      "comment": "",
      "javadoc": "@see ghidra.program.database.util.Query#matches(db.DBRecord)",
      "static": false,
      "params": [
        {
          "name": "record",
          "type_long": "db.DBRecord",
          "type_short": "DBRecord",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    }
  ]
}
