{
  "name": "StringMatchQuery",
  "comment": "Query for matching string fields with wildcard string.",
  "javadoc": "Query for matching string fields with wildcard string.",
  "static": false,
  "implements": [
    "ghidra.program.database.util.Query"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "col",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "pattern",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.regex.Pattern",
      "type_short": "Pattern",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a new StringMatchQuery",
      "javadoc": "Construct a new StringMatchQuery\n@param col column index\n@param searchString string to match\n@param caseSensitive true if the match should be case sensitive",
      "static": false,
      "params": [
        {
          "name": "col",
          "type_long": "int",
          "type_short": "int",
          "comment": "column index"
        },
        {
          "name": "searchString",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "string to match"
        },
        {
          "name": "caseSensitive",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true if the match should be case sensitive"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "matches",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "record",
          "type_long": "db.DBRecord",
          "type_short": "DBRecord",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    }
  ]
}
