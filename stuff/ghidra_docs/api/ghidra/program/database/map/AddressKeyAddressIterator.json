{
  "name": "AddressKeyAddressIterator",
  "comment": "Converts an AddressKeyIterator or an addressKeyAddressIterator into an AddressIterator",
  "javadoc": "Converts an AddressKeyIterator or an addressKeyAddressIterator into an AddressIterator",
  "static": false,
  "implements": [
    "ghidra.program.model.address.AddressIterator"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "keyIter",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "db.DBLongIterator",
      "type_short": "DBLongIterator",
      "constant_value": null
    },
    {
      "name": "addrMap",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.database.map.AddressMap",
      "type_short": "AddressMap",
      "constant_value": null
    },
    {
      "name": "errHandler",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "db.util.ErrorHandler",
      "type_short": "ErrorHandler",
      "constant_value": null
    },
    {
      "name": "forward",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor.",
      "javadoc": "Constructor.\n@param keyIter address key iterator, may be null.  All long values must decode properly with the specified addrMap.\n@param forward true to iterate in the direction of increasing addresses.\n@param addrMap address map\n@param errHandler IO error handler (may be null)",
      "static": false,
      "params": [
        {
          "name": "keyIter",
          "type_long": "db.DBLongIterator",
          "type_short": "DBLongIterator",
          "comment": "address key iterator, may be null.  All long values must decode properly with the specified addrMap."
        },
        {
          "name": "forward",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true to iterate in the direction of increasing addresses."
        },
        {
          "name": "addrMap",
          "type_long": "ghidra.program.database.map.AddressMap",
          "type_short": "AddressMap",
          "comment": "address map"
        },
        {
          "name": "errHandler",
          "type_long": "db.util.ErrorHandler",
          "type_short": "ErrorHandler",
          "comment": "IO error handler (may be null)"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hasNext",
      "comment": "",
      "javadoc": "@see ghidra.program.model.address.AddressIterator#hasNext()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "next",
      "comment": "",
      "javadoc": "@see ghidra.program.model.address.AddressIterator#next()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "remove",
      "comment": "",
      "javadoc": "@see java.util.Iterator#remove()",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "iterator",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Iterator\u003cghidra.program.model.address.Address\u003e",
        "type_short": "Iterator",
        "comment": ""
      },
      "throws": []
    }
  ]
}
