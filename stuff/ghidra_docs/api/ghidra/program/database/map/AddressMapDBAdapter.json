{
  "name": "AddressMapDBAdapter",
  "comment": "Database adapter for address map",
  "javadoc": "Database adapter for address map",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "TABLE_NAME",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "CURRENT_VERSION",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "1"
    },
    {
      "name": "oldAddrMap",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.database.map.AddressMap",
      "type_short": "AddressMap",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getAdapter",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "handle",
          "type_long": "db.DBHandle",
          "type_short": "DBHandle",
          "comment": ""
        },
        {
          "name": "openMode",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "factory",
          "type_long": "ghidra.program.model.address.AddressFactory",
          "type_short": "AddressFactory",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.database.map.AddressMapDBAdapter",
        "type_short": "AddressMapDBAdapter",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.VersionException",
          "type_short": "VersionException",
          "comment": ""
        },
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "findReadOnlyAdapter",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "handle",
          "type_long": "db.DBHandle",
          "type_short": "DBHandle",
          "comment": ""
        },
        {
          "name": "factory",
          "type_long": "ghidra.program.model.address.AddressFactory",
          "type_short": "AddressFactory",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.database.map.AddressMapDBAdapter",
        "type_short": "AddressMapDBAdapter",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "upgrade",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "handle",
          "type_long": "db.DBHandle",
          "type_short": "DBHandle",
          "comment": ""
        },
        {
          "name": "oldAdapter",
          "type_long": "ghidra.program.database.map.AddressMapDBAdapter",
          "type_short": "AddressMapDBAdapter",
          "comment": ""
        },
        {
          "name": "factory",
          "type_long": "ghidra.program.model.address.AddressFactory",
          "type_short": "AddressFactory",
          "comment": ""
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.database.map.AddressMapDBAdapter",
        "type_short": "AddressMapDBAdapter",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.VersionException",
          "type_short": "VersionException",
          "comment": ""
        },
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "deleteTable",
      "comment": "Deletes the table - used when upgrading;",
      "javadoc": "Deletes the table - used when upgrading;",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "addBaseAddress",
      "comment": "Adds a new base address",
      "javadoc": "Adds a new base address\n@param addr the new base address to add.\n@param normalizedOffset the normalized offset (image base subtracted) for the address.\n@return the array of image bases.",
      "static": false,
      "params": [
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "the new base address to add."
        },
        {
          "name": "normalizedOffset",
          "type_long": "long",
          "type_short": "long",
          "comment": "the normalized offset (image base subtracted) for the address."
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.Address[]",
        "type_short": "ghidra.program.model.address.Address[]",
        "comment": "the array of image bases."
      },
      "throws": []
    },
    {
      "name": "getBaseAddresses",
      "comment": "Returns an array of image bases.",
      "javadoc": "Returns an array of image bases.\n@param forceRead forces the adapter to reread the data from the database.\n@throws IOException if a database io error occurs.",
      "static": false,
      "params": [
        {
          "name": "forceRead",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "forces the adapter to reread the data from the database."
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.Address[]",
        "type_short": "ghidra.program.model.address.Address[]",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if a database io error occurs."
        }
      ]
    },
    {
      "name": "getEntries",
      "comment": "Returns raw address map entries.",
      "javadoc": "Returns raw address map entries.\n@throws IOException",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cghidra.program.database.map.AddressMapDBAdapter.AddressMapEntry\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "setEntries",
      "comment": "Initialize map with specified list of map entries (upgrade use only).",
      "javadoc": "Initialize map with specified list of map entries (upgrade use only).\n@param entries map entries sorted by index (a missing index will cause an exception).\n@throws IOException",
      "static": false,
      "params": [
        {
          "name": "entries",
          "type_long": "java.util.List\u003cghidra.program.database.map.AddressMapDBAdapter.AddressMapEntry\u003e",
          "type_short": "List",
          "comment": "map entries sorted by index (a missing index will cause an exception)."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "clearAll",
      "comment": "Clears all entries in the database table.",
      "javadoc": "Clears all entries in the database table.\n@throws IOException if a database io error occurs.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if a database io error occurs."
        }
      ]
    },
    {
      "name": "setAddressFactory",
      "comment": "Sets the addressFactory",
      "javadoc": "Sets the addressFactory\n@param addrFactory the new factory to use.",
      "static": false,
      "params": [
        {
          "name": "addrFactory",
          "type_long": "ghidra.program.model.address.AddressFactory",
          "type_short": "AddressFactory",
          "comment": "the new factory to use."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "renameOverlaySpace",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "oldName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "newName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "deleteOverlaySpace",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    }
  ]
}
