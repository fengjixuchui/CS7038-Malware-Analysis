{
  "name": "StringDiffUtils",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "MINIMUM_DIFF_SIZE",
      "comment": "Minimum size used to determine whether a new StringDiff object will be\n created just using a string (no positions)\n in the getDiffs(String, String) method.",
      "javadoc": "Minimum size used to determine whether a new StringDiff object will be\n created just using a string (no positions)\n in the \u003ccode\u003egetDiffs(String, String)\u003c/code\u003e method.\n@see #getLineDiffs(String, String)",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLineDiffs",
      "comment": "Returns the list of StringDiff objects that if applied to s1 would result in s2;  The\n given text will look only for whole lines using \u0027\\n\u0027.",
      "javadoc": "Returns the list of StringDiff objects that if applied to s1 would result in s2;  The\n given text will look only for whole lines using \u0027\\n\u0027.\n@param s1 the original string\n@param s2 the result string\n        this value, then a completely different string will be returned\n@return an array of StringDiff objects that change s1 into s2;",
      "static": true,
      "params": [
        {
          "name": "s1",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the original string"
        },
        {
          "name": "s2",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the result string\n        this value, then a completely different string will be returned"
        }
      ],
      "return": {
        "type_long": "ghidra.program.database.code.StringDiff[]",
        "type_short": "ghidra.program.database.code.StringDiff[]",
        "comment": "an array of StringDiff objects that change s1 into s2;"
      },
      "throws": []
    },
    {
      "name": "getLineDiffs",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "s1",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "s2",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "minimumDiffSize",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.database.code.StringDiff[]",
        "type_short": "ghidra.program.database.code.StringDiff[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "charOffset",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "list",
          "type_long": "java.util.List\u003cghidra.program.database.code.StringDiffUtils.Line\u003e",
          "type_short": "List",
          "comment": ""
        },
        {
          "name": "index",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createInsertAtEnd",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "list",
          "type_long": "java.util.List\u003cghidra.program.database.code.StringDiffUtils.Line\u003e",
          "type_short": "List",
          "comment": ""
        },
        {
          "name": "start",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "end",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "insertIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.database.code.StringDiff",
        "type_short": "StringDiff",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createInsert",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "lines",
          "type_long": "java.util.List\u003cghidra.program.database.code.StringDiffUtils.Line\u003e",
          "type_short": "List",
          "comment": ""
        },
        {
          "name": "insertIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.database.code.StringDiff",
        "type_short": "StringDiff",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createInsert",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "lines",
          "type_long": "java.util.List\u003cghidra.program.database.code.StringDiffUtils.Line\u003e",
          "type_short": "List",
          "comment": ""
        },
        {
          "name": "insertIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "isAtEnd",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.database.code.StringDiff",
        "type_short": "StringDiff",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createDeleteAtEnd",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "list",
          "type_long": "java.util.List\u003cghidra.program.database.code.StringDiffUtils.Line\u003e",
          "type_short": "List",
          "comment": ""
        },
        {
          "name": "start",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "end",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.database.code.StringDiff",
        "type_short": "StringDiff",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createDelete",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "lines",
          "type_long": "java.util.List\u003cghidra.program.database.code.StringDiffUtils.Line\u003e",
          "type_short": "List",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.database.code.StringDiff",
        "type_short": "StringDiff",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createDelete",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "lines",
          "type_long": "java.util.List\u003cghidra.program.database.code.StringDiffUtils.Line\u003e",
          "type_short": "List",
          "comment": ""
        },
        {
          "name": "includeLastNewline",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.database.code.StringDiff",
        "type_short": "StringDiff",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "indexOf",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "list",
          "type_long": "java.util.List\u003cghidra.program.database.code.StringDiffUtils.Line\u003e",
          "type_short": "List",
          "comment": ""
        },
        {
          "name": "line",
          "type_long": "ghidra.program.database.code.StringDiffUtils.Line",
          "type_short": "Line",
          "comment": ""
        },
        {
          "name": "from",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "split",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "s",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.List\u003cghidra.program.database.code.StringDiffUtils.Line\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "applyDiffs",
      "comment": "Applies the array of StringObjects to the string s to produce a new string. Warning - the\n diff objects cannot be applied to an arbitrary string, the Strings must be the original\n String used to compute the diffs.",
      "javadoc": "Applies the array of StringObjects to the string s to produce a new string. Warning - the\n diff objects cannot be applied to an arbitrary string, the Strings must be the original\n String used to compute the diffs.\n@param s the original string\n@param diffs the array of StringDiff object to apply\n@return a new String resulting from applying the diffs to s.",
      "static": true,
      "params": [
        {
          "name": "s",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the original string"
        },
        {
          "name": "diffs",
          "type_long": "java.util.List\u003cghidra.program.database.code.StringDiff\u003e",
          "type_short": "List",
          "comment": "the array of StringDiff object to apply"
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "a new String resulting from applying the diffs to s."
      },
      "throws": []
    }
  ]
}
