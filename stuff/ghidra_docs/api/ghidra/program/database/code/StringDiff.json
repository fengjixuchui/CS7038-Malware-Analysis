{
  "name": "StringDiff",
  "comment": "Container object that holds a start and end position within a string. A list of StringDiffs \n is used to keep track of changes made to a string.",
  "javadoc": "Container object that holds a start and end position within a string. A list of StringDiffs \n is used to keep track of changes made to a string.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "start",
      "comment": "Start position of the string used when text is inserted or replaced",
      "javadoc": "Start position of the string used when text is inserted or replaced",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "end",
      "comment": "End position of the string used when part of the string is replaced",
      "javadoc": "End position of the string used when part of the string is replaced",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "text",
      "comment": "String being inserted.  This can be an insert or a complete replace (the positions will both\n be -1 in a replace; pos1 will be non-negative during an insert).",
      "javadoc": "String being inserted.  This can be an insert or a complete replace (the positions will both\n be -1 in a replace; pos1 will be non-negative during an insert).",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "allTextReplaced",
      "comment": "Construct a new StringDiff with pos1 and pos2 are initialized to -1",
      "javadoc": "Construct a new StringDiff with pos1 and pos2 are initialized to -1\n@param newText string\n@return the new diff",
      "static": true,
      "params": [
        {
          "name": "newText",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "string"
        }
      ],
      "return": {
        "type_long": "ghidra.program.database.code.StringDiff",
        "type_short": "StringDiff",
        "comment": "the new diff"
      },
      "throws": []
    },
    {
      "name": "textDeleted",
      "comment": "Construct a new StringDiff that indicates text was deleted from pos1 to pos2",
      "javadoc": "Construct a new StringDiff that indicates text was deleted from pos1 to pos2\n@param start position 1 for the diff\n@param end position 2 for the diff\n@return the new diff",
      "static": true,
      "params": [
        {
          "name": "start",
          "type_long": "int",
          "type_short": "int",
          "comment": "position 1 for the diff"
        },
        {
          "name": "end",
          "type_long": "int",
          "type_short": "int",
          "comment": "position 2 for the diff"
        }
      ],
      "return": {
        "type_long": "ghidra.program.database.code.StringDiff",
        "type_short": "StringDiff",
        "comment": "the new diff"
      },
      "throws": []
    },
    {
      "name": "textInserted",
      "comment": "Construct a new StringDiff that indicates that insertData was inserted at the given position",
      "javadoc": "Construct a new StringDiff that indicates that insertData was inserted at the given position\n@param newText inserted string\n@param start position where the text was inserted\n@return the new diff",
      "static": true,
      "params": [
        {
          "name": "newText",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "inserted string"
        },
        {
          "name": "start",
          "type_long": "int",
          "type_short": "int",
          "comment": "position where the text was inserted"
        }
      ],
      "return": {
        "type_long": "ghidra.program.database.code.StringDiff",
        "type_short": "StringDiff",
        "comment": "the new diff"
      },
      "throws": []
    },
    {
      "name": "restore",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "text",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "start",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "end",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.database.code.StringDiff",
        "type_short": "StringDiff",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "start",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "end",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "text",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hashCode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "equals",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "obj",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    }
  ]
}
