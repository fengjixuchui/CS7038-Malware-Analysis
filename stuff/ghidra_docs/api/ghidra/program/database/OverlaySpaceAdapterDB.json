{
  "name": "OverlaySpaceAdapterDB",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "TABLE_NAME",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "SCHEMA",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "db.Schema",
      "type_short": "Schema",
      "constant_value": null
    },
    {
      "name": "OV_SPACE_NAME_COL",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "0"
    },
    {
      "name": "OV_SPACE_BASE_COL",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "1"
    },
    {
      "name": "OV_MIN_OFFSET_COL",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "2"
    },
    {
      "name": "OV_MAX_OFFSET_COL",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "3"
    },
    {
      "name": "db",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "db.DBHandle",
      "type_short": "DBHandle",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "dbHandle",
          "type_long": "db.DBHandle",
          "type_short": "DBHandle",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "initializeOverlaySpaces",
      "comment": "Adds existing overlay spaces to the factory.",
      "javadoc": "Adds existing overlay spaces to the factory.\n@param factory the factory to add overlay spaces to\n@throws IOException",
      "static": false,
      "params": [
        {
          "name": "factory",
          "type_long": "ghidra.program.database.ProgramAddressFactory",
          "type_short": "ProgramAddressFactory",
          "comment": "the factory to add overlay spaces to"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "addOverlaySpace",
      "comment": "Adds a new overlay space to the database",
      "javadoc": "Adds a new overlay space to the database\n@param id the name of the new overlay space to add\n@param space the template space used to create the new space.\n@param minOffset the lowest offset in this overlay.\n@param maxOffset the highest offset in this overlay.\n@throws IOException",
      "static": false,
      "params": [
        {
          "name": "ovSpace",
          "type_long": "ghidra.program.model.address.OverlayAddressSpace",
          "type_short": "OverlayAddressSpace",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "removeOverlaySpace",
      "comment": "Removes the named space from the database",
      "javadoc": "Removes the named space from the database\n@param name the name of the overlay space to remove\n@throws IOException",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of the overlay space to remove"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "updateOverlaySpaces",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "factory",
          "type_long": "ghidra.program.database.ProgramAddressFactory",
          "type_short": "ProgramAddressFactory",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "renameOverlaySpace",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "oldName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        },
        {
          "name": "newName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "setLanguage",
      "comment": "Translate overlay address spaces for a new language provider\n and initialize the new addrFactory with the translated overlay spaces.\n All non-overlay address spaces within the address factory should already\n have been mapped to the new language.",
      "javadoc": "Translate overlay address spaces for a new language provider\n and initialize the new addrFactory with the translated overlay spaces.\n All non-overlay address spaces within the address factory should already\n have been mapped to the new language.\n@param newLanguage new language to be used\n@param addrFactory old address factory\n@param translator language translator to assist with mapping of address spaces\n@throws IOException",
      "static": false,
      "params": [
        {
          "name": "newLanguage",
          "type_long": "ghidra.program.model.lang.Language",
          "type_short": "Language",
          "comment": "new language to be used"
        },
        {
          "name": "addrFactory",
          "type_long": "ghidra.program.database.ProgramAddressFactory",
          "type_short": "ProgramAddressFactory",
          "comment": "old address factory"
        },
        {
          "name": "translator",
          "type_long": "ghidra.program.util.LanguageTranslator",
          "type_short": "LanguageTranslator",
          "comment": "language translator to assist with mapping of address spaces"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    }
  ]
}
