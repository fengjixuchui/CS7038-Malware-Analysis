{
  "name": "InstructionUtils",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "OBJSTRING_COMPARATOR",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.util.Comparator\u003cjava.lang.String\u003e",
      "type_short": "Comparator",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFormattedInstructionDetails",
      "comment": "Get details instruction info as formatted text",
      "javadoc": "Get details instruction info as formatted text\n@param instruction\n@param debug SleighDebugerLogger for specified instruction or null\n@return instruction details",
      "static": true,
      "params": [
        {
          "name": "instruction",
          "type_long": "ghidra.program.model.listing.Instruction",
          "type_short": "Instruction",
          "comment": ""
        },
        {
          "name": "debug",
          "type_long": "ghidra.app.plugin.processors.sleigh.SleighDebugLogger",
          "type_short": "SleighDebugLogger",
          "comment": "SleighDebugerLogger for specified instruction or null"
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "instruction details"
      },
      "throws": []
    },
    {
      "name": "getFormattedContextRegisterValueBreakout",
      "comment": "Get formatted context register as list of child register values",
      "javadoc": "Get formatted context register as list of child register values\n@param instr\n@return formatted context data",
      "static": true,
      "params": [
        {
          "name": "instr",
          "type_long": "ghidra.program.model.listing.Instruction",
          "type_short": "Instruction",
          "comment": ""
        },
        {
          "name": "indent",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "formatted context data"
      },
      "throws": []
    },
    {
      "name": "getFormatedInstructionObjects",
      "comment": "Format instruction input or result objects",
      "javadoc": "Format instruction input or result objects\n@param instr instruction\n@param input input objects if true else result objects\n@return formatted array of strings",
      "static": true,
      "params": [
        {
          "name": "instr",
          "type_long": "ghidra.program.model.listing.Instruction",
          "type_short": "Instruction",
          "comment": "instruction"
        },
        {
          "name": "input",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "input objects if true else result objects"
        }
      ],
      "return": {
        "type_long": "java.lang.String[]",
        "type_short": "java.lang.String[]",
        "comment": "formatted array of strings"
      },
      "throws": []
    },
    {
      "name": "getFormatedOperandObjects",
      "comment": "Format instruction operand objects",
      "javadoc": "Format instruction operand objects\n@param instr instruction\n@param opIndex the operand index\n@return formatted array of strings",
      "static": true,
      "params": [
        {
          "name": "instr",
          "type_long": "ghidra.program.model.listing.Instruction",
          "type_short": "Instruction",
          "comment": "instruction"
        },
        {
          "name": "opIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": "the operand index"
        }
      ],
      "return": {
        "type_long": "java.lang.String[]",
        "type_short": "java.lang.String[]",
        "comment": "formatted array of strings"
      },
      "throws": []
    },
    {
      "name": "getFormatedInstructionObjects",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "objs",
          "type_long": "java.lang.Object[]",
          "type_short": "java.lang.Object[]",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String[]",
        "type_short": "java.lang.String[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFormattedRegisterValueBits",
      "comment": "Get formatted RegisterValue as list of child register values",
      "javadoc": "Get formatted RegisterValue as list of child register values\n@param value\n@return ",
      "static": true,
      "params": [
        {
          "name": "value",
          "type_long": "ghidra.program.model.lang.RegisterValue",
          "type_short": "RegisterValue",
          "comment": ""
        },
        {
          "name": "indent",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getString",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "strs",
          "type_long": "java.lang.String[]",
          "type_short": "java.lang.String[]",
          "comment": ""
        },
        {
          "name": "multiline",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getString",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "list",
          "type_long": "java.util.List\u003cjava.lang.String\u003e",
          "type_short": "List",
          "comment": ""
        },
        {
          "name": "multiline",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    }
  ]
}
