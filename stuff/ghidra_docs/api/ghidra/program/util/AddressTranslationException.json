{
  "name": "AddressTranslationException",
  "comment": "Exception thrown when an attempt is made to translate an address\n from one program into an equivalent address in another program.",
  "javadoc": "Exception thrown when an attempt is made to translate an address\n from one program into an equivalent address in another program.",
  "static": false,
  "implements": [],
  "extends": "java.lang.RuntimeException",
  "fields": [
    {
      "name": "address",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.address.Address",
      "type_short": "Address",
      "constant_value": null
    },
    {
      "name": "translator",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.util.AddressTranslator",
      "type_short": "AddressTranslator",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a new AddressTranslationException with no message",
      "javadoc": "Construct a new AddressTranslationException with no message",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a new AddressTranslationException with the given message",
      "javadoc": "Construct a new AddressTranslationException with the given message\n@param msg the exception message",
      "static": false,
      "params": [
        {
          "name": "msg",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the exception message"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a new AddressTranslationException with the given address and translator.\n The message will indicate there is a conflict between the two data types.",
      "javadoc": "Construct a new AddressTranslationException with the given address and translator.\n The message will indicate there is a conflict between the two data types.\n@param address the first of the two conflicting data types. \n (The new data type.)\n@param translator the second of the two conflicting data types. \n (The existing data type.)",
      "static": false,
      "params": [
        {
          "name": "address",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "the first of the two conflicting data types. \n (The new data type.)"
        },
        {
          "name": "translator",
          "type_long": "ghidra.program.util.AddressTranslator",
          "type_short": "AddressTranslator",
          "comment": "the second of the two conflicting data types. \n (The existing data type.)"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getAddress",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getTranslator",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.util.AddressTranslator",
        "type_short": "AddressTranslator",
        "comment": ""
      },
      "throws": []
    }
  ]
}
