{
  "name": "MnemonicFieldLocation",
  "comment": "The MnemonicFieldLocation class contains specific location\n information within the MNEMONIC field of a CodeUnitLocation object.",
  "javadoc": "The \u003cCODE\u003eMnemonicFieldLocation\u003c/CODE\u003e class contains specific location\n information within the MNEMONIC field of a CodeUnitLocation object.",
  "static": false,
  "implements": [],
  "extends": "ghidra.program.util.CodeUnitLocation",
  "fields": [
    {
      "name": "mnemonicStr",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a new MnemonicFieldLocation.",
      "javadoc": "Construct a new MnemonicFieldLocation.\n@param program the program of the location\n@param addr address of the location; should not be null\n@param componentPath array of indexes for each nested data component; the\n            index is the data component\u0027s index within its parent; may be\n            null\n@param mnemonicString the mnemonic string\n@param charOffset the character position within the mnemonic string for\n            this location.",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "the program of the location"
        },
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "address of the location; should not be null"
        },
        {
          "name": "componentPath",
          "type_long": "int[]",
          "type_short": "int[]",
          "comment": "array of indexes for each nested data component; the\n            index is the data component\u0027s index within its parent; may be\n            null"
        },
        {
          "name": "mnemonicString",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the mnemonic string"
        },
        {
          "name": "charOffset",
          "type_long": "int",
          "type_short": "int",
          "comment": "the character position within the mnemonic string for\n            this location."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a new MnemonicFieldLocation.",
      "javadoc": "Construct a new MnemonicFieldLocation.\n@param program the program of the location\n@param addr address of the location; should not be null\n@param refAddr the \"referred to\" address if the location is over a\n            reference; may be null\n@param componentPath array of indexes for each nested data component; the\n            index is the data component\u0027s index within its parent; may be\n            null\n@param mnemonicString the mnemonic string\n@param charOffset the character position within the mnemonic string for\n            this location.",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "the program of the location"
        },
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "address of the location; should not be null"
        },
        {
          "name": "refAddr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "the \"referred to\" address if the location is over a\n            reference; may be null"
        },
        {
          "name": "componentPath",
          "type_long": "int[]",
          "type_short": "int[]",
          "comment": "array of indexes for each nested data component; the\n            index is the data component\u0027s index within its parent; may be\n            null"
        },
        {
          "name": "mnemonicString",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the mnemonic string"
        },
        {
          "name": "charOffset",
          "type_long": "int",
          "type_short": "int",
          "comment": "the character position within the mnemonic string for\n            this location."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "@see ProgramLocation#ProgramLocation(Program, Address)",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "address",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Default constructor needed for restoring a mnemonic field location from\n XML.",
      "javadoc": "Default constructor needed for restoring a mnemonic field location from\n XML.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getMnemonic",
      "comment": "Returns the mnemonic string at this location.",
      "javadoc": "Returns the mnemonic string at this location.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "Returns a String representation of this location.",
      "javadoc": "Returns a String representation of this location.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hashCode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "equals",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "obj",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "restoreState",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "p",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "obj",
          "type_long": "ghidra.framework.options.SaveState",
          "type_short": "SaveState",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "saveState",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "obj",
          "type_long": "ghidra.framework.options.SaveState",
          "type_short": "SaveState",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
