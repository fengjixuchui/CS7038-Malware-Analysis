{
  "name": "DefinedDataIterator",
  "comment": "Iterator that visits each defined data instance in the initialized memory of a Program or in the footprint of\n a specified data element.\n \n Data elements that are nested inside of composites or arrays are visited, not just the\n parent/containing data element.",
  "javadoc": "Iterator that visits each defined data instance in the initialized memory of a Program or in the footprint of\n a specified data element.\n \u003cp\u003e\n Data elements that are nested inside of composites or arrays are visited, not just the\n parent/containing data element.",
  "static": false,
  "implements": [
    "ghidra.program.model.listing.DataIterator"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "dataTypePredicate",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.function.Predicate\u003cghidra.program.model.data.DataType\u003e",
      "type_short": "Predicate",
      "constant_value": null
    },
    {
      "name": "dataInstancePredicate",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.function.Predicate\u003cghidra.program.model.listing.Data\u003e",
      "type_short": "Predicate",
      "constant_value": null
    },
    {
      "name": "itStack",
      "comment": "LIFO stack of iterators.  Newly found iterators of sub-components are\n pushed onto the end and become the current iterator.  When an iterator is exhausted, \n it is popped of the end and the uncovered iterator is now the current.",
      "javadoc": "LIFO stack of iterators.  Newly found iterators of sub-components are\n pushed onto the end and become the current iterator.  When an iterator is exhausted, \n it is popped of the end and the uncovered iterator is now the current.",
      "static": false,
      "type_long": "java.util.Deque\u003cghidra.program.model.listing.DataIterator\u003e",
      "type_short": "Deque",
      "constant_value": null
    },
    {
      "name": "currentDataResult",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.listing.Data",
      "type_short": "Data",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "byDataType",
      "comment": "Creates a new iterator that traverses the entire Program\u0027s address space, returning\n data instances that successfully match the predicate.",
      "javadoc": "Creates a new iterator that traverses the entire Program\u0027s address space, returning\n data instances that successfully match the predicate.\n@param program Program to search\n@param dataTypePredicate {@link Predicate} that tests each data instance\u0027s {@link DataType}\n@return new iterator",
      "static": true,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "Program to search"
        },
        {
          "name": "dataTypePredicate",
          "type_long": "java.util.function.Predicate\u003cghidra.program.model.data.DataType\u003e",
          "type_short": "Predicate",
          "comment": "Predicate that tests each data instance\u0027s DataType"
        }
      ],
      "return": {
        "type_long": "ghidra.program.util.DefinedDataIterator",
        "type_short": "DefinedDataIterator",
        "comment": "new iterator"
      },
      "throws": []
    },
    {
      "name": "byDataType",
      "comment": "Creates a new iterator that traverses a portion of the Program\u0027s address space, returning\n data instances that successfully match the predicate.",
      "javadoc": "Creates a new iterator that traverses a portion of the Program\u0027s address space, returning\n data instances that successfully match the predicate.\n@param program Program to search\n@param addresses addresses to limit the iteration to\n@param dataTypePredicate {@link Predicate} that tests each data instance\u0027s {@link DataType}\n@return new iterator",
      "static": true,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "Program to search"
        },
        {
          "name": "addresses",
          "type_long": "ghidra.program.model.address.AddressSetView",
          "type_short": "AddressSetView",
          "comment": "addresses to limit the iteration to"
        },
        {
          "name": "dataTypePredicate",
          "type_long": "java.util.function.Predicate\u003cghidra.program.model.data.DataType\u003e",
          "type_short": "Predicate",
          "comment": "Predicate that tests each data instance\u0027s DataType"
        }
      ],
      "return": {
        "type_long": "ghidra.program.util.DefinedDataIterator",
        "type_short": "DefinedDataIterator",
        "comment": "new iterator"
      },
      "throws": []
    },
    {
      "name": "byDataInstance",
      "comment": "Creates a new iterator that traverses the entire Program\u0027s address space, returning\n data instances that successfully match the predicate.",
      "javadoc": "Creates a new iterator that traverses the entire Program\u0027s address space, returning\n data instances that successfully match the predicate.\n@param program Program to search\n@param dataInstancePredicate {@link Predicate} that tests each data instance\u0027s properties\n@return new iterator",
      "static": true,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "Program to search"
        },
        {
          "name": "dataInstancePredicate",
          "type_long": "java.util.function.Predicate\u003cghidra.program.model.listing.Data\u003e",
          "type_short": "Predicate",
          "comment": "Predicate that tests each data instance\u0027s properties"
        }
      ],
      "return": {
        "type_long": "ghidra.program.util.DefinedDataIterator",
        "type_short": "DefinedDataIterator",
        "comment": "new iterator"
      },
      "throws": []
    },
    {
      "name": "definedStrings",
      "comment": "Creates a new iterator that traverses the entire Program\u0027s address space returning\n data instances that are strings.",
      "javadoc": "Creates a new iterator that traverses the entire Program\u0027s address space returning\n data instances that are strings.\n@param program Ghidra {@link Program} to search\n@return new iterator",
      "static": true,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "Ghidra Program to search"
        }
      ],
      "return": {
        "type_long": "ghidra.program.util.DefinedDataIterator",
        "type_short": "DefinedDataIterator",
        "comment": "new iterator"
      },
      "throws": []
    },
    {
      "name": "definedStrings",
      "comment": "Creates a new iterator that traverses a portion of the Program\u0027s address space returning\n data instances that are strings.",
      "javadoc": "Creates a new iterator that traverses a portion of the Program\u0027s address space returning\n data instances that are strings.\n@param program Ghidra {@link Program} to search\n@param addrs addresses to limit the iteration to\n@return new iterator",
      "static": true,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "Ghidra Program to search"
        },
        {
          "name": "addrs",
          "type_long": "ghidra.program.model.address.AddressSetView",
          "type_short": "AddressSetView",
          "comment": "addresses to limit the iteration to"
        }
      ],
      "return": {
        "type_long": "ghidra.program.util.DefinedDataIterator",
        "type_short": "DefinedDataIterator",
        "comment": "new iterator"
      },
      "throws": []
    },
    {
      "name": "definedStrings",
      "comment": "Creates a new iterator that traverses the address space of a single data item (ie. a\n composite or array data instance that needs to be recursed into).",
      "javadoc": "Creates a new iterator that traverses the address space of a single data item (ie. a\n composite or array data instance that needs to be recursed into).\n@param singleDataInstance Data instance\n@return new iterator",
      "static": true,
      "params": [
        {
          "name": "singleDataInstance",
          "type_long": "ghidra.program.model.listing.Data",
          "type_short": "Data",
          "comment": "Data instance"
        }
      ],
      "return": {
        "type_long": "ghidra.program.util.DefinedDataIterator",
        "type_short": "DefinedDataIterator",
        "comment": "new iterator"
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "addrs",
          "type_long": "ghidra.program.model.address.AddressSetView",
          "type_short": "AddressSetView",
          "comment": ""
        },
        {
          "name": "dataTypePredicate",
          "type_long": "java.util.function.Predicate\u003cghidra.program.model.data.DataType\u003e",
          "type_short": "Predicate",
          "comment": ""
        },
        {
          "name": "dataInstancePredicate",
          "type_long": "java.util.function.Predicate\u003cghidra.program.model.listing.Data\u003e",
          "type_short": "Predicate",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "singleDataInstance",
          "type_long": "ghidra.program.model.listing.Data",
          "type_short": "Data",
          "comment": ""
        },
        {
          "name": "dataTypePredicate",
          "type_long": "java.util.function.Predicate\u003cghidra.program.model.data.DataType\u003e",
          "type_short": "Predicate",
          "comment": ""
        },
        {
          "name": "dataInstancePredicate",
          "type_long": "java.util.function.Predicate\u003cghidra.program.model.listing.Data\u003e",
          "type_short": "Predicate",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hasNext",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "next",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.listing.Data",
        "type_short": "Data",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "currentIt",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.listing.DataIterator",
        "type_short": "DataIterator",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "findNext",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isContainerDT",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "dt",
          "type_long": "ghidra.program.model.data.DataType",
          "type_short": "DataType",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "recursiveMatchesDataTypePredicate",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "dt",
          "type_long": "ghidra.program.model.data.DataType",
          "type_short": "DataType",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "matchesDataTypePredicate",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "dt",
          "type_long": "ghidra.program.model.data.DataType",
          "type_short": "DataType",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "matchesDataInstancePredicate",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "data",
          "type_long": "ghidra.program.model.listing.Data",
          "type_short": "Data",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    }
  ]
}
