{
  "name": "ProgramUtilities",
  "comment": "General utility class that provides convenience methods\n to deal with Program objects.",
  "javadoc": "General utility class that provides convenience methods\n to deal with Program objects.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "openProgramsWeakMap",
      "comment": "The read-only program icon.",
      "javadoc": "The read-only program icon.",
      "static": true,
      "type_long": "java.util.Map\u003cghidra.program.model.listing.Program,java.lang.Object\u003e",
      "type_short": "Map",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getDataConverter",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.util.DataConverter",
        "type_short": "DataConverter",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addTrackedProgram",
      "comment": "Programs will only be stored during testing and are maintained as weak references.",
      "javadoc": "Programs will only be stored during testing and are maintained as weak references.\n@param program The program that is being tracked (all programs during testing.",
      "static": true,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "The program that is being tracked (all programs during testing."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSystemPrograms",
      "comment": "Returns an iterator for all of the Program objects in the system, which is all\n created programs in any state that have not been garbage collected.  \n \n Note:The Iterator is backed by an unmodifiable set, so any attempts to modify the\n Iterator will throw an UnsupportedOperationException.",
      "javadoc": "Returns an iterator for all of the {@link Program} objects in the system, which is all\n created programs in any state that have not been garbage collected.  \n \u003cp\u003e\n \u003cb\u003eNote:\u003c/b\u003eThe Iterator is backed by an unmodifiable set, so any attempts to modify the\n Iterator will throw an {@link UnsupportedOperationException}.\n@return an iterator for all of the programs in the system",
      "static": true,
      "params": [],
      "return": {
        "type_long": "java.util.Iterator\u003cghidra.program.model.listing.Program\u003e",
        "type_short": "Iterator",
        "comment": "an iterator for all of the programs in the system"
      },
      "throws": []
    },
    {
      "name": "parseAddress",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "addressString",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getByteCodeString",
      "comment": "Get the bytes associated with the specified code unit cu \n formatted as a string.  Bytes will be returned as 2-digit hex\n separated with a space.  Any undefined bytes will be represented by \"??\".",
      "javadoc": "Get the bytes associated with the specified code unit cu \n formatted as a string.  Bytes will be returned as 2-digit hex\n separated with a space.  Any undefined bytes will be represented by \"??\".\n@param cu code unit\n@return formatted byte string",
      "static": true,
      "params": [
        {
          "name": "cu",
          "type_long": "ghidra.program.model.listing.CodeUnit",
          "type_short": "CodeUnit",
          "comment": "code unit"
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "formatted byte string"
      },
      "throws": []
    },
    {
      "name": "convertFunctionWrappedExternalPointer",
      "comment": "Convert old function wrapped external pointers.  Migrate function to\n external function.",
      "javadoc": "Convert old function wrapped external pointers.  Migrate function to\n external function.",
      "static": true,
      "params": [
        {
          "name": "functionSymbol",
          "type_long": "ghidra.program.model.symbol.Symbol",
          "type_short": "Symbol",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
