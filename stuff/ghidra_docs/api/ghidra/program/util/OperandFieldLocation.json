{
  "name": "OperandFieldLocation",
  "comment": "The OperandFieldLocation class contains specific location information\n within the OPERAND field of a CodeUnitLocation object.",
  "javadoc": "The \u003cCODE\u003eOperandFieldLocation\u003c/CODE\u003e class contains specific location information\n within the OPERAND field of a CodeUnitLocation object.",
  "static": false,
  "implements": [],
  "extends": "ghidra.program.util.CodeUnitLocation",
  "fields": [
    {
      "name": "rep",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    },
    {
      "name": "subOpIndex",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "variableOffset",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.listing.VariableOffset",
      "type_short": "VariableOffset",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a new OperandFieldLocation object.",
      "javadoc": "Construct a new OperandFieldLocation object.\n@param program the program of the location\n@param addr address of the location; should not be null\n@param componentPath array of indexes for each nested data component; the\n index is the data component\u0027s index within its parent; may be null\n@param rep the String representation of the operand.\n@param opIndex the index of the operand at this location.\n@param characterOffset the character position from the beginning of the operand.",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "the program of the location"
        },
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "address of the location; should not be null"
        },
        {
          "name": "componentPath",
          "type_long": "int[]",
          "type_short": "int[]",
          "comment": "array of indexes for each nested data component; the\n index is the data component\u0027s index within its parent; may be null"
        },
        {
          "name": "refAddr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "rep",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the String representation of the operand."
        },
        {
          "name": "opIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": "the index of the operand at this location."
        },
        {
          "name": "characterOffset",
          "type_long": "int",
          "type_short": "int",
          "comment": "the character position from the beginning of the operand."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a new OperandFieldLocation object.",
      "javadoc": "Construct a new OperandFieldLocation object.\n@param program the program of the location\n@param addr address of the location; should not be null\n@param componentPath array of indexes for each nested data component; the\n index is the data component\u0027s index within its parent; may be null\n@param refAddr the \"referred to\" address if the location is\n over a reference; may be null\n@param rep the String representation of the operand.\n@param opIndex the index indicating the operand the location is on.\n@param subOpIndex the index of the Object within the operand, this can\n                   be used to call an instructions getOpObjects() method\n@param characterOffset the character position from the beginning of the operand field",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "the program of the location"
        },
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "address of the location; should not be null"
        },
        {
          "name": "componentPath",
          "type_long": "int[]",
          "type_short": "int[]",
          "comment": "array of indexes for each nested data component; the\n index is the data component\u0027s index within its parent; may be null"
        },
        {
          "name": "refAddr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "the \"referred to\" address if the location is\n over a reference; may be null"
        },
        {
          "name": "rep",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the String representation of the operand."
        },
        {
          "name": "opIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": "the index indicating the operand the location is on."
        },
        {
          "name": "subOpIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": "the index of the Object within the operand, this can\n                   be used to call an instructions getOpObjects() method"
        },
        {
          "name": "characterOffset",
          "type_long": "int",
          "type_short": "int",
          "comment": "the character position from the beginning of the operand field"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a new OperandFieldLocation object for an instruction operand.",
      "javadoc": "Construct a new OperandFieldLocation object for an instruction operand.\n@param program the program of the location\n@param addr address of the location; should not be null\n@param variableOffset associated variable offset or null\n@param refAddr the \"referred to\" address if the location is\n over a reference; may be null\n@param rep the String representation of the operand.\n@param opIndex the index indicating the operand the location is on.\n@param subOpIndex the index of the Object within the operand, this can\n                   be used to call an instructions getOpObjects() method\n@param characterOffset the character position from the beginning of the operand field",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "the program of the location"
        },
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "address of the location; should not be null"
        },
        {
          "name": "variableOffset",
          "type_long": "ghidra.program.model.listing.VariableOffset",
          "type_short": "VariableOffset",
          "comment": "associated variable offset or null"
        },
        {
          "name": "refAddr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "the \"referred to\" address if the location is\n over a reference; may be null"
        },
        {
          "name": "rep",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the String representation of the operand."
        },
        {
          "name": "opIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": "the index indicating the operand the location is on."
        },
        {
          "name": "subOpIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": "the index of the Object within the operand, this can\n                   be used to call an instructions getOpObjects() method"
        },
        {
          "name": "characterOffset",
          "type_long": "int",
          "type_short": "int",
          "comment": "the character position from the beginning of the operand field"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Default constructor needed for restoring\n an operand field location from XML.",
      "javadoc": "Default constructor needed for restoring\n an operand field location from XML.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getVariableOffset",
      "comment": "Returns VariableOffset object if applicable or null",
      "javadoc": "Returns VariableOffset object if applicable or null",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.listing.VariableOffset",
        "type_short": "VariableOffset",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getOperandRepresentation",
      "comment": "Returns a string representation of the opernand at this location.",
      "javadoc": "Returns a string representation of the opernand at this location.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getOperandIndex",
      "comment": "Returns the index of the operand at this location.",
      "javadoc": "Returns the index of the operand at this location.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSubOperandIndex",
      "comment": "Returns the sub operand index at this location.\n This index can be used on the instruction.getOpObjects()\n to find the actual object (Address, Register, Scalar) the\n cursor is over.",
      "javadoc": "Returns the sub operand index at this location.\n This index can be used on the instruction.getOpObjects()\n to find the actual object (Address, Register, Scalar) the\n cursor is over.\n@return 0-n if over a valid OpObject, -1 otherwise",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "0-n if over a valid OpObject, -1 otherwise"
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "Returns a String representation of this location.",
      "javadoc": "Returns a String representation of this location.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hashCode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "equals",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "obj",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "restoreState",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "p",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "obj",
          "type_long": "ghidra.framework.options.SaveState",
          "type_short": "SaveState",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "saveState",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "obj",
          "type_long": "ghidra.framework.options.SaveState",
          "type_short": "SaveState",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
