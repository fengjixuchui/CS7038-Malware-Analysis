{
  "name": "PlateFieldLocation",
  "comment": "The PlateFieldLocation class contains specific location information\n within the Plate field of a CodeUnitLocation object.",
  "javadoc": "The \u003cCODE\u003ePlateFieldLocation\u003c/CODE\u003e class contains specific location information\n within the Plate field of a CodeUnitLocation object.",
  "static": false,
  "implements": [],
  "extends": "ghidra.program.util.CommentFieldLocation",
  "fields": [
    {
      "name": "commentRow",
      "comment": "The row index into the comment.",
      "javadoc": "The row index into the comment.",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a new PlateFieldLocation.",
      "javadoc": "Construct a new PlateFieldLocation.\n@param program the program of the location\n@param addr the address of the code unit.\n@param componentPath the componentPath of the codeUnit\n@param row the line of the location\n@param charOffset the character position on the row of the location.\n@param comment plate comment text\n@param commentRow The row index into the comments of this location.  This is different \n        than the \u003ccode\u003erow\u003c/code\u003e due to the fact that the PlateField has fictitious borders\n        that don\u0027t exist in the actual comment.",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "the program of the location"
        },
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "the address of the code unit."
        },
        {
          "name": "componentPath",
          "type_long": "int[]",
          "type_short": "int[]",
          "comment": "the componentPath of the codeUnit"
        },
        {
          "name": "row",
          "type_long": "int",
          "type_short": "int",
          "comment": "the line of the location"
        },
        {
          "name": "charOffset",
          "type_long": "int",
          "type_short": "int",
          "comment": "the character position on the row of the location."
        },
        {
          "name": "comment",
          "type_long": "java.lang.String[]",
          "type_short": "java.lang.String[]",
          "comment": "plate comment text"
        },
        {
          "name": "commentRow",
          "type_long": "int",
          "type_short": "int",
          "comment": "The row index into the comments of this location.  This is different \n        than the row due to the fact that the PlateField has fictitious borders\n        that don\u0027t exist in the actual comment."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Default constructor needed for restoring\n a plate field location from XML.",
      "javadoc": "Default constructor needed for restoring\n a plate field location from XML.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "equals",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "obj",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getCommentRow",
      "comment": "Returns the index into the String[] returned by #getComment() that represents\n the comment row that was clicked.  -1 will be returned if the border of the \n plate field was clicked. \n \n Note:  This value is different than that returned by #getRow(), as that\n         value represents the screen row clicked.  Further, the PlateField adds screen\n         decoration to the comments, which causes the screen row to differ from the comment\n         row.",
      "javadoc": "Returns the index into the String[] returned by {@link #getComment()} that represents\n the comment row that was clicked.  \u003ccode\u003e-1\u003c/code\u003e will be returned if the border of the \n plate field was clicked. \n \u003cp\u003e\n \u003cb\u003eNote: \u003c/b\u003e This value is different than that returned by {@link #getRow()}, as that\n         value represents the screen row clicked.  Further, the PlateField adds screen\n         decoration to the comments, which causes the screen row to differ from the comment\n         row.\n@return the index into the String[] returned by {@link #getComment()} that represents\n the comment row that was clicked.  \u003ccode\u003e-1\u003c/code\u003e will be returned if the border of the \n plate field was clicked.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the index into the String[] returned by #getComment() that represents\n the comment row that was clicked.  -1 will be returned if the border of the \n plate field was clicked."
      },
      "throws": []
    },
    {
      "name": "restoreState",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "p",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "obj",
          "type_long": "ghidra.framework.options.SaveState",
          "type_short": "SaveState",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "saveState",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "obj",
          "type_long": "ghidra.framework.options.SaveState",
          "type_short": "SaveState",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
