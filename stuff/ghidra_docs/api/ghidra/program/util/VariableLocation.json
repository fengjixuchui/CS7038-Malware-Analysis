{
  "name": "VariableLocation",
  "comment": "VariableLocation provides information about the location\n on a variable within a Function.",
  "javadoc": "\u003cCODE\u003eVariableLocation\u003c/CODE\u003e provides information about the location\n on a variable within a \u003cCODE\u003eFunction\u003c/CODE\u003e.",
  "static": false,
  "implements": [],
  "extends": "ghidra.program.util.FunctionLocation",
  "fields": [
    {
      "name": "isParameter",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "boolean",
      "type_short": "boolean",
      "constant_value": null
    },
    {
      "name": "ordinalOrfirstUseOffset",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "variableAddress",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.address.Address",
      "type_short": "Address",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Default constructor needed for restoring\n a variable location from XML.",
      "javadoc": "Default constructor needed for restoring\n a variable location from XML.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Create a new VariableLocation.",
      "javadoc": "Create a new VariableLocation.\n@param program the program of the location\n@param locationAddr the address of the listing location (i.e., referent code unit)\n@param var the variable associated with this location.\n@param index the index of the sub-piece on that variable (only the xrefs have subpieces\n@param charOffset the character position on the piece.",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "the program of the location"
        },
        {
          "name": "locationAddr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "the address of the listing location (i.e., referent code unit)"
        },
        {
          "name": "var",
          "type_long": "ghidra.program.model.listing.Variable",
          "type_short": "Variable",
          "comment": "the variable associated with this location."
        },
        {
          "name": "index",
          "type_long": "int",
          "type_short": "int",
          "comment": "the index of the sub-piece on that variable (only the xrefs have subpieces"
        },
        {
          "name": "charOffset",
          "type_long": "int",
          "type_short": "int",
          "comment": "the character position on the piece."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Create a new VariableLocation.",
      "javadoc": "Create a new VariableLocation.\n@param program the program of the location\n@param var the variable associated with this location.\n@param index the index of the sub-piece on that variable (only the xrefs have subpieces\n@param charOffset the character position on the piece.",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "the program of the location"
        },
        {
          "name": "var",
          "type_long": "ghidra.program.model.listing.Variable",
          "type_short": "Variable",
          "comment": "the variable associated with this location."
        },
        {
          "name": "index",
          "type_long": "int",
          "type_short": "int",
          "comment": "the index of the sub-piece on that variable (only the xrefs have subpieces"
        },
        {
          "name": "charOffset",
          "type_long": "int",
          "type_short": "int",
          "comment": "the character position on the piece."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getVariable",
      "comment": "Get the variable associated with this variable location",
      "javadoc": "Get the variable associated with this variable location\n@return associated function variable",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.listing.Variable",
        "type_short": "Variable",
        "comment": "associated function variable"
      },
      "throws": []
    },
    {
      "name": "getVariableAddress",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "var",
          "type_long": "ghidra.program.model.listing.Variable",
          "type_short": "Variable",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isLocationFor",
      "comment": "Checks to see if this location is for the indicated variable.",
      "javadoc": "Checks to see if this location is for the indicated variable.\n@param var the variable\n@return true if this location is for the specified variable.",
      "static": false,
      "params": [
        {
          "name": "var",
          "type_long": "ghidra.program.model.listing.Variable",
          "type_short": "Variable",
          "comment": "the variable"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if this location is for the specified variable."
      },
      "throws": []
    },
    {
      "name": "isParameter",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isReturn",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "equals",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "object",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "compareTo",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "pl",
          "type_long": "ghidra.program.util.ProgramLocation",
          "type_short": "ProgramLocation",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "restoreState",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "p",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "obj",
          "type_long": "ghidra.framework.options.SaveState",
          "type_short": "SaveState",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "saveState",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "obj",
          "type_long": "ghidra.framework.options.SaveState",
          "type_short": "SaveState",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isValid",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "p",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    }
  ]
}
