{
  "name": "LanguageTranslatorFactory",
  "comment": "LanguageTranslatorFactory manages all language translators within Ghidra.  \n Language translators support either a version translation for a single language, or a \n language transition from one language to another.  The following types of translators \n are supported:\n \n Simple translators are established based upon a translator XML specification file (*.trans).\n Explicit translators are class implementations of the LanguageTranslator interface.\n The abstract LanguageTranslatorAdapter has been supplied for this purpose so that \n default mappings can be used if needed.  Such custom translator classes should not be \n created within the \u0027ghidra.program.util\u0027 package since they will be ignored by the factory.\n Default translators can be instantiated for languages whose address spaces map to one-another.\n Such default translations may be lossy with register mappings and could result in lost register \n variables and references. \n ",
  "javadoc": "\u003ccode\u003eLanguageTranslatorFactory\u003c/code\u003e manages all language translators within Ghidra.  \n Language translators support either a version translation for a single language, or a \n language transition from one language to another.  The following types of translators \n are supported:\n \u003cul\u003e\n \u003cli\u003eSimple translators are established based upon a translator XML specification file (*.trans).\u003c/li\u003e\n \u003cli\u003eExplicit translators are class implementations of the LanguageTranslator interface.\n The abstract LanguageTranslatorAdapter has been supplied for this purpose so that \n default mappings can be used if needed.  Such custom translator classes should not be \n created within the \u0027ghidra.program.util\u0027 package since they will be ignored by the factory.\u003c/li\u003e\n \u003cli\u003eDefault translators can be instantiated for languages whose address spaces map to one-another.\n Such default translations may be lossy with register mappings and could result in lost register \n variables and references.\u003c/li\u003e \n \u003c/ul\u003e",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "LANGUAGE_TRANSLATOR_FILE_EXT",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\".trans\""
    },
    {
      "name": "languageTranslatorFactory",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.program.util.LanguageTranslatorFactory",
      "type_short": "LanguageTranslatorFactory",
      "constant_value": null
    },
    {
      "name": "TRANSLATOR_VERSION_COMPARATOR",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.Comparator\u003cjava.lang.Object\u003e",
      "type_short": "Comparator",
      "constant_value": null
    },
    {
      "name": "translatorMap",
      "comment": "translatorMap provides pre-defined translators between different languages.",
      "javadoc": "\u003ccode\u003etranslatorMap\u003c/code\u003e provides pre-defined translators between different languages.",
      "static": false,
      "type_long": "java.util.HashMap\u003cghidra.program.model.lang.LanguageID,java.util.List\u003cghidra.program.util.LanguageTranslator\u003e\u003e",
      "type_short": "HashMap",
      "constant_value": null
    },
    {
      "name": "translatorVersionMap",
      "comment": "translatorVersionMap provides pre-defined translators between consecutive versions \n of the same language.  Lists are in sorted order based upon translator fromVersion.",
      "javadoc": "\u003ccode\u003etranslatorVersionMap\u003c/code\u003e provides pre-defined translators between consecutive versions \n of the same language.  Lists are in sorted order based upon translator fromVersion.",
      "static": false,
      "type_long": "java.util.HashMap\u003cghidra.program.model.lang.LanguageID,java.util.List\u003cghidra.program.util.LanguageTranslator\u003e\u003e",
      "type_short": "HashMap",
      "constant_value": null
    },
    {
      "name": "badFileCount",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "minionList",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.util.List\u003cghidra.program.util.LanguageTranslatorFactoryMinion\u003e",
      "type_short": "List",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "registerLanguageTranslatorFactoryMinion",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "minion",
          "type_long": "ghidra.program.util.LanguageTranslatorFactoryMinion",
          "type_short": "LanguageTranslatorFactoryMinion",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLanguageTranslatorFactory",
      "comment": "Returns the single instance of the OldLanguageFactory.",
      "javadoc": "Returns the single instance of the OldLanguageFactory.",
      "static": true,
      "params": [],
      "return": {
        "type_long": "ghidra.program.util.LanguageTranslatorFactory",
        "type_short": "LanguageTranslatorFactory",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor.",
      "javadoc": "Constructor.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "initTranslatorMaps",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addTranslator",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "translator",
          "type_long": "ghidra.program.util.LanguageTranslator",
          "type_short": "LanguageTranslator",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "processMinion",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "minion",
          "type_long": "ghidra.program.util.LanguageTranslatorFactoryMinion",
          "type_short": "LanguageTranslatorFactoryMinion",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "addToMap",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "map",
          "type_long": "java.util.HashMap\u003cghidra.program.model.lang.LanguageID,java.util.List\u003cghidra.program.util.LanguageTranslator\u003e\u003e",
          "type_short": "HashMap",
          "comment": ""
        },
        {
          "name": "translator",
          "type_long": "ghidra.program.util.LanguageTranslator",
          "type_short": "LanguageTranslator",
          "comment": ""
        },
        {
          "name": "sorted",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getExplicitTranslators",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "translators",
          "type_long": "java.util.List\u003cghidra.program.util.LanguageTranslator\u003e",
          "type_short": "List",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSimpleTranslators",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "list",
          "type_long": "java.util.List\u003cghidra.program.util.LanguageTranslator\u003e",
          "type_short": "List",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "badFileCount",
      "comment": "Returns number of files which failed to parse properly.\n This only reflects minimal parsing of old language files\n which will prevent them from being added to old language map.\n This is intended to be used by a unit test.",
      "javadoc": "Returns number of files which failed to parse properly.\n This only reflects minimal parsing of old language files\n which will prevent them from being added to old language map.\n This is intended to be used by a unit test.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "validateAllTranslators",
      "comment": "Validate all translators contained within the translator maps.  \n This is intended to be used by a unit test.",
      "javadoc": "Validate all translators contained within the translator maps.  \n This is intended to be used by a unit test.\n@return number of validation errors",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "number of validation errors"
      },
      "throws": []
    },
    {
      "name": "getAllTranslators",
      "comment": "Returns a list of all translators.",
      "javadoc": "Returns a list of all translators.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cghidra.program.util.LanguageTranslator\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLanguageTranslator",
      "comment": "Returns a language translator for the transition from an oldLanguage to a newLanguage.\n The toLanguage may be a different language or a newer version of fromLanguage.",
      "javadoc": "Returns a language translator for the transition from an oldLanguage to a newLanguage.\n The toLanguage may be a different language or a newer version of fromLanguage.\n@param fromLanguage old language\n@param toLanguage new language\n@return language translator if transition is supported, otherwise null is returned.",
      "static": false,
      "params": [
        {
          "name": "fromLanguage",
          "type_long": "ghidra.program.model.lang.Language",
          "type_short": "Language",
          "comment": "old language"
        },
        {
          "name": "toLanguage",
          "type_long": "ghidra.program.model.lang.Language",
          "type_short": "Language",
          "comment": "new language"
        }
      ],
      "return": {
        "type_long": "ghidra.program.util.LanguageTranslator",
        "type_short": "LanguageTranslator",
        "comment": "language translator if transition is supported, otherwise null is returned."
      },
      "throws": []
    },
    {
      "name": "getLanguageTranslator",
      "comment": "Returns a language translation for a language version which is no longer supported.",
      "javadoc": "Returns a language translation for a language version which is no longer supported.\n@param languageName old unsupported language name\n@param majorVersion language major version within program\n@return language translator if one can be determined, otherwise null is returned.",
      "static": false,
      "params": [
        {
          "name": "languageName",
          "type_long": "ghidra.program.model.lang.LanguageID",
          "type_short": "LanguageID",
          "comment": "old unsupported language name"
        },
        {
          "name": "majorVersion",
          "type_long": "int",
          "type_short": "int",
          "comment": "language major version within program"
        }
      ],
      "return": {
        "type_long": "ghidra.program.util.LanguageTranslator",
        "type_short": "LanguageTranslator",
        "comment": "language translator if one can be determined, otherwise null is returned."
      },
      "throws": []
    },
    {
      "name": "expandTranslator",
      "comment": "Expand the to/from sides of a language translator to originate \"from\" the specified \n fromMajorVersion and terminate at the current version of the \"to\" language.",
      "javadoc": "Expand the to/from sides of a language translator to originate \"from\" the specified \n fromMajorVersion and terminate at the current version of the \"to\" language.\n@param translator\n@param fromVersion\n@return expanded translator or null if it could not be filled-out completely",
      "static": false,
      "params": [
        {
          "name": "translator",
          "type_long": "ghidra.program.util.LanguageTranslator",
          "type_short": "LanguageTranslator",
          "comment": ""
        },
        {
          "name": "fromVersion",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.util.LanguageTranslator",
        "type_short": "LanguageTranslator",
        "comment": "expanded translator or null if it could not be filled-out completely"
      },
      "throws": []
    },
    {
      "name": "getLanguageVersionTranslator",
      "comment": "Build language version translator.  A default translator will be built if \n explicit translators have not been defined.",
      "javadoc": "Build language version translator.  A default translator will be built if \n explicit translators have not been defined.\n@param languageID\n@param fromVersion\n@param toVersion\n@return language translator or null if one could not be built",
      "static": false,
      "params": [
        {
          "name": "languageID",
          "type_long": "ghidra.program.model.lang.LanguageID",
          "type_short": "LanguageID",
          "comment": ""
        },
        {
          "name": "fromVersion",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "toVersion",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.util.LanguageTranslator",
        "type_short": "LanguageTranslator",
        "comment": "language translator or null if one could not be built"
      },
      "throws": []
    },
    {
      "name": "getNextTranslator",
      "comment": "",
      "javadoc": "@param versionTranslatorList sorted list of version translators\n@param version\n@return ",
      "static": false,
      "params": [
        {
          "name": "versionTranslatorList",
          "type_long": "java.util.List\u003cghidra.program.util.LanguageTranslator\u003e",
          "type_short": "List",
          "comment": "sorted list of version translators"
        },
        {
          "name": "version",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.util.LanguageTranslator",
        "type_short": "LanguageTranslator",
        "comment": ""
      },
      "throws": []
    }
  ]
}
