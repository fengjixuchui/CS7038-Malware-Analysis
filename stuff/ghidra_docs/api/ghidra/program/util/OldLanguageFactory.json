{
  "name": "OldLanguageFactory",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "log",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "org.apache.logging.log4j.Logger",
      "type_short": "Logger",
      "constant_value": null
    },
    {
      "name": "OLD_LANGUAGE_FILE_EXT",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": "\".lang\""
    },
    {
      "name": "languageMap",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.HashMap\u003cghidra.program.util.OldLanguageFactory.LanguageTag,ghidra.program.util.OldLanguage\u003e",
      "type_short": "HashMap",
      "constant_value": null
    },
    {
      "name": "latestVersionMap",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.HashMap\u003cghidra.program.model.lang.LanguageID,ghidra.program.util.OldLanguage\u003e",
      "type_short": "HashMap",
      "constant_value": null
    },
    {
      "name": "oldLanguageFactory",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.program.util.OldLanguageFactory",
      "type_short": "OldLanguageFactory",
      "constant_value": null
    },
    {
      "name": "badFileCount",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "getOldLanguageFactory",
      "comment": "Returns the single instance of the OldLanguageFactory.",
      "javadoc": "Returns the single instance of the OldLanguageFactory.",
      "static": true,
      "params": [],
      "return": {
        "type_long": "ghidra.program.util.OldLanguageFactory",
        "type_short": "OldLanguageFactory",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getOldLanguage",
      "comment": "Return old language if an old language specification file exists for the specified language and version.",
      "javadoc": "Return old language if an old language specification file exists for the specified language and version.\n@param languageID\n@param majorVersion language major version, or -1 for latest version\n@return old language or null if specification not found.",
      "static": false,
      "params": [
        {
          "name": "languageID",
          "type_long": "ghidra.program.model.lang.LanguageID",
          "type_short": "LanguageID",
          "comment": ""
        },
        {
          "name": "majorVersion",
          "type_long": "int",
          "type_short": "int",
          "comment": "language major version, or -1 for latest version"
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.lang.Language",
        "type_short": "Language",
        "comment": "old language or null if specification not found."
      },
      "throws": []
    },
    {
      "name": "getLatestOldLanguage",
      "comment": "Return language description for the latest version of an old language",
      "javadoc": "Return language description for the latest version of an old language\n@param languageID\n@return old language description or null if specification not found.",
      "static": false,
      "params": [
        {
          "name": "languageID",
          "type_long": "ghidra.program.model.lang.LanguageID",
          "type_short": "LanguageID",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.lang.LanguageDescription",
        "type_short": "LanguageDescription",
        "comment": "old language description or null if specification not found."
      },
      "throws": []
    },
    {
      "name": "getLatestOldLanaguageDescriptions",
      "comment": "Return the Language Descriptions for the latest version of all old languages.",
      "javadoc": "Return the Language Descriptions for the latest version of all old languages.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.lang.LanguageDescription[]",
        "type_short": "ghidra.program.model.lang.LanguageDescription[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "badFileCount",
      "comment": "Returns number of files which failed to parse properly.\n This only reflects minimal parsing of old language files\n which will prevent them from being added to old language map.\n This is intended to be used by a unit test.",
      "javadoc": "Returns number of files which failed to parse properly.\n This only reflects minimal parsing of old language files\n which will prevent them from being added to old language map.\n This is intended to be used by a unit test.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "validateAllOldLanguages",
      "comment": "Validate all old language definitions contained within the old language map.  \n This is intended to be used by a unit test.",
      "javadoc": "Validate all old language definitions contained within the old language map.  \n This is intended to be used by a unit test.\n@return number of validation errors",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "number of validation errors"
      },
      "throws": []
    },
    {
      "name": "initLanguageMap",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getOldLanguages",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "list",
          "type_long": "java.util.List\u003cghidra.program.util.OldLanguage\u003e",
          "type_short": "List",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createOldLanguageFile",
      "comment": "Create old-language file for the specified language.",
      "javadoc": "Create old-language file for the specified language.\n@param lang language\n@param file output file\n@throws IOException if file error occurs\n@throws LanguageNotFoundException if lang is unknown to DefaultLanguageService",
      "static": true,
      "params": [
        {
          "name": "lang",
          "type_long": "ghidra.program.model.lang.Language",
          "type_short": "Language",
          "comment": "language"
        },
        {
          "name": "file",
          "type_long": "java.io.File",
          "type_short": "File",
          "comment": "output file"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if file error occurs"
        },
        {
          "type_long": "ghidra.program.model.lang.LanguageNotFoundException",
          "type_short": "LanguageNotFoundException",
          "comment": "if lang is unknown to DefaultLanguageService"
        }
      ]
    },
    {
      "name": "getDescriptionElement",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "languageDescription",
          "type_long": "ghidra.program.model.lang.LanguageDescription",
          "type_short": "LanguageDescription",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "org.jdom.Element",
        "type_short": "Element",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getRegistersElement",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "lang",
          "type_long": "ghidra.program.model.lang.Language",
          "type_short": "Language",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "org.jdom.Element",
        "type_short": "Element",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getRegisterElement",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "reg",
          "type_long": "ghidra.program.model.lang.Register",
          "type_short": "Register",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "org.jdom.Element",
        "type_short": "Element",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getSpacesElement",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "lang",
          "type_long": "ghidra.program.model.lang.Language",
          "type_short": "Language",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "org.jdom.Element",
        "type_short": "Element",
        "comment": ""
      },
      "throws": []
    }
  ]
}
