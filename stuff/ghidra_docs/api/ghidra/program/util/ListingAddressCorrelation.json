{
  "name": "ListingAddressCorrelation",
  "comment": "This is the interface for a correlator that associates addresses from one program with\n addresses from another program or it can associate addresses from one part of a program \n with addresses from another part of the same program. Given an address from the address set\n in the first program it determines the matching address from the address set for the second \n program if possible.",
  "javadoc": "This is the interface for a correlator that associates addresses from one program with\n addresses from another program or it can associate addresses from one part of a program \n with addresses from another part of the same program. Given an address from the address set\n in the first program it determines the matching address from the address set for the second \n program if possible.",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "getFirstProgram",
      "comment": "Gets the program containing the first set of addresses.",
      "javadoc": "Gets the program containing the first set of addresses.\n@return the program for the first set of addresses.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.listing.Program",
        "type_short": "Program",
        "comment": "the program for the first set of addresses."
      },
      "throws": []
    },
    {
      "name": "getSecondProgram",
      "comment": "Gets the program containing the second set of addresses.\n This program may be different from or the same as the first program.",
      "javadoc": "Gets the program containing the second set of addresses.\n This program may be different from or the same as the first program.\n@return the program for the second set of addresses.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.listing.Program",
        "type_short": "Program",
        "comment": "the program for the second set of addresses."
      },
      "throws": []
    },
    {
      "name": "getAddressesInFirst",
      "comment": "Gets the first set of addresses for this correlator.",
      "javadoc": "Gets the first set of addresses for this correlator.\n@return the first set of addresses.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.address.AddressSetView",
        "type_short": "AddressSetView",
        "comment": "the first set of addresses."
      },
      "throws": []
    },
    {
      "name": "getAddressesInSecond",
      "comment": "Gets the second set of addresses for this correlator.",
      "javadoc": "Gets the second set of addresses for this correlator.\n@return the second set of addresses.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.address.AddressSetView",
        "type_short": "AddressSetView",
        "comment": "the second set of addresses."
      },
      "throws": []
    },
    {
      "name": "getAddressInSecond",
      "comment": "Determine the address from the second set that matches the specified address in the first set.",
      "javadoc": "Determine the address from the second set that matches the specified address in the first set.\n@param addressInFirst the address in the first address set.\n@return the matching address in the second set or null if a match couldn\u0027t be determined.",
      "static": false,
      "params": [
        {
          "name": "addressInFirst",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "the address in the first address set."
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": "the matching address in the second set or null if a match couldn\u0027t be determined."
      },
      "throws": []
    },
    {
      "name": "getAddressInFirst",
      "comment": "Determine the address from the first set that matches the specified address in the second set.",
      "javadoc": "Determine the address from the first set that matches the specified address in the second set.\n@param addressInSecond the address in the second address set.\n@return the matching address in the first set or null if a match couldn\u0027t be determined.",
      "static": false,
      "params": [
        {
          "name": "addressInSecond",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "the address in the second address set."
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": "the matching address in the first set or null if a match couldn\u0027t be determined."
      },
      "throws": []
    }
  ]
}
