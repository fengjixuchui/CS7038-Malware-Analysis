{
  "name": "UserDataChangeRecord",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "extends": "ghidra.framework.model.DomainObjectChangeRecord",
  "fields": [
    {
      "name": "serialVersionUID",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "long",
      "type_short": "long",
      "constant_value": "1"
    },
    {
      "name": "oldValue",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.Object",
      "type_short": "Object",
      "constant_value": null
    },
    {
      "name": "newValue",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.Object",
      "type_short": "Object",
      "constant_value": null
    },
    {
      "name": "propertyName",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.lang.String",
      "type_short": "String",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor",
      "javadoc": "Constructor\n@param propertyName name of the property\n@param oldValue old value\n@param newValue new value",
      "static": false,
      "params": [
        {
          "name": "propertyName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "name of the property"
        },
        {
          "name": "oldValue",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": "old value"
        },
        {
          "name": "newValue",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": "new value"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor for change record for removing a range of properties.",
      "javadoc": "Constructor for change record for removing a range of properties.\n@param propertyName name of the property",
      "static": false,
      "params": [
        {
          "name": "propertyName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "name of the property"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPropertyName",
      "comment": "Get the name of the property being changed.",
      "javadoc": "Get the name of the property being changed.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getOldValue",
      "comment": "Get the original value.",
      "javadoc": "Get the original value.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.Object",
        "type_short": "Object",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getNewValue",
      "comment": "Get the new value.",
      "javadoc": "Get the new value.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.Object",
        "type_short": "Object",
        "comment": ""
      },
      "throws": []
    }
  ]
}
