{
  "name": "ProgramSelection",
  "comment": "Class to define a selection for a program.",
  "javadoc": "Class to define a selection for a program.",
  "static": false,
  "implements": [
    "ghidra.program.model.address.AddressSetView"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "addressSet",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.address.AddressSet",
      "type_short": "AddressSet",
      "constant_value": null
    },
    {
      "name": "interiorSelection",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.util.InteriorSelection",
      "type_short": "InteriorSelection",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a new empty ProgramSelection.",
      "javadoc": "Construct a new empty ProgramSelection.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a new empty ProgramSelection.",
      "javadoc": "Construct a new empty ProgramSelection.\n@param addressFactory the address factory for the address set\n associated with this program selection.",
      "static": false,
      "params": [
        {
          "name": "addressFactory",
          "type_long": "ghidra.program.model.address.AddressFactory",
          "type_short": "AddressFactory",
          "comment": "the address factory for the address set\n associated with this program selection."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor.",
      "javadoc": "Constructor.\n@param from the start of the selection\n@param to the end of the selection",
      "static": false,
      "params": [
        {
          "name": "from",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "the start of the selection"
        },
        {
          "name": "to",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "the end of the selection"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructor.",
      "javadoc": "Constructor.\n@param addressFactory the address factory for the address set\n associated with this program selection.\n@param from the start of the selection\n@param to the end of the selection",
      "static": false,
      "params": [
        {
          "name": "addressFactory",
          "type_long": "ghidra.program.model.address.AddressFactory",
          "type_short": "AddressFactory",
          "comment": "the address factory for the address set\n associated with this program selection."
        },
        {
          "name": "from",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "the start of the selection"
        },
        {
          "name": "to",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "the end of the selection"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a new ProgramSelection",
      "javadoc": "Construct a new ProgramSelection\n@param setView address set for the selection",
      "static": false,
      "params": [
        {
          "name": "setView",
          "type_long": "ghidra.program.model.address.AddressSetView",
          "type_short": "AddressSetView",
          "comment": "address set for the selection"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a new ProgramSelection",
      "javadoc": "Construct a new ProgramSelection\n@param addressFactory the address factory for the address set\n associated with this program selection.\n@param setView address set for the selection",
      "static": false,
      "params": [
        {
          "name": "addressFactory",
          "type_long": "ghidra.program.model.address.AddressFactory",
          "type_short": "AddressFactory",
          "comment": "the address factory for the address set\n associated with this program selection."
        },
        {
          "name": "setView",
          "type_long": "ghidra.program.model.address.AddressSetView",
          "type_short": "AddressSetView",
          "comment": "address set for the selection"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a new ProgramSelection from the indicated interior selection.",
      "javadoc": "Construct a new ProgramSelection from the indicated interior selection.\n@param addressFactory the address factory for the address set\n associated with this program selection.\n@param sel the interior selection",
      "static": false,
      "params": [
        {
          "name": "addressFactory",
          "type_long": "ghidra.program.model.address.AddressFactory",
          "type_short": "AddressFactory",
          "comment": "the address factory for the address set\n associated with this program selection."
        },
        {
          "name": "sel",
          "type_long": "ghidra.program.util.InteriorSelection",
          "type_short": "InteriorSelection",
          "comment": "the interior selection"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct a new ProgramSelection from the indicated interior selection.",
      "javadoc": "Construct a new ProgramSelection from the indicated interior selection.\n@param sel the interior selection",
      "static": false,
      "params": [
        {
          "name": "sel",
          "type_long": "ghidra.program.util.InteriorSelection",
          "type_short": "InteriorSelection",
          "comment": "the interior selection"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getInteriorSelection",
      "comment": "Get the interior selection.",
      "javadoc": "Get the interior selection.\n@return null if there is no interior selection",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.util.InteriorSelection",
        "type_short": "InteriorSelection",
        "comment": "null if there is no interior selection"
      },
      "throws": []
    },
    {
      "name": "equals",
      "comment": "Return whether this ProgramSelection is equal to obj.",
      "javadoc": "Return whether this ProgramSelection is equal to obj.",
      "static": false,
      "params": [
        {
          "name": "obj",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "contains",
      "comment": "Test if the address exists within this set.\n ",
      "javadoc": "Test if the address exists within this set.\n \u003cP\u003e\n@param addr address to test.\n@return true if addr exists in the set, false otherwise.",
      "static": false,
      "params": [
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "address to test."
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if addr exists in the set, false otherwise."
      },
      "throws": []
    },
    {
      "name": "contains",
      "comment": "Test if the given address range is in the set.\n ",
      "javadoc": "Test if the given address range is in the set.\n \u003cP\u003e\n@param start the first address in the range.\n@param end the last address in the range.\n@return true if entire range is contained within the set,\n         false otherwise.",
      "static": false,
      "params": [
        {
          "name": "start",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "the first address in the range."
        },
        {
          "name": "end",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "the last address in the range."
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if entire range is contained within the set,\n         false otherwise."
      },
      "throws": []
    },
    {
      "name": "contains",
      "comment": "Test if the given address set is a subset of this set.\n ",
      "javadoc": "Test if the given address set is a subset of this set.\n \u003cP\u003e\n@param rangeSet the set to test.\n@return true if the entire set is contained within this set,\n         false otherwise.",
      "static": false,
      "params": [
        {
          "name": "rangeSet",
          "type_long": "ghidra.program.model.address.AddressSetView",
          "type_short": "AddressSetView",
          "comment": "the set to test."
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the entire set is contained within this set,\n         false otherwise."
      },
      "throws": []
    },
    {
      "name": "intersects",
      "comment": "Determine if this program selection intersects with the specified address set.",
      "javadoc": "Determine if this program selection intersects with the specified address set.\n@param addrSet address set to check intersection with.",
      "static": false,
      "params": [
        {
          "name": "addrSet",
          "type_long": "ghidra.program.model.address.AddressSetView",
          "type_short": "AddressSetView",
          "comment": "address set to check intersection with."
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "intersect",
      "comment": "",
      "javadoc": "@see ghidra.program.model.address.AddressSetView#intersect(ghidra.program.model.address.AddressSetView)",
      "static": false,
      "params": [
        {
          "name": "view",
          "type_long": "ghidra.program.model.address.AddressSetView",
          "type_short": "AddressSetView",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.AddressSet",
        "type_short": "AddressSet",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "intersectRange",
      "comment": "",
      "javadoc": "@see ghidra.program.model.address.AddressSetView#intersectRange(ghidra.program.model.address.Address, ghidra.program.model.address.Address)",
      "static": false,
      "params": [
        {
          "name": "start",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "end",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.AddressSet",
        "type_short": "AddressSet",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isEmpty",
      "comment": "Returns true if this set is empty.",
      "javadoc": "Returns true if this set is empty.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getMinAddress",
      "comment": "Return the minimum address for this set.",
      "javadoc": "Return the minimum address for this set.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getMaxAddress",
      "comment": "Return the maximum address for this set.",
      "javadoc": "Return the maximum address for this set.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getNumAddressRanges",
      "comment": "Return the number of address ranges in this set.",
      "javadoc": "Return the number of address ranges in this set.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getAddressRanges",
      "comment": "Returns an iterator over the address ranges in this address set.",
      "javadoc": "Returns an iterator over the address ranges in this address set.\n@param atStart if true, the iterator is positioned at the minimum address.\n if false, the iterator is positioned at the maximum address.",
      "static": false,
      "params": [
        {
          "name": "atStart",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "if true, the iterator is positioned at the minimum address.\n if false, the iterator is positioned at the maximum address."
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.AddressRangeIterator",
        "type_short": "AddressRangeIterator",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getAddressRanges",
      "comment": "Returns an iterator over the address ranges in this address set.",
      "javadoc": "Returns an iterator over the address ranges in this address set.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.address.AddressRangeIterator",
        "type_short": "AddressRangeIterator",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "iterator",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Iterator\u003cghidra.program.model.address.AddressRange\u003e",
        "type_short": "Iterator",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getNumAddresses",
      "comment": "Returns the number of addresses in this set.",
      "javadoc": "Returns the number of addresses in this set.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getAddresses",
      "comment": "",
      "javadoc": "@see ghidra.program.model.address.AddressSetView#getAddresses(boolean)",
      "static": false,
      "params": [
        {
          "name": "forward",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.AddressIterator",
        "type_short": "AddressIterator",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getAddresses",
      "comment": "",
      "javadoc": "@see ghidra.program.model.address.AddressSetView#getAddresses(ghidra.program.model.address.Address, boolean)",
      "static": false,
      "params": [
        {
          "name": "start",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "forward",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.AddressIterator",
        "type_short": "AddressIterator",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "hasSameAddresses",
      "comment": "Returns true if and only if this set and the given\n address set contains exactly the same addresses.",
      "javadoc": "Returns true if and only if this set and the given\n address set contains exactly the same addresses.\n@param asv the address set to compare with this one.\n@return true if the specified set has the same addresses.",
      "static": false,
      "params": [
        {
          "name": "asv",
          "type_long": "ghidra.program.model.address.AddressSetView",
          "type_short": "AddressSetView",
          "comment": "the address set to compare with this one."
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "true if the specified set has the same addresses."
      },
      "throws": []
    },
    {
      "name": "intersects",
      "comment": "",
      "javadoc": "@see AddressSetView#intersects(Address, Address)",
      "static": false,
      "params": [
        {
          "name": "start",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "end",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "union",
      "comment": "",
      "javadoc": "@see ghidra.program.model.address.AddressSetView#union(ghidra.program.model.address.AddressSetView)",
      "static": false,
      "params": [
        {
          "name": "view",
          "type_long": "ghidra.program.model.address.AddressSetView",
          "type_short": "AddressSetView",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.AddressSet",
        "type_short": "AddressSet",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "xor",
      "comment": "",
      "javadoc": "@see ghidra.program.model.address.AddressSetView#xor(ghidra.program.model.address.AddressSetView)",
      "static": false,
      "params": [
        {
          "name": "view",
          "type_long": "ghidra.program.model.address.AddressSetView",
          "type_short": "AddressSetView",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.AddressSet",
        "type_short": "AddressSet",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "subtract",
      "comment": "",
      "javadoc": "@see ghidra.program.model.address.AddressSetView#subtract(ghidra.program.model.address.AddressSetView)",
      "static": false,
      "params": [
        {
          "name": "view",
          "type_long": "ghidra.program.model.address.AddressSetView",
          "type_short": "AddressSetView",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.AddressSet",
        "type_short": "AddressSet",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "toString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getAddressRanges",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "start",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "forward",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.AddressRangeIterator",
        "type_short": "AddressRangeIterator",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFirstRange",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.address.AddressRange",
        "type_short": "AddressRange",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getLastRange",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.address.AddressRange",
        "type_short": "AddressRange",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getRangeContaining",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "address",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.AddressRange",
        "type_short": "AddressRange",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "iterator",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "forward",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.Iterator\u003cghidra.program.model.address.AddressRange\u003e",
        "type_short": "Iterator",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "iterator",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "start",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "forward",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.util.Iterator\u003cghidra.program.model.address.AddressRange\u003e",
        "type_short": "Iterator",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "findFirstAddressInCommon",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "set",
          "type_long": "ghidra.program.model.address.AddressSetView",
          "type_short": "AddressSetView",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": ""
      },
      "throws": []
    }
  ]
}
