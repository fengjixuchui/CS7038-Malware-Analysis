{
  "name": "ProgramExaminer",
  "comment": "Wrapper for Ghidra code to find images (and maybe other artifacts later) in a program\n \n NOTE: This is intended for end-user use and has no direct references within Ghidra.  \n Typical use of the class entails generating a ghidra.jar (see BuildGhidraJarScript.java)\n and referencing this class from end-user code.",
  "javadoc": "Wrapper for Ghidra code to find images (and maybe other artifacts later) in a program\n \n NOTE: This is intended for end-user use and has no direct references within Ghidra.  \n Typical use of the class entails generating a ghidra.jar (see BuildGhidraJarScript.java)\n and referencing this class from end-user code.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "messageLog",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.app.util.importer.MessageLog",
      "type_short": "MessageLog",
      "constant_value": null
    },
    {
      "name": "program",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.listing.Program",
      "type_short": "Program",
      "constant_value": null
    },
    {
      "name": "defaultLanguage",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "ghidra.program.model.lang.Language",
      "type_short": "Language",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new ProgramExaminer.",
      "javadoc": "Constructs a new ProgramExaminer.\n@param bytes the bytes of the potential program to be examined.\n@throws GhidraException if any exception occurs while processing the bytes.",
      "static": false,
      "params": [
        {
          "name": "bytes",
          "type_long": "byte[]",
          "type_short": "byte[]",
          "comment": "the bytes of the potential program to be examined."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.GhidraException",
          "type_short": "GhidraException",
          "comment": "if any exception occurs while processing the bytes."
        }
      ]
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new ProgramExaminer.",
      "javadoc": "Constructs a new ProgramExaminer.\n@param file file object containing the bytes to be examined.\n@throws GhidraException if any exception occurs while processing the bytes.",
      "static": false,
      "params": [
        {
          "name": "file",
          "type_long": "java.io.File",
          "type_short": "File",
          "comment": "file object containing the bytes to be examined."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.GhidraException",
          "type_short": "GhidraException",
          "comment": "if any exception occurs while processing the bytes."
        }
      ]
    },
    {
      "name": "getType",
      "comment": "Returns a string indication the program format. i.e. PE, elf, raw",
      "javadoc": "Returns a string indication the program format. i.e. PE, elf, raw",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "provider",
          "type_long": "ghidra.app.util.bin.ByteProvider",
          "type_short": "ByteProvider",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.GhidraException",
          "type_short": "GhidraException",
          "comment": ""
        }
      ]
    },
    {
      "name": "initializeGhidra",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.GhidraException",
          "type_short": "GhidraException",
          "comment": ""
        }
      ]
    },
    {
      "name": "dispose",
      "comment": "Releases file/database resources.",
      "javadoc": "Releases file/database resources.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getImages",
      "comment": "Returns a list of byte[] containing image data.  The bytes will be either a png, a gif, or\n a bitmap",
      "javadoc": "Returns a list of byte[] containing image data.  The bytes will be either a png, a gif, or\n a bitmap",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cbyte[]\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "accumulateImageData",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "imageList",
          "type_long": "java.util.List\u003cbyte[]\u003e",
          "type_short": "List",
          "comment": ""
        },
        {
          "name": "data",
          "type_long": "ghidra.program.model.listing.Data",
          "type_short": "Data",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "runImageAnalyzer",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "isImage",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "data",
          "type_long": "ghidra.program.model.listing.Data",
          "type_short": "Data",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "createByteProvider",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "bytes",
          "type_long": "byte[]",
          "type_short": "byte[]",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.app.util.bin.ByteProvider",
        "type_short": "ByteProvider",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.GhidraException",
          "type_short": "GhidraException",
          "comment": ""
        }
      ]
    },
    {
      "name": "createByteProvider",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "file",
          "type_long": "java.io.File",
          "type_short": "File",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.app.util.bin.ByteProvider",
        "type_short": "ByteProvider",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.GhidraException",
          "type_short": "GhidraException",
          "comment": ""
        }
      ]
    }
  ]
}
