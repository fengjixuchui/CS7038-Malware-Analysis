{
  "name": "PCodeTestAbstractControlBlock",
  "comment": "PCodeTestAbstractControlBlock data is models the general capabilities\n of the TestInfo data structure which is used for different puposes as handled\n by extensions of this class.",
  "javadoc": "\u003ccode\u003ePCodeTestAbstractControlBlock\u003c/code\u003e data is models the general capabilities\n of the TestInfo data structure which is used for different puposes as handled\n by extensions of this class.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "SIZEOF_U4",
      "comment": "",
      "javadoc": "",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "4"
    },
    {
      "name": "disassembler",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.disassemble.Disassembler",
      "type_short": "Disassembler",
      "constant_value": null
    },
    {
      "name": "program",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.listing.Program",
      "type_short": "Program",
      "constant_value": null
    },
    {
      "name": "codeSpace",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.address.AddressSpace",
      "type_short": "AddressSpace",
      "constant_value": null
    },
    {
      "name": "dataSpace",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.address.AddressSpace",
      "type_short": "AddressSpace",
      "constant_value": null
    },
    {
      "name": "pointerSize",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "int",
      "type_short": "int",
      "constant_value": null
    },
    {
      "name": "infoStructAddr",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.address.Address",
      "type_short": "Address",
      "constant_value": null
    },
    {
      "name": "infoProgramStruct",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.program.model.data.Structure",
      "type_short": "Structure",
      "constant_value": null
    },
    {
      "name": "functions",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cghidra.test.processors.support.PCodeTestAbstractControlBlock.FunctionInfo\u003e",
      "type_short": "List",
      "constant_value": null
    },
    {
      "name": "functionMap",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.HashMap\u003cjava.lang.String,ghidra.test.processors.support.PCodeTestAbstractControlBlock.FunctionInfo\u003e",
      "type_short": "HashMap",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Construct test control block instance for the specified program.",
      "javadoc": "Construct test control block instance for the specified program.\n@param program program containing control block structure\n@param infoStructAddr program address where structure resides\n@param infoStruct appropriate Info structure definition which will have array \n of FunctionInfo immediately following.",
      "static": false,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": "program containing control block structure"
        },
        {
          "name": "infoStructAddr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "program address where structure resides"
        },
        {
          "name": "infoStruct",
          "type_long": "ghidra.program.model.data.Structure",
          "type_short": "Structure",
          "comment": "appropriate Info structure definition which will have array \n of FunctionInfo immediately following."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getInfoStructureAddress",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFunctionInfo",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "functionName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.test.processors.support.PCodeTestAbstractControlBlock.FunctionInfo",
        "type_short": "FunctionInfo",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getFunctionInfo",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "functionIndex",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.test.processors.support.PCodeTestAbstractControlBlock.FunctionInfo",
        "type_short": "FunctionInfo",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getNumberFunctions",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "forceCodePointer",
      "comment": "Force an existing reference to refer to the code space.  Pointers\n created in the data space refer to the data space by default, this method\n is used to change these pointers in the data space to refer to \n code.",
      "javadoc": "Force an existing reference to refer to the code space.  Pointers\n created in the data space refer to the data space by default, this method\n is used to change these pointers in the data space to refer to \n code.\n@param addr location with data space which contains code reference",
      "static": false,
      "params": [
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "location with data space which contains code reference"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getCharArrayBytes",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "program",
          "type_long": "ghidra.program.model.listing.Program",
          "type_short": "Program",
          "comment": ""
        },
        {
          "name": "string",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "byte[]",
        "type_short": "byte[]",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "readPointer",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "buffer",
          "type_long": "ghidra.program.model.mem.MemBuffer",
          "type_short": "MemBuffer",
          "comment": ""
        },
        {
          "name": "bufferOffset",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "addrSpace",
          "type_long": "ghidra.program.model.address.AddressSpace",
          "type_short": "AddressSpace",
          "comment": ""
        },
        {
          "name": "updateReference",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "readDefinedDataPointer",
      "comment": "Check for a Data pointer at the specified address and return the referenced\n address.",
      "javadoc": "Check for a Data pointer at the specified address and return the referenced\n address.\n@param addr address of stored pointer\n@return pointer referenced address or null if no pointer found",
      "static": false,
      "params": [
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": "address of stored pointer"
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": "pointer referenced address or null if no pointer found"
      },
      "throws": []
    },
    {
      "name": "readCodePointer",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "buffer",
          "type_long": "ghidra.program.model.mem.MemBuffer",
          "type_short": "MemBuffer",
          "comment": ""
        },
        {
          "name": "bufferOffset",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "updateReference",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.program.model.mem.MemoryAccessException",
          "type_short": "MemoryAccessException",
          "comment": ""
        }
      ]
    },
    {
      "name": "readDataPointer",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "buffer",
          "type_long": "ghidra.program.model.mem.MemBuffer",
          "type_short": "MemBuffer",
          "comment": ""
        },
        {
          "name": "bufferOffset",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "updateReference",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "readPointer",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "controlBlockOffset",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.program.model.mem.MemoryAccessException",
          "type_short": "MemoryAccessException",
          "comment": ""
        }
      ]
    },
    {
      "name": "applyU4Data",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getStructureComponent",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "testInfoStruct",
          "type_long": "ghidra.program.model.data.Structure",
          "type_short": "Structure",
          "comment": ""
        },
        {
          "name": "fieldName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "readControlBlock",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "applyStruct",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "ghidra.test.processors.support.PCodeTestAbstractControlBlock.InvalidControlBlockException",
          "type_short": "InvalidControlBlockException",
          "comment": ""
        },
        {
          "type_long": "ghidra.program.model.util.CodeUnitInsertionException",
          "type_short": "CodeUnitInsertionException",
          "comment": ""
        }
      ]
    },
    {
      "name": "emuReadString",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "emu",
          "type_long": "ghidra.app.emulator.EmulatorHelper",
          "type_short": "EmulatorHelper",
          "comment": ""
        },
        {
          "name": "strPtrAddr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "emuRead",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "emu",
          "type_long": "ghidra.app.emulator.EmulatorHelper",
          "type_short": "EmulatorHelper",
          "comment": ""
        },
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "size",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "long",
        "type_short": "long",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "emuWrite",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "emu",
          "type_long": "ghidra.app.emulator.EmulatorHelper",
          "type_short": "EmulatorHelper",
          "comment": ""
        },
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        },
        {
          "name": "size",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        },
        {
          "name": "value",
          "type_long": "long",
          "type_short": "long",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getMirroredDataAddress",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "emuTestRunner",
          "type_long": "ghidra.test.processors.support.EmulatorTestRunner",
          "type_short": "EmulatorTestRunner",
          "comment": ""
        },
        {
          "name": "addr",
          "type_long": "ghidra.program.model.address.Address",
          "type_short": "Address",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "findBytes",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "memory",
          "type_long": "ghidra.program.model.mem.Memory",
          "type_short": "Memory",
          "comment": ""
        },
        {
          "name": "set",
          "type_long": "ghidra.program.model.address.AddressSetView",
          "type_short": "AddressSetView",
          "comment": ""
        },
        {
          "name": "bytes",
          "type_long": "byte[]",
          "type_short": "byte[]",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.program.model.address.Address",
        "type_short": "Address",
        "comment": ""
      },
      "throws": []
    }
  ]
}
