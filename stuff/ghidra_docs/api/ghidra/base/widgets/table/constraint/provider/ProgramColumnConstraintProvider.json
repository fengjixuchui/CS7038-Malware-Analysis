{
  "name": "ProgramColumnConstraintProvider",
  "comment": "Class for providing Program related column type constraints.  Addresses get converted to\n UnsignedLong (via BigInteger) and many others get converted to Strings.  For example, some\n tables have a column whose type is \"Symbol\", but the column just displays the symbol\u0027s name.\n So we created a number of \"Symbol\" constraints, but they are just adapters to the\n various String constraints.",
  "javadoc": "Class for providing Program related column type constraints.  Addresses get converted to\n UnsignedLong (via BigInteger) and many others get converted to Strings.  For example, some\n tables have a column whose type is \"Symbol\", but the column just displays the symbol\u0027s name.\n So we created a number of \"Symbol\" constraints, but they are just adapters to the\n various String constraints.",
  "static": false,
  "implements": [
    "docking.widgets.table.constraint.ColumnConstraintProvider"
  ],
  "extends": "java.lang.Object",
  "fields": [],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getColumnConstraints",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Collection\u003cdocking.widgets.table.constraint.ColumnConstraint\u003c?\u003e\u003e",
        "type_short": "Collection",
        "comment": ""
      },
      "throws": []
    }
  ]
}
