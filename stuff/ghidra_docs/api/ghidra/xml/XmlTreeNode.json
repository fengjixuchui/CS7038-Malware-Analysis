{
  "name": "XmlTreeNode",
  "comment": "A class to represent a corresponding start and end tag. This value is one\n node on the XML parse tree.",
  "javadoc": "A class to represent a corresponding start and end tag. This value is one\n node on the XML parse tree.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "startElement",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.xml.XmlElement",
      "type_short": "XmlElement",
      "constant_value": null
    },
    {
      "name": "endElement",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.xml.XmlElement",
      "type_short": "XmlElement",
      "constant_value": null
    },
    {
      "name": "children",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.LinkedList\u003cghidra.xml.XmlTreeNode\u003e",
      "type_short": "LinkedList",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new XML tree node given the specified parser.",
      "javadoc": "Constructs a new XML tree node given the specified parser.\n@param parser the XML parser\n@throws SAXParseException if an XML parser error occurs",
      "static": false,
      "params": [
        {
          "name": "parser",
          "type_long": "ghidra.xml.XmlPullParser",
          "type_short": "XmlPullParser",
          "comment": "the XML parser"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "org.xml.sax.SAXParseException",
          "type_short": "SAXParseException",
          "comment": "if an XML parser error occurs"
        }
      ]
    },
    {
      "name": "getStartElement",
      "comment": "Returns the start element of this node.",
      "javadoc": "Returns the start element of this node.\n@return the start element of this node",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.xml.XmlElement",
        "type_short": "XmlElement",
        "comment": "the start element of this node"
      },
      "throws": []
    },
    {
      "name": "getEndElement",
      "comment": "Returns the end element of this node.",
      "javadoc": "Returns the end element of this node.\n@return the end element of this node",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.xml.XmlElement",
        "type_short": "XmlElement",
        "comment": "the end element of this node"
      },
      "throws": []
    },
    {
      "name": "getChildCount",
      "comment": "Returns the number of children below this node.",
      "javadoc": "Returns the number of children below this node.\n@return the number of children below this node",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "the number of children below this node"
      },
      "throws": []
    },
    {
      "name": "getChildren",
      "comment": "Returns an iterator over all of the children of this node.",
      "javadoc": "Returns an iterator over all of the children of this node.\n@return an iterator over all of the children of this node",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.Iterator\u003cghidra.xml.XmlTreeNode\u003e",
        "type_short": "Iterator",
        "comment": "an iterator over all of the children of this node"
      },
      "throws": []
    },
    {
      "name": "getChildren",
      "comment": "Returns an iterator over all of the children of this node with the\n specfied name.",
      "javadoc": "Returns an iterator over all of the children of this node with the\n specfied name.\n@param name the name of the desired children\n@return an iterator over all of the children of this node with the\n         specfied name",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of the desired children"
        }
      ],
      "return": {
        "type_long": "java.util.Iterator\u003cghidra.xml.XmlTreeNode\u003e",
        "type_short": "Iterator",
        "comment": "an iterator over all of the children of this node with the\n         specfied name"
      },
      "throws": []
    },
    {
      "name": "getChild",
      "comment": "Returns the first child element with the specified name.",
      "javadoc": "Returns the first child element with the specified name.\n@param name the name of the desired child element\n@return the first child element with the specified name",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of the desired child element"
        }
      ],
      "return": {
        "type_long": "ghidra.xml.XmlTreeNode",
        "type_short": "XmlTreeNode",
        "comment": "the first child element with the specified name"
      },
      "throws": []
    },
    {
      "name": "getChildAt",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "index",
          "type_long": "int",
          "type_short": "int",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "ghidra.xml.XmlTreeNode",
        "type_short": "XmlTreeNode",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "deleteChildNode",
      "comment": "Deletes the specified child node.",
      "javadoc": "Deletes the specified child node.\n@param node the node to delete",
      "static": false,
      "params": [
        {
          "name": "node",
          "type_long": "ghidra.xml.XmlTreeNode",
          "type_short": "XmlTreeNode",
          "comment": "the node to delete"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
