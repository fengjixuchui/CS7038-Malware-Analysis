{
  "name": "XmlPullParserFactory",
  "comment": "",
  "javadoc": "",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "setCreateTracingParsers",
      "comment": "",
      "javadoc": "",
      "static": true,
      "params": [
        {
          "name": "xmlTracer",
          "type_long": "ghidra.xml.XmlTracer",
          "type_short": "XmlTracer",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "create",
      "comment": "Constructs a new parser using the specified stream and name.",
      "javadoc": "Constructs a new parser using the specified stream and name.\n@param input the input XML stream\n@param inputName the name of the stream\n@param errHandler the XML error handler\n@param validate true if the parse should validate against the DTD\n@throws SAXException if an XML parse error occurs\n@throws IOException",
      "static": true,
      "params": [
        {
          "name": "input",
          "type_long": "java.io.InputStream",
          "type_short": "InputStream",
          "comment": "the input XML stream"
        },
        {
          "name": "inputName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "the name of the stream"
        },
        {
          "name": "errHandler",
          "type_long": "org.xml.sax.ErrorHandler",
          "type_short": "ErrorHandler",
          "comment": "the XML error handler"
        },
        {
          "name": "validate",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true if the parse should validate against the DTD"
        }
      ],
      "return": {
        "type_long": "ghidra.xml.XmlPullParser",
        "type_short": "XmlPullParser",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "org.xml.sax.SAXException",
          "type_short": "SAXException",
          "comment": "if an XML parse error occurs"
        },
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    },
    {
      "name": "create",
      "comment": "Constructs a new parser using the specified XML file.",
      "javadoc": "Constructs a new parser using the specified XML file.\n@param file the input XML file\n@param errHandler the XML error handler\n@param validate true if the parse should validate against the DTD\n@throws SAXException if an XML parse error occurs\n@throws IOException if an i/o error occurs",
      "static": true,
      "params": [
        {
          "name": "file",
          "type_long": "java.io.File",
          "type_short": "File",
          "comment": "the input XML file"
        },
        {
          "name": "errHandler",
          "type_long": "org.xml.sax.ErrorHandler",
          "type_short": "ErrorHandler",
          "comment": "the XML error handler"
        },
        {
          "name": "validate",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true if the parse should validate against the DTD"
        }
      ],
      "return": {
        "type_long": "ghidra.xml.XmlPullParser",
        "type_short": "XmlPullParser",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "org.xml.sax.SAXException",
          "type_short": "SAXException",
          "comment": "if an XML parse error occurs"
        },
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if an i/o error occurs"
        }
      ]
    },
    {
      "name": "create",
      "comment": "Constructs a new parser using the specified XML file.",
      "javadoc": "Constructs a new parser using the specified XML file.\n@param file the input XML file\n@param errHandler the XML error handler\n@param validate true if the parse should validate against the DTD\n@throws SAXException if an XML parse error occurs\n@throws IOException if an i/o error occurs",
      "static": true,
      "params": [
        {
          "name": "file",
          "type_long": "generic.jar.ResourceFile",
          "type_short": "ResourceFile",
          "comment": "the input XML file"
        },
        {
          "name": "errHandler",
          "type_long": "org.xml.sax.ErrorHandler",
          "type_short": "ErrorHandler",
          "comment": "the XML error handler"
        },
        {
          "name": "validate",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true if the parse should validate against the DTD"
        }
      ],
      "return": {
        "type_long": "ghidra.xml.XmlPullParser",
        "type_short": "XmlPullParser",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "org.xml.sax.SAXException",
          "type_short": "SAXException",
          "comment": "if an XML parse error occurs"
        },
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if an i/o error occurs"
        }
      ]
    },
    {
      "name": "create",
      "comment": "Constructs a new parser using the specified XML file.",
      "javadoc": "Constructs a new parser using the specified XML file.\n@param input A string that contains the XML input data\n@param inputName A descriptive name for the XML process (this will appear as the thread name)\n@param errHandler the XML error handler\n@param validate true if the parse should validate against the DTD\n@throws SAXException if an XML parse error occurs",
      "static": true,
      "params": [
        {
          "name": "input",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "A string that contains the XML input data"
        },
        {
          "name": "inputName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "A descriptive name for the XML process (this will appear as the thread name)"
        },
        {
          "name": "errHandler",
          "type_long": "org.xml.sax.ErrorHandler",
          "type_short": "ErrorHandler",
          "comment": "the XML error handler"
        },
        {
          "name": "validate",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "true if the parse should validate against the DTD"
        }
      ],
      "return": {
        "type_long": "ghidra.xml.XmlPullParser",
        "type_short": "XmlPullParser",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "org.xml.sax.SAXException",
          "type_short": "SAXException",
          "comment": "if an XML parse error occurs"
        }
      ]
    }
  ]
}
