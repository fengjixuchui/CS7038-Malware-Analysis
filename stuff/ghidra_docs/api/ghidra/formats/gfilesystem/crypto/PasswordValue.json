{
  "name": "PasswordValue",
  "comment": "Wrapper for a password, held in a char[] array.\n \n #close() an instance will clear the characters of the char array.",
  "javadoc": "Wrapper for a password, held in a char[] array.\n \u003cp\u003e\n {@link #close() Closing} an instance will clear the characters of the char array.",
  "static": false,
  "implements": [
    "java.io.Closeable"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "password",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "char[]",
      "type_short": "char[]",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "copyOf",
      "comment": "Creates a new PasswordValue using a copy the specified characters.",
      "javadoc": "Creates a new PasswordValue using a copy the specified characters.\n@param password password characters\n@return new PasswordValue instance",
      "static": true,
      "params": [
        {
          "name": "password",
          "type_long": "char[]",
          "type_short": "char[]",
          "comment": "password characters"
        }
      ],
      "return": {
        "type_long": "ghidra.formats.gfilesystem.crypto.PasswordValue",
        "type_short": "PasswordValue",
        "comment": "new PasswordValue instance"
      },
      "throws": []
    },
    {
      "name": "wrap",
      "comment": "Creates a new PasswordValue by wrapping the specified character array.\n \n The new instance will take ownership of the char array, and\n clear it when the instance is #close().",
      "javadoc": "Creates a new PasswordValue by wrapping the specified character array.\n \u003cp\u003e\n The new instance will take ownership of the char array, and\n clear it when the instance is {@link #close() closed}.\n@param password password characters\n@return new PasswordValue instance",
      "static": true,
      "params": [
        {
          "name": "password",
          "type_long": "char[]",
          "type_short": "char[]",
          "comment": "password characters"
        }
      ],
      "return": {
        "type_long": "ghidra.formats.gfilesystem.crypto.PasswordValue",
        "type_short": "PasswordValue",
        "comment": "new PasswordValue instance"
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "clone",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.formats.gfilesystem.crypto.PasswordValue",
        "type_short": "PasswordValue",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "close",
      "comment": "Clears the password characters by overwriting them with \u0027\\0\u0027s.",
      "javadoc": "Clears the password characters by overwriting them with \u0027\\0\u0027s.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "getPasswordChars",
      "comment": "Returns a reference to the current password characters.",
      "javadoc": "Returns a reference to the current password characters.\n@return reference to the current password characters",
      "static": false,
      "params": [],
      "return": {
        "type_long": "char[]",
        "type_short": "char[]",
        "comment": "reference to the current password characters"
      },
      "throws": []
    },
    {
      "name": "hashCode",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "equals",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "obj",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": ""
      },
      "throws": []
    }
  ]
}
