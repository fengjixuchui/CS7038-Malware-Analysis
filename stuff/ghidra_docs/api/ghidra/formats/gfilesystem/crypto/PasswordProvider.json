{
  "name": "PasswordProvider",
  "comment": "Instances of this interface provide passwords to decrypt files.\n \n Instances are typically not called directly, instead are used \n by a CryptoSession along with other provider instances to provide\n a balanced breakfast. \n \n Multiple passwords can be returned for each request with the\n assumption that the consumer of the values can test and validate each one\n to find the correct value.  Conversely, it would not be appropriate to use this to get\n a password for a login service that may lock the requester out after a small number\n of failed attempts.\n \n TODO: add negative password result that can be persisted / cached so\n user isn\u0027t spammed with requests for an unknown password during batch / recursive\n operations.",
  "javadoc": "Instances of this interface provide passwords to decrypt files.\n \u003cp\u003e\n Instances are typically not called directly, instead are used \n by a {@link CryptoSession} along with other provider instances to provide\n a balanced breakfast. \n \u003cp\u003e\n Multiple passwords can be returned for each request with the\n assumption that the consumer of the values can test and validate each one\n to find the correct value.  Conversely, it would not be appropriate to use this to get\n a password for a login service that may lock the requester out after a small number\n of failed attempts.\n \u003cp\u003e\n TODO: add negative password result that can be persisted / cached so\n user isn\u0027t spammed with requests for an unknown password during batch / recursive\n operations.",
  "static": false,
  "implements": [
    "ghidra.formats.gfilesystem.crypto.CryptoProvider"
  ],
  "fields": [],
  "methods": [
    {
      "name": "getPasswordsFor",
      "comment": "Returns a sequence of passwords (ordered by quality) that may apply to\n the specified file.",
      "javadoc": "Returns a sequence of passwords (ordered by quality) that may apply to\n the specified file.\n@param fsrl {@link FSRL} path to the password protected file\n@param prompt optional prompt that may be displayed to a user\n@param session a place to hold state values that persist across\n related queries\n@return {@link Iterator} of possible passwords",
      "static": false,
      "params": [
        {
          "name": "fsrl",
          "type_long": "ghidra.formats.gfilesystem.FSRL",
          "type_short": "FSRL",
          "comment": "FSRL path to the password protected file"
        },
        {
          "name": "prompt",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "optional prompt that may be displayed to a user"
        },
        {
          "name": "session",
          "type_long": "ghidra.formats.gfilesystem.crypto.CryptoProvider.Session",
          "type_short": "Session",
          "comment": "a place to hold state values that persist across\n related queries"
        }
      ],
      "return": {
        "type_long": "java.util.Iterator\u003cghidra.formats.gfilesystem.crypto.PasswordValue\u003e",
        "type_short": "Iterator",
        "comment": "Iterator of possible passwords"
      },
      "throws": []
    }
  ]
}
