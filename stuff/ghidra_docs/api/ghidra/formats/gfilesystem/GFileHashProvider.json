{
  "name": "GFileHashProvider",
  "comment": "GFileSystem add-on interface that provides MD5 hashing for file located within the filesystem",
  "javadoc": "GFileSystem add-on interface that provides MD5 hashing for file located within the filesystem",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "getMD5Hash",
      "comment": "Returns the MD5 hash of the specified file.",
      "javadoc": "Returns the MD5 hash of the specified file.\n@param file the {@link GFile}\n@param required boolean flag, if true the hash will always be returned, even if it has to\n be calculated.  If false, the hash will be returned if easily available\n@param monitor {@link TaskMonitor}\n@return MD5 hash as a string\n@throws CancelledException if cancelled\n@throws IOException if error",
      "static": false,
      "params": [
        {
          "name": "file",
          "type_long": "ghidra.formats.gfilesystem.GFile",
          "type_short": "GFile",
          "comment": "the GFile"
        },
        {
          "name": "required",
          "type_long": "boolean",
          "type_short": "boolean",
          "comment": "boolean flag, if true the hash will always be returned, even if it has to\n be calculated.  If false, the hash will be returned if easily available"
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": "TaskMonitor"
        }
      ],
      "return": {
        "type_long": "java.lang.String",
        "type_short": "String",
        "comment": "MD5 hash as a string"
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": "if cancelled"
        },
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if error"
        }
      ]
    }
  ]
}
