{
  "name": "DerivedStreamPushProducer",
  "comment": "Used by FileSystemService#getDerivedByteProviderPush(FSRL, FSRL, String, long, DerivedStreamPushProducer, TaskMonitor)\n to produce a derivative stream from a source file.\n \n The implementation needs to write bytes to the supplied OutputStream.\n \n Example:\n \n fsService.getDerivedByteProviderPush(\n     containerFSRL, \n     null,\n     \"the_derived_file\",\n     -1,\n     os - FileUtilities.copyStream(my_input_stream, os),\n     monitor);\n \n See #push(OutputStream).",
  "javadoc": "Used by {@link FileSystemService#getDerivedByteProviderPush(FSRL, FSRL, String, long, DerivedStreamPushProducer, TaskMonitor) getDerivedByteProviderPush()}\n to produce a derivative stream from a source file.\n \u003cp\u003e\n The implementation needs to write bytes to the supplied {@link OutputStream}.\n \u003cp\u003e\n Example:\n \u003cp\u003e\n \u003cpre\u003efsService.getDerivedByteProviderPush(\n     containerFSRL, \n     null,\n     \"the_derived_file\",\n     -1,\n     os -\u003e FileUtilities.copyStream(my_input_stream, os),\n     monitor);\u003c/pre\u003e\n \u003cp\u003e\n See {@link #push(OutputStream)}.",
  "static": true,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "push",
      "comment": "Callback method intended to be implemented by the caller to\n FileSystemService#getDerivedByteProviderPush(FSRL, FSRL, String, long, DerivedStreamPushProducer, TaskMonitor)\n ",
      "javadoc": "Callback method intended to be implemented by the caller to\n {@link FileSystemService#getDerivedByteProviderPush(FSRL, FSRL, String, long, DerivedStreamPushProducer, TaskMonitor) getDerivedByteProviderPush()}\n \u003cp\u003e\n@param os {@link OutputStream} that the implementor should write the bytes to.  Do\n not close the stream when done\n@throws IOException if there is a problem while writing to the OutputStream\n@throws CancelledException if the user canceled",
      "static": false,
      "params": [
        {
          "name": "os",
          "type_long": "java.io.OutputStream",
          "type_short": "OutputStream",
          "comment": "OutputStream that the implementor should write the bytes to.  Do\n not close the stream when done"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if there is a problem while writing to the OutputStream"
        },
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": "if the user canceled"
        }
      ]
    }
  ]
}
