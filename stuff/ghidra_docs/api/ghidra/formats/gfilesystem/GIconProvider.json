{
  "name": "GIconProvider",
  "comment": "GFileSystem add-on interface to allow filesystems to override how image files\n are converted into viewable Icon instances.",
  "javadoc": "{@link GFileSystem} add-on interface to allow filesystems to override how image files\n are converted into viewable {@link Icon} instances.",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "getIcon",
      "comment": "A method that GFileSystem can implement if they need to preprocess\n image files so that Ghidra can display them.",
      "javadoc": "A method that {@link GFileSystem file systems} can implement if they need to preprocess\n image files so that Ghidra can display them.\n@param file {@link GFile} to read and convert into an Icon.\n@param monitor {@link TaskMonitor} to watch and update with progress.\n@return new {@link Icon} instance with contents of the GFile.\n@throws IOException if problem reading or converting image.\n@throws CancelledException if user cancels.",
      "static": false,
      "params": [
        {
          "name": "file",
          "type_long": "ghidra.formats.gfilesystem.GFile",
          "type_short": "GFile",
          "comment": "GFile to read and convert into an Icon."
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": "TaskMonitor to watch and update with progress."
        }
      ],
      "return": {
        "type_long": "javax.swing.Icon",
        "type_short": "Icon",
        "comment": "new Icon instance with contents of the GFile."
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if problem reading or converting image."
        },
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": "if user cancels."
        }
      ]
    },
    {
      "name": "getIconForFile",
      "comment": "Helper static method that will get an Icon from a data file.",
      "javadoc": "Helper static method that will get an Icon from a data file.\n@param file {@link GFile} to read and convert into an Icon.\n@param monitor {@link TaskMonitor} to watch and update with progress.\n@return new {@link Icon} instance with contents of the GFile, or null if the\n file couldn\u0027t be converted into an image.\n@throws CancelledException if the user cancels.",
      "static": true,
      "params": [
        {
          "name": "file",
          "type_long": "ghidra.formats.gfilesystem.GFile",
          "type_short": "GFile",
          "comment": "GFile to read and convert into an Icon."
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": "TaskMonitor to watch and update with progress."
        }
      ],
      "return": {
        "type_long": "javax.swing.Icon",
        "type_short": "Icon",
        "comment": "new Icon instance with contents of the GFile, or null if the\n file couldn\u0027t be converted into an image."
      },
      "throws": [
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": "if the user cancels."
        }
      ]
    }
  ]
}
