{
  "name": "RefdFile",
  "comment": "A GFile along with a FileSystemRef to keep the filesystem pinned\n in memory.\n \n The caller is responsible for #close() this object, which releases\n the FilesystemRef.",
  "javadoc": "A {@link GFile} along with a {@link FileSystemRef} to keep the filesystem pinned\n in memory.\n \u003cp\u003e\n The caller is responsible for {@link #close() closing} this object, which releases\n the FilesystemRef.",
  "static": false,
  "implements": [
    "java.io.Closeable"
  ],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "fsRef",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.formats.gfilesystem.FileSystemRef",
      "type_short": "FileSystemRef",
      "constant_value": null
    },
    {
      "name": "file",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "ghidra.formats.gfilesystem.GFile",
      "type_short": "GFile",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Creates a RefdFile instance, taking ownership of the supplied fsRef.",
      "javadoc": "Creates a RefdFile instance, taking ownership of the supplied fsRef.\n@param fsRef {@link FileSystemRef} that pins the filesystem open\n@param file GFile file inside the specified filesystem",
      "static": false,
      "params": [
        {
          "name": "fsRef",
          "type_long": "ghidra.formats.gfilesystem.FileSystemRef",
          "type_short": "FileSystemRef",
          "comment": "FileSystemRef that pins the filesystem open"
        },
        {
          "name": "file",
          "type_long": "ghidra.formats.gfilesystem.GFile",
          "type_short": "GFile",
          "comment": "GFile file inside the specified filesystem"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "close",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": ""
        }
      ]
    }
  ]
}
