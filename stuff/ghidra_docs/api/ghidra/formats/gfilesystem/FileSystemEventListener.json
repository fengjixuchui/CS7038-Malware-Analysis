{
  "name": "FileSystemEventListener",
  "comment": "Events broadcast when a GFileSystem is closed or has a FileSystemRef change.",
  "javadoc": "Events broadcast when a {@link GFileSystem} is closed or has a {@link FileSystemRef} change.",
  "static": false,
  "implements": [],
  "fields": [],
  "methods": [
    {
      "name": "onFilesystemClose",
      "comment": "Called by GFilesystem\u0027s GFileSystem#close(), before any destructive changes\n are made to the filesystem instance.",
      "javadoc": "Called by GFilesystem\u0027s {@link GFileSystem#close()}, before any destructive changes\n are made to the filesystem instance.\n@param fs {@link GFileSystem} that is about to be closed.",
      "static": false,
      "params": [
        {
          "name": "fs",
          "type_long": "ghidra.formats.gfilesystem.GFileSystem",
          "type_short": "GFileSystem",
          "comment": "GFileSystem that is about to be closed."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "onFilesystemRefChange",
      "comment": "Called by FileSystemRefManager when a new FileSystemRef is created or\n released.",
      "javadoc": "Called by {@link FileSystemRefManager} when a new {@link FileSystemRef} is created or\n released.\n@param fs {@link GFileSystem} that is being updated.\n@param refManager {@link FileSystemRefManager} that is tracking the modified GFileSystem.",
      "static": false,
      "params": [
        {
          "name": "fs",
          "type_long": "ghidra.formats.gfilesystem.GFileSystem",
          "type_short": "GFileSystem",
          "comment": "GFileSystem that is being updated."
        },
        {
          "name": "refManager",
          "type_long": "ghidra.formats.gfilesystem.FileSystemRefManager",
          "type_short": "FileSystemRefManager",
          "comment": "FileSystemRefManager that is tracking the modified GFileSystem."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    }
  ]
}
