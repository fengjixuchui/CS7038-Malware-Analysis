{
  "name": "GFileSystemProbeBytesOnly",
  "comment": "A GFileSystemProbe interface for filesystems that can be detected using\n just a few bytes from the beginning of the containing file.\n \n Filesystem probes of this type are given precedence when possible since they\n tend to be simpler and quicker.",
  "javadoc": "A {@link GFileSystemProbe} interface for filesystems that can be detected using\n just a few bytes from the beginning of the containing file.\n \u003cp\u003e\n Filesystem probes of this type are given precedence when possible since they\n tend to be simpler and quicker.",
  "static": false,
  "implements": [
    "ghidra.formats.gfilesystem.factory.GFileSystemProbe"
  ],
  "fields": [
    {
      "name": "MAX_BYTESREQUIRED",
      "comment": "Maximum that any GFileSystemProbeBytesOnly is allowed to specify as its\n GFileSystemProbeBytesOnly#getBytesRequired().",
      "javadoc": "Maximum that any GFileSystemProbeBytesOnly is allowed to specify as its\n {@link GFileSystemProbeBytesOnly#getBytesRequired()}.",
      "static": true,
      "type_long": "int",
      "type_short": "int",
      "constant_value": "65536"
    }
  ],
  "methods": [
    {
      "name": "getBytesRequired",
      "comment": "The minimum number of bytes needed to be supplied to the\n #probeStartBytes(FSRL, byte[]) method.\n ",
      "javadoc": "The minimum number of bytes needed to be supplied to the\n {@link #probeStartBytes(FSRL, byte[])} method.\n \u003cp\u003e\n@return min number of bytes needed for probe",
      "static": false,
      "params": [],
      "return": {
        "type_long": "int",
        "type_short": "int",
        "comment": "min number of bytes needed for probe"
      },
      "throws": []
    },
    {
      "name": "probeStartBytes",
      "comment": "Probes the supplied  byte[] array to determine if this filesystem\n implementation can handle the file.",
      "javadoc": "Probes the supplied {@code startBytes} byte[] array to determine if this filesystem\n implementation can handle the file.\n@param containerFSRL the {@link FSRL} of the file containing the bytes being probed.\n@param startBytes a byte array, with a length of at least {@link #getBytesRequired()}\n containing bytes from the beginning (ie. offset 0) of the probed file.\n@return {@code true} if the specified file is handled by this filesystem implementation,\n {@code false} if not.",
      "static": false,
      "params": [
        {
          "name": "containerFSRL",
          "type_long": "ghidra.formats.gfilesystem.FSRL",
          "type_short": "FSRL",
          "comment": "the FSRL of the file containing the bytes being probed."
        },
        {
          "name": "startBytes",
          "type_long": "byte[]",
          "type_short": "byte[]",
          "comment": "a byte array, with a length of at least #getBytesRequired()\n containing bytes from the beginning (ie. offset 0) of the probed file."
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": " if the specified file is handled by this filesystem implementation,\n  if not."
      },
      "throws": []
    }
  ]
}
