{
  "name": "GFileSystemFactoryByteProvider",
  "comment": "A GFileSystemFactory interface for filesystem implementations\n that use a ByteProvider.\n ",
  "javadoc": "A {@link GFileSystemFactory} interface for filesystem implementations\n that use a {@link ByteProvider}.\n \u003cp\u003e\n@param \u003cFSTYPE\u003e",
  "static": false,
  "implements": [
    "ghidra.formats.gfilesystem.factory.GFileSystemFactory"
  ],
  "fields": [],
  "methods": [
    {
      "name": "create",
      "comment": "Constructs a new GFileSystem instance that handles the specified file.\n ",
      "javadoc": "Constructs a new {@link GFileSystem} instance that handles the specified file.\n \u003cp\u003e\n@param targetFSRL the {@link FSRLRoot} of the filesystem being created.\n@param byteProvider a {@link ByteProvider} containing the contents of the file being probed.\n This method is responsible for closing this byte provider instance.\n@param fsService a reference to the {@link FileSystemService} object\n@param monitor a {@link TaskMonitor} that should be polled to see if the user has\n requested to cancel the operation, and updated with progress information.\n@return a new {@link GFileSystem} derived instance.\n@throws IOException if there is an error reading files.\n@throws CancelledException if the user cancels",
      "static": false,
      "params": [
        {
          "name": "targetFSRL",
          "type_long": "ghidra.formats.gfilesystem.FSRLRoot",
          "type_short": "FSRLRoot",
          "comment": "the FSRLRoot of the filesystem being created."
        },
        {
          "name": "byteProvider",
          "type_long": "ghidra.app.util.bin.ByteProvider",
          "type_short": "ByteProvider",
          "comment": "a ByteProvider containing the contents of the file being probed.\n This method is responsible for closing this byte provider instance."
        },
        {
          "name": "fsService",
          "type_long": "ghidra.formats.gfilesystem.FileSystemService",
          "type_short": "FileSystemService",
          "comment": "a reference to the FileSystemService object"
        },
        {
          "name": "monitor",
          "type_long": "ghidra.util.task.TaskMonitor",
          "type_short": "TaskMonitor",
          "comment": "a TaskMonitor that should be polled to see if the user has\n requested to cancel the operation, and updated with progress information."
        }
      ],
      "return": {
        "type_long": "FSTYPE",
        "type_short": "FSTYPE",
        "comment": "a new GFileSystem derived instance."
      },
      "throws": [
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if there is an error reading files."
        },
        {
          "type_long": "ghidra.util.exception.CancelledException",
          "type_short": "CancelledException",
          "comment": "if the user cancels"
        }
      ]
    }
  ]
}
