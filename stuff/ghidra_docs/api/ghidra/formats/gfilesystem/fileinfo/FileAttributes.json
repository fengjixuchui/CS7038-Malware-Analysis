{
  "name": "FileAttributes",
  "comment": "A collection of FileAttribute values that describe a file.",
  "javadoc": "A collection of {@link FileAttribute} values that describe a file.",
  "static": false,
  "implements": [],
  "extends": "java.lang.Object",
  "fields": [
    {
      "name": "EMPTY",
      "comment": "Read-only empty instance.",
      "javadoc": "Read-only empty instance.",
      "static": true,
      "type_long": "ghidra.formats.gfilesystem.fileinfo.FileAttributes",
      "type_short": "FileAttributes",
      "constant_value": null
    },
    {
      "name": "attributes",
      "comment": "",
      "javadoc": "",
      "static": false,
      "type_long": "java.util.List\u003cghidra.formats.gfilesystem.fileinfo.FileAttribute\u003c?\u003e\u003e",
      "type_short": "List",
      "constant_value": null
    }
  ],
  "methods": [
    {
      "name": "of",
      "comment": "Creates a FileAttributes instance containing the specified attribute values.",
      "javadoc": "Creates a {@link FileAttributes} instance containing the specified attribute values.\n@param attribs var-arg list of {@link FileAttribute} values, null values are ignored and\n skipped\n@return a new {@link FileAttributes} instance",
      "static": true,
      "params": [
        {
          "name": "attribs",
          "type_long": "ghidra.formats.gfilesystem.fileinfo.FileAttribute\u003c?\u003e[]",
          "type_short": "ghidra.formats.gfilesystem.fileinfo.FileAttribute\u003c?\u003e[]",
          "comment": "var-arg list of FileAttribute values, null values are ignored and\n skipped"
        }
      ],
      "return": {
        "type_long": "ghidra.formats.gfilesystem.fileinfo.FileAttributes",
        "type_short": "FileAttributes",
        "comment": "a new FileAttributes instance"
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "Creates a new / empty FileAttributes instance.",
      "javadoc": "Creates a new / empty {@link FileAttributes} instance.",
      "static": false,
      "params": [],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "\u003cinit\u003e",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [
        {
          "name": "attributes",
          "type_long": "java.util.List\u003cghidra.formats.gfilesystem.fileinfo.FileAttribute\u003c?\u003e\u003e",
          "type_short": "List",
          "comment": ""
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "clone",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "ghidra.formats.gfilesystem.fileinfo.FileAttributes",
        "type_short": "FileAttributes",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "add",
      "comment": "Adds a custom named file attribute.\n \n The value class should have a reasonable toString() that converts the value to something\n that is presentable to the user.",
      "javadoc": "Adds a custom named file attribute.\n \u003cp\u003e\n The value class should have a reasonable toString() that converts the value to something\n that is presentable to the user.\n@param name name of the attribute\n@param attributeValue value of the attribute",
      "static": false,
      "params": [
        {
          "name": "name",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "name of the attribute"
        },
        {
          "name": "attributeValue",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": "value of the attribute"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "add",
      "comment": "Adds a typed file attribute value.\n \n The value class needs to match FileAttributeType#getValueType().",
      "javadoc": "Adds a typed file attribute value.\n \u003cp\u003e\n The value class needs to match {@link FileAttributeType#getValueType()}.\n@param attributeType {@link FileAttributeType} type of this value\n@param attributeValue value of attribute",
      "static": false,
      "params": [
        {
          "name": "attributeType",
          "type_long": "ghidra.formats.gfilesystem.fileinfo.FileAttributeType",
          "type_short": "FileAttributeType",
          "comment": "FileAttributeType type of this value"
        },
        {
          "name": "attributeValue",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": "value of attribute"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "add",
      "comment": "Adds a typed file attribute value.\n \n The value class needs to match FileAttributeType#getValueType().",
      "javadoc": "Adds a typed file attribute value.\n \u003cp\u003e\n The value class needs to match {@link FileAttributeType#getValueType()}.\n@param attributeType {@link FileAttributeType} type of this value\n@param displayName string used to label the value when displayed to the user\n@param attributeValue value of attribute\n@throws IllegalArgumentException if attributeValue does not match attributeType\u0027s \n {@link FileAttributeType#getValueType()}.",
      "static": false,
      "params": [
        {
          "name": "attributeType",
          "type_long": "ghidra.formats.gfilesystem.fileinfo.FileAttributeType",
          "type_short": "FileAttributeType",
          "comment": "FileAttributeType type of this value"
        },
        {
          "name": "displayName",
          "type_long": "java.lang.String",
          "type_short": "String",
          "comment": "string used to label the value when displayed to the user"
        },
        {
          "name": "attributeValue",
          "type_long": "java.lang.Object",
          "type_short": "Object",
          "comment": "value of attribute"
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "get",
      "comment": "Gets the value of the specified attribute.",
      "javadoc": "Gets the value of the specified attribute.\n@param \u003cT\u003e expected class of the attribute value\n@param attributeType {@link FileAttributeType} enum type of attribute to search for\n@param valueClass java class of the value\n@param defaultValue value to return if attribute is not present\n@return value of requested attribute, or defaultValue if not present",
      "static": false,
      "params": [
        {
          "name": "attributeType",
          "type_long": "ghidra.formats.gfilesystem.fileinfo.FileAttributeType",
          "type_short": "FileAttributeType",
          "comment": "FileAttributeType enum type of attribute to search for"
        },
        {
          "name": "valueClass",
          "type_long": "java.lang.Class\u003cT\u003e",
          "type_short": "Class",
          "comment": "java class of the value"
        },
        {
          "name": "defaultValue",
          "type_long": "T",
          "type_short": "T",
          "comment": "value to return if attribute is not present"
        }
      ],
      "return": {
        "type_long": "T",
        "type_short": "T",
        "comment": "value of requested attribute, or defaultValue if not present"
      },
      "throws": []
    },
    {
      "name": "getAttributes",
      "comment": "Return a list of all the attributes added to this instance.",
      "javadoc": "Return a list of all the attributes added to this instance.\n@return list of {@link FileAttribute}",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cghidra.formats.gfilesystem.fileinfo.FileAttribute\u003c?\u003e\u003e",
        "type_short": "List",
        "comment": "list of FileAttribute"
      },
      "throws": []
    },
    {
      "name": "contains",
      "comment": "Returns true if the specified attribute is present.",
      "javadoc": "Returns true if the specified attribute is present.\n@param attributeType attribute to query\n@return boolean true if present",
      "static": false,
      "params": [
        {
          "name": "attributeType",
          "type_long": "ghidra.formats.gfilesystem.fileinfo.FileAttributeType",
          "type_short": "FileAttributeType",
          "comment": "attribute to query"
        }
      ],
      "return": {
        "type_long": "boolean",
        "type_short": "boolean",
        "comment": "boolean true if present"
      },
      "throws": []
    }
  ]
}
