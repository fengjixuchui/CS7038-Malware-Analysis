{
  "name": "GhidraTestApplicationLayout",
  "comment": "The Ghidra test application layout defines the customizable elements of the Ghidra \n application\u0027s directory structure when running a test.\n \n This layout exists because tests often need to provide their own user settings\n directory, rather than using Ghidra\u0027s default.",
  "javadoc": "The Ghidra test application layout defines the customizable elements of the Ghidra \n application\u0027s directory structure when running a test.\n \u003cp\u003e\n This layout exists because tests often need to provide their own user settings\n directory, rather than using Ghidra\u0027s default.",
  "static": false,
  "implements": [],
  "extends": "ghidra.GhidraApplicationLayout",
  "fields": [],
  "methods": [
    {
      "name": "\u003cinit\u003e",
      "comment": "Constructs a new Ghidra application layout object with the provided user settings\n directory.\n \n This layout is useful when running Ghidra tests.",
      "javadoc": "Constructs a new Ghidra application layout object with the provided user settings\n directory.\n \u003cp\u003e\n This layout is useful when running Ghidra tests.\n@param userSettingsDir The custom user settings directory to use.\n@throws FileNotFoundException if there was a problem getting a user directory.\n@throws IOException if there was a problem getting the application properties.",
      "static": false,
      "params": [
        {
          "name": "userSettingsDir",
          "type_long": "java.io.File",
          "type_short": "File",
          "comment": "The custom user settings directory to use."
        }
      ],
      "return": {
        "type_long": "void",
        "type_short": "void",
        "comment": ""
      },
      "throws": [
        {
          "type_long": "java.io.FileNotFoundException",
          "type_short": "FileNotFoundException",
          "comment": "if there was a problem getting a user directory."
        },
        {
          "type_long": "java.io.IOException",
          "type_short": "IOException",
          "comment": "if there was a problem getting the application properties."
        }
      ]
    },
    {
      "name": "findExtensionArchiveDirectory",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "generic.jar.ResourceFile",
        "type_short": "ResourceFile",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "findExtensionInstallationDirectories",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "java.util.List\u003cgeneric.jar.ResourceFile\u003e",
        "type_short": "List",
        "comment": ""
      },
      "throws": []
    },
    {
      "name": "findPatchDirectory",
      "comment": "",
      "javadoc": "",
      "static": false,
      "params": [],
      "return": {
        "type_long": "generic.jar.ResourceFile",
        "type_short": "ResourceFile",
        "comment": ""
      },
      "throws": []
    }
  ]
}
